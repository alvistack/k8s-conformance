  I0420 14:12:42.685094      13 e2e.go:109] Starting e2e run "9a36eee0-7f1f-4334-ad28-c2cfc42afe95" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1713622361 - will randomize all specs

Will run 402 of 7197 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0420 14:12:43.032562 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 14:12:43.037777 13 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0420 14:12:53.286279 13 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0420 14:12:53.295585 13 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-flannel-ds' (0 seconds elapsed)
  I0420 14:12:53.295949 13 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I0420 14:12:53.296009 13 e2e.go:245] e2e test version: v1.30.0
  I0420 14:12:53.297598 13 e2e.go:254] kube-apiserver version: v1.30.0
  I0420 14:12:53.298047 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 14:12:53.308316 13 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [10.276 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 04/20/24 14:12:53.625
  I0420 14:12:53.625470 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 14:12:53.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:12:53.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:12:53.686
  STEP: set up a multi version CRD @ 04/20/24 14:12:53.691
  I0420 14:12:53.692961 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: mark a version not serverd @ 04/20/24 14:12:58.255
  STEP: check the unserved version gets removed @ 04/20/24 14:12:58.291
  STEP: check the other version is not changed @ 04/20/24 14:12:59.785
  I0420 14:13:03.297900 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6851" for this suite. @ 04/20/24 14:13:03.322
• [9.712 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 04/20/24 14:13:03.338
  I0420 14:13:03.338119 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename init-container @ 04/20/24 14:13:03.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:13:03.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:13:03.391
  STEP: creating the pod @ 04/20/24 14:13:03.396
  I0420 14:13:03.396807 13 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0420 14:13:09.764204 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-7931" for this suite. @ 04/20/24 14:13:09.774
• [6.447 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:420
  STEP: Creating a kubernetes client @ 04/20/24 14:13:09.79
  I0420 14:13:09.790491 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename job @ 04/20/24 14:13:09.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:13:09.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:13:09.833
  STEP: Creating Indexed job @ 04/20/24 14:13:09.838
  STEP: Ensuring job reaches completions @ 04/20/24 14:13:09.851
  STEP: Ensuring pods with index for job exist @ 04/20/24 14:13:17.86
  I0420 14:13:17.870411 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8163" for this suite. @ 04/20/24 14:13:17.879
• [8.102 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 04/20/24 14:13:17.893
  I0420 14:13:17.893321 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename container-runtime @ 04/20/24 14:13:17.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:13:17.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:13:17.935
  STEP: create the container @ 04/20/24 14:13:17.941
  W0420 14:13:17.960971      13 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/20/24 14:13:17.961
  STEP: get the container status @ 04/20/24 14:13:19.986
  STEP: the container should be terminated @ 04/20/24 14:13:19.993
  STEP: the termination message should be set @ 04/20/24 14:13:19.993
  I0420 14:13:19.993580 13 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/20/24 14:13:19.993
  I0420 14:13:20.023992 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8731" for this suite. @ 04/20/24 14:13:20.038
• [2.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 04/20/24 14:13:20.05
  I0420 14:13:20.050523 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename podtemplate @ 04/20/24 14:13:20.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:13:20.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:13:20.091
  STEP: Create set of pod templates @ 04/20/24 14:13:20.097
  I0420 14:13:20.110600 13 podtemplates.go:143] created test-podtemplate-1
  I0420 14:13:20.120304 13 podtemplates.go:143] created test-podtemplate-2
  I0420 14:13:20.128990 13 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 04/20/24 14:13:20.129
  STEP: delete collection of pod templates @ 04/20/24 14:13:20.136
  I0420 14:13:20.136547 13 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 04/20/24 14:13:20.166
  I0420 14:13:20.167041 13 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0420 14:13:20.172548 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-478" for this suite. @ 04/20/24 14:13:20.182
• [0.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 04/20/24 14:13:20.205
  I0420 14:13:20.205685 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename cronjob @ 04/20/24 14:13:20.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:13:20.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:13:20.269
  STEP: Creating a cronjob @ 04/20/24 14:13:20.275
  STEP: creating @ 04/20/24 14:13:20.275
  STEP: getting @ 04/20/24 14:13:20.286
  STEP: listing @ 04/20/24 14:13:20.291
  STEP: watching @ 04/20/24 14:13:20.297
  I0420 14:13:20.297758 13 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 04/20/24 14:13:20.3
  STEP: cluster-wide watching @ 04/20/24 14:13:20.307
  I0420 14:13:20.307491 13 cronjob.go:382] starting watch
  STEP: patching @ 04/20/24 14:13:20.309
  STEP: updating @ 04/20/24 14:13:20.326
  I0420 14:13:20.343936 13 cronjob.go:406] waiting for watch events with expected annotations
  I0420 14:13:20.344101 13 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 04/20/24 14:13:20.344
  STEP: updating /status @ 04/20/24 14:13:20.354
  STEP: get /status @ 04/20/24 14:13:20.369
  STEP: deleting @ 04/20/24 14:13:20.377
  STEP: deleting a collection @ 04/20/24 14:13:20.404
  I0420 14:13:20.424647 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9925" for this suite. @ 04/20/24 14:13:20.433
• [0.239 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 04/20/24 14:13:20.445
  I0420 14:13:20.445087 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename apf @ 04/20/24 14:13:20.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:13:20.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:13:20.497
  STEP: getting /apis @ 04/20/24 14:13:20.504
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/20/24 14:13:20.519
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/20/24 14:13:20.527
  STEP: creating @ 04/20/24 14:13:20.529
  STEP: getting @ 04/20/24 14:13:20.607
  STEP: listing @ 04/20/24 14:13:20.63
  STEP: watching @ 04/20/24 14:13:20.647
  I0420 14:13:20.647095 13 flowcontrol.go:394] starting watch
  STEP: patching @ 04/20/24 14:13:20.65
  STEP: updating @ 04/20/24 14:13:20.671
  I0420 14:13:20.698234 13 flowcontrol.go:422] waiting for watch events with expected annotations
  I0420 14:13:20.698388 13 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 04/20/24 14:13:20.698
  STEP: patching /status @ 04/20/24 14:13:20.706
  STEP: updating /status @ 04/20/24 14:13:20.716
  STEP: deleting @ 04/20/24 14:13:20.769
  STEP: deleting a collection @ 04/20/24 14:13:20.797
  I0420 14:13:20.847252 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-9880" for this suite. @ 04/20/24 14:13:20.858
• [0.432 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 04/20/24 14:13:20.877
  I0420 14:13:20.877049 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename containers @ 04/20/24 14:13:20.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:13:20.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:13:20.943
  STEP: Creating a pod to test override all @ 04/20/24 14:13:20.947
  STEP: Saw pod success @ 04/20/24 14:13:33.029
  I0420 14:13:33.038247 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod client-containers-bd7cb4e7-fb90-4184-8e8b-bb96c2da74f2 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:13:33.079
  I0420 14:13:33.115639 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3146" for this suite. @ 04/20/24 14:13:33.124
• [12.264 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 04/20/24 14:13:33.141
  I0420 14:13:33.141931 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename deployment @ 04/20/24 14:13:33.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:13:33.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:13:33.186
  STEP: creating a Deployment @ 04/20/24 14:13:33.201
  I0420 14:13:33.201259 13 deployment.go:507] Creating simple deployment test-deployment-bd7gt
  I0420 14:13:33.233133 13 deployment.go:222] deployment "test-deployment-bd7gt" doesn't have the required revision set
  I0420 14:13:35.258450 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 14, 13, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 13, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 13, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 13, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-bd7gt-c8586b885\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0420 14:13:37.266780 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 14, 13, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 13, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 13, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 13, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-bd7gt-c8586b885\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0420 14:13:39.267155 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 14, 13, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 13, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 13, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 13, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-bd7gt-c8586b885\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0420 14:13:41.269040 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 14, 13, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 13, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 13, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 13, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-bd7gt-c8586b885\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Getting /status @ 04/20/24 14:13:43.273
  I0420 14:13:43.287632 13 deployment.go:532] Deployment test-deployment-bd7gt has Conditions: [{Available True 2024-04-20 14:13:43 +0000 UTC 2024-04-20 14:13:43 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-04-20 14:13:43 +0000 UTC 2024-04-20 14:13:33 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-bd7gt-c8586b885" has successfully progressed.}]
  STEP: updating Deployment Status @ 04/20/24 14:13:43.288
  I0420 14:13:43.311386 13 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 13, 43, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 13, 43, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 13, 43, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 13, 33, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-bd7gt-c8586b885\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 04/20/24 14:13:43.311
  I0420 14:13:43.317429 13 deployment.go:579] Observed &Deployment event: ADDED
  I0420 14:13:43.317581 13 deployment.go:575] Observed Deployment test-deployment-bd7gt in namespace deployment-2844 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 14:13:33 +0000 UTC 2024-04-20 14:13:33 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-bd7gt-c8586b885"}
  I0420 14:13:43.317991 13 deployment.go:579] Observed &Deployment event: MODIFIED
  I0420 14:13:43.318076 13 deployment.go:575] Observed Deployment test-deployment-bd7gt in namespace deployment-2844 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 14:13:33 +0000 UTC 2024-04-20 14:13:33 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-bd7gt-c8586b885"}
  I0420 14:13:43.318123 13 deployment.go:575] Observed Deployment test-deployment-bd7gt in namespace deployment-2844 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-20 14:13:33 +0000 UTC 2024-04-20 14:13:33 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0420 14:13:43.318359 13 deployment.go:579] Observed &Deployment event: MODIFIED
  I0420 14:13:43.318436 13 deployment.go:575] Observed Deployment test-deployment-bd7gt in namespace deployment-2844 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-20 14:13:33 +0000 UTC 2024-04-20 14:13:33 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0420 14:13:43.318489 13 deployment.go:575] Observed Deployment test-deployment-bd7gt in namespace deployment-2844 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 14:13:33 +0000 UTC 2024-04-20 14:13:33 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-bd7gt-c8586b885" is progressing.}
  I0420 14:13:43.318804 13 deployment.go:579] Observed &Deployment event: MODIFIED
  I0420 14:13:43.318866 13 deployment.go:575] Observed Deployment test-deployment-bd7gt in namespace deployment-2844 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-20 14:13:43 +0000 UTC 2024-04-20 14:13:43 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0420 14:13:43.318893 13 deployment.go:575] Observed Deployment test-deployment-bd7gt in namespace deployment-2844 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 14:13:43 +0000 UTC 2024-04-20 14:13:33 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-bd7gt-c8586b885" has successfully progressed.}
  I0420 14:13:43.319200 13 deployment.go:579] Observed &Deployment event: MODIFIED
  I0420 14:13:43.319283 13 deployment.go:575] Observed Deployment test-deployment-bd7gt in namespace deployment-2844 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-20 14:13:43 +0000 UTC 2024-04-20 14:13:43 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0420 14:13:43.319454 13 deployment.go:575] Observed Deployment test-deployment-bd7gt in namespace deployment-2844 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 14:13:43 +0000 UTC 2024-04-20 14:13:33 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-bd7gt-c8586b885" has successfully progressed.}
  I0420 14:13:43.319604 13 deployment.go:572] Found Deployment test-deployment-bd7gt in namespace deployment-2844 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0420 14:13:43.319880 13 deployment.go:583] Deployment test-deployment-bd7gt has an updated status
  STEP: patching the Statefulset Status @ 04/20/24 14:13:43.32
  I0420 14:13:43.320090 13 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0420 14:13:43.334487 13 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 04/20/24 14:13:43.334
  I0420 14:13:43.337907 13 deployment.go:616] Observed &Deployment event: ADDED
  I0420 14:13:43.337994 13 deployment.go:612] Observed deployment test-deployment-bd7gt in namespace deployment-2844 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 14:13:33 +0000 UTC 2024-04-20 14:13:33 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-bd7gt-c8586b885"}
  I0420 14:13:43.338158 13 deployment.go:616] Observed &Deployment event: MODIFIED
  I0420 14:13:43.338193 13 deployment.go:612] Observed deployment test-deployment-bd7gt in namespace deployment-2844 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 14:13:33 +0000 UTC 2024-04-20 14:13:33 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-bd7gt-c8586b885"}
  I0420 14:13:43.338215 13 deployment.go:612] Observed deployment test-deployment-bd7gt in namespace deployment-2844 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-20 14:13:33 +0000 UTC 2024-04-20 14:13:33 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0420 14:13:43.338415 13 deployment.go:616] Observed &Deployment event: MODIFIED
  I0420 14:13:43.338465 13 deployment.go:612] Observed deployment test-deployment-bd7gt in namespace deployment-2844 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-20 14:13:33 +0000 UTC 2024-04-20 14:13:33 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0420 14:13:43.338489 13 deployment.go:612] Observed deployment test-deployment-bd7gt in namespace deployment-2844 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 14:13:33 +0000 UTC 2024-04-20 14:13:33 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-bd7gt-c8586b885" is progressing.}
  I0420 14:13:43.338685 13 deployment.go:616] Observed &Deployment event: MODIFIED
  I0420 14:13:43.339217 13 deployment.go:612] Observed deployment test-deployment-bd7gt in namespace deployment-2844 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-20 14:13:43 +0000 UTC 2024-04-20 14:13:43 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0420 14:13:43.339261 13 deployment.go:612] Observed deployment test-deployment-bd7gt in namespace deployment-2844 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 14:13:43 +0000 UTC 2024-04-20 14:13:33 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-bd7gt-c8586b885" has successfully progressed.}
  I0420 14:13:43.339452 13 deployment.go:616] Observed &Deployment event: MODIFIED
  I0420 14:13:43.339497 13 deployment.go:612] Observed deployment test-deployment-bd7gt in namespace deployment-2844 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-20 14:13:43 +0000 UTC 2024-04-20 14:13:43 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0420 14:13:43.339518 13 deployment.go:612] Observed deployment test-deployment-bd7gt in namespace deployment-2844 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-20 14:13:43 +0000 UTC 2024-04-20 14:13:33 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-bd7gt-c8586b885" has successfully progressed.}
  I0420 14:13:43.339536 13 deployment.go:612] Observed deployment test-deployment-bd7gt in namespace deployment-2844 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0420 14:13:43.339841 13 deployment.go:616] Observed &Deployment event: MODIFIED
  I0420 14:13:43.339900 13 deployment.go:609] Found deployment test-deployment-bd7gt in namespace deployment-2844 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0420 14:13:43.339984 13 deployment.go:620] Deployment test-deployment-bd7gt has a patched status
  I0420 14:13:43.348265 13 deployment.go:633] Deployment "test-deployment-bd7gt":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-bd7gt",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2844",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bfed77b6-0322-4f81-8c32-10f885794ecf",
      ResourceVersion: (string) (len=5) "46237",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849219213,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-bd7gt-c8586b885\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0420 14:13:43.358336 13 deployment.go:39] New ReplicaSet "test-deployment-bd7gt-c8586b885" of Deployment "test-deployment-bd7gt":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-bd7gt-c8586b885",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2844",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02e84b98-d32b-46d3-a340-163ca1784a85",
      ResourceVersion: (string) (len=5) "46232",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849219213,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-bd7gt",
          UID: (types.UID) (len=36) "bfed77b6-0322-4f81-8c32-10f885794ecf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 62 66 65  |k:{\"uid\":\"bfe|
              00000120  64 37 37 62 36 2d 30 33  32 32 2d 34 66 38 31 2d  |d77b6-0322-4f81-|
              00000130  38 63 33 32 2d 31 30 66  38 38 35 37 39 34 65 63  |8c32-10f885794ec|
              00000140  66 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |f\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885",
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885",
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0420 14:13:43.371390 13 deployment.go:67] Pod "test-deployment-bd7gt-c8586b885-f7mdf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-bd7gt-c8586b885-f7mdf",
      GenerateName: (string) (len=32) "test-deployment-bd7gt-c8586b885-",
      Namespace: (string) (len=15) "deployment-2844",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "50344592-83c1-408e-904b-cd5cd3ef3320",
      ResourceVersion: (string) (len=5) "46231",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849219213,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-bd7gt-c8586b885",
          UID: (types.UID) (len=36) "02e84b98-d32b-46d3-a340-163ca1784a85",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 30 32 65 38 34 62 39  38 2d 64 33 32 62 2d 34  |"02e84b98-d32b-4|
              000000a0  36 64 33 2d 61 33 34 30  2d 31 36 33 63 61 31 37  |6d3-a340-163ca17|
              000000b0  38 34 61 38 35 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |84a85\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  32 30 30 5c 22 7d 22 3a  |.233.66.200\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lds22",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lds22",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219213,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.103"
        }
      },
      PodIP: (string) (len=13) "10.233.66.200",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.200"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849219213,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849219223,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://72706db1ebbdb704573564efc2385f2bbd531981b677b82a6da09c6f6cb135b1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 14:13:43.378322 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2844" for this suite. @ 04/20/24 14:13:43.385
• [10.254 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 04/20/24 14:13:43.396
  I0420 14:13:43.396605 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename csi-storageclass @ 04/20/24 14:13:43.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:13:43.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:13:43.433
  STEP: Creating a StorageClass @ 04/20/24 14:13:43.437
  STEP: Get StorageClass "e2e-vskh8" @ 04/20/24 14:13:43.444
  STEP: Patching the StorageClass "e2e-vskh8" @ 04/20/24 14:13:43.448
  STEP: Delete StorageClass "e2e-vskh8" @ 04/20/24 14:13:43.457
  STEP: Confirm deletion of StorageClass "e2e-vskh8" @ 04/20/24 14:13:43.465
  STEP: Create a replacement StorageClass @ 04/20/24 14:13:43.47
  STEP: Updating StorageClass "e2e-v2-qpfwl" @ 04/20/24 14:13:43.476
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-qpfwl=updated" @ 04/20/24 14:13:43.49
  STEP: Deleting StorageClass "e2e-v2-qpfwl" via DeleteCollection @ 04/20/24 14:13:43.494
  STEP: Confirm deletion of StorageClass "e2e-v2-qpfwl" @ 04/20/24 14:13:43.505
  I0420 14:13:43.511114 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-227" for this suite. @ 04/20/24 14:13:43.519
• [0.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 04/20/24 14:13:43.531
  I0420 14:13:43.531928 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 14:13:43.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:13:43.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:13:43.564
  STEP: Creating a simple DaemonSet "daemon-set" @ 04/20/24 14:13:43.606
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 14:13:43.617
  I0420 14:13:43.641156 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0420 14:13:43.641279 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  I0420 14:13:44.633603 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0420 14:13:44.633661 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  I0420 14:13:45.635262 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0420 14:13:45.635459 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  I0420 14:13:46.644016 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0420 14:13:46.644079 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  I0420 14:13:47.636704 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0420 14:13:47.636805 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  I0420 14:13:48.634960 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0420 14:13:48.635029 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  I0420 14:13:49.632449 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0420 14:13:49.632526 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  I0420 14:13:50.634842 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0420 14:13:50.634914 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  I0420 14:13:51.634151 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0420 14:13:51.634229 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  I0420 14:13:52.634825 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0420 14:13:52.634901 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  I0420 14:13:53.635893 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0420 14:13:53.635965 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  I0420 14:13:54.635425 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0420 14:13:54.635502 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  I0420 14:13:55.634536 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0420 14:13:55.634623 13 fixtures.go:130] Node ier3chochiph-2 is running 0 daemon pod, expected 1
  I0420 14:13:56.635104 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0420 14:13:56.635179 13 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 04/20/24 14:13:56.641
  I0420 14:13:56.688500 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0420 14:13:56.688596 13 fixtures.go:130] Node ier3chochiph-2 is running 0 daemon pod, expected 1
  I0420 14:13:57.681373 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0420 14:13:57.681437 13 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 04/20/24 14:13:57.681
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 14:13:57.689
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8068, will wait for the garbage collector to delete the pods @ 04/20/24 14:13:57.689
  I0420 14:13:57.756634 13 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 11.475001ms
  I0420 14:13:57.857917 13 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.280342ms
  I0420 14:13:59.563516 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0420 14:13:59.563577 13 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0420 14:13:59.568949 13 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"46373"},"items":null}

  I0420 14:13:59.573361 13 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"46373"},"items":null}

  I0420 14:13:59.595066 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8068" for this suite. @ 04/20/24 14:13:59.601
• [16.080 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 04/20/24 14:13:59.611
  I0420 14:13:59.611995 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:13:59.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:13:59.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:13:59.652
  STEP: Setting up server cert @ 04/20/24 14:13:59.686
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:14:00.497
  STEP: Deploying the webhook pod @ 04/20/24 14:14:00.51
  STEP: Wait for the deployment to be ready @ 04/20/24 14:14:00.527
  I0420 14:14:00.539331 13 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/20/24 14:14:02.56
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:14:02.589
  I0420 14:14:03.589896 13 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0420 14:14:03.604649 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7572-crds.webhook.example.com via the AdmissionRegistration API @ 04/20/24 14:14:04.126
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/20/24 14:14:04.159
  I0420 14:14:07.040103 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5937" for this suite. @ 04/20/24 14:14:07.048
  STEP: Destroying namespace "webhook-markers-2395" for this suite. @ 04/20/24 14:14:07.075
• [7.475 seconds]
------------------------------
SS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 04/20/24 14:14:07.087
  I0420 14:14:07.087312 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename pv @ 04/20/24 14:14:07.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:14:07.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:14:07.12
  STEP: Creating initial PV and PVC @ 04/20/24 14:14:07.125
  I0420 14:14:07.125388 13 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-6193" @ 04/20/24 14:14:07.152
  STEP: Listing PVCs in namespace "pv-6193" @ 04/20/24 14:14:07.159
  STEP: Patching the PV "pv-6193-xzrtc" @ 04/20/24 14:14:07.165
  STEP: Patching the PVC "pvc-hgl6q" @ 04/20/24 14:14:07.185
  STEP: Getting PV "pv-6193-xzrtc" @ 04/20/24 14:14:07.196
  STEP: Getting PVC "pvc-hgl6q" @ 04/20/24 14:14:07.201
  STEP: Deleting PVC "pvc-hgl6q" @ 04/20/24 14:14:07.207
  STEP: Confirm deletion of PVC "pvc-hgl6q" @ 04/20/24 14:14:07.217
  STEP: Deleting PV "pv-6193-xzrtc" @ 04/20/24 14:14:09.232
  STEP: Confirm deletion of PV "pv-6193-xzrtc" @ 04/20/24 14:14:09.242
  STEP: Recreating another PV & PVC @ 04/20/24 14:14:11.254
  I0420 14:14:11.254575 13 pv.go:390] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-6193-8jkxj" @ 04/20/24 14:14:11.27
  STEP: Updating the PVC "pvc-227sd" @ 04/20/24 14:14:11.283
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-227sd=updated" @ 04/20/24 14:14:11.295
  STEP: Deleting PVC "pvc-227sd" via DeleteCollection @ 04/20/24 14:14:11.3
  STEP: Confirm deletion of PVC "pvc-227sd" @ 04/20/24 14:14:11.318
  STEP: Deleting PV "pv-6193-8jkxj" via DeleteCollection @ 04/20/24 14:14:13.332
  STEP: Confirm deletion of PV "pv-6193-8jkxj" @ 04/20/24 14:14:13.348
  I0420 14:14:15.384188 13 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I0420 14:14:15.384412 13 pv.go:201] Deleting PersistentVolumeClaim "pvc-227sd"
  I0420 14:14:15.393035 13 pv.go:189] Deleting PersistentVolume "pv-6193-8jkxj"
  I0420 14:14:15.401155 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-6193" for this suite. @ 04/20/24 14:14:15.413
• [8.343 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 04/20/24 14:14:15.432
  I0420 14:14:15.432735 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename configmap @ 04/20/24 14:14:15.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:14:15.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:14:15.475
  STEP: Creating configMap with name configmap-test-volume-0cd0edfc-6e00-4401-b410-5d221c49bd4c @ 04/20/24 14:14:15.48
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:14:15.489
  STEP: Saw pod success @ 04/20/24 14:14:17.518
  I0420 14:14:17.524315 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-configmaps-1cddeb07-493a-472a-8fe6-532531e8492c container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:14:17.545
  I0420 14:14:17.576306 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7314" for this suite. @ 04/20/24 14:14:17.585
• [2.170 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 04/20/24 14:14:17.602
  I0420 14:14:17.602354 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 14:14:17.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:14:17.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:14:17.65
  STEP: Creating resourceQuota "e2e-rq-status-8w8ql" @ 04/20/24 14:14:17.663
  I0420 14:14:17.680275 13 resource_quota.go:1051] Resource quota "e2e-rq-status-8w8ql" reports spec: hard cpu limit of 500m
  I0420 14:14:17.680414 13 resource_quota.go:1053] Resource quota "e2e-rq-status-8w8ql" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-8w8ql" /status @ 04/20/24 14:14:17.68
  STEP: Confirm /status for "e2e-rq-status-8w8ql" resourceQuota via watch @ 04/20/24 14:14:17.697
  I0420 14:14:17.700219 13 resource_quota.go:1080] observed resourceQuota "e2e-rq-status-8w8ql" in namespace "resourcequota-9990" with hard status: v1.ResourceList(nil)
  I0420 14:14:17.700414 13 resource_quota.go:1083] Found resourceQuota "e2e-rq-status-8w8ql" in namespace "resourcequota-9990" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0420 14:14:17.700456 13 resource_quota.go:1090] ResourceQuota "e2e-rq-status-8w8ql" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 04/20/24 14:14:17.706
  I0420 14:14:17.719267 13 resource_quota.go:1101] Resource quota "e2e-rq-status-8w8ql" reports spec: hard cpu limit of 1
  I0420 14:14:17.719348 13 resource_quota.go:1102] Resource quota "e2e-rq-status-8w8ql" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-8w8ql" /status @ 04/20/24 14:14:17.719
  STEP: Confirm /status for "e2e-rq-status-8w8ql" resourceQuota via watch @ 04/20/24 14:14:17.733
  I0420 14:14:17.736062 13 resource_quota.go:1124] observed resourceQuota "e2e-rq-status-8w8ql" in namespace "resourcequota-9990" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0420 14:14:17.736182 13 resource_quota.go:1127] Found resourceQuota "e2e-rq-status-8w8ql" in namespace "resourcequota-9990" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0420 14:14:17.736227 13 resource_quota.go:1134] ResourceQuota "e2e-rq-status-8w8ql" /status was patched
  STEP: Get "e2e-rq-status-8w8ql" /status @ 04/20/24 14:14:17.736
  I0420 14:14:17.744448 13 resource_quota.go:1145] Resourcequota "e2e-rq-status-8w8ql" reports status: hard cpu of 1
  I0420 14:14:17.744554 13 resource_quota.go:1147] Resourcequota "e2e-rq-status-8w8ql" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-8w8ql" /status before checking Spec is unchanged @ 04/20/24 14:14:17.75
  I0420 14:14:17.761941 13 resource_quota.go:1167] Resourcequota "e2e-rq-status-8w8ql" reports status: hard cpu of 2
  I0420 14:14:17.762062 13 resource_quota.go:1169] Resourcequota "e2e-rq-status-8w8ql" reports status: hard memory of 2Gi
  I0420 14:14:17.764496 13 resource_quota.go:1181] Found resourceQuota "e2e-rq-status-8w8ql" in namespace "resourcequota-9990" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0420 14:14:17.769670 13 resource_quota.go:1212] ResourceQuota "e2e-rq-status-8w8ql" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-8w8ql", GenerateName:"", Namespace:"resourcequota-9990", SelfLink:"", UID:"5395fa0a-fd72-4c3e-840b-ded45d8e63d9", ResourceVersion:"46573", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-8w8ql"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00513e168), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00513e1b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00513e1e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0420 14:14:22.772457 13 resource_quota.go:1212] ResourceQuota "e2e-rq-status-8w8ql" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-8w8ql", GenerateName:"", Namespace:"resourcequota-9990", SelfLink:"", UID:"5395fa0a-fd72-4c3e-840b-ded45d8e63d9", ResourceVersion:"46573", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-8w8ql"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00513e3a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00513e3f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00513e438), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0420 14:14:27.785270 13 resource_quota.go:1212] ResourceQuota "e2e-rq-status-8w8ql" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-8w8ql", GenerateName:"", Namespace:"resourcequota-9990", SelfLink:"", UID:"5395fa0a-fd72-4c3e-840b-ded45d8e63d9", ResourceVersion:"46573", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-8w8ql"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00513e5e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00513e648), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00513e678), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0420 14:14:32.771452 13 resource_quota.go:1212] ResourceQuota "e2e-rq-status-8w8ql" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-8w8ql", GenerateName:"", Namespace:"resourcequota-9990", SelfLink:"", UID:"5395fa0a-fd72-4c3e-840b-ded45d8e63d9", ResourceVersion:"46573", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-8w8ql"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d63578), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d635a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d63608), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0420 14:14:37.781977 13 resource_quota.go:1212] ResourceQuota "e2e-rq-status-8w8ql" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-8w8ql", GenerateName:"", Namespace:"resourcequota-9990", SelfLink:"", UID:"5395fa0a-fd72-4c3e-840b-ded45d8e63d9", ResourceVersion:"46573", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-8w8ql"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00513e870), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00513e8a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00513e900), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0420 14:14:42.777728 13 resource_quota.go:1212] ResourceQuota "e2e-rq-status-8w8ql" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-8w8ql", GenerateName:"", Namespace:"resourcequota-9990", SelfLink:"", UID:"5395fa0a-fd72-4c3e-840b-ded45d8e63d9", ResourceVersion:"46573", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-8w8ql"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d637b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d63818), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d63848), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0420 14:14:47.770624 13 resource_quota.go:1212] ResourceQuota "e2e-rq-status-8w8ql" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-8w8ql", GenerateName:"", Namespace:"resourcequota-9990", SelfLink:"", UID:"5395fa0a-fd72-4c3e-840b-ded45d8e63d9", ResourceVersion:"46573", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-8w8ql"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d639f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d63a28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 14, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004d63a70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0420 14:14:52.771521 13 resource_quota.go:1209] ResourceQuota "e2e-rq-status-8w8ql" Spec was unchanged and /status reset
  I0420 14:14:52.772059 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9990" for this suite. @ 04/20/24 14:14:52.78
• [35.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 04/20/24 14:14:52.794
  I0420 14:14:52.794800 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:14:52.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:14:52.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:14:52.832
  STEP: Creating projection with secret that has name projected-secret-test-c64ee2a3-a369-48f9-98a4-80808f571e1c @ 04/20/24 14:14:52.837
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:14:52.848
  STEP: Saw pod success @ 04/20/24 14:14:56.886
  I0420 14:14:56.893284 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-projected-secrets-c621deb5-9713-43a8-aa8c-0ca55765a760 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:14:56.904
  I0420 14:14:56.941690 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6939" for this suite. @ 04/20/24 14:14:56.953
• [4.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 04/20/24 14:14:56.971
  I0420 14:14:56.972039 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 14:14:56.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:14:57.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:14:57.011
  STEP: creating a ReplicationController @ 04/20/24 14:14:57.023
  STEP: waiting for RC to be added @ 04/20/24 14:14:57.042
  STEP: waiting for available Replicas @ 04/20/24 14:14:57.043
  STEP: patching ReplicationController @ 04/20/24 14:15:01.557
  STEP: waiting for RC to be modified @ 04/20/24 14:15:01.571
  STEP: patching ReplicationController status @ 04/20/24 14:15:01.571
  STEP: waiting for RC to be modified @ 04/20/24 14:15:01.58
  STEP: waiting for available Replicas @ 04/20/24 14:15:01.581
  STEP: fetching ReplicationController status @ 04/20/24 14:15:01.588
  STEP: patching ReplicationController scale @ 04/20/24 14:15:01.595
  STEP: waiting for RC to be modified @ 04/20/24 14:15:01.606
  STEP: waiting for ReplicationController's scale to be the max amount @ 04/20/24 14:15:01.607
  STEP: fetching ReplicationController; ensuring that it's patched @ 04/20/24 14:15:06.744
  STEP: updating ReplicationController status @ 04/20/24 14:15:06.75
  STEP: waiting for RC to be modified @ 04/20/24 14:15:06.76
  STEP: listing all ReplicationControllers @ 04/20/24 14:15:06.76
  STEP: checking that ReplicationController has expected values @ 04/20/24 14:15:06.767
  STEP: deleting ReplicationControllers by collection @ 04/20/24 14:15:06.767
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 04/20/24 14:15:06.78
  I0420 14:15:06.859636 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0420 14:15:06.860187      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-5131" for this suite. @ 04/20/24 14:15:06.866
• [9.904 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 04/20/24 14:15:06.876
  I0420 14:15:06.876819 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:15:06.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:15:06.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:15:06.91
  STEP: Creating secret with name secret-test-map-6d9f393d-b914-404d-96f7-ad4aa3fc08bb @ 04/20/24 14:15:06.915
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:15:06.926
  E0420 14:15:07.860994      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:08.861460      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:09.861636      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:10.862017      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:15:10.965
  I0420 14:15:10.971615 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-secrets-6d9c25df-3431-4e99-8cf4-ae62fa2a55bd container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:15:10.981
  I0420 14:15:11.008951 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7566" for this suite. @ 04/20/24 14:15:11.017
• [4.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 04/20/24 14:15:11.03
  I0420 14:15:11.030536 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:15:11.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:15:11.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:15:11.068
  STEP: creating Agnhost RC @ 04/20/24 14:15:11.082
  I0420 14:15:11.083811 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-6164 create -f -'
  I0420 14:15:11.585603 13 builder.go:146] stderr: ""
  I0420 14:15:11.585898 13 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/20/24 14:15:11.585
  E0420 14:15:11.861945      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:15:12.599229 13 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0420 14:15:12.599312 13 framework.go:733] Found 0 / 1
  E0420 14:15:12.863084      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:15:13.596019 13 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0420 14:15:13.596108 13 framework.go:733] Found 1 / 1
  I0420 14:15:13.596175 13 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 04/20/24 14:15:13.596
  I0420 14:15:13.602545 13 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0420 14:15:13.602625 13 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0420 14:15:13.603128 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-6164 patch pod agnhost-primary-75c9x -p {"metadata":{"annotations":{"x":"y"}}}'
  I0420 14:15:13.786057 13 builder.go:146] stderr: ""
  I0420 14:15:13.786189 13 builder.go:147] stdout: "pod/agnhost-primary-75c9x patched\n"
  STEP: checking annotations @ 04/20/24 14:15:13.786
  I0420 14:15:13.792465 13 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0420 14:15:13.792516 13 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0420 14:15:13.792806 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6164" for this suite. @ 04/20/24 14:15:13.8
• [2.782 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 04/20/24 14:15:13.812
  I0420 14:15:13.812609 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 14:15:13.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:15:13.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:15:13.849
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 04/20/24 14:15:13.854
  I0420 14:15:13.856093 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 14:15:13.863513      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:14.864281      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:15.864451      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:16.864789      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:17.864789      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:18.865272      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:19.866253      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:20.866378      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 04/20/24 14:15:21.072
  I0420 14:15:21.073968 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 14:15:21.867123      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:15:22.718364 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 14:15:22.868186      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:23.868363      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:24.868957      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:25.868633      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:26.869424      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:27.869937      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:28.870930      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:15:29.524168 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1896" for this suite. @ 04/20/24 14:15:29.539
• [15.741 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:715
  STEP: Creating a kubernetes client @ 04/20/24 14:15:29.553
  I0420 14:15:29.553255 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:15:29.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:15:29.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:15:29.594
  STEP: Setting up server cert @ 04/20/24 14:15:29.639
  E0420 14:15:29.872034      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:15:30.848
  STEP: Deploying the webhook pod @ 04/20/24 14:15:30.865
  E0420 14:15:30.873060      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 04/20/24 14:15:30.886
  I0420 14:15:30.902834 13 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 14:15:31.873638      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:32.873980      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 14:15:32.925
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:15:32.944
  E0420 14:15:33.874688      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:15:33.945177 13 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 04/20/24 14:15:33.959
  STEP: verifying the validating webhook match conditions @ 04/20/24 14:15:33.982
  STEP: updating the validating webhook match conditions @ 04/20/24 14:15:33.986
  STEP: verifying the validating webhook match conditions @ 04/20/24 14:15:34
  I0420 14:15:34.096265 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7224" for this suite. @ 04/20/24 14:15:34.106
  STEP: Destroying namespace "webhook-markers-1266" for this suite. @ 04/20/24 14:15:34.132
• [4.600 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 04/20/24 14:15:34.153
  I0420 14:15:34.153704 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 14:15:34.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:15:34.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:15:34.191
  STEP: Creating a pod to test substitution in volume subpath @ 04/20/24 14:15:34.196
  E0420 14:15:34.875437      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:35.876840      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:36.875979      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:37.876957      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:15:38.238
  I0420 14:15:38.243657 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod var-expansion-ddf14978-d351-4f05-b7af-b1dbb4a44cde container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 14:15:38.256
  I0420 14:15:38.289862 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6889" for this suite. @ 04/20/24 14:15:38.3
• [4.161 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 04/20/24 14:15:38.314
  I0420 14:15:38.314834 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 14:15:38.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:15:38.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:15:38.355
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/20/24 14:15:38.359
  E0420 14:15:38.877111      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:39.877525      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:40.877817      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:41.879600      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:15:42.396
  I0420 14:15:42.405143 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-0c496596-08a0-4d64-b4b2-c2ac4fff8df7 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:15:42.421
  I0420 14:15:42.462943 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2382" for this suite. @ 04/20/24 14:15:42.474
• [4.169 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 04/20/24 14:15:42.484
  I0420 14:15:42.484391 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename configmap @ 04/20/24 14:15:42.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:15:42.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:15:42.536
  STEP: Creating configMap with name configmap-test-volume-9ccdd664-ddd3-48c1-8c3e-5290039c0ac2 @ 04/20/24 14:15:42.54
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:15:42.55
  E0420 14:15:42.878822      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:43.879263      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:44.879396      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:45.879606      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:15:46.587
  I0420 14:15:46.594811 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-configmaps-fd1722d1-68a6-4c1f-9861-2f2de3058663 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:15:46.606
  I0420 14:15:46.633234 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1462" for this suite. @ 04/20/24 14:15:46.64
• [4.167 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 04/20/24 14:15:46.651
  I0420 14:15:46.651392 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 14:15:46.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:15:46.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:15:46.685
  I0420 14:15:46.733309 13 service_accounts.go:253] created pod pod-service-account-defaultsa
  I0420 14:15:46.733382 13 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I0420 14:15:46.747351 13 service_accounts.go:253] created pod pod-service-account-mountsa
  I0420 14:15:46.747404 13 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I0420 14:15:46.760748 13 service_accounts.go:253] created pod pod-service-account-nomountsa
  I0420 14:15:46.760812 13 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I0420 14:15:46.779383 13 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I0420 14:15:46.779452 13 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0420 14:15:46.790201 13 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I0420 14:15:46.790686 13 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0420 14:15:46.811498 13 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I0420 14:15:46.811562 13 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0420 14:15:46.829773 13 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I0420 14:15:46.829881 13 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0420 14:15:46.844120 13 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I0420 14:15:46.844186 13 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0420 14:15:46.868469 13 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I0420 14:15:46.868549 13 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0420 14:15:46.868676 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0420 14:15:46.884411      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "svcaccounts-9758" for this suite. @ 04/20/24 14:15:46.895
• [0.311 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 04/20/24 14:15:46.965
  I0420 14:15:46.965956 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:15:46.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:15:47.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:15:47.091
  STEP: Creating a pod to test downward api env vars @ 04/20/24 14:15:47.104
  E0420 14:15:47.881538      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:48.882193      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:49.882541      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:50.883221      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:51.883997      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:52.884342      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:53.885306      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:54.885873      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:55.886471      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:56.887519      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:57.888626      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:58.888998      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:15:59.890050      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:00.890527      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:01.891393      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:02.892147      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:03.892358      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:04.892523      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:05.892797      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:06.892880      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:07.893060      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:08.893239      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:16:09.25
  I0420 14:16:09.255634 13 output.go:196] Trying to get logs from node ier3chochiph-2 pod downward-api-924de30b-791e-43e8-97af-f39fd222c205 container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 14:16:09.29
  I0420 14:16:09.321877 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2934" for this suite. @ 04/20/24 14:16:09.33
• [22.378 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 04/20/24 14:16:09.343
  I0420 14:16:09.343932 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename csistoragecapacity @ 04/20/24 14:16:09.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:16:09.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:16:09.382
  STEP: getting /apis @ 04/20/24 14:16:09.387
  STEP: getting /apis/storage.k8s.io @ 04/20/24 14:16:09.395
  STEP: getting /apis/storage.k8s.io/v1 @ 04/20/24 14:16:09.397
  STEP: creating @ 04/20/24 14:16:09.399
  STEP: watching @ 04/20/24 14:16:09.426
  I0420 14:16:09.427061 13 csistoragecapacity.go:143] starting watch
  STEP: getting @ 04/20/24 14:16:09.441
  STEP: listing in namespace @ 04/20/24 14:16:09.452
  STEP: listing across namespaces @ 04/20/24 14:16:09.459
  STEP: patching @ 04/20/24 14:16:09.464
  STEP: updating @ 04/20/24 14:16:09.475
  I0420 14:16:09.484914 13 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0420 14:16:09.485114 13 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 04/20/24 14:16:09.485
  STEP: deleting a collection @ 04/20/24 14:16:09.506
  I0420 14:16:09.557691 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-3290" for this suite. @ 04/20/24 14:16:09.569
• [0.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 04/20/24 14:16:09.585
  I0420 14:16:09.585614 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:16:09.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:16:09.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:16:09.637
  STEP: creating the pod @ 04/20/24 14:16:09.641
  I0420 14:16:09.642383 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2970 create -f -'
  E0420 14:16:09.894089      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:16:09.988801 13 builder.go:146] stderr: ""
  I0420 14:16:09.988884 13 builder.go:147] stdout: "pod/pause created\n"
  E0420 14:16:10.894992      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:11.895815      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 04/20/24 14:16:12.011
  I0420 14:16:12.011819 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2970 label pods pause testing-label=testing-label-value'
  I0420 14:16:12.249704 13 builder.go:146] stderr: ""
  I0420 14:16:12.249864 13 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 04/20/24 14:16:12.249
  I0420 14:16:12.250412 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2970 get pod pause -L testing-label'
  I0420 14:16:12.408017 13 builder.go:146] stderr: ""
  I0420 14:16:12.408102 13 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 04/20/24 14:16:12.408
  I0420 14:16:12.408593 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2970 label pods pause testing-label-'
  I0420 14:16:12.602197 13 builder.go:146] stderr: ""
  I0420 14:16:12.602285 13 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 04/20/24 14:16:12.602
  I0420 14:16:12.602677 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2970 get pod pause -L testing-label'
  I0420 14:16:12.750365 13 builder.go:146] stderr: ""
  I0420 14:16:12.750490 13 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 04/20/24 14:16:12.751
  I0420 14:16:12.751404 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2970 delete --grace-period=0 --force -f -'
  E0420 14:16:12.895989      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:16:12.987107 13 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0420 14:16:12.987195 13 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0420 14:16:12.987514 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2970 get rc,svc -l name=pause --no-headers'
  I0420 14:16:13.173480 13 builder.go:146] stderr: "No resources found in kubectl-2970 namespace.\n"
  I0420 14:16:13.173566 13 builder.go:147] stdout: ""
  I0420 14:16:13.174047 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2970 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0420 14:16:13.343537 13 builder.go:146] stderr: ""
  I0420 14:16:13.343625 13 builder.go:147] stdout: ""
  I0420 14:16:13.344032 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2970" for this suite. @ 04/20/24 14:16:13.352
• [3.780 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 04/20/24 14:16:13.371
  I0420 14:16:13.371309 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 14:16:13.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:16:13.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:16:13.427
  I0420 14:16:13.432824 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 14:16:13.896084      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:14.897195      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:15.897288      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0420 14:16:16.194069      13 warnings.go:70] unknown field "alpha"
  W0420 14:16:16.194163      13 warnings.go:70] unknown field "beta"
  W0420 14:16:16.194183      13 warnings.go:70] unknown field "delta"
  W0420 14:16:16.194201      13 warnings.go:70] unknown field "epsilon"
  W0420 14:16:16.194219      13 warnings.go:70] unknown field "gamma"
  I0420 14:16:16.811794 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4756" for this suite. @ 04/20/24 14:16:16.821
• [3.461 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 04/20/24 14:16:16.831
  I0420 14:16:16.831655 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 14:16:16.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:16:16.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:16:16.873
  STEP: Discovering how many secrets are in namespace by default @ 04/20/24 14:16:16.877
  E0420 14:16:16.897880      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:17.898146      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:18.898638      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:19.899789      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:20.900275      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 04/20/24 14:16:21.889
  E0420 14:16:21.901203      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:22.901765      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:23.902680      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:24.902837      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:25.903520      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/20/24 14:16:26.896
  E0420 14:16:26.903822      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status is calculated @ 04/20/24 14:16:26.908
  E0420 14:16:27.904580      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:28.905428      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 04/20/24 14:16:28.917
  STEP: Ensuring resource quota status captures secret creation @ 04/20/24 14:16:28.94
  E0420 14:16:29.906254      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:30.906423      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 04/20/24 14:16:30.95
  STEP: Ensuring resource quota status released usage @ 04/20/24 14:16:30.965
  E0420 14:16:31.906816      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:32.906873      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:16:32.974212 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2772" for this suite. @ 04/20/24 14:16:32.982
• [16.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 04/20/24 14:16:32.995
  I0420 14:16:32.995965 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename endpointslicemirroring @ 04/20/24 14:16:33.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:16:33.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:16:33.045
  STEP: mirroring a new custom Endpoint @ 04/20/24 14:16:33.081
  I0420 14:16:33.107297 13 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E0420 14:16:33.907197      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:34.907339      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 04/20/24 14:16:35.116
  STEP: mirroring deletion of a custom Endpoint @ 04/20/24 14:16:35.142
  I0420 14:16:35.184602 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8612" for this suite. @ 04/20/24 14:16:35.207
• [2.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 04/20/24 14:16:35.227
  I0420 14:16:35.227876 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 14:16:35.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:16:35.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:16:35.276
  E0420 14:16:35.907647      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:36.908452      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:16:37.324677 13 delete.go:62] Deleting pod "var-expansion-49316529-5b16-4553-8e72-1b05ff8bb811" in namespace "var-expansion-4785"
  I0420 14:16:37.341264 13 delete.go:70] Wait up to 5m0s for pod "var-expansion-49316529-5b16-4553-8e72-1b05ff8bb811" to be fully deleted
  E0420 14:16:37.909225      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:38.910017      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:16:39.373514 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4785" for this suite. @ 04/20/24 14:16:39.389
• [4.179 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 04/20/24 14:16:39.407
  I0420 14:16:39.407981 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename kubectl-logs @ 04/20/24 14:16:39.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:16:39.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:16:39.464
  STEP: creating an pod @ 04/20/24 14:16:39.473
  I0420 14:16:39.474317 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-logs-7406 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0420 14:16:39.663518 13 builder.go:146] stderr: ""
  I0420 14:16:39.663611 13 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 04/20/24 14:16:39.663
  I0420 14:16:39.664156 13 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0420 14:16:39.911115      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:40.911114      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:16:41.690750 13 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 04/20/24 14:16:41.69
  I0420 14:16:41.691183 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-logs-7406 logs logs-generator logs-generator'
  I0420 14:16:41.873960 13 builder.go:146] stderr: ""
  I0420 14:16:41.874078 13 builder.go:147] stdout: "I0420 14:16:40.421194       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/566 535\nI0420 14:16:40.620788       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/q9p 242\nI0420 14:16:40.821228       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/zlc 335\nI0420 14:16:41.020860       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/f6g4 547\nI0420 14:16:41.220299       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/jkx 276\nI0420 14:16:41.420784       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/zrf 204\nI0420 14:16:41.621282       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/xpl 329\nI0420 14:16:41.820816       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/q44 343\n"
  E0420 14:16:41.911532      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:42.911848      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:16:43.874644 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-logs-7406 logs logs-generator logs-generator'
  E0420 14:16:43.912184      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:16:44.059883 13 builder.go:146] stderr: ""
  I0420 14:16:44.060057 13 builder.go:147] stdout: "I0420 14:16:40.421194       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/566 535\nI0420 14:16:40.620788       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/q9p 242\nI0420 14:16:40.821228       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/zlc 335\nI0420 14:16:41.020860       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/f6g4 547\nI0420 14:16:41.220299       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/jkx 276\nI0420 14:16:41.420784       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/zrf 204\nI0420 14:16:41.621282       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/xpl 329\nI0420 14:16:41.820816       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/q44 343\nI0420 14:16:42.021329       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/m695 536\nI0420 14:16:42.220856       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/plk 361\nI0420 14:16:42.420252       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/8qw 336\nI0420 14:16:42.620843       1 logs_generator.go:76] 11 POST /api/v1/namespaces/default/pods/hw9 249\nI0420 14:16:42.821260       1 logs_generator.go:76] 12 POST /api/v1/namespaces/default/pods/ksj 417\nI0420 14:16:43.020851       1 logs_generator.go:76] 13 GET /api/v1/namespaces/default/pods/vft 314\nI0420 14:16:43.221378       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/kube-system/pods/jpfb 417\nI0420 14:16:43.420797       1 logs_generator.go:76] 15 POST /api/v1/namespaces/kube-system/pods/2k5 352\nI0420 14:16:43.621277       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/sh5f 522\nI0420 14:16:43.820836       1 logs_generator.go:76] 17 GET /api/v1/namespaces/kube-system/pods/6fb 470\nI0420 14:16:44.021298       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/cqm 553\n"
  STEP: limiting log lines @ 04/20/24 14:16:44.06
  I0420 14:16:44.060657 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-logs-7406 logs logs-generator logs-generator --tail=1'
  I0420 14:16:44.255629 13 builder.go:146] stderr: ""
  I0420 14:16:44.255817 13 builder.go:147] stdout: "I0420 14:16:44.220778       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/phj 590\n"
  I0420 14:16:44.256342 13 logs.go:127] got output "I0420 14:16:44.220778       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/phj 590\n"
  STEP: limiting log bytes @ 04/20/24 14:16:44.256
  I0420 14:16:44.257465 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-logs-7406 logs logs-generator logs-generator --limit-bytes=1'
  I0420 14:16:44.479696 13 builder.go:146] stderr: ""
  I0420 14:16:44.480033 13 builder.go:147] stdout: "I"
  I0420 14:16:44.480074 13 logs.go:133] got output "I"
  STEP: exposing timestamps @ 04/20/24 14:16:44.48
  I0420 14:16:44.481112 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-logs-7406 logs logs-generator logs-generator --tail=1 --timestamps'
  I0420 14:16:44.663243 13 builder.go:146] stderr: ""
  I0420 14:16:44.663956 13 builder.go:147] stdout: "2024-04-20T14:16:44.621153259Z I0420 14:16:44.621015       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/mvp 577\n"
  I0420 14:16:44.664320 13 logs.go:139] got output "2024-04-20T14:16:44.621153259Z I0420 14:16:44.621015       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/mvp 577\n"
  STEP: restricting to a time range @ 04/20/24 14:16:44.664
  E0420 14:16:44.913000      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:45.913152      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:46.913489      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:16:47.166426 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-logs-7406 logs logs-generator logs-generator --since=1s'
  I0420 14:16:47.354398 13 builder.go:146] stderr: ""
  I0420 14:16:47.354488 13 builder.go:147] stdout: "I0420 14:16:46.420701       1 logs_generator.go:76] 30 POST /api/v1/namespaces/kube-system/pods/94f6 539\nI0420 14:16:46.621403       1 logs_generator.go:76] 31 PUT /api/v1/namespaces/default/pods/8l8 262\nI0420 14:16:46.820698       1 logs_generator.go:76] 32 GET /api/v1/namespaces/default/pods/9t6 396\nI0420 14:16:47.021404       1 logs_generator.go:76] 33 POST /api/v1/namespaces/ns/pods/n8p 571\nI0420 14:16:47.220273       1 logs_generator.go:76] 34 POST /api/v1/namespaces/kube-system/pods/sq7 558\n"
  I0420 14:16:47.355011 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-logs-7406 logs logs-generator logs-generator --since=24h'
  I0420 14:16:47.574833 13 builder.go:146] stderr: ""
  I0420 14:16:47.575361 13 builder.go:147] stdout: "I0420 14:16:40.421194       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/566 535\nI0420 14:16:40.620788       1 logs_generator.go:76] 1 GET /api/v1/namespaces/default/pods/q9p 242\nI0420 14:16:40.821228       1 logs_generator.go:76] 2 GET /api/v1/namespaces/ns/pods/zlc 335\nI0420 14:16:41.020860       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/f6g4 547\nI0420 14:16:41.220299       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/default/pods/jkx 276\nI0420 14:16:41.420784       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/zrf 204\nI0420 14:16:41.621282       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/xpl 329\nI0420 14:16:41.820816       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/q44 343\nI0420 14:16:42.021329       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/m695 536\nI0420 14:16:42.220856       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/plk 361\nI0420 14:16:42.420252       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/8qw 336\nI0420 14:16:42.620843       1 logs_generator.go:76] 11 POST /api/v1/namespaces/default/pods/hw9 249\nI0420 14:16:42.821260       1 logs_generator.go:76] 12 POST /api/v1/namespaces/default/pods/ksj 417\nI0420 14:16:43.020851       1 logs_generator.go:76] 13 GET /api/v1/namespaces/default/pods/vft 314\nI0420 14:16:43.221378       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/kube-system/pods/jpfb 417\nI0420 14:16:43.420797       1 logs_generator.go:76] 15 POST /api/v1/namespaces/kube-system/pods/2k5 352\nI0420 14:16:43.621277       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/sh5f 522\nI0420 14:16:43.820836       1 logs_generator.go:76] 17 GET /api/v1/namespaces/kube-system/pods/6fb 470\nI0420 14:16:44.021298       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/cqm 553\nI0420 14:16:44.220778       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/phj 590\nI0420 14:16:44.420601       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/ns/pods/drg4 299\nI0420 14:16:44.621015       1 logs_generator.go:76] 21 GET /api/v1/namespaces/default/pods/mvp 577\nI0420 14:16:44.820389       1 logs_generator.go:76] 22 GET /api/v1/namespaces/ns/pods/b95 577\nI0420 14:16:45.020891       1 logs_generator.go:76] 23 POST /api/v1/namespaces/kube-system/pods/2j4 333\nI0420 14:16:45.221269       1 logs_generator.go:76] 24 POST /api/v1/namespaces/kube-system/pods/rzvq 281\nI0420 14:16:45.421050       1 logs_generator.go:76] 25 POST /api/v1/namespaces/ns/pods/xbj 552\nI0420 14:16:45.620687       1 logs_generator.go:76] 26 POST /api/v1/namespaces/ns/pods/69zs 521\nI0420 14:16:45.821365       1 logs_generator.go:76] 27 POST /api/v1/namespaces/kube-system/pods/kkv 471\nI0420 14:16:46.020680       1 logs_generator.go:76] 28 GET /api/v1/namespaces/ns/pods/zbn 402\nI0420 14:16:46.221235       1 logs_generator.go:76] 29 POST /api/v1/namespaces/kube-system/pods/8dp 584\nI0420 14:16:46.420701       1 logs_generator.go:76] 30 POST /api/v1/namespaces/kube-system/pods/94f6 539\nI0420 14:16:46.621403       1 logs_generator.go:76] 31 PUT /api/v1/namespaces/default/pods/8l8 262\nI0420 14:16:46.820698       1 logs_generator.go:76] 32 GET /api/v1/namespaces/default/pods/9t6 396\nI0420 14:16:47.021404       1 logs_generator.go:76] 33 POST /api/v1/namespaces/ns/pods/n8p 571\nI0420 14:16:47.220273       1 logs_generator.go:76] 34 POST /api/v1/namespaces/kube-system/pods/sq7 558\nI0420 14:16:47.420951       1 logs_generator.go:76] 35 POST /api/v1/namespaces/kube-system/pods/hxpg 580\n"
  I0420 14:16:47.576235 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-logs-7406 delete pod logs-generator'
  E0420 14:16:47.914983      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:16:48.512068 13 builder.go:146] stderr: ""
  I0420 14:16:48.512159 13 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0420 14:16:48.512433 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-7406" for this suite. @ 04/20/24 14:16:48.524
• [9.128 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 04/20/24 14:16:48.536
  I0420 14:16:48.536422 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename deployment @ 04/20/24 14:16:48.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:16:48.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:16:48.579
  I0420 14:16:48.584501 13 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0420 14:16:48.601808 13 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0420 14:16:48.915320      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:49.916181      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:50.916370      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:51.916590      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:52.916831      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:16:53.612157 13 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 14:16:53.612
  I0420 14:16:53.612320 13 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0420 14:16:53.624075 13 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0420 14:16:53.640014 13 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0420 14:16:53.917540      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:54.918204      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:16:55.656154 13 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0420 14:16:55.662008 13 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0420 14:16:55.683879 13 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9780",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "34cc5799-2c26-4f11-bcc3-61b5cd0b8d1a",
      ResourceVersion: (string) (len=5) "47522",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849219413,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6f4b778cd6\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0420 14:16:55.694763 13 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-6f4b778cd6" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9780",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "877065ee-d2a5-4acb-bbbd-3cc850da9fd7",
      ResourceVersion: (string) (len=5) "47512",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849219413,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "34cc5799-2c26-4f11-bcc3-61b5cd0b8d1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 33 34 63 63 35 37  39 39 2d 32 63 32 36 2d  |\"34cc5799-2c26-|
              00000120  34 66 31 31 2d 62 63 63  33 2d 36 31 62 35 63 64  |4f11-bcc3-61b5cd|
              00000130  30 62 38 64 31 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0b8d1a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0420 14:16:55.696586 13 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0420 14:16:55.697157 13 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9780",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5194af4-dafc-4928-a10c-2de31ea8f721",
      ResourceVersion: (string) (len=5) "47521",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849219408,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "34cc5799-2c26-4f11-bcc3-61b5cd0b8d1a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219408,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 33 34 63 63 35 37 39  |"uid\":\"34cc579|
              000000b0  39 2d 32 63 32 36 2d 34  66 31 31 2d 62 63 63 33  |9-2c26-4f11-bcc3|
              000000c0  2d 36 31 62 35 63 64 30  62 38 64 31 61 5c 22 7d  |-61b5cd0b8d1a\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0420 14:16:55.711465 13 deployment.go:67] Pod "test-rolling-update-deployment-6f4b778cd6-hplrg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6f4b778cd6-hplrg",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6f4b778cd6-",
      Namespace: (string) (len=15) "deployment-9780",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3afc4888-6467-47ae-86af-d9bf25b95bf9",
      ResourceVersion: (string) (len=5) "47511",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849219413,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
          UID: (types.UID) (len=36) "877065ee-d2a5-4acb-bbbd-3cc850da9fd7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 37  37 30 36 35 65 65 2d 64  |d\":\"877065ee-d|
              00000090  32 61 35 2d 34 61 63 62  2d 62 62 62 64 2d 33 63  |2a5-4acb-bbbd-3c|
              000000a0  63 38 35 30 64 61 39 66  64 37 5c 22 7d 22 3a 7b  |c850da9fd7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  32 32 30 5c 22 7d 22 3a  |.233.66.220\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d4z22",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d4z22",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849219413,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.103"
        }
      },
      PodIP: (string) (len=13) "10.233.66.220",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.220"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849219413,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849219414,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a",
          ContainerID: (string) (len=72) "cri-o://7f62f2a0f6239d7bb3d8cb0f8333366d4298bc4a54f1a8c5c1650fcfe15f7cb2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 14:16:55.728658 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9780" for this suite. @ 04/20/24 14:16:55.741
• [7.217 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 04/20/24 14:16:55.754
  I0420 14:16:55.754139 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 14:16:55.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:16:55.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:16:55.804
  STEP: Create a ReplicaSet @ 04/20/24 14:16:55.809
  STEP: Verify that the required pods have come up @ 04/20/24 14:16:55.82
  I0420 14:16:55.827508 13 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  E0420 14:16:55.918856      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:56.919327      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:57.920099      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:58.920826      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:16:59.921564      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:00.837113 13 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 04/20/24 14:17:00.837
  I0420 14:17:00.842487 13 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 04/20/24 14:17:00.842
  STEP: DeleteCollection of the ReplicaSets @ 04/20/24 14:17:00.849
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 04/20/24 14:17:00.866
  I0420 14:17:00.873074 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4863" for this suite. @ 04/20/24 14:17:00.883
• [5.144 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 04/20/24 14:17:00.898
  I0420 14:17:00.898907 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 14:17:00.902
  E0420 14:17:00.921758      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:17:01.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:17:01.007
  STEP: Given a ReplicationController is created @ 04/20/24 14:17:01.013
  STEP: When the matched label of one of its pods change @ 04/20/24 14:17:01.023
  I0420 14:17:01.031477 13 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E0420 14:17:01.922822      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:02.922702      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:03.922934      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:04.923460      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:05.923641      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:06.041161 13 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/20/24 14:17:06.063
  E0420 14:17:06.926428      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:07.086585 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3588" for this suite. @ 04/20/24 14:17:07.096
• [6.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1079
  STEP: Creating a kubernetes client @ 04/20/24 14:17:07.125
  I0420 14:17:07.126094 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:17:07.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:17:07.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:17:07.168
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/20/24 14:17:07.172
  I0420 14:17:07.172694 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-157 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0420 14:17:07.356306 13 builder.go:146] stderr: ""
  I0420 14:17:07.356411 13 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 04/20/24 14:17:07.356
  I0420 14:17:07.357394 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-157 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0420 14:17:07.576434 13 builder.go:146] stderr: ""
  I0420 14:17:07.576518 13 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/20/24 14:17:07.576
  I0420 14:17:07.583594 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-157 delete pods e2e-test-httpd-pod'
  E0420 14:17:07.926042      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:08.926188      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:09.376142 13 builder.go:146] stderr: ""
  I0420 14:17:09.376264 13 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0420 14:17:09.376442 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-157" for this suite. @ 04/20/24 14:17:09.386
• [2.270 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 04/20/24 14:17:09.395
  I0420 14:17:09.395894 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 14:17:09.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:17:09.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:17:09.435
  I0420 14:17:09.480250 13 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 14:17:09.495
  I0420 14:17:09.519278 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0420 14:17:09.519394 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  E0420 14:17:09.928571      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:10.527967 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0420 14:17:10.528129 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  E0420 14:17:10.928182      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:11.517074 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0420 14:17:11.517176 13 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 04/20/24 14:17:11.553
  STEP: Check that daemon pods images are updated. @ 04/20/24 14:17:11.588
  I0420 14:17:11.598281 13 daemon_set.go:1178] Wrong image for pod: daemon-set-72l4b. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0420 14:17:11.598418 13 daemon_set.go:1178] Wrong image for pod: daemon-set-jq48x. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0420 14:17:11.598468 13 daemon_set.go:1178] Wrong image for pod: daemon-set-spx69. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0420 14:17:11.929292      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:12.612401 13 daemon_set.go:1178] Wrong image for pod: daemon-set-72l4b. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0420 14:17:12.628154 13 daemon_set.go:1178] Wrong image for pod: daemon-set-jq48x. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0420 14:17:12.930060      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:13.600051 13 daemon_set.go:1178] Wrong image for pod: daemon-set-72l4b. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0420 14:17:13.600181 13 daemon_set.go:1183] Pod daemon-set-75wxb is not available
  I0420 14:17:13.600281 13 daemon_set.go:1178] Wrong image for pod: daemon-set-jq48x. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0420 14:17:13.930624      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:14.614254 13 daemon_set.go:1178] Wrong image for pod: daemon-set-jq48x. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0420 14:17:14.931548      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:15.611083 13 daemon_set.go:1178] Wrong image for pod: daemon-set-jq48x. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0420 14:17:15.611183 13 daemon_set.go:1183] Pod daemon-set-pxg7t is not available
  E0420 14:17:15.932932      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:16.933391      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:17.599493 13 daemon_set.go:1183] Pod daemon-set-wt92b is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 04/20/24 14:17:17.613
  I0420 14:17:17.643972 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0420 14:17:17.644065 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  E0420 14:17:17.934358      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:18.636679 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0420 14:17:18.636877 13 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 14:17:18.683
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1875, will wait for the garbage collector to delete the pods @ 04/20/24 14:17:18.683
  I0420 14:17:18.757655 13 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 15.752676ms
  I0420 14:17:18.858419 13 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.743945ms
  E0420 14:17:18.945600      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:19.767336 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0420 14:17:19.767454 13 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0420 14:17:19.772222 13 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"47845"},"items":null}

  I0420 14:17:19.777388 13 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"47845"},"items":null}

  I0420 14:17:19.805792 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1875" for this suite. @ 04/20/24 14:17:19.813
• [10.432 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 04/20/24 14:17:19.828
  I0420 14:17:19.828286 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:17:19.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:17:19.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:17:19.875
  STEP: Creating secret with name s-test-opt-del-636389f6-1cf6-4c3e-8c25-b95ae6b1edf7 @ 04/20/24 14:17:19.889
  STEP: Creating secret with name s-test-opt-upd-4b9230cf-1bdf-43d8-a4a4-2b609e6de095 @ 04/20/24 14:17:19.897
  STEP: Creating the pod @ 04/20/24 14:17:19.907
  E0420 14:17:19.939661      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:20.940091      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:21.940503      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-636389f6-1cf6-4c3e-8c25-b95ae6b1edf7 @ 04/20/24 14:17:22
  STEP: Updating secret s-test-opt-upd-4b9230cf-1bdf-43d8-a4a4-2b609e6de095 @ 04/20/24 14:17:22.014
  STEP: Creating secret with name s-test-opt-create-d8ee234e-9734-48ae-b1c6-3b706ab7aacf @ 04/20/24 14:17:22.026
  STEP: waiting to observe update in volume @ 04/20/24 14:17:22.035
  E0420 14:17:22.941051      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:23.941697      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:24.094884 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7250" for this suite. @ 04/20/24 14:17:24.103
• [4.288 seconds]
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3656
  STEP: Creating a kubernetes client @ 04/20/24 14:17:24.116
  I0420 14:17:24.116263 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename services @ 04/20/24 14:17:24.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:17:24.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:17:24.154
  STEP: creating service multiprotocol-test in namespace services-9149 @ 04/20/24 14:17:24.159
  STEP: creating pod pod1 in namespace services-9149 @ 04/20/24 14:17:24.177
  STEP: Creating pod pod1 in namespace services-9149 @ 04/20/24 14:17:24.178
  E0420 14:17:24.942466      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:25.943285      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-9149 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 04/20/24 14:17:26.245
  I0420 14:17:26.266341 13 service.go:4351] successfully validated that service multiprotocol-test in namespace services-9149 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 04/20/24 14:17:26.266
  I0420 14:17:26.266500 13 resource.go:361] Creating new exec pod
  E0420 14:17:26.943434      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:27.944138      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:28.296927 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9149 exec execpod6s7pf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.35.215 80'
  I0420 14:17:28.710297 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.35.215 80\nConnection to 10.233.35.215 80 port [tcp/http] succeeded!\n"
  I0420 14:17:28.710398 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0420 14:17:28.711125 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9149 exec execpod6s7pf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.35.215 80'
  E0420 14:17:28.945279      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:29.945576      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:30.946466      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:31.947254      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:32.948735      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:33.020296 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.35.215 80\nConnection to 10.233.35.215 80 port [udp/*] succeeded!\n"
  I0420 14:17:33.020383 13 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 04/20/24 14:17:33.02
  I0420 14:17:33.040868 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9149 exec execpod6s7pf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.35.215 80'
  I0420 14:17:33.373368 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.35.215 80\nConnection to 10.233.35.215 80 port [tcp/http] succeeded!\n"
  I0420 14:17:33.373479 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0420 14:17:33.373963 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9149 exec execpod6s7pf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.35.215 80'
  E0420 14:17:33.949211      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:34.949252      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:35.950384      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:36.950806      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:37.640931 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.35.215 80\nConnection to 10.233.35.215 80 port [udp/*] succeeded!\n"
  I0420 14:17:37.641100 13 builder.go:147] stdout: ""
  I0420 14:17:37.641491 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9149 exec execpod6s7pf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.35.215 80'
  E0420 14:17:37.950774      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:38.951272      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:39.951690      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:40.952888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:41.952468      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:41.952560 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.35.215 80\nConnection to 10.233.35.215 80 port [udp/*] succeeded!\n"
  I0420 14:17:41.952685 13 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 04/20/24 14:17:41.952
  I0420 14:17:41.972613 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9149 exec execpod6s7pf -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.35.215 80'
  E0420 14:17:42.952841      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:43.953007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:44.953146      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:45.953773      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:46.256815 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.35.215 80\nConnection to 10.233.35.215 80 port [udp/*] succeeded!\n"
  I0420 14:17:46.257108 13 builder.go:147] stdout: "pod1"
  I0420 14:17:46.258157 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9149 exec execpod6s7pf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.35.215 80'
  E0420 14:17:46.954021      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:47.954908      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:48.587648 13 builder.go:135] rc: 1
  I0420 14:17:48.588268 13 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9149 exec execpod6s7pf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.35.215 80:
  Command stdout:

  stderr:
  + + echo hostName
  nc -v -t -w 2 10.233.35.215 80
  nc: connect to 10.233.35.215 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0420 14:17:48.588664 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9149 exec execpod6s7pf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.35.215 80'
  E0420 14:17:48.955795      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:49.956512      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:50.866305 13 builder.go:135] rc: 1
  I0420 14:17:50.866677 13 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9149 exec execpod6s7pf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.35.215 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.35.215 80
  nc: connect to 10.233.35.215 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0420 14:17:50.867248 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9149 exec execpod6s7pf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.35.215 80'
  E0420 14:17:50.957039      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:51.958090      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:52.961162      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:53.147621 13 builder.go:135] rc: 1
  I0420 14:17:53.147855 13 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9149 exec execpod6s7pf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.35.215 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.35.215 80
  nc: connect to 10.233.35.215 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0420 14:17:53.148189 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9149" for this suite. @ 04/20/24 14:17:53.16
• [29.057 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 04/20/24 14:17:53.173
  I0420 14:17:53.173589 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:17:53.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:17:53.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:17:53.219
  STEP: Setting up server cert @ 04/20/24 14:17:53.272
  E0420 14:17:53.962084      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:17:54.351
  STEP: Deploying the webhook pod @ 04/20/24 14:17:54.369
  STEP: Wait for the deployment to be ready @ 04/20/24 14:17:54.395
  I0420 14:17:54.409009 13 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0420 14:17:54.962869      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:17:55.963064      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 14:17:56.434
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:17:56.454
  E0420 14:17:56.963900      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:57.456649 13 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 04/20/24 14:17:57.471
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/20/24 14:17:57.507
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 04/20/24 14:17:57.523
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/20/24 14:17:57.548
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 04/20/24 14:17:57.568
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/20/24 14:17:57.582
  I0420 14:17:57.705821 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2424" for this suite. @ 04/20/24 14:17:57.719
  STEP: Destroying namespace "webhook-markers-9124" for this suite. @ 04/20/24 14:17:57.757
• [4.617 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:355
  STEP: Creating a kubernetes client @ 04/20/24 14:17:57.791
  I0420 14:17:57.791474 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:17:57.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:17:57.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:17:57.859
  STEP: creating a replication controller @ 04/20/24 14:17:57.867
  I0420 14:17:57.868482 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 create -f -'
  E0420 14:17:57.964251      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:58.292780 13 builder.go:146] stderr: ""
  I0420 14:17:58.292916 13 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/20/24 14:17:58.293
  I0420 14:17:58.293692 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0420 14:17:58.566593 13 builder.go:146] stderr: ""
  I0420 14:17:58.567093 13 builder.go:147] stdout: "update-demo-nautilus-45blr update-demo-nautilus-h85hz "
  I0420 14:17:58.569701 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods update-demo-nautilus-45blr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0420 14:17:58.965694      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:17:59.067396 13 builder.go:146] stderr: ""
  I0420 14:17:59.067756 13 builder.go:147] stdout: ""
  I0420 14:17:59.067835 13 kubectl.go:2501] update-demo-nautilus-45blr is created but not running
  E0420 14:17:59.966096      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:00.966695      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:01.966966      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:02.967640      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:03.968092      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:18:04.068916 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0420 14:18:04.379903 13 builder.go:146] stderr: ""
  I0420 14:18:04.379987 13 builder.go:147] stdout: "update-demo-nautilus-45blr update-demo-nautilus-h85hz "
  I0420 14:18:04.380935 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods update-demo-nautilus-45blr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0420 14:18:04.633195 13 builder.go:146] stderr: ""
  I0420 14:18:04.633274 13 builder.go:147] stdout: ""
  I0420 14:18:04.633296 13 kubectl.go:2501] update-demo-nautilus-45blr is created but not running
  E0420 14:18:04.968408      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:05.969185      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:06.969248      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:07.970949      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:08.970550      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:18:09.633806 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0420 14:18:09.822943 13 builder.go:146] stderr: ""
  I0420 14:18:09.823241 13 builder.go:147] stdout: "update-demo-nautilus-45blr update-demo-nautilus-h85hz "
  I0420 14:18:09.823515 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods update-demo-nautilus-45blr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0420 14:18:09.971591      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:18:09.993903 13 builder.go:146] stderr: ""
  I0420 14:18:09.993979 13 builder.go:147] stdout: ""
  I0420 14:18:09.994001 13 kubectl.go:2501] update-demo-nautilus-45blr is created but not running
  E0420 14:18:10.972165      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:11.984899      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:12.982036      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:13.982134      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:14.982780      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:18:14.995028 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0420 14:18:15.179961 13 builder.go:146] stderr: ""
  I0420 14:18:15.180064 13 builder.go:147] stdout: "update-demo-nautilus-45blr update-demo-nautilus-h85hz "
  I0420 14:18:15.180259 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods update-demo-nautilus-45blr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0420 14:18:15.345341 13 builder.go:146] stderr: ""
  I0420 14:18:15.346433 13 builder.go:147] stdout: "true"
  I0420 14:18:15.347094 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods update-demo-nautilus-45blr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0420 14:18:15.520209 13 builder.go:146] stderr: ""
  I0420 14:18:15.520285 13 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0420 14:18:15.520586 13 kubectl.go:2392] validating pod update-demo-nautilus-45blr
  I0420 14:18:15.546850 13 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0420 14:18:15.547283 13 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0420 14:18:15.547351 13 kubectl.go:2519] update-demo-nautilus-45blr is verified up and running
  I0420 14:18:15.548132 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods update-demo-nautilus-h85hz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0420 14:18:15.738276 13 builder.go:146] stderr: ""
  I0420 14:18:15.738357 13 builder.go:147] stdout: ""
  I0420 14:18:15.738593 13 kubectl.go:2501] update-demo-nautilus-h85hz is created but not running
  E0420 14:18:15.985213      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:16.983802      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:17.984701      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:18.985225      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:20.004275      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:18:20.740843 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0420 14:18:20.989684      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:18:20.993659 13 builder.go:146] stderr: ""
  I0420 14:18:20.993812 13 builder.go:147] stdout: "update-demo-nautilus-45blr update-demo-nautilus-h85hz "
  I0420 14:18:20.994319 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods update-demo-nautilus-45blr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0420 14:18:21.195537 13 builder.go:146] stderr: ""
  I0420 14:18:21.195879 13 builder.go:147] stdout: "true"
  I0420 14:18:21.196669 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods update-demo-nautilus-45blr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0420 14:18:21.347127 13 builder.go:146] stderr: ""
  I0420 14:18:21.347204 13 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0420 14:18:21.347268 13 kubectl.go:2392] validating pod update-demo-nautilus-45blr
  I0420 14:18:21.361058 13 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0420 14:18:21.362198 13 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0420 14:18:21.362250 13 kubectl.go:2519] update-demo-nautilus-45blr is verified up and running
  I0420 14:18:21.362668 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods update-demo-nautilus-h85hz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0420 14:18:21.545286 13 builder.go:146] stderr: ""
  I0420 14:18:21.545450 13 builder.go:147] stdout: ""
  I0420 14:18:21.545521 13 kubectl.go:2501] update-demo-nautilus-h85hz is created but not running
  E0420 14:18:21.989958      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:22.991200      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:23.994043      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:24.995804      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:25.993688      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:18:26.547094 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0420 14:18:26.786976 13 builder.go:146] stderr: ""
  I0420 14:18:26.787087 13 builder.go:147] stdout: "update-demo-nautilus-45blr update-demo-nautilus-h85hz "
  I0420 14:18:26.787874 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods update-demo-nautilus-45blr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0420 14:18:26.994083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:18:27.005821 13 builder.go:146] stderr: ""
  I0420 14:18:27.005913 13 builder.go:147] stdout: "true"
  I0420 14:18:27.006582 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods update-demo-nautilus-45blr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0420 14:18:27.268074 13 builder.go:146] stderr: ""
  I0420 14:18:27.268192 13 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0420 14:18:27.268230 13 kubectl.go:2392] validating pod update-demo-nautilus-45blr
  I0420 14:18:27.280017 13 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0420 14:18:27.282774 13 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0420 14:18:27.283156 13 kubectl.go:2519] update-demo-nautilus-45blr is verified up and running
  I0420 14:18:27.283459 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods update-demo-nautilus-h85hz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0420 14:18:27.667371 13 builder.go:146] stderr: ""
  I0420 14:18:27.667631 13 builder.go:147] stdout: ""
  I0420 14:18:27.667777 13 kubectl.go:2501] update-demo-nautilus-h85hz is created but not running
  E0420 14:18:27.995198      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:28.995680      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:29.996278      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:30.996897      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:31.997975      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:18:32.668857 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0420 14:18:32.853630 13 builder.go:146] stderr: ""
  I0420 14:18:32.853995 13 builder.go:147] stdout: "update-demo-nautilus-45blr update-demo-nautilus-h85hz "
  I0420 14:18:32.854544 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods update-demo-nautilus-45blr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0420 14:18:32.998238      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:18:33.073687 13 builder.go:146] stderr: ""
  I0420 14:18:33.073861 13 builder.go:147] stdout: "true"
  I0420 14:18:33.074405 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods update-demo-nautilus-45blr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0420 14:18:33.260574 13 builder.go:146] stderr: ""
  I0420 14:18:33.260680 13 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0420 14:18:33.260736 13 kubectl.go:2392] validating pod update-demo-nautilus-45blr
  I0420 14:18:33.270641 13 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0420 14:18:33.270774 13 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0420 14:18:33.270999 13 kubectl.go:2519] update-demo-nautilus-45blr is verified up and running
  I0420 14:18:33.271461 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods update-demo-nautilus-h85hz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0420 14:18:33.457803 13 builder.go:146] stderr: ""
  I0420 14:18:33.458134 13 builder.go:147] stdout: "true"
  I0420 14:18:33.458491 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods update-demo-nautilus-h85hz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0420 14:18:33.639399 13 builder.go:146] stderr: ""
  I0420 14:18:33.639551 13 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0420 14:18:33.639579 13 kubectl.go:2392] validating pod update-demo-nautilus-h85hz
  I0420 14:18:33.657072 13 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0420 14:18:33.657200 13 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0420 14:18:33.657236 13 kubectl.go:2519] update-demo-nautilus-h85hz is verified up and running
  STEP: scaling down the replication controller @ 04/20/24 14:18:33.657
  I0420 14:18:33.684978 13 kubectl.go:324] scanned /root for discovery docs: <nil>
  I0420 14:18:33.685351 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0420 14:18:33.998551      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:18:34.987919 13 builder.go:146] stderr: ""
  I0420 14:18:34.988031 13 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/20/24 14:18:34.988
  I0420 14:18:34.989448 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0420 14:18:34.999399      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:18:35.211039 13 builder.go:146] stderr: ""
  I0420 14:18:35.211114 13 builder.go:147] stdout: "update-demo-nautilus-45blr "
  I0420 14:18:35.211448 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods update-demo-nautilus-45blr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0420 14:18:35.380235 13 builder.go:146] stderr: ""
  I0420 14:18:35.380344 13 builder.go:147] stdout: "true"
  I0420 14:18:35.381439 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods update-demo-nautilus-45blr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0420 14:18:35.542009 13 builder.go:146] stderr: ""
  I0420 14:18:35.542259 13 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0420 14:18:35.542675 13 kubectl.go:2392] validating pod update-demo-nautilus-45blr
  I0420 14:18:35.553493 13 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0420 14:18:35.553649 13 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0420 14:18:35.553700 13 kubectl.go:2519] update-demo-nautilus-45blr is verified up and running
  STEP: scaling up the replication controller @ 04/20/24 14:18:35.553
  I0420 14:18:35.569785 13 kubectl.go:324] scanned /root for discovery docs: <nil>
  I0420 14:18:35.571030 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0420 14:18:35.999769      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:18:36.820269 13 builder.go:146] stderr: ""
  I0420 14:18:36.820377 13 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/20/24 14:18:36.82
  I0420 14:18:36.821632 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0420 14:18:37.000527      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:18:37.017266 13 builder.go:146] stderr: ""
  I0420 14:18:37.017394 13 builder.go:147] stdout: "update-demo-nautilus-45blr update-demo-nautilus-qd6dg "
  I0420 14:18:37.018065 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods update-demo-nautilus-45blr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0420 14:18:37.170875 13 builder.go:146] stderr: ""
  I0420 14:18:37.170979 13 builder.go:147] stdout: "true"
  I0420 14:18:37.171362 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods update-demo-nautilus-45blr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0420 14:18:37.358131 13 builder.go:146] stderr: ""
  I0420 14:18:37.358247 13 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0420 14:18:37.358336 13 kubectl.go:2392] validating pod update-demo-nautilus-45blr
  I0420 14:18:37.373451 13 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0420 14:18:37.373571 13 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0420 14:18:37.373600 13 kubectl.go:2519] update-demo-nautilus-45blr is verified up and running
  I0420 14:18:37.375059 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods update-demo-nautilus-qd6dg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0420 14:18:37.581436 13 builder.go:146] stderr: ""
  I0420 14:18:37.581547 13 builder.go:147] stdout: "true"
  I0420 14:18:37.582143 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods update-demo-nautilus-qd6dg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0420 14:18:37.819178 13 builder.go:146] stderr: ""
  I0420 14:18:37.819286 13 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0420 14:18:37.819491 13 kubectl.go:2392] validating pod update-demo-nautilus-qd6dg
  I0420 14:18:37.838005 13 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0420 14:18:37.838168 13 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0420 14:18:37.838206 13 kubectl.go:2519] update-demo-nautilus-qd6dg is verified up and running
  STEP: using delete to clean up resources @ 04/20/24 14:18:37.838
  I0420 14:18:37.838951 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 delete --grace-period=0 --force -f -'
  E0420 14:18:38.001868      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:18:38.030701 13 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0420 14:18:38.032197 13 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0420 14:18:38.033360 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get rc,svc -l name=update-demo --no-headers'
  I0420 14:18:38.281269 13 builder.go:146] stderr: "No resources found in kubectl-2819 namespace.\n"
  I0420 14:18:38.282526 13 builder.go:147] stdout: ""
  I0420 14:18:38.284459 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2819 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0420 14:18:38.513024 13 builder.go:146] stderr: ""
  I0420 14:18:38.513319 13 builder.go:147] stdout: ""
  I0420 14:18:38.513909 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2819" for this suite. @ 04/20/24 14:18:38.525
• [40.747 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 04/20/24 14:18:38.539
  I0420 14:18:38.539345 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename kubelet-test @ 04/20/24 14:18:38.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:18:38.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:18:38.583
  E0420 14:18:39.001974      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:40.002567      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:41.003343      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:42.003755      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:18:42.620632 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5179" for this suite. @ 04/20/24 14:18:42.632
• [4.109 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 04/20/24 14:18:42.648
  I0420 14:18:42.648642 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename dns @ 04/20/24 14:18:42.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:18:42.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:18:42.707
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1137.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-1137.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 04/20/24 14:18:42.713
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-1137.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-1137.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 04/20/24 14:18:42.713
  STEP: creating a pod to probe /etc/hosts @ 04/20/24 14:18:42.713
  STEP: submitting the pod to kubernetes @ 04/20/24 14:18:42.713
  E0420 14:18:43.009040      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:44.004509      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:45.005024      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:46.005954      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:47.006598      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:48.007160      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:49.009786      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:50.010015      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:51.011242      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:52.012091      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:53.012388      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:54.013078      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:55.014852      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:56.015950      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:57.016476      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:58.017331      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:18:59.018670      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:00.019411      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:01.019610      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:02.020814      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:03.021588      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:04.022446      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:05.022779      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:06.023462      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:07.024045      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:08.024691      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:09.024810      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:10.025615      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:11.025958      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:12.026246      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/20/24 14:19:12.913
  STEP: looking for the results for each expected name from probers @ 04/20/24 14:19:12.92
  I0420 14:19:12.958979 13 dns_common.go:478] Unable to read jessie_hosts@dns-querier-1 from pod dns-1137/dns-test-7e0a6a41-9894-44c3-b508-4c1a9dc4ad2b: the server could not find the requested resource (get pods dns-test-7e0a6a41-9894-44c3-b508-4c1a9dc4ad2b)
  I0420 14:19:12.959076 13 dns_common.go:489] Lookups using dns-1137/dns-test-7e0a6a41-9894-44c3-b508-4c1a9dc4ad2b failed for: [jessie_hosts@dns-querier-1]

  I0420 14:19:13.000211 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 14:19:13.014202 13 dns_common.go:495] Pod client logs for querier: 
  E0420 14:19:13.026432      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:19:13.029874 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 14:19:14.028097      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:15.027945      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:16.030386      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:17.031795      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:19:17.955875 13 dns_common.go:527] DNS probes using dns-1137/dns-test-7e0a6a41-9894-44c3-b508-4c1a9dc4ad2b succeeded

  STEP: deleting the pod @ 04/20/24 14:19:17.956
  I0420 14:19:17.983473 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1137" for this suite. @ 04/20/24 14:19:17.996
• [35.381 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS  E0420 14:19:18.031945      13 retrywatcher.go:129] "Watch failed" err="context canceled"
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 04/20/24 14:19:18.041
  I0420 14:19:18.042580 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename configmap @ 04/20/24 14:19:18.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:19:18.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:19:18.106
  STEP: Creating configMap that has name configmap-test-emptyKey-1c26ca2e-796a-489b-b3b3-c78273fff7d9 @ 04/20/24 14:19:18.113
  I0420 14:19:18.117411 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2373" for this suite. @ 04/20/24 14:19:18.127
• [0.099 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 04/20/24 14:19:18.141
  I0420 14:19:18.141899 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:19:18.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:19:18.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:19:18.187
  STEP: Setting up server cert @ 04/20/24 14:19:18.231
  E0420 14:19:19.031562      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:19:19.1
  STEP: Deploying the webhook pod @ 04/20/24 14:19:19.12
  STEP: Wait for the deployment to be ready @ 04/20/24 14:19:19.142
  I0420 14:19:19.155564 13 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0420 14:19:20.032025      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:21.032487      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 14:19:21.179
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:19:21.205
  E0420 14:19:22.033271      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:19:22.206101 13 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 04/20/24 14:19:22.219
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/20/24 14:19:22.22
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 04/20/24 14:19:22.258
  E0420 14:19:23.034269      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 04/20/24 14:19:23.281
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/20/24 14:19:23.281
  E0420 14:19:24.034512      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 04/20/24 14:19:24.339
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/20/24 14:19:24.339
  E0420 14:19:25.035515      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:26.035886      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:27.036665      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:28.036768      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:29.037232      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 04/20/24 14:19:29.415
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/20/24 14:19:29.415
  E0420 14:19:30.038326      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:31.039109      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:32.039289      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:33.040278      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:34.043172      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:19:34.683330 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6512" for this suite. @ 04/20/24 14:19:34.699
  STEP: Destroying namespace "webhook-markers-8576" for this suite. @ 04/20/24 14:19:34.729
• [16.603 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 04/20/24 14:19:34.761
  I0420 14:19:34.761853 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename endpointslice @ 04/20/24 14:19:34.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:19:34.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:19:34.832
  E0420 14:19:35.043274      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:36.043973      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:19:36.958242 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3775" for this suite. @ 04/20/24 14:19:36.968
• [2.218 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 04/20/24 14:19:36.979
  I0420 14:19:36.979607 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename conformance-tests @ 04/20/24 14:19:36.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:19:37.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:19:37.022
  STEP: Getting node addresses @ 04/20/24 14:19:37.027
  I0420 14:19:37.027178 13 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0420 14:19:37.041142 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0420 14:19:37.044206      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "conformance-tests-5844" for this suite. @ 04/20/24 14:19:37.05
• [0.082 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 04/20/24 14:19:37.063
  I0420 14:19:37.063224 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:19:37.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:19:37.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:19:37.099
  STEP: Setting up server cert @ 04/20/24 14:19:37.147
  E0420 14:19:38.045948      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:19:38.531
  STEP: Deploying the webhook pod @ 04/20/24 14:19:38.544
  STEP: Wait for the deployment to be ready @ 04/20/24 14:19:38.564
  I0420 14:19:38.576054 13 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0420 14:19:39.046324      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:40.047253      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 14:19:40.599
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:19:40.618
  E0420 14:19:41.046974      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:19:41.618658 13 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0420 14:19:41.630952 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 14:19:42.049491      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3703-crds.webhook.example.com via the AdmissionRegistration API @ 04/20/24 14:19:42.158
  STEP: Creating a custom resource while v1 is storage version @ 04/20/24 14:19:42.206
  E0420 14:19:43.049623      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:44.050399      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 04/20/24 14:19:44.429
  STEP: Patching the custom resource while v2 is storage version @ 04/20/24 14:19:44.58
  E0420 14:19:45.050844      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:19:45.291582 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4525" for this suite. @ 04/20/24 14:19:45.303
  STEP: Destroying namespace "webhook-markers-6588" for this suite. @ 04/20/24 14:19:45.318
• [8.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 04/20/24 14:19:45.334
  I0420 14:19:45.334286 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 14:19:45.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:19:45.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:19:45.378
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/20/24 14:19:45.387
  E0420 14:19:46.053425      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:47.052006      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:48.053202      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:49.053441      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:19:49.436
  I0420 14:19:49.450620 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-40404a5a-51b3-464e-b35e-2d77e6492db7 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:19:49.468
  I0420 14:19:49.500681 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3819" for this suite. @ 04/20/24 14:19:49.513
• [4.193 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 04/20/24 14:19:49.527
  I0420 14:19:49.527200 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:19:49.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:19:49.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:19:49.565
  STEP: Creating configMap with name configmap-projected-all-test-volume-788dd70b-b321-4e7e-a669-51c7021a81a9 @ 04/20/24 14:19:49.57
  STEP: Creating secret with name secret-projected-all-test-volume-e8021d74-a2cf-471d-9423-370c4e240ad2 @ 04/20/24 14:19:49.581
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 04/20/24 14:19:49.592
  E0420 14:19:50.055034      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:51.056503      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:52.056996      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:53.057791      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:19:53.661
  I0420 14:19:53.668524 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod projected-volume-5fd72b8c-6cc2-414c-97af-e3f3a86a3db3 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:19:53.68
  I0420 14:19:53.712625 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-112" for this suite. @ 04/20/24 14:19:53.722
• [4.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 04/20/24 14:19:53.736
  I0420 14:19:53.737122 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 14:19:53.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:19:53.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:19:53.78
  I0420 14:19:53.787449 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 14:19:54.058652      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:55.059957      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/20/24 14:19:55.813
  I0420 14:19:55.814626 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-4071 --namespace=crd-publish-openapi-4071 create -f -'
  E0420 14:19:56.060896      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:19:56.073348 13 builder.go:146] stderr: ""
  I0420 14:19:56.073460 13 builder.go:147] stdout: "e2e-test-crd-publish-openapi-768-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0420 14:19:56.074041 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-4071 --namespace=crd-publish-openapi-4071 delete e2e-test-crd-publish-openapi-768-crds test-cr'
  I0420 14:19:56.424965 13 builder.go:146] stderr: ""
  I0420 14:19:56.425135 13 builder.go:147] stdout: "e2e-test-crd-publish-openapi-768-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0420 14:19:56.425696 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-4071 --namespace=crd-publish-openapi-4071 apply -f -'
  I0420 14:19:56.603428 13 builder.go:146] stderr: ""
  I0420 14:19:56.603527 13 builder.go:147] stdout: "e2e-test-crd-publish-openapi-768-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0420 14:19:56.604106 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-4071 --namespace=crd-publish-openapi-4071 delete e2e-test-crd-publish-openapi-768-crds test-cr'
  I0420 14:19:56.783107 13 builder.go:146] stderr: ""
  I0420 14:19:56.783605 13 builder.go:147] stdout: "e2e-test-crd-publish-openapi-768-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/20/24 14:19:56.783
  I0420 14:19:56.784373 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-4071 explain e2e-test-crd-publish-openapi-768-crds'
  I0420 14:19:56.931371 13 builder.go:146] stderr: ""
  I0420 14:19:56.931513 13 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-768-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0420 14:19:57.060954      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:19:58.061598      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:19:58.865445 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4071" for this suite. @ 04/20/24 14:19:58.885
• [5.165 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 04/20/24 14:19:58.903
  I0420 14:19:58.903152 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/20/24 14:19:58.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:19:58.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:19:58.951
  STEP: create the container to handle the HTTPGet hook request. @ 04/20/24 14:19:58.969
  E0420 14:19:59.062536      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:00.062677      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/20/24 14:20:01.013
  E0420 14:20:01.063001      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:02.064206      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 04/20/24 14:20:03.055
  E0420 14:20:03.064885      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:04.065351      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:05.066137      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 04/20/24 14:20:05.122
  I0420 14:20:05.157543 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8442" for this suite. @ 04/20/24 14:20:05.166
• [6.277 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 04/20/24 14:20:05.179
  I0420 14:20:05.179555 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename gc @ 04/20/24 14:20:05.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:20:05.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:20:05.222
  STEP: create the rc1 @ 04/20/24 14:20:05.236
  STEP: create the rc2 @ 04/20/24 14:20:05.25
  E0420 14:20:06.066541      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:07.067590      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:08.068569      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:09.070000      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:10.071108      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:11.073290      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 04/20/24 14:20:11.276
  E0420 14:20:12.072137      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:13.072580      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 04/20/24 14:20:13.196
  STEP: wait for the rc to be deleted @ 04/20/24 14:20:13.227
  E0420 14:20:14.074747      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:15.073640      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:16.079277      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:17.078856      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:18.078797      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:20:18.315228 13 garbage_collector.go:762] 73 pods remaining
  I0420 14:20:18.316653 13 garbage_collector.go:769] 73 pods has nil DeletionTimestamp
  I0420 14:20:18.316895 13 garbage_collector.go:770] 
  E0420 14:20:19.080335      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:20.080305      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:21.101291      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:22.084130      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:23.085027      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/20/24 14:20:23.278
  I0420 14:20:23.651351 13 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0420 14:20:23.651567 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-26k8d" in namespace "gc-614"
  I0420 14:20:23.719359 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2bfpc" in namespace "gc-614"
  I0420 14:20:23.780808 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-45ttv" in namespace "gc-614"
  I0420 14:20:23.846406 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4l7w2" in namespace "gc-614"
  I0420 14:20:23.925783 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4p9xx" in namespace "gc-614"
  I0420 14:20:24.026810 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4qdtd" in namespace "gc-614"
  I0420 14:20:24.064211 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-58fkq" in namespace "gc-614"
  E0420 14:20:24.087135      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:20:24.132180 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5rrdc" in namespace "gc-614"
  I0420 14:20:24.190072 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5tbvm" in namespace "gc-614"
  I0420 14:20:24.293116 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5wr9s" in namespace "gc-614"
  I0420 14:20:24.381299 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6lg5q" in namespace "gc-614"
  I0420 14:20:24.460248 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6pxgh" in namespace "gc-614"
  I0420 14:20:24.534640 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6t6j7" in namespace "gc-614"
  I0420 14:20:24.620061 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7744l" in namespace "gc-614"
  I0420 14:20:24.666390 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8h7xg" in namespace "gc-614"
  I0420 14:20:24.731374 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8m6kw" in namespace "gc-614"
  I0420 14:20:24.775680 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8mlpr" in namespace "gc-614"
  I0420 14:20:24.833053 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8n4sm" in namespace "gc-614"
  I0420 14:20:24.895369 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8v2jn" in namespace "gc-614"
  I0420 14:20:24.992195 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-99l4v" in namespace "gc-614"
  E0420 14:20:25.091274      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:20:25.112885 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bfmc6" in namespace "gc-614"
  I0420 14:20:25.183824 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bfzkx" in namespace "gc-614"
  I0420 14:20:25.364097 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c4ddp" in namespace "gc-614"
  I0420 14:20:25.458417 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c5vd2" in namespace "gc-614"
  I0420 14:20:25.544556 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cjnl8" in namespace "gc-614"
  I0420 14:20:25.601231 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cn6j8" in namespace "gc-614"
  I0420 14:20:25.651438 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d4q8l" in namespace "gc-614"
  I0420 14:20:25.717528 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dfpcn" in namespace "gc-614"
  I0420 14:20:25.808205 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dhzth" in namespace "gc-614"
  I0420 14:20:25.903535 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dj9m6" in namespace "gc-614"
  I0420 14:20:25.962430 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dtzmq" in namespace "gc-614"
  I0420 14:20:26.003490 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fb9x8" in namespace "gc-614"
  I0420 14:20:26.055267 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g7n7p" in namespace "gc-614"
  E0420 14:20:26.092910      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:20:26.137363 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g7tvn" in namespace "gc-614"
  I0420 14:20:26.203212 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gbtrh" in namespace "gc-614"
  I0420 14:20:26.336853 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-grs2j" in namespace "gc-614"
  I0420 14:20:26.457465 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gzx84" in namespace "gc-614"
  I0420 14:20:26.560019 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h5w5q" in namespace "gc-614"
  I0420 14:20:26.589015 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h997j" in namespace "gc-614"
  I0420 14:20:26.664500 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h9ckl" in namespace "gc-614"
  I0420 14:20:26.800811 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hkphc" in namespace "gc-614"
  I0420 14:20:26.974041 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hm2sr" in namespace "gc-614"
  E0420 14:20:27.092931      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:20:27.201440 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-htvdj" in namespace "gc-614"
  I0420 14:20:27.309334 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j98dn" in namespace "gc-614"
  I0420 14:20:27.422350 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jgq9b" in namespace "gc-614"
  I0420 14:20:27.535486 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jhmhl" in namespace "gc-614"
  I0420 14:20:27.641911 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kgzfd" in namespace "gc-614"
  I0420 14:20:27.717839 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-khbj7" in namespace "gc-614"
  I0420 14:20:27.802013 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kk644" in namespace "gc-614"
  I0420 14:20:27.871012 13 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-lc8cr" in namespace "gc-614"
  I0420 14:20:27.941226 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-614" for this suite. @ 04/20/24 14:20:27.964
• [22.813 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 04/20/24 14:20:27.993
  I0420 14:20:27.993549 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename sched-pred @ 04/20/24 14:20:28.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:20:28.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:20:28.084
  I0420 14:20:28.092652 13 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  E0420 14:20:28.093022      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:20:28.129421 13 util.go:400] Waiting for terminating namespaces to be deleted...
  I0420 14:20:28.149827 13 predicates.go:121] 
  Logging pods the apiserver thinks is on node ier3chochiph-1 before test
  I0420 14:20:28.206463 13 predicates.go:887] coredns-7db6d8ff4d-9bjg9 from kube-system started at 2024-04-20 14:11:30 +0000 UTC (1 container statuses recorded)
  I0420 14:20:28.207678 13 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0420 14:20:28.207758 13 predicates.go:887] kube-addon-manager-ier3chochiph-1 from kube-system started at 2024-04-20 14:04:31 +0000 UTC (1 container statuses recorded)
  I0420 14:20:28.207819 13 predicates.go:889] 	Container kube-addon-manager ready: true, restart count 8
  I0420 14:20:28.207841 13 predicates.go:887] kube-apiserver-ier3chochiph-1 from kube-system started at 2024-04-20 14:04:31 +0000 UTC (1 container statuses recorded)
  I0420 14:20:28.207881 13 predicates.go:889] 	Container kube-apiserver ready: true, restart count 10
  I0420 14:20:28.207899 13 predicates.go:887] kube-controller-manager-ier3chochiph-1 from kube-system started at 2024-04-20 14:04:31 +0000 UTC (1 container statuses recorded)
  I0420 14:20:28.207915 13 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 8
  I0420 14:20:28.207931 13 predicates.go:887] kube-flannel-ds-mzt2f from kube-system started at 2024-04-20 14:11:30 +0000 UTC (1 container statuses recorded)
  I0420 14:20:28.207956 13 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0420 14:20:28.207997 13 predicates.go:887] kube-proxy-lkdx8 from kube-system started at 2024-04-20 14:11:31 +0000 UTC (1 container statuses recorded)
  I0420 14:20:28.208084 13 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0420 14:20:28.208109 13 predicates.go:887] kube-scheduler-ier3chochiph-1 from kube-system started at 2024-04-20 14:04:31 +0000 UTC (1 container statuses recorded)
  I0420 14:20:28.208124 13 predicates.go:889] 	Container kube-scheduler ready: true, restart count 8
  I0420 14:20:28.208141 13 predicates.go:887] sonobuoy-systemd-logs-daemon-set-a313837afcd448ea-mhmwj from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  I0420 14:20:28.208156 13 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0420 14:20:28.208169 13 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0420 14:20:28.208185 13 predicates.go:121] 
  Logging pods the apiserver thinks is on node ier3chochiph-2 before test
  I0420 14:20:28.232993 13 predicates.go:887] kube-addon-manager-ier3chochiph-2 from kube-system started at 2024-04-20 14:04:55 +0000 UTC (1 container statuses recorded)
  I0420 14:20:28.234085 13 predicates.go:889] 	Container kube-addon-manager ready: true, restart count 8
  I0420 14:20:28.234119 13 predicates.go:887] kube-apiserver-ier3chochiph-2 from kube-system started at 2024-04-20 14:04:55 +0000 UTC (1 container statuses recorded)
  I0420 14:20:28.234136 13 predicates.go:889] 	Container kube-apiserver ready: true, restart count 8
  I0420 14:20:28.234180 13 predicates.go:887] kube-controller-manager-ier3chochiph-2 from kube-system started at 2024-04-20 14:04:55 +0000 UTC (1 container statuses recorded)
  I0420 14:20:28.234195 13 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 8
  I0420 14:20:28.234213 13 predicates.go:887] kube-flannel-ds-k64d2 from kube-system started at 2024-04-20 14:11:31 +0000 UTC (1 container statuses recorded)
  I0420 14:20:28.234227 13 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0420 14:20:28.234243 13 predicates.go:887] kube-proxy-2tn7g from kube-system started at 2024-04-20 14:11:31 +0000 UTC (1 container statuses recorded)
  I0420 14:20:28.234266 13 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0420 14:20:28.234301 13 predicates.go:887] kube-scheduler-ier3chochiph-2 from kube-system started at 2024-04-20 14:04:55 +0000 UTC (1 container statuses recorded)
  I0420 14:20:28.234339 13 predicates.go:889] 	Container kube-scheduler ready: true, restart count 9
  I0420 14:20:28.234360 13 predicates.go:887] sonobuoy from sonobuoy started at 2024-04-20 14:11:48 +0000 UTC (1 container statuses recorded)
  I0420 14:20:28.234375 13 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0420 14:20:28.234392 13 predicates.go:887] sonobuoy-systemd-logs-daemon-set-a313837afcd448ea-8wcps from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  I0420 14:20:28.234406 13 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0420 14:20:28.234433 13 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0420 14:20:28.234449 13 predicates.go:121] 
  Logging pods the apiserver thinks is on node ier3chochiph-3 before test
  I0420 14:20:28.255121 13 predicates.go:887] coredns-7db6d8ff4d-swp2x from kube-system started at 2024-04-20 14:11:30 +0000 UTC (1 container statuses recorded)
  I0420 14:20:28.255793 13 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0420 14:20:28.255978 13 predicates.go:887] kube-flannel-ds-d58p9 from kube-system started at 2024-04-20 14:11:30 +0000 UTC (1 container statuses recorded)
  I0420 14:20:28.256008 13 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0420 14:20:28.256479 13 predicates.go:887] kube-proxy-phg8k from kube-system started at 2024-04-20 14:11:31 +0000 UTC (1 container statuses recorded)
  I0420 14:20:28.259057 13 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0420 14:20:28.259405 13 predicates.go:887] sonobuoy-e2e-job-6517e7bc161d48e3 from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  I0420 14:20:28.259541 13 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0420 14:20:28.259770 13 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0420 14:20:28.259796 13 predicates.go:887] sonobuoy-systemd-logs-daemon-set-a313837afcd448ea-2vtbv from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  I0420 14:20:28.259811 13 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0420 14:20:28.260095 13 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/20/24 14:20:28.26
  E0420 14:20:29.094064      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:30.094888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/20/24 14:20:30.34
  STEP: Trying to apply a random label on the found node. @ 04/20/24 14:20:30.372
  STEP: verifying the node has the label kubernetes.io/e2e-e5ccf2bd-d1cc-45e0-9b9e-20f313aaaa2f 42 @ 04/20/24 14:20:30.397
  STEP: Trying to relaunch the pod, now with labels. @ 04/20/24 14:20:30.409
  E0420 14:20:31.094888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:32.095462      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-e5ccf2bd-d1cc-45e0-9b9e-20f313aaaa2f off the node ier3chochiph-3 @ 04/20/24 14:20:32.459
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-e5ccf2bd-d1cc-45e0-9b9e-20f313aaaa2f @ 04/20/24 14:20:32.477
  I0420 14:20:32.487017 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2409" for this suite. @ 04/20/24 14:20:32.508
• [4.532 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 04/20/24 14:20:32.534
  I0420 14:20:32.534458 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename subpath @ 04/20/24 14:20:32.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:20:32.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:20:32.575
  STEP: Setting up data @ 04/20/24 14:20:32.582
  STEP: Creating pod pod-subpath-test-configmap-p5z7 @ 04/20/24 14:20:32.601
  STEP: Creating a pod to test atomic-volume-subpath @ 04/20/24 14:20:32.602
  E0420 14:20:33.095631      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:34.096335      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:35.099630      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:36.096859      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:37.097301      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:38.097856      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:39.098991      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:40.099802      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:41.100422      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:42.100872      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:43.101037      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:44.102048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:45.102760      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:46.103316      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:47.104170      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:48.105099      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:49.105377      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:50.106423      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:51.107285      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:52.108225      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:53.109420      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:54.109635      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:20:54.754
  I0420 14:20:54.767256 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-subpath-test-configmap-p5z7 container test-container-subpath-configmap-p5z7: <nil>
  STEP: delete the pod @ 04/20/24 14:20:54.813
  STEP: Deleting pod pod-subpath-test-configmap-p5z7 @ 04/20/24 14:20:54.848
  I0420 14:20:54.849779 13 delete.go:62] Deleting pod "pod-subpath-test-configmap-p5z7" in namespace "subpath-6058"
  I0420 14:20:54.855397 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6058" for this suite. @ 04/20/24 14:20:54.864
• [22.351 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 04/20/24 14:20:54.885
  I0420 14:20:54.886610 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:20:54.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:20:54.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:20:54.924
  STEP: Setting up server cert @ 04/20/24 14:20:54.974
  E0420 14:20:55.111093      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:20:55.648
  STEP: Deploying the webhook pod @ 04/20/24 14:20:55.662
  STEP: Wait for the deployment to be ready @ 04/20/24 14:20:55.683
  I0420 14:20:55.700800 13 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 14:20:56.112108      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:20:57.111448      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 14:20:57.72
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:20:57.74
  E0420 14:20:58.112595      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:20:58.741822 13 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0420 14:20:58.754512 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 14:20:59.113547      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5460-crds.webhook.example.com via the AdmissionRegistration API @ 04/20/24 14:20:59.274
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/20/24 14:20:59.31
  E0420 14:21:00.113762      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:01.114607      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:21:02.100498 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9564" for this suite. @ 04/20/24 14:21:02.11
  E0420 14:21:02.114885      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-markers-6225" for this suite. @ 04/20/24 14:21:02.119
• [7.246 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 04/20/24 14:21:02.133
  I0420 14:21:02.133846 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename disruption @ 04/20/24 14:21:02.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:21:02.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:21:02.168
  STEP: Waiting for the pdb to be processed @ 04/20/24 14:21:02.186
  E0420 14:21:03.115933      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:04.116491      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 04/20/24 14:21:04.193
  STEP: Waiting for all pods to be running @ 04/20/24 14:21:04.217
  I0420 14:21:04.227924 13 disruption.go:578] running pods: 0 < 1
  E0420 14:21:05.116822      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:06.117561      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 04/20/24 14:21:06.226
  STEP: Waiting for the pdb to be processed @ 04/20/24 14:21:06.245
  STEP: Patching PodDisruptionBudget status @ 04/20/24 14:21:06.26
  STEP: Waiting for the pdb to be processed @ 04/20/24 14:21:06.279
  I0420 14:21:06.285404 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2343" for this suite. @ 04/20/24 14:21:06.296
• [4.176 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 04/20/24 14:21:06.308
  I0420 14:21:06.308838 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename dns @ 04/20/24 14:21:06.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:21:06.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:21:06.374
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 04/20/24 14:21:06.38
  I0420 14:21:06.400313 13 dns.go:419] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-8265  0e2a5dbb-20e7-4f68-83aa-56a00b7d8103 50855 0 2024-04-20 14:21:06 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-04-20 14:21:06 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-mjgrk,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mjgrk,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0420 14:21:07.119258      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:08.119913      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 04/20/24 14:21:08.418
  I0420 14:21:08.419003 13 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-8265 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 14:21:08.419084 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 14:21:08.421247 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 14:21:08.421434 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-8265/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 04/20/24 14:21:08.544
  I0420 14:21:08.544139 13 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-8265 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 14:21:08.544175 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 14:21:08.548342 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 14:21:08.549052 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-8265/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0420 14:21:08.661283 13 dns.go:421] Deleting pod test-dns-nameservers...
  I0420 14:21:08.682285 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8265" for this suite. @ 04/20/24 14:21:08.699
• [2.406 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 04/20/24 14:21:08.715
  I0420 14:21:08.715129 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 14:21:08.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:21:08.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:21:08.755
  E0420 14:21:09.120699      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:10.121807      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 04/20/24 14:21:10.799
  I0420 14:21:10.799781 13 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7167 pod-service-account-422a5624-ce04-4075-8d33-50c016085159 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 04/20/24 14:21:11.111
  I0420 14:21:11.111896 13 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7167 pod-service-account-422a5624-ce04-4075-8d33-50c016085159 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  E0420 14:21:11.123040      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 04/20/24 14:21:11.378
  I0420 14:21:11.379572 13 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7167 pod-service-account-422a5624-ce04-4075-8d33-50c016085159 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0420 14:21:11.673374 13 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-7167"
  I0420 14:21:11.677598 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7167" for this suite. @ 04/20/24 14:21:11.686
• [2.990 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 04/20/24 14:21:11.705
  I0420 14:21:11.705618 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:21:11.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:21:11.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:21:11.752
  STEP: Setting up server cert @ 04/20/24 14:21:11.829
  E0420 14:21:12.124010      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:21:12.486
  STEP: Deploying the webhook pod @ 04/20/24 14:21:12.494
  STEP: Wait for the deployment to be ready @ 04/20/24 14:21:12.518
  I0420 14:21:12.533393 13 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 14:21:13.124164      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:14.124412      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 14:21:14.55
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:21:14.572
  E0420 14:21:15.124680      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:21:15.573667 13 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 04/20/24 14:21:15.589
  STEP: create a pod that should be updated by the webhook @ 04/20/24 14:21:15.628
  I0420 14:21:15.863456 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1517" for this suite. @ 04/20/24 14:21:15.873
  STEP: Destroying namespace "webhook-markers-655" for this suite. @ 04/20/24 14:21:15.886
• [4.193 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 04/20/24 14:21:15.899
  I0420 14:21:15.899272 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 14:21:15.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:21:15.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:21:15.952
  STEP: Creating service test in namespace statefulset-1030 @ 04/20/24 14:21:15.961
  STEP: Creating a new StatefulSet @ 04/20/24 14:21:15.976
  I0420 14:21:16.008691 13 wait.go:40] Found 0 stateful pods, waiting for 3
  E0420 14:21:16.126418      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:17.125957      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:18.127101      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:19.128015      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:20.128447      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:21.128870      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:22.136758      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:23.129899      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:24.131225      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:25.131265      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:21:26.017931 13 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0420 14:21:26.018152 13 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0420 14:21:26.018223 13 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/20/24 14:21:26.051
  I0420 14:21:26.087423 13 statefulset.go:2241] Updating stateful set ss2
  STEP: Creating a new revision @ 04/20/24 14:21:26.087
  E0420 14:21:26.131929      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:27.132101      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:28.133129      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:29.133630      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:30.133822      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:31.134577      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:32.134842      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:33.141161      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:34.136039      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:35.136350      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 04/20/24 14:21:36.119
  STEP: Performing a canary update @ 04/20/24 14:21:36.12
  E0420 14:21:36.139400      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:21:36.155305 13 statefulset.go:2241] Updating stateful set ss2
  I0420 14:21:36.181793 13 wait.go:74] Waiting for Pod statefulset-1030/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0420 14:21:37.137408      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:38.138074      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:39.138415      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:40.138549      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:41.139208      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:42.147140      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:43.146595      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:44.147114      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:45.147938      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:46.148143      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 04/20/24 14:21:46.175
  I0420 14:21:46.281179 13 wait.go:40] Found 1 stateful pods, waiting for 3
  E0420 14:21:47.154108      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:48.150951      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:49.151663      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:50.151914      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:51.152060      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:52.152872      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:53.153039      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:54.153564      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:55.154189      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:56.154263      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:21:56.278455 13 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0420 14:21:56.278541 13 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0420 14:21:56.278564 13 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 04/20/24 14:21:56.291
  I0420 14:21:56.318388 13 statefulset.go:2241] Updating stateful set ss2
  I0420 14:21:56.333895 13 wait.go:74] Waiting for Pod statefulset-1030/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0420 14:21:57.161114      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:58.156176      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:21:59.156668      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:00.157259      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:01.157661      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:02.158439      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:03.159526      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:04.159511      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:05.160041      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:06.160019      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:22:06.367579 13 statefulset.go:2241] Updating stateful set ss2
  I0420 14:22:06.399874 13 wait.go:56] Waiting for StatefulSet statefulset-1030/ss2 to complete update
  I0420 14:22:06.399977 13 wait.go:63] Waiting for Pod statefulset-1030/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0420 14:22:07.160221      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:08.161518      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:09.162245      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:10.162447      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:11.162842      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:12.163074      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:13.163431      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:14.163534      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:15.163866      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:16.164055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:22:16.384685 13 wait.go:56] Waiting for StatefulSet statefulset-1030/ss2 to complete update
  E0420 14:22:17.165234      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:18.165763      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:19.165946      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:20.166380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:21.166496      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:22.167186      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:23.167127      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:24.167619      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:25.168081      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:26.168656      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:22:26.384029 13 statefulset.go:135] Deleting all statefulset in ns statefulset-1030
  I0420 14:22:26.389923 13 rest.go:150] Scaling statefulset ss2 to 0
  E0420 14:22:27.169655      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:28.169761      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:29.170080      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:30.170903      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:31.171396      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:32.171970      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:33.172903      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:34.173039      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:35.173516      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:36.174283      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:22:36.413392 13 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0420 14:22:36.419297 13 rest.go:88] Deleting statefulset ss2
  I0420 14:22:36.443623 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1030" for this suite. @ 04/20/24 14:22:36.454
• [80.570 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 04/20/24 14:22:36.469
  I0420 14:22:36.469497 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename configmap @ 04/20/24 14:22:36.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:22:36.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:22:36.512
  STEP: Creating configMap with name configmap-test-upd-b213b875-a731-48eb-ba97-41b8e9d5ddf1 @ 04/20/24 14:22:36.534
  STEP: Creating the pod @ 04/20/24 14:22:36.549
  E0420 14:22:37.175177      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:38.175967      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-b213b875-a731-48eb-ba97-41b8e9d5ddf1 @ 04/20/24 14:22:38.621
  STEP: waiting to observe update in volume @ 04/20/24 14:22:38.631
  E0420 14:22:39.176407      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:40.176412      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:41.176767      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:42.178078      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:43.178503      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:44.178786      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:45.178961      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:46.179458      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:47.179812      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:48.180007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:49.181067      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:50.182366      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:51.182890      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:52.183897      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:53.184086      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:54.185023      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:55.187337      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:56.185968      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:57.186648      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:58.187655      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:22:59.187705      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:00.189337      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:01.189052      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:02.189973      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:03.190230      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:04.193231      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:05.193481      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:06.193815      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:07.194435      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:08.194656      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:09.195165      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:10.195646      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:11.196078      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:12.197085      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:13.197838      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:14.198174      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:15.198278      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:16.198390      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:17.199113      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:18.199282      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:19.199815      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:20.200049      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:21.200545      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:22.200832      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:23.201150      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:24.201579      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:25.202019      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:26.202859      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:27.203416      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:28.204613      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:29.205220      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:30.205917      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:31.206606      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:32.206866      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:33.208030      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:34.208092      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:35.209278      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:36.210700      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:37.211292      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:38.212369      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:39.213527      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:40.212822      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:41.213105      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:42.214075      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:43.215165      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:44.215319      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:45.215775      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:46.216528      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:47.217153      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:48.217320      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:49.218163      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:50.219375      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:51.219080      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:52.219312      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:53.220167      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:23:53.388020 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2067" for this suite. @ 04/20/24 14:23:53.397
• [76.943 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 04/20/24 14:23:53.415
  I0420 14:23:53.415414 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename containers @ 04/20/24 14:23:53.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:23:53.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:23:53.462
  STEP: Creating a pod to test override command @ 04/20/24 14:23:53.469
  E0420 14:23:54.220242      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:55.221145      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:56.239347      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:57.228107      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:23:57.518
  I0420 14:23:57.525296 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod client-containers-1000ef39-c5a7-4af0-87a7-d88b6647bfb1 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:23:57.542
  I0420 14:23:57.575143 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-518" for this suite. @ 04/20/24 14:23:57.588
• [4.190 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 04/20/24 14:23:57.605
  I0420 14:23:57.605300 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename security-context-test @ 04/20/24 14:23:57.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:23:57.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:23:57.656
  E0420 14:23:58.228501      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:23:59.229079      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:00.229853      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:01.230169      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:02.231495      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:03.230797      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:04.230864      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:05.231037      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:05.736612 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2181" for this suite. @ 04/20/24 14:24:05.746
• [8.155 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1284
  STEP: Creating a kubernetes client @ 04/20/24 14:24:05.76
  I0420 14:24:05.760855 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename services @ 04/20/24 14:24:05.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:24:05.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:24:05.801
  STEP: creating service nodeport-test with type=NodePort in namespace services-6243 @ 04/20/24 14:24:05.806
  STEP: creating replication controller nodeport-test in namespace services-6243 @ 04/20/24 14:24:05.845
  I0420 14:24:05.869302      13 runners.go:198] Created replication controller with name: nodeport-test, namespace: services-6243, replica count: 2
  E0420 14:24:06.231820      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:07.232322      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:08.232412      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:08.921663      13 runners.go:198] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0420 14:24:08.921878 13 resource.go:361] Creating new exec pod
  E0420 14:24:09.232623      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:10.233134      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:11.234223      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:11.975232 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-6243 exec execpod8kglw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  E0420 14:24:12.235396      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:12.418619 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0420 14:24:12.418739 13 builder.go:147] stdout: ""
  I0420 14:24:12.976440 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-6243 exec execpod8kglw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0420 14:24:13.224139 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0420 14:24:13.224268 13 builder.go:147] stdout: "nodeport-test-2vr7j"
  I0420 14:24:13.225282 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-6243 exec execpod8kglw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.6.239 80'
  E0420 14:24:13.236384      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:13.475282 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.6.239 80\nConnection to 10.233.6.239 80 port [tcp/http] succeeded!\n"
  I0420 14:24:13.475427 13 builder.go:147] stdout: ""
  I0420 14:24:14.224959 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-6243 exec execpod8kglw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.6.239 80'
  E0420 14:24:14.238987      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:14.475455 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.6.239 80\nConnection to 10.233.6.239 80 port [tcp/http] succeeded!\n"
  I0420 14:24:14.475956 13 builder.go:147] stdout: "nodeport-test-2vr7j"
  I0420 14:24:14.476948 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-6243 exec execpod8kglw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.103 30775'
  I0420 14:24:14.735152 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.103 30775\nConnection to 192.168.121.103 30775 port [tcp/*] succeeded!\n"
  I0420 14:24:14.735426 13 builder.go:147] stdout: "nodeport-test-2vr7j"
  I0420 14:24:14.736015 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-6243 exec execpod8kglw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.188 30775'
  I0420 14:24:15.012799 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.188 30775\nConnection to 192.168.121.188 30775 port [tcp/*] succeeded!\n"
  I0420 14:24:15.012959 13 builder.go:147] stdout: ""
  E0420 14:24:15.239951      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:15.736669 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-6243 exec execpod8kglw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.188 30775'
  I0420 14:24:15.971890 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.188 30775\nConnection to 192.168.121.188 30775 port [tcp/*] succeeded!\n"
  I0420 14:24:15.971976 13 builder.go:147] stdout: "nodeport-test-2vr7j"
  I0420 14:24:15.972143 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6243" for this suite. @ 04/20/24 14:24:15.98
• [10.232 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 04/20/24 14:24:15.995
  I0420 14:24:15.995594 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:24:15.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:24:16.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:24:16.034
  STEP: Creating the pod @ 04/20/24 14:24:16.039
  E0420 14:24:16.240660      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:17.241052      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:18.241888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:18.610048 13 pod_client.go:141] Successfully updated pod "annotationupdateaf461abd-3c0b-493c-a900-29a72b49bb90"
  E0420 14:24:19.243164      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:20.242576      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:21.243939      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:22.244539      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:22.661244 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8991" for this suite. @ 04/20/24 14:24:22.674
• [6.693 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 04/20/24 14:24:22.697
  I0420 14:24:22.697046 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 14:24:22.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:24:22.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:24:22.772
  I0420 14:24:22.823677 13 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 04/20/24 14:24:22.835
  I0420 14:24:22.840457 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0420 14:24:22.840521 13 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 04/20/24 14:24:22.84
  I0420 14:24:22.885276 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0420 14:24:22.885354 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  E0420 14:24:23.245051      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:23.907674 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0420 14:24:23.907782 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  E0420 14:24:24.245885      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:24.883256 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0420 14:24:24.883338 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  E0420 14:24:25.246584      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:25.886662 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0420 14:24:25.886792 13 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 04/20/24 14:24:25.894
  I0420 14:24:25.931448 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0420 14:24:25.931677 13 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0420 14:24:26.247629      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:26.936010 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0420 14:24:26.936093 13 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 04/20/24 14:24:26.936
  I0420 14:24:26.957089 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0420 14:24:26.957168 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  E0420 14:24:27.247994      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:27.964395 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0420 14:24:27.964490 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  E0420 14:24:28.248436      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:28.959542 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0420 14:24:28.959697 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  E0420 14:24:29.248762      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:29.958378 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0420 14:24:29.958496 13 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 14:24:29.972
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-771, will wait for the garbage collector to delete the pods @ 04/20/24 14:24:29.973
  I0420 14:24:30.045104 13 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 13.715846ms
  I0420 14:24:30.145469 13 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.358738ms
  E0420 14:24:30.249527      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:31.249529      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:32.251044      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:32.357857 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0420 14:24:32.357966 13 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0420 14:24:32.367826 13 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"51914"},"items":null}

  I0420 14:24:32.383401 13 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"51914"},"items":null}

  I0420 14:24:32.442265 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-771" for this suite. @ 04/20/24 14:24:32.451
• [9.771 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:397
  STEP: Creating a kubernetes client @ 04/20/24 14:24:32.472
  I0420 14:24:32.472414 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:24:32.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:24:32.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:24:32.525
  STEP: creating all guestbook components @ 04/20/24 14:24:32.535
  I0420 14:24:32.535912 13 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0420 14:24:32.536837 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-123 create -f -'
  I0420 14:24:32.904957 13 builder.go:146] stderr: ""
  I0420 14:24:32.905048 13 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0420 14:24:32.905149 13 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0420 14:24:32.906133 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-123 create -f -'
  I0420 14:24:33.239341 13 builder.go:146] stderr: ""
  I0420 14:24:33.239433 13 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0420 14:24:33.239575 13 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0420 14:24:33.240265 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-123 create -f -'
  E0420 14:24:33.250885      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:33.572844 13 builder.go:146] stderr: ""
  I0420 14:24:33.572956 13 builder.go:147] stdout: "service/frontend created\n"
  I0420 14:24:33.573280 13 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0420 14:24:33.574931 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-123 create -f -'
  I0420 14:24:33.893463 13 builder.go:146] stderr: ""
  I0420 14:24:33.893660 13 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0420 14:24:33.894544 13 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0420 14:24:33.896245 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-123 create -f -'
  I0420 14:24:34.199056 13 builder.go:146] stderr: ""
  I0420 14:24:34.199385 13 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0420 14:24:34.199644 13 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0420 14:24:34.202798 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-123 create -f -'
  E0420 14:24:34.252023      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:34.555001 13 builder.go:146] stderr: ""
  I0420 14:24:34.555119 13 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 04/20/24 14:24:34.555
  I0420 14:24:34.555362 13 kubectl.go:2271] Waiting for all frontend pods to be Running.
  E0420 14:24:35.252649      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:36.252766      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:37.253336      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:38.253688      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:39.254335      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:39.606445 13 kubectl.go:2275] Waiting for frontend to serve content.
  I0420 14:24:39.636309 13 kubectl.go:2280] Trying to add a new entry to the guestbook.
  I0420 14:24:39.663459 13 kubectl.go:2285] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 04/20/24 14:24:39.682
  I0420 14:24:39.683013 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-123 delete --grace-period=0 --force -f -'
  I0420 14:24:39.914403 13 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0420 14:24:39.914485 13 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 04/20/24 14:24:39.914
  I0420 14:24:39.915169 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-123 delete --grace-period=0 --force -f -'
  I0420 14:24:40.122490 13 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0420 14:24:40.122607 13 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/20/24 14:24:40.122
  I0420 14:24:40.123369 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-123 delete --grace-period=0 --force -f -'
  E0420 14:24:40.256040      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:40.332886 13 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0420 14:24:40.332979 13 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/20/24 14:24:40.334
  I0420 14:24:40.335129 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-123 delete --grace-period=0 --force -f -'
  I0420 14:24:40.495836 13 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0420 14:24:40.495940 13 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/20/24 14:24:40.496
  I0420 14:24:40.496613 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-123 delete --grace-period=0 --force -f -'
  I0420 14:24:40.798221 13 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0420 14:24:40.798304 13 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/20/24 14:24:40.798
  I0420 14:24:40.799311 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-123 delete --grace-period=0 --force -f -'
  I0420 14:24:41.076521 13 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0420 14:24:41.076609 13 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0420 14:24:41.076867 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-123" for this suite. @ 04/20/24 14:24:41.091
• [8.646 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 04/20/24 14:24:41.126
  I0420 14:24:41.126755 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 14:24:41.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:24:41.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:24:41.235
  E0420 14:24:41.257398      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating simple DaemonSet "daemon-set" @ 04/20/24 14:24:41.399
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 14:24:41.431
  I0420 14:24:41.464309 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0420 14:24:41.464394 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  E0420 14:24:42.258142      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:42.449153 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0420 14:24:42.449232 13 fixtures.go:130] Node ier3chochiph-2 is running 0 daemon pod, expected 1
  E0420 14:24:43.259100      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:43.446593 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0420 14:24:43.446686 13 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 04/20/24 14:24:43.452
  I0420 14:24:43.485900 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0420 14:24:43.485993 13 fixtures.go:130] Node ier3chochiph-3 is running 0 daemon pod, expected 1
  E0420 14:24:44.259227      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:44.490612 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0420 14:24:44.490695 13 fixtures.go:130] Node ier3chochiph-3 is running 0 daemon pod, expected 1
  E0420 14:24:45.259868      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:45.490326 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0420 14:24:45.490404 13 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 14:24:45.496
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4755, will wait for the garbage collector to delete the pods @ 04/20/24 14:24:45.496
  I0420 14:24:45.564173 13 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 11.530521ms
  I0420 14:24:45.664902 13 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.680967ms
  E0420 14:24:46.261151      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:24:47.172510 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0420 14:24:47.172609 13 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0420 14:24:47.179759 13 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"52243"},"items":null}

  I0420 14:24:47.185631 13 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"52244"},"items":null}

  I0420 14:24:47.213521 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4755" for this suite. @ 04/20/24 14:24:47.22
• [6.106 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 04/20/24 14:24:47.238
  I0420 14:24:47.238705 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename sched-preemption @ 04/20/24 14:24:47.241
  E0420 14:24:47.261544      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:24:47.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:24:47.277
  I0420 14:24:47.318851 13 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0420 14:24:48.262338      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:49.263620      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:50.263962      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:51.265100      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:52.266563      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:53.267125      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:54.268680      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:55.272645      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:56.269139      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:57.269273      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:58.270101      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:24:59.270905      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:00.271130      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:01.271140      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:02.271753      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:03.272257      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:04.273295      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:05.273536      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:06.273663      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:07.274636      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:08.274939      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:09.275586      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:10.275702      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:11.276007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:12.276228      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:13.277130      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:14.278374      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:15.278399      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:16.279002      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:17.279525      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:18.280474      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:19.281003      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:20.281583      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:21.281826      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:22.288049      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:23.284924      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:24.285652      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:25.286415      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:26.286660      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:27.287316      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:28.287605      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:29.288114      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:30.288425      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:31.289210      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:32.289540      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:33.290645      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:34.290910      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:35.291299      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:36.291972      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:37.292048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:38.292923      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:39.293627      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:40.294253      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:41.295649      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:42.294637      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:43.295184      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:44.295231      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:45.295693      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:46.296131      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:47.296383      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:25:47.330028 13 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/20/24 14:25:47.337
  I0420 14:25:47.406613 13 preemption.go:269] Created pod: pod0-0-sched-preemption-low-priority
  I0420 14:25:47.430246 13 preemption.go:269] Created pod: pod0-1-sched-preemption-medium-priority
  I0420 14:25:47.487599 13 preemption.go:269] Created pod: pod1-0-sched-preemption-medium-priority
  I0420 14:25:47.499104 13 preemption.go:269] Created pod: pod1-1-sched-preemption-medium-priority
  I0420 14:25:47.545669 13 preemption.go:269] Created pod: pod2-0-sched-preemption-medium-priority
  I0420 14:25:47.569369 13 preemption.go:269] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/20/24 14:25:47.569
  E0420 14:25:48.297285      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:49.297504      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 04/20/24 14:25:49.639
  E0420 14:25:50.297689      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:51.298227      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:52.299142      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:53.300005      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:25:53.812822 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4793" for this suite. @ 04/20/24 14:25:53.82
• [66.593 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 04/20/24 14:25:53.832
  I0420 14:25:53.832151 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 14:25:53.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:25:53.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:25:53.876
  STEP: Creating pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792 @ 04/20/24 14:25:53.88
  E0420 14:25:54.300971      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:55.301297      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 14:25:55.906
  I0420 14:25:55.910687 13 container_probe.go:1749] Initial restart count of pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 is 0
  I0420 14:25:55.918932 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:25:56.301347      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:57.301940      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:25:57.927106 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:25:58.302700      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:25:59.303299      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:25:59.935496 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:00.303636      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:01.303906      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:01.942150 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:02.304750      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:03.304988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:03.948901 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:04.305235      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:05.305681      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:05.960293 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:06.305801      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:07.305978      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:07.967463 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:08.306146      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:09.306355      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:09.975193 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:10.306905      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:11.307032      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:11.982825 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:12.307877      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:13.308028      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:13.990144 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:14.309021      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:15.309479      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:15.999191 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  I0420 14:26:15.999295 13 container_probe.go:1763] Restart count of pod container-probe-9792/liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 is now 1 (20.088494867s elapsed)
  E0420 14:26:16.309778      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:17.309884      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:18.005295 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:18.310930      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:19.311032      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:20.011987 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:20.311288      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:21.312479      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:22.019279 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:22.312526      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:23.313646      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:24.026272 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:24.314566      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:25.315336      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:26.032988 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:26.315537      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:27.315551      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:28.039560 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:28.315826      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:29.316314      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:30.047194 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:30.317377      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:31.317843      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:32.053107 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:32.318490      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:33.319209      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:34.059408 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:34.320382      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:35.320832      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:36.068696 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  I0420 14:26:36.068813 13 container_probe.go:1763] Restart count of pod container-probe-9792/liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 is now 2 (40.158032369s elapsed)
  E0420 14:26:36.321048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:37.321505      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:38.076306 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:38.322479      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:39.323594      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:40.082013 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:40.324385      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:41.324949      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:42.089528 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:42.325145      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:43.325287      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:44.097459 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:44.326264      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:45.326416      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:46.105297 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:46.327085      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:47.327240      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:48.113627 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:48.327526      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:49.328054      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:50.121000 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:50.329068      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:51.329339      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:52.128165 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:52.329422      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:53.330536      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:54.136983 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:54.332368      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:55.332356      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:56.143516 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  I0420 14:26:56.143590 13 container_probe.go:1763] Restart count of pod container-probe-9792/liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 is now 3 (1m0.232808751s elapsed)
  E0420 14:26:56.333049      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:57.333485      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:26:58.149447 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:26:58.333756      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:26:59.334555      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:00.156398 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:00.334521      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:01.335565      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:02.163257 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:02.336556      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:03.337608      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:04.171510 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:04.338007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:05.338106      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:06.183028 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:06.338554      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:07.339052      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:08.194096 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:08.339566      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:09.340292      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:10.201766 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:10.340859      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:11.341170      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:12.208625 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:12.341477      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:13.341593      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:14.214956 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:14.342535      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:15.342655      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:16.222979 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  I0420 14:27:16.223100 13 container_probe.go:1763] Restart count of pod container-probe-9792/liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 is now 4 (1m20.312299738s elapsed)
  E0420 14:27:16.343276      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:17.343623      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:18.230498 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:18.345026      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:19.345198      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:20.237766 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:20.345838      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:21.346062      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:22.243405 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:22.346955      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:23.346982      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:24.250348 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:24.347437      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:25.347649      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:26.258901 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:26.348532      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:27.348959      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:28.267422 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:28.349599      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:29.349988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:30.274473 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:30.350456      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:31.351156      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:32.283794 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:32.352390      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:33.353243      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:34.290353 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:34.353905      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:35.354465      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:36.296814 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:36.355606      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:37.355225      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:38.305155 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:38.356084      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:39.356650      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:40.313381 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:40.357641      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:41.357863      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:42.320387 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:42.358470      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:43.358773      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:44.328302 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:44.359561      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:45.359958      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:46.334987 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:46.360048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:47.360682      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:48.342111 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:48.360693      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:49.360863      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:50.348880 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:50.361743      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:51.362003      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:52.358020 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:52.362896      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:53.363807      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:54.364628      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:54.367080 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:55.364996      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:56.365037      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:56.373941 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:57.365837      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:27:58.365786      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:27:58.381137 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:27:59.365939      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:00.366638      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:28:00.388108 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:28:01.366808      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:02.367071      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:28:02.396474 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:28:03.367403      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:04.368076      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:28:04.402873 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:28:05.368798      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:06.369781      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:28:06.411196 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:28:07.370032      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:08.370889      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:28:08.419059 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:28:09.372782      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:10.372693      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:28:10.428040 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:28:11.371644      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:12.372141      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:28:12.434332 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:28:13.372501      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:14.372671      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:28:14.440927 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:28:15.372879      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:16.373622      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:28:16.448598 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:28:17.374605      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:18.374286      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:28:18.456876 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:28:19.375306      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:20.375635      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:28:20.464188 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:28:21.375790      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:22.376033      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:28:22.470816 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:28:23.377101      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:24.377831      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:28:24.479946 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  E0420 14:28:25.378863      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:26.379186      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:28:26.489239 13 container_probe.go:1759] Get pod liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 in namespace container-probe-9792
  I0420 14:28:26.489399 13 container_probe.go:1763] Restart count of pod container-probe-9792/liveness-838a0d8c-e7c9-411f-a2fd-79c940d75729 is now 5 (2m30.578582578s elapsed)
  STEP: deleting the pod @ 04/20/24 14:28:26.49
  I0420 14:28:26.519003 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9792" for this suite. @ 04/20/24 14:28:26.535
• [152.719 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 04/20/24 14:28:26.554
  I0420 14:28:26.554660 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:28:26.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:28:26.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:28:26.6
  STEP: Setting up server cert @ 04/20/24 14:28:26.649
  E0420 14:28:27.379943      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:28.381112      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:28:28.742
  STEP: Deploying the webhook pod @ 04/20/24 14:28:28.758
  STEP: Wait for the deployment to be ready @ 04/20/24 14:28:28.784
  I0420 14:28:28.798578 13 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0420 14:28:29.381245      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:30.381703      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 14:28:30.82
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:28:30.839
  E0420 14:28:31.381970      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:28:31.840163 13 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 04/20/24 14:28:31.853
  I0420 14:28:31.968318 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6619" for this suite. @ 04/20/24 14:28:31.985
  STEP: Destroying namespace "webhook-markers-2706" for this suite. @ 04/20/24 14:28:32.008
• [5.474 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 04/20/24 14:28:32.028
  I0420 14:28:32.028614 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 14:28:32.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:28:32.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:28:32.072
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/20/24 14:28:32.079
  E0420 14:28:32.381992      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:33.382934      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:34.383884      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:35.384690      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:28:36.132
  I0420 14:28:36.138909 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-e04f46ba-35b8-4230-9d73-56d7b3409dfb container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:28:36.17
  I0420 14:28:36.213441 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2212" for this suite. @ 04/20/24 14:28:36.222
• [4.209 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 04/20/24 14:28:36.239
  I0420 14:28:36.239621 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename security-context @ 04/20/24 14:28:36.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:28:36.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:28:36.282
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/20/24 14:28:36.288
  E0420 14:28:36.385079      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:37.385409      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:38.385415      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:39.385836      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:28:40.333
  I0420 14:28:40.339172 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod security-context-4c0d41c6-2167-4a88-8106-27a7d452f3ca container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:28:40.35
  I0420 14:28:40.382600 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0420 14:28:40.386808      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "security-context-5149" for this suite. @ 04/20/24 14:28:40.39
• [4.165 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 04/20/24 14:28:40.404
  I0420 14:28:40.404772 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename subpath @ 04/20/24 14:28:40.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:28:40.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:28:40.451
  STEP: Setting up data @ 04/20/24 14:28:40.468
  STEP: Creating pod pod-subpath-test-downwardapi-wnfb @ 04/20/24 14:28:40.492
  STEP: Creating a pod to test atomic-volume-subpath @ 04/20/24 14:28:40.492
  E0420 14:28:41.387260      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:42.387576      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:43.388246      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:44.388378      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:45.389333      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:46.390379      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:47.391136      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:48.391308      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:49.391849      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:50.392604      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:51.392898      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:52.393955      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:53.394112      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:54.394413      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:55.394633      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:56.394816      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:57.394994      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:58.396093      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:28:59.395755      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:00.396287      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:01.396987      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:02.397158      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:03.397632      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:04.397658      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:29:04.629
  I0420 14:29:04.635390 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-subpath-test-downwardapi-wnfb container test-container-subpath-downwardapi-wnfb: <nil>
  STEP: delete the pod @ 04/20/24 14:29:04.65
  STEP: Deleting pod pod-subpath-test-downwardapi-wnfb @ 04/20/24 14:29:04.679
  I0420 14:29:04.679414 13 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-wnfb" in namespace "subpath-9296"
  I0420 14:29:04.684305 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9296" for this suite. @ 04/20/24 14:29:04.693
• [24.304 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 04/20/24 14:29:04.711
  I0420 14:29:04.711925 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 14:29:04.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:29:04.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:29:04.757
  E0420 14:29:05.398694      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:06.399633      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:07.399989      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:08.401036      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:09.400970      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:10.401424      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:11.402547      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:12.402806      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:13.403789      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:14.404163      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:15.404566      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:16.405439      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:17.407907      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:18.407166      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:19.407798      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:20.408901      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:21.409976      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 04/20/24 14:29:21.772
  E0420 14:29:22.410195      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:23.410562      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:24.410797      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:25.411167      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:26.411426      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/20/24 14:29:26.781
  STEP: Ensuring resource quota status is calculated @ 04/20/24 14:29:26.791
  E0420 14:29:27.412176      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:28.413285      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 04/20/24 14:29:28.807
  STEP: Ensuring resource quota status captures configMap creation @ 04/20/24 14:29:28.838
  E0420 14:29:29.413318      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:30.413794      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 04/20/24 14:29:30.848
  STEP: Ensuring resource quota status released usage @ 04/20/24 14:29:30.863
  E0420 14:29:31.414154      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:32.414371      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:29:32.873017 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4708" for this suite. @ 04/20/24 14:29:32.886
• [28.192 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:779
  STEP: Creating a kubernetes client @ 04/20/24 14:29:32.905
  I0420 14:29:32.906004 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename services @ 04/20/24 14:29:32.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:29:32.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:29:32.967
  I0420 14:29:32.985651 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6085" for this suite. @ 04/20/24 14:29:32.998
• [0.110 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 04/20/24 14:29:33.017
  I0420 14:29:33.017356 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:29:33.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:29:33.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:29:33.071
  STEP: Creating secret with name secret-test-c4b582b8-cb6c-4c82-866e-77e4d667de8c @ 04/20/24 14:29:33.081
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:29:33.091
  E0420 14:29:33.414371      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:34.415021      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:35.415940      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:36.416286      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:29:37.154
  I0420 14:29:37.163578 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-secrets-ef251e5f-913b-4d26-ae09-a6fa78ec09da container secret-env-test: <nil>
  STEP: delete the pod @ 04/20/24 14:29:37.183
  I0420 14:29:37.210988 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7186" for this suite. @ 04/20/24 14:29:37.219
• [4.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 04/20/24 14:29:37.248
  I0420 14:29:37.248511 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename containers @ 04/20/24 14:29:37.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:29:37.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:29:37.304
  STEP: Creating a pod to test override arguments @ 04/20/24 14:29:37.309
  E0420 14:29:37.417026      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:38.417311      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:39.418521      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:40.419327      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:29:41.352
  I0420 14:29:41.362136 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod client-containers-3cc45e26-df7c-4f45-a495-6ebd15cad0b7 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:29:41.381
  I0420 14:29:41.417856 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0420 14:29:41.419618      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "containers-604" for this suite. @ 04/20/24 14:29:41.432
• [4.198 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 04/20/24 14:29:41.449
  I0420 14:29:41.449675 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename configmap @ 04/20/24 14:29:41.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:29:41.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:29:41.508
  STEP: Creating configMap configmap-9768/configmap-test-13cad66a-4aa1-4526-a62b-ff33a32ff73b @ 04/20/24 14:29:41.517
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:29:41.528
  E0420 14:29:42.419606      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:43.419922      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:29:43.562
  I0420 14:29:43.568852 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-configmaps-bec437ae-4ff9-4ab2-9d1c-377ef5ef4388 container env-test: <nil>
  STEP: delete the pod @ 04/20/24 14:29:43.58
  I0420 14:29:43.607659 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9768" for this suite. @ 04/20/24 14:29:43.615
• [2.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 04/20/24 14:29:43.628
  I0420 14:29:43.628966 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename init-container @ 04/20/24 14:29:43.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:29:43.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:29:43.667
  STEP: creating the pod @ 04/20/24 14:29:43.672
  I0420 14:29:43.672999 13 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0420 14:29:44.421114      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:45.421917      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:46.422607      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:47.423215      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:29:47.506200 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1139" for this suite. @ 04/20/24 14:29:47.515
• [3.900 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 04/20/24 14:29:47.531
  I0420 14:29:47.531486 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 14:29:47.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:29:47.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:29:47.575
  E0420 14:29:48.433426      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:49.423807      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:29:49.637425 13 delete.go:62] Deleting pod "var-expansion-84e164f6-d610-4cec-9c25-353a27715d83" in namespace "var-expansion-1170"
  I0420 14:29:49.653872 13 delete.go:70] Wait up to 5m0s for pod "var-expansion-84e164f6-d610-4cec-9c25-353a27715d83" to be fully deleted
  E0420 14:29:50.424231      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:51.425001      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:29:51.670447 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1170" for this suite. @ 04/20/24 14:29:51.683
• [4.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 04/20/24 14:29:51.704
  I0420 14:29:51.704445 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 14:29:51.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:29:51.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:29:51.752
  STEP: Creating pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642 @ 04/20/24 14:29:51.758
  E0420 14:29:52.426192      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:53.427155      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 14:29:53.797
  I0420 14:29:53.805401 13 container_probe.go:1749] Initial restart count of pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 is 0
  I0420 14:29:53.811009 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:29:54.427388      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:55.428147      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:29:55.819075 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:29:56.428296      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:57.429436      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:29:57.827293 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:29:58.428845      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:29:59.429486      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:29:59.836375 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:00.429573      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:01.429948      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:01.845633 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:02.430331      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:03.431345      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:03.856859 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:04.432384      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:05.432987      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:05.866282 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:06.433672      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:07.433554      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:07.875006 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:08.434011      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:09.434543      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:09.883890 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:10.435107      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:11.435559      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:11.894777 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:12.436697      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:13.437220      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:13.904023 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:14.437310      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:15.438018      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:15.915086 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:16.438929      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:17.439133      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:17.927171 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:18.440119      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:19.440466      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:19.937030 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:20.440669      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:21.440798      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:21.946352 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:22.441541      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:23.442420      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:23.954323 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:24.443379      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:25.443409      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:25.964407 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:26.444356      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:27.447342      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:27.971586 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:28.446759      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:29.447470      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:29.980250 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:30.447499      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:31.447856      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:31.989487 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:32.448058      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:33.448455      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:33.998368 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:34.448986      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:35.449763      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:36.006185 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:36.450758      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:37.453839      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:38.015320 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:38.451833      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:39.458750      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:40.026366 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:40.453203      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:41.453983      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:42.038175 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:42.454882      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:43.455113      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:44.046276 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:44.455860      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:45.456252      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:46.054932 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:46.457335      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:47.457377      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:48.063493 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:48.457801      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:49.457989      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:50.073069 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:50.458286      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:51.458958      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:52.088480 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:52.459873      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:53.460241      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:54.099796 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:54.461247      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:55.461568      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:56.109430 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:56.461801      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:57.462579      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:30:58.117327 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:30:58.462906      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:30:59.463701      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:00.127154 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:00.464555      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:01.465039      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:02.139815 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:02.466209      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:03.466531      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:04.149417 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:04.467644      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:05.468323      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:06.159230 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:06.468480      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:07.469032      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:08.167046 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:08.469240      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:09.469944      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:10.175870 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:10.470128      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:11.470790      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:12.188612 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:12.471950      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:13.474207      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:14.198208 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:14.474389      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:15.474781      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:16.208573 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:16.475766      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:17.476213      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:18.218782 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:18.476567      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:19.476981      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:20.228400 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:20.477201      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:21.477942      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:22.237319 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:22.477572      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:23.478056      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:24.255143 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:24.478268      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:25.480374      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:26.265192 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:26.480535      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:27.481333      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:28.273048 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:28.482338      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:29.482507      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:30.282012 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:30.483253      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:31.483906      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:32.293799 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:32.484677      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:33.485512      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:34.302138 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:34.486340      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:35.486436      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:36.312436 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:36.486554      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:37.486900      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:38.321604 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:38.487066      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:39.487212      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:40.330433 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:40.487899      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:41.489138      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:42.340567 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:42.489787      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:43.490063      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:44.349677 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:44.490264      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:45.490868      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:46.357071 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:46.491456      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:47.492282      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:48.372832 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:48.492928      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:49.496053      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:50.382484 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:50.497120      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:51.496973      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:52.393074 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:52.497975      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:53.499284      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:54.402045 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:54.499368      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:55.499590      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:56.412069 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:56.500568      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:57.501126      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:31:58.420676 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:31:58.501830      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:31:59.502313      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:00.430422 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:00.502776      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:01.503288      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:02.444636 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:02.504686      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:03.504674      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:04.454158 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:04.505354      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:05.506269      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:06.462622 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:06.506827      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:07.507377      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:08.472310 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:08.507605      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:09.508109      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:10.479205 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:10.508814      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:11.509215      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:12.490164 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:12.509259      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:13.509547      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:14.501365 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:14.510846      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:15.520115      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:16.513166      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:16.514824 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:17.513422      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:18.514414      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:18.523976 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:19.514644      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:20.515334      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:20.532962 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:21.516332      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:22.516975      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:22.544874 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:23.517272      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:24.517620      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:24.556849 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:25.517835      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:26.517996      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:26.565755 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:27.518985      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:28.518934      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:28.576188 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:29.519512      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:30.520192      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:30.586090 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:31.520509      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:32.521153      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:32.596610 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:33.522057      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:34.522271      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:34.606998 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:35.522516      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:36.523034      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:36.616882 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:37.523967      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:38.525061      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:38.625444 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:39.525068      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:40.525926      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:40.633151 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:41.526024      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:42.526244      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:42.644653 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:43.526805      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:44.527058      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:44.656870 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:45.527401      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:46.528104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:46.670938 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:47.529104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:48.529757      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:48.680773 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:49.529974      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:50.530769      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:50.729665 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:51.531358      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:52.532092      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:52.738655 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:53.533306      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:54.533552      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:54.769912 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:55.535007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:56.536455      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:56.781453 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:57.535942      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:32:58.536181      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:32:58.791017 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:32:59.537027      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:00.537550      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:00.800851 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:01.537963      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:02.538103      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:02.810445 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:03.538426      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:04.538970      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:04.822484 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:05.539043      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:06.539691      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:06.829240 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:07.539898      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:08.540215      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:08.842686 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:09.541316      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:10.544283      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:10.853438 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:11.544362      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:12.544323      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:12.864123 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:13.544415      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:14.545343      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:14.874633 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:15.545682      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:16.546412      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:16.885417 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:17.546680      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:18.547600      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:18.895367 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:19.547940      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:20.548494      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:20.909408 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:21.549292      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:22.550187      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:22.918408 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:23.551212      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:24.551834      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:24.930245 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:25.552850      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:26.553336      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:26.939986 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:27.554477      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:28.554360      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:28.949298 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:29.555172      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:30.555620      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:30.961420 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:31.556165      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:32.556953      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:32.969354 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:33.557178      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:34.557337      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:34.978483 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:35.558143      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:36.558859      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:36.986540 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:37.559107      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:38.559239      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:38.994529 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:39.560007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:40.561055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:41.002773 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:41.561642      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:42.561986      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:43.011159 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:43.562795      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:44.563381      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:45.020294 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:45.563492      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:46.564126      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:47.040204 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:47.564604      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:48.564943      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:49.047075 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:49.566077      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:50.566148      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:51.055186 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:51.567541      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:52.568093      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:33:53.065844 13 container_probe.go:1759] Get pod liveness-64758f65-689a-403d-9a6b-40eff234faf7 in namespace container-probe-8642
  E0420 14:33:53.569151      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:54.570360      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/20/24 14:33:55.068
  I0420 14:33:55.119588 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8642" for this suite. @ 04/20/24 14:33:55.134
• [243.465 seconds]
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 04/20/24 14:33:55.17
  I0420 14:33:55.171039 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename pods @ 04/20/24 14:33:55.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:55.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:55.223
  STEP: Create a pod @ 04/20/24 14:33:55.229
  E0420 14:33:55.571465      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:56.571801      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 04/20/24 14:33:57.276
  I0420 14:33:57.291673 13 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0420 14:33:57.293941 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6268" for this suite. @ 04/20/24 14:33:57.305
• [2.148 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 04/20/24 14:33:57.319
  I0420 14:33:57.319413 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 14:33:57.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:57.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:33:57.366
  STEP: Creating a test namespace @ 04/20/24 14:33:57.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:33:57.417
  STEP: Creating a service in the namespace @ 04/20/24 14:33:57.423
  STEP: Deleting the namespace @ 04/20/24 14:33:57.461
  STEP: Waiting for the namespace to be removed. @ 04/20/24 14:33:57.482
  E0420 14:33:57.572562      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:58.573554      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:33:59.574175      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:00.574957      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:01.576693      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:02.575844      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 04/20/24 14:34:03.493
  STEP: Verifying there is no service in the namespace @ 04/20/24 14:34:03.545
  I0420 14:34:03.553924 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4411" for this suite. @ 04/20/24 14:34:03.564
  E0420 14:34:03.576095      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "nsdeletetest-337" for this suite. @ 04/20/24 14:34:03.578
  I0420 14:34:03.585031 13 framework.go:370] Namespace nsdeletetest-337 was already deleted
  STEP: Destroying namespace "nsdeletetest-3896" for this suite. @ 04/20/24 14:34:03.585
• [6.285 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 04/20/24 14:34:03.606
  I0420 14:34:03.606858 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:34:03.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:03.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:03.66
  STEP: Creating projection with secret that has name projected-secret-test-4c64d59e-0532-4b2d-abd9-5c5d56c51840 @ 04/20/24 14:34:03.665
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:34:03.674
  E0420 14:34:04.576144      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:05.576360      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:34:05.705
  I0420 14:34:05.711656 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-projected-secrets-c8776354-ae0d-4081-8424-3b1ddf812415 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:34:05.745
  I0420 14:34:05.774011 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-375" for this suite. @ 04/20/24 14:34:05.782
• [2.194 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 04/20/24 14:34:05.8
  I0420 14:34:05.800836 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:34:05.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:05.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:05.846
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:34:05.851
  E0420 14:34:06.577633      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:07.577336      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:08.578039      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:09.577834      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:34:09.895
  I0420 14:34:09.903099 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod downwardapi-volume-a78698eb-0f3f-432c-81ca-e7c86c9399ef container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:34:09.915
  I0420 14:34:09.952493 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6203" for this suite. @ 04/20/24 14:34:09.962
• [4.176 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1420
  STEP: Creating a kubernetes client @ 04/20/24 14:34:09.977
  I0420 14:34:09.977381 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename services @ 04/20/24 14:34:09.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:10.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:10.016
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3767 @ 04/20/24 14:34:10.021
  STEP: changing the ExternalName service to type=ClusterIP @ 04/20/24 14:34:10.029
  STEP: creating replication controller externalname-service in namespace services-3767 @ 04/20/24 14:34:10.055
  I0420 14:34:10.072029      13 runners.go:198] Created replication controller with name: externalname-service, namespace: services-3767, replica count: 2
  E0420 14:34:10.578434      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:11.579380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:12.583385      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:34:13.124008      13 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0420 14:34:13.124244 13 resource.go:361] Creating new exec pod
  E0420 14:34:13.582823      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:14.583272      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:15.583290      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:34:16.164486 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-3767 exec execpod4k25x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0420 14:34:16.537003 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0420 14:34:16.537091 13 builder.go:147] stdout: "externalname-service-5l99b"
  I0420 14:34:16.538005 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-3767 exec execpod4k25x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.29.11 80'
  E0420 14:34:16.583976      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:34:16.835303 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.29.11 80\nConnection to 10.233.29.11 80 port [tcp/http] succeeded!\n"
  I0420 14:34:16.835388 13 builder.go:147] stdout: ""
  I0420 14:34:17.537971 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-3767 exec execpod4k25x -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.29.11 80'
  E0420 14:34:17.584502      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:34:17.875262 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.29.11 80\nConnection to 10.233.29.11 80 port [tcp/http] succeeded!\n"
  I0420 14:34:17.875424 13 builder.go:147] stdout: "externalname-service-5l99b"
  I0420 14:34:17.878032 13 service.go:1429] Cleaning up the ExternalName to ClusterIP test service
  I0420 14:34:17.923490 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3767" for this suite. @ 04/20/24 14:34:17.934
• [7.977 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 04/20/24 14:34:17.957
  I0420 14:34:17.957538 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:34:17.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:18.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:18.01
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:34:18.017
  E0420 14:34:18.585412      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:19.586168      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:20.585987      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:21.586854      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:34:22.067
  I0420 14:34:22.074186 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod downwardapi-volume-93657e88-a83d-413f-8b76-d6f266dab420 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:34:22.098
  I0420 14:34:22.135784 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9112" for this suite. @ 04/20/24 14:34:22.149
• [4.206 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 04/20/24 14:34:22.163
  I0420 14:34:22.163801 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:34:22.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:22.211
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:22.216
  STEP: Creating a pod to test downward api env vars @ 04/20/24 14:34:22.221
  E0420 14:34:22.588325      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:23.589805      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:24.590690      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:25.591642      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:34:26.264
  I0420 14:34:26.271246 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod downward-api-bfd3cf43-2bcc-425d-a08d-f5f2c387fc55 container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 14:34:26.284
  I0420 14:34:26.322080 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-907" for this suite. @ 04/20/24 14:34:26.33
• [4.179 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 04/20/24 14:34:26.343
  I0420 14:34:26.343305 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 14:34:26.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:26.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:26.391
  STEP: Creating ServiceAccount "e2e-sa-59gkg"  @ 04/20/24 14:34:26.396
  I0420 14:34:26.408750 13 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-59gkg"  @ 04/20/24 14:34:26.408
  I0420 14:34:26.422494 13 service_accounts.go:839] AutomountServiceAccountToken: true
  I0420 14:34:26.422776 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5132" for this suite. @ 04/20/24 14:34:26.43
• [0.101 seconds]
------------------------------
SSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 04/20/24 14:34:26.444
  I0420 14:34:26.444843 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename svc-latency @ 04/20/24 14:34:26.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:26.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:26.484
  I0420 14:34:26.489061 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-949 @ 04/20/24 14:34:26.491
  I0420 14:34:26.502611      13 runners.go:198] Created replication controller with name: svc-latency-rc, namespace: svc-latency-949, replica count: 1
  E0420 14:34:26.591324      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:34:27.553928      13 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0420 14:34:27.591695      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:34:28.554661      13 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0420 14:34:28.591845      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:34:28.679932 13 service_latency.go:356] Created: latency-svc-j4lld
  I0420 14:34:28.695227 13 service_latency.go:363] Got endpoints: latency-svc-j4lld [39.932124ms]
  I0420 14:34:28.719673 13 service_latency.go:356] Created: latency-svc-txps2
  I0420 14:34:28.736152 13 service_latency.go:356] Created: latency-svc-vtnck
  I0420 14:34:28.738353 13 service_latency.go:363] Got endpoints: latency-svc-txps2 [42.931825ms]
  I0420 14:34:28.750388 13 service_latency.go:363] Got endpoints: latency-svc-vtnck [54.380153ms]
  I0420 14:34:28.763993 13 service_latency.go:356] Created: latency-svc-8l9vl
  I0420 14:34:28.769005 13 service_latency.go:363] Got endpoints: latency-svc-8l9vl [72.66504ms]
  I0420 14:34:28.776528 13 service_latency.go:356] Created: latency-svc-s9vqk
  I0420 14:34:28.784640 13 service_latency.go:363] Got endpoints: latency-svc-s9vqk [88.153313ms]
  I0420 14:34:28.793437 13 service_latency.go:356] Created: latency-svc-k89ff
  I0420 14:34:28.803541 13 service_latency.go:363] Got endpoints: latency-svc-k89ff [106.863514ms]
  I0420 14:34:28.814701 13 service_latency.go:356] Created: latency-svc-hrphd
  I0420 14:34:28.824395 13 service_latency.go:363] Got endpoints: latency-svc-hrphd [127.356347ms]
  I0420 14:34:28.833175 13 service_latency.go:356] Created: latency-svc-zprvb
  I0420 14:34:28.840175 13 service_latency.go:363] Got endpoints: latency-svc-zprvb [143.289676ms]
  I0420 14:34:28.849190 13 service_latency.go:356] Created: latency-svc-bfkxf
  I0420 14:34:28.866547 13 service_latency.go:356] Created: latency-svc-ck97x
  I0420 14:34:28.887426 13 service_latency.go:363] Got endpoints: latency-svc-bfkxf [190.180061ms]
  I0420 14:34:28.891977 13 service_latency.go:363] Got endpoints: latency-svc-ck97x [194.505531ms]
  I0420 14:34:28.909541 13 service_latency.go:356] Created: latency-svc-z498v
  I0420 14:34:28.931279 13 service_latency.go:363] Got endpoints: latency-svc-z498v [233.079138ms]
  I0420 14:34:28.936985 13 service_latency.go:356] Created: latency-svc-w7jx8
  I0420 14:34:28.954289 13 service_latency.go:356] Created: latency-svc-jvfk9
  I0420 14:34:28.973826 13 service_latency.go:363] Got endpoints: latency-svc-w7jx8 [273.807442ms]
  I0420 14:34:28.976395 13 service_latency.go:363] Got endpoints: latency-svc-jvfk9 [278.762995ms]
  I0420 14:34:28.983113 13 service_latency.go:356] Created: latency-svc-lpjt9
  I0420 14:34:28.994677 13 service_latency.go:363] Got endpoints: latency-svc-lpjt9 [295.217179ms]
  I0420 14:34:29.002991 13 service_latency.go:356] Created: latency-svc-nngvv
  I0420 14:34:29.024398 13 service_latency.go:363] Got endpoints: latency-svc-nngvv [324.165902ms]
  I0420 14:34:29.026123 13 service_latency.go:356] Created: latency-svc-fv9v4
  I0420 14:34:29.035413 13 service_latency.go:356] Created: latency-svc-b6jv8
  I0420 14:34:29.049289 13 service_latency.go:356] Created: latency-svc-bqw4b
  I0420 14:34:29.057830 13 service_latency.go:363] Got endpoints: latency-svc-fv9v4 [319.40861ms]
  I0420 14:34:29.059348 13 service_latency.go:363] Got endpoints: latency-svc-b6jv8 [308.889534ms]
  I0420 14:34:29.075904 13 service_latency.go:363] Got endpoints: latency-svc-bqw4b [306.794642ms]
  I0420 14:34:29.077104 13 service_latency.go:356] Created: latency-svc-69xjv
  I0420 14:34:29.084860 13 service_latency.go:356] Created: latency-svc-w4drs
  I0420 14:34:29.086092 13 service_latency.go:363] Got endpoints: latency-svc-69xjv [301.3481ms]
  I0420 14:34:29.098892 13 service_latency.go:356] Created: latency-svc-6zdmz
  I0420 14:34:29.105354 13 service_latency.go:363] Got endpoints: latency-svc-w4drs [301.43974ms]
  I0420 14:34:29.119239 13 service_latency.go:356] Created: latency-svc-d6fv2
  I0420 14:34:29.142095 13 service_latency.go:356] Created: latency-svc-gkv7h
  I0420 14:34:29.142115 13 service_latency.go:363] Got endpoints: latency-svc-6zdmz [317.63124ms]
  I0420 14:34:29.142535 13 service_latency.go:363] Got endpoints: latency-svc-d6fv2 [302.270665ms]
  I0420 14:34:29.162149 13 service_latency.go:363] Got endpoints: latency-svc-gkv7h [274.624143ms]
  I0420 14:34:29.163779 13 service_latency.go:356] Created: latency-svc-ql57h
  I0420 14:34:29.173482 13 service_latency.go:356] Created: latency-svc-zcwtw
  I0420 14:34:29.176841 13 service_latency.go:356] Created: latency-svc-h7hmx
  I0420 14:34:29.195643 13 service_latency.go:356] Created: latency-svc-sffph
  I0420 14:34:29.198306 13 service_latency.go:363] Got endpoints: latency-svc-h7hmx [497.727203ms]
  I0420 14:34:29.198877 13 service_latency.go:363] Got endpoints: latency-svc-zcwtw [267.467694ms]
  I0420 14:34:29.199405 13 service_latency.go:363] Got endpoints: latency-svc-ql57h [307.363298ms]
  I0420 14:34:29.213243 13 service_latency.go:356] Created: latency-svc-swv7r
  I0420 14:34:29.221425 13 service_latency.go:356] Created: latency-svc-mb79p
  I0420 14:34:29.232489 13 service_latency.go:356] Created: latency-svc-rrflw
  I0420 14:34:29.234494 13 service_latency.go:363] Got endpoints: latency-svc-sffph [260.406037ms]
  I0420 14:34:29.254112 13 service_latency.go:356] Created: latency-svc-5mw26
  I0420 14:34:29.262668 13 service_latency.go:356] Created: latency-svc-h855t
  I0420 14:34:29.275835 13 service_latency.go:356] Created: latency-svc-b88xs
  I0420 14:34:29.280553 13 service_latency.go:363] Got endpoints: latency-svc-swv7r [303.975504ms]
  I0420 14:34:29.290006 13 service_latency.go:363] Got endpoints: latency-svc-mb79p [295.186639ms]
  I0420 14:34:29.300233 13 service_latency.go:356] Created: latency-svc-s7wgx
  I0420 14:34:29.309573 13 service_latency.go:356] Created: latency-svc-99hds
  I0420 14:34:29.326266 13 service_latency.go:356] Created: latency-svc-fnq66
  I0420 14:34:29.327931 13 service_latency.go:363] Got endpoints: latency-svc-rrflw [303.436544ms]
  I0420 14:34:29.341565 13 service_latency.go:356] Created: latency-svc-4lhxj
  I0420 14:34:29.354431 13 service_latency.go:363] Got endpoints: latency-svc-h855t [294.956033ms]
  I0420 14:34:29.354456 13 service_latency.go:363] Got endpoints: latency-svc-5mw26 [296.220008ms]
  I0420 14:34:29.369525 13 service_latency.go:356] Created: latency-svc-4gtwh
  I0420 14:34:29.380271 13 service_latency.go:363] Got endpoints: latency-svc-b88xs [304.228399ms]
  I0420 14:34:29.394408 13 service_latency.go:363] Got endpoints: latency-svc-s7wgx [308.255051ms]
  I0420 14:34:29.395176 13 service_latency.go:356] Created: latency-svc-rgx96
  I0420 14:34:29.417228 13 service_latency.go:356] Created: latency-svc-8zlvp
  I0420 14:34:29.418799 13 service_latency.go:363] Got endpoints: latency-svc-99hds [313.178029ms]
  I0420 14:34:29.421451 13 service_latency.go:363] Got endpoints: latency-svc-fnq66 [279.250823ms]
  I0420 14:34:29.437756 13 service_latency.go:356] Created: latency-svc-v2ggp
  I0420 14:34:29.438400 13 service_latency.go:363] Got endpoints: latency-svc-4lhxj [295.786495ms]
  I0420 14:34:29.473277 13 service_latency.go:363] Got endpoints: latency-svc-4gtwh [311.001283ms]
  I0420 14:34:29.474339 13 service_latency.go:356] Created: latency-svc-vq8jd
  I0420 14:34:29.474532 13 service_latency.go:363] Got endpoints: latency-svc-rgx96 [276.164926ms]
  I0420 14:34:29.489482 13 service_latency.go:363] Got endpoints: latency-svc-8zlvp [289.975326ms]
  I0420 14:34:29.489474 13 service_latency.go:363] Got endpoints: latency-svc-v2ggp [290.547794ms]
  I0420 14:34:29.502616 13 service_latency.go:356] Created: latency-svc-wbf7n
  I0420 14:34:29.505321 13 service_latency.go:363] Got endpoints: latency-svc-vq8jd [224.635343ms]
  I0420 14:34:29.519142 13 service_latency.go:356] Created: latency-svc-zz62p
  I0420 14:34:29.522798 13 service_latency.go:363] Got endpoints: latency-svc-wbf7n [232.357738ms]
  I0420 14:34:29.540202 13 service_latency.go:356] Created: latency-svc-2rkn7
  I0420 14:34:29.549071 13 service_latency.go:363] Got endpoints: latency-svc-zz62p [221.075085ms]
  I0420 14:34:29.557216 13 service_latency.go:363] Got endpoints: latency-svc-2rkn7 [202.699895ms]
  I0420 14:34:29.566301 13 service_latency.go:356] Created: latency-svc-s2kdp
  I0420 14:34:29.574094 13 service_latency.go:356] Created: latency-svc-qnvmw
  I0420 14:34:29.576341 13 service_latency.go:363] Got endpoints: latency-svc-s2kdp [221.786997ms]
  I0420 14:34:29.587680 13 service_latency.go:356] Created: latency-svc-fptp2
  E0420 14:34:29.593427      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:34:29.602665 13 service_latency.go:356] Created: latency-svc-jhrrp
  I0420 14:34:29.606356 13 service_latency.go:363] Got endpoints: latency-svc-qnvmw [226.016335ms]
  I0420 14:34:29.620754 13 service_latency.go:363] Got endpoints: latency-svc-fptp2 [225.679862ms]
  I0420 14:34:29.624655 13 service_latency.go:356] Created: latency-svc-vqpkq
  I0420 14:34:29.651043 13 service_latency.go:356] Created: latency-svc-c66wd
  I0420 14:34:29.651142 13 service_latency.go:356] Created: latency-svc-wxb7t
  I0420 14:34:29.653617 13 service_latency.go:363] Got endpoints: latency-svc-jhrrp [234.739329ms]
  I0420 14:34:29.668174 13 service_latency.go:356] Created: latency-svc-7n4cp
  I0420 14:34:29.674402 13 service_latency.go:356] Created: latency-svc-ptp5s
  I0420 14:34:29.689161 13 service_latency.go:363] Got endpoints: latency-svc-vqpkq [267.64639ms]
  I0420 14:34:29.700561 13 service_latency.go:356] Created: latency-svc-hrg8d
  I0420 14:34:29.709426 13 service_latency.go:356] Created: latency-svc-8w89t
  I0420 14:34:29.720130 13 service_latency.go:356] Created: latency-svc-b28bs
  I0420 14:34:29.740308 13 service_latency.go:356] Created: latency-svc-7qr2w
  I0420 14:34:29.744765 13 service_latency.go:363] Got endpoints: latency-svc-c66wd [510.182867ms]
  I0420 14:34:29.757839 13 service_latency.go:356] Created: latency-svc-htldh
  I0420 14:34:29.771208 13 service_latency.go:356] Created: latency-svc-hbbps
  I0420 14:34:29.786074 13 service_latency.go:356] Created: latency-svc-gw84b
  I0420 14:34:29.792516 13 service_latency.go:363] Got endpoints: latency-svc-wxb7t [354.037438ms]
  I0420 14:34:29.800198 13 service_latency.go:356] Created: latency-svc-5ss26
  I0420 14:34:29.811305 13 service_latency.go:356] Created: latency-svc-2nc76
  I0420 14:34:29.825004 13 service_latency.go:356] Created: latency-svc-x7jz4
  I0420 14:34:29.839196 13 service_latency.go:356] Created: latency-svc-gx7f4
  I0420 14:34:29.840576 13 service_latency.go:363] Got endpoints: latency-svc-7n4cp [365.994071ms]
  I0420 14:34:29.850731 13 service_latency.go:356] Created: latency-svc-rrl9w
  I0420 14:34:29.858902 13 service_latency.go:356] Created: latency-svc-4pq44
  I0420 14:34:29.875654 13 service_latency.go:356] Created: latency-svc-p5gkc
  I0420 14:34:29.890983 13 service_latency.go:363] Got endpoints: latency-svc-ptp5s [417.577246ms]
  I0420 14:34:29.911124 13 service_latency.go:356] Created: latency-svc-bqc4q
  I0420 14:34:29.942665 13 service_latency.go:363] Got endpoints: latency-svc-hrg8d [452.79863ms]
  I0420 14:34:29.962878 13 service_latency.go:356] Created: latency-svc-m2s48
  I0420 14:34:29.985653 13 service_latency.go:363] Got endpoints: latency-svc-8w89t [496.055851ms]
  I0420 14:34:30.006002 13 service_latency.go:356] Created: latency-svc-2xtk8
  I0420 14:34:30.037678 13 service_latency.go:363] Got endpoints: latency-svc-b28bs [532.041775ms]
  I0420 14:34:30.056087 13 service_latency.go:356] Created: latency-svc-rrnnl
  I0420 14:34:30.090117 13 service_latency.go:363] Got endpoints: latency-svc-7qr2w [566.652244ms]
  I0420 14:34:30.109335 13 service_latency.go:356] Created: latency-svc-4jzlf
  I0420 14:34:30.135189 13 service_latency.go:363] Got endpoints: latency-svc-htldh [585.99925ms]
  I0420 14:34:30.158827 13 service_latency.go:356] Created: latency-svc-r6f8k
  I0420 14:34:30.187315 13 service_latency.go:363] Got endpoints: latency-svc-hbbps [630.020048ms]
  I0420 14:34:30.207630 13 service_latency.go:356] Created: latency-svc-hc2jf
  I0420 14:34:30.238847 13 service_latency.go:363] Got endpoints: latency-svc-gw84b [662.438012ms]
  I0420 14:34:30.262280 13 service_latency.go:356] Created: latency-svc-szvmg
  I0420 14:34:30.287148 13 service_latency.go:363] Got endpoints: latency-svc-5ss26 [680.7119ms]
  I0420 14:34:30.307388 13 service_latency.go:356] Created: latency-svc-4b952
  I0420 14:34:30.338760 13 service_latency.go:363] Got endpoints: latency-svc-2nc76 [717.86199ms]
  I0420 14:34:30.357139 13 service_latency.go:356] Created: latency-svc-8kptr
  I0420 14:34:30.388619 13 service_latency.go:363] Got endpoints: latency-svc-x7jz4 [734.931568ms]
  I0420 14:34:30.407317 13 service_latency.go:356] Created: latency-svc-wfgp7
  I0420 14:34:30.434617 13 service_latency.go:363] Got endpoints: latency-svc-gx7f4 [745.350908ms]
  I0420 14:34:30.454124 13 service_latency.go:356] Created: latency-svc-wml7q
  I0420 14:34:30.487307 13 service_latency.go:363] Got endpoints: latency-svc-rrl9w [742.467385ms]
  I0420 14:34:30.505251 13 service_latency.go:356] Created: latency-svc-9csvt
  I0420 14:34:30.537805 13 service_latency.go:363] Got endpoints: latency-svc-4pq44 [745.140704ms]
  I0420 14:34:30.559644 13 service_latency.go:356] Created: latency-svc-pdc7h
  I0420 14:34:30.586844 13 service_latency.go:363] Got endpoints: latency-svc-p5gkc [746.006803ms]
  E0420 14:34:30.593698      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:34:30.606958 13 service_latency.go:356] Created: latency-svc-978sp
  I0420 14:34:30.650288 13 service_latency.go:363] Got endpoints: latency-svc-bqc4q [759.159886ms]
  I0420 14:34:30.674424 13 service_latency.go:356] Created: latency-svc-jlg89
  I0420 14:34:30.693765 13 service_latency.go:363] Got endpoints: latency-svc-m2s48 [750.917681ms]
  I0420 14:34:30.750990 13 service_latency.go:363] Got endpoints: latency-svc-2xtk8 [765.146582ms]
  I0420 14:34:30.834946 13 service_latency.go:363] Got endpoints: latency-svc-rrnnl [796.379146ms]
  I0420 14:34:30.836776 13 service_latency.go:356] Created: latency-svc-hh27d
  I0420 14:34:30.883928 13 service_latency.go:363] Got endpoints: latency-svc-4jzlf [793.651775ms]
  I0420 14:34:30.894478 13 service_latency.go:356] Created: latency-svc-j2dhr
  I0420 14:34:30.904763 13 service_latency.go:356] Created: latency-svc-m7x2v
  I0420 14:34:30.905597 13 service_latency.go:363] Got endpoints: latency-svc-r6f8k [770.25714ms]
  I0420 14:34:30.916891 13 service_latency.go:356] Created: latency-svc-9skwl
  I0420 14:34:30.932192 13 service_latency.go:356] Created: latency-svc-q5swt
  I0420 14:34:30.972325 13 service_latency.go:363] Got endpoints: latency-svc-hc2jf [783.979493ms]
  I0420 14:34:30.997425 13 service_latency.go:356] Created: latency-svc-5xwjx
  I0420 14:34:31.004369 13 service_latency.go:363] Got endpoints: latency-svc-szvmg [765.180145ms]
  I0420 14:34:31.038361 13 service_latency.go:356] Created: latency-svc-dn4hp
  I0420 14:34:31.044223 13 service_latency.go:363] Got endpoints: latency-svc-4b952 [756.981823ms]
  I0420 14:34:31.078378 13 service_latency.go:356] Created: latency-svc-gtmts
  I0420 14:34:31.096004 13 service_latency.go:363] Got endpoints: latency-svc-8kptr [757.126216ms]
  I0420 14:34:31.120694 13 service_latency.go:356] Created: latency-svc-vpstj
  I0420 14:34:31.139859 13 service_latency.go:363] Got endpoints: latency-svc-wfgp7 [751.08435ms]
  I0420 14:34:31.165981 13 service_latency.go:356] Created: latency-svc-dq9xf
  I0420 14:34:31.189237 13 service_latency.go:363] Got endpoints: latency-svc-wml7q [754.466755ms]
  I0420 14:34:31.212518 13 service_latency.go:356] Created: latency-svc-7wfs2
  I0420 14:34:31.241371 13 service_latency.go:363] Got endpoints: latency-svc-9csvt [753.956064ms]
  I0420 14:34:31.264142 13 service_latency.go:356] Created: latency-svc-sn89l
  I0420 14:34:31.294133 13 service_latency.go:363] Got endpoints: latency-svc-pdc7h [755.953336ms]
  I0420 14:34:31.317595 13 service_latency.go:356] Created: latency-svc-sr4nb
  I0420 14:34:31.344208 13 service_latency.go:363] Got endpoints: latency-svc-978sp [757.257111ms]
  I0420 14:34:31.380696 13 service_latency.go:356] Created: latency-svc-hnks8
  I0420 14:34:31.390761 13 service_latency.go:363] Got endpoints: latency-svc-jlg89 [740.263248ms]
  I0420 14:34:31.413194 13 service_latency.go:356] Created: latency-svc-mp8zc
  I0420 14:34:31.439761 13 service_latency.go:363] Got endpoints: latency-svc-hh27d [745.831161ms]
  I0420 14:34:31.463190 13 service_latency.go:356] Created: latency-svc-xg85t
  I0420 14:34:31.491066 13 service_latency.go:363] Got endpoints: latency-svc-j2dhr [739.950055ms]
  I0420 14:34:31.516914 13 service_latency.go:356] Created: latency-svc-ltgcw
  I0420 14:34:31.550421 13 service_latency.go:363] Got endpoints: latency-svc-m7x2v [715.290906ms]
  I0420 14:34:31.573635 13 service_latency.go:356] Created: latency-svc-tsst2
  I0420 14:34:31.595167 13 service_latency.go:363] Got endpoints: latency-svc-9skwl [710.768269ms]
  E0420 14:34:31.595302      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:34:31.624615 13 service_latency.go:356] Created: latency-svc-qngpm
  I0420 14:34:31.640811 13 service_latency.go:363] Got endpoints: latency-svc-q5swt [735.126099ms]
  I0420 14:34:31.667911 13 service_latency.go:356] Created: latency-svc-skhdb
  I0420 14:34:31.688494 13 service_latency.go:363] Got endpoints: latency-svc-5xwjx [715.999804ms]
  I0420 14:34:31.727627 13 service_latency.go:356] Created: latency-svc-h42t6
  I0420 14:34:31.746690 13 service_latency.go:363] Got endpoints: latency-svc-dn4hp [741.669034ms]
  I0420 14:34:31.773591 13 service_latency.go:356] Created: latency-svc-76592
  I0420 14:34:31.795636 13 service_latency.go:363] Got endpoints: latency-svc-gtmts [751.305225ms]
  I0420 14:34:31.823626 13 service_latency.go:356] Created: latency-svc-hchbl
  I0420 14:34:31.837599 13 service_latency.go:363] Got endpoints: latency-svc-vpstj [741.476315ms]
  I0420 14:34:31.865428 13 service_latency.go:356] Created: latency-svc-wh8tr
  I0420 14:34:31.888096 13 service_latency.go:363] Got endpoints: latency-svc-dq9xf [748.137783ms]
  I0420 14:34:31.919250 13 service_latency.go:356] Created: latency-svc-tbkn6
  I0420 14:34:31.950099 13 service_latency.go:363] Got endpoints: latency-svc-7wfs2 [760.7397ms]
  I0420 14:34:31.970735 13 service_latency.go:356] Created: latency-svc-s2wmr
  I0420 14:34:31.991912 13 service_latency.go:363] Got endpoints: latency-svc-sn89l [750.429386ms]
  I0420 14:34:32.018194 13 service_latency.go:356] Created: latency-svc-2lhlp
  I0420 14:34:32.045274 13 service_latency.go:363] Got endpoints: latency-svc-sr4nb [750.934516ms]
  I0420 14:34:32.069965 13 service_latency.go:356] Created: latency-svc-zdzlv
  I0420 14:34:32.097690 13 service_latency.go:363] Got endpoints: latency-svc-hnks8 [753.300811ms]
  I0420 14:34:32.130669 13 service_latency.go:356] Created: latency-svc-5sgz4
  I0420 14:34:32.150600 13 service_latency.go:363] Got endpoints: latency-svc-mp8zc [759.426903ms]
  I0420 14:34:32.180813 13 service_latency.go:356] Created: latency-svc-8lgr4
  I0420 14:34:32.206588 13 service_latency.go:363] Got endpoints: latency-svc-xg85t [766.675369ms]
  I0420 14:34:32.247565 13 service_latency.go:356] Created: latency-svc-4944t
  I0420 14:34:32.249474 13 service_latency.go:363] Got endpoints: latency-svc-ltgcw [758.309276ms]
  I0420 14:34:32.295544 13 service_latency.go:363] Got endpoints: latency-svc-tsst2 [744.464016ms]
  I0420 14:34:32.303531 13 service_latency.go:356] Created: latency-svc-z8jgg
  I0420 14:34:32.318366 13 service_latency.go:356] Created: latency-svc-c6zb7
  I0420 14:34:32.337537 13 service_latency.go:363] Got endpoints: latency-svc-qngpm [742.2229ms]
  I0420 14:34:32.367361 13 service_latency.go:356] Created: latency-svc-d6rkp
  I0420 14:34:32.390662 13 service_latency.go:363] Got endpoints: latency-svc-skhdb [749.739412ms]
  I0420 14:34:32.416906 13 service_latency.go:356] Created: latency-svc-8xjr2
  I0420 14:34:32.444246 13 service_latency.go:363] Got endpoints: latency-svc-h42t6 [755.650388ms]
  I0420 14:34:32.469090 13 service_latency.go:356] Created: latency-svc-wptc9
  I0420 14:34:32.487307 13 service_latency.go:363] Got endpoints: latency-svc-76592 [740.470891ms]
  I0420 14:34:32.507813 13 service_latency.go:356] Created: latency-svc-sg5b4
  I0420 14:34:32.545345 13 service_latency.go:363] Got endpoints: latency-svc-hchbl [749.544259ms]
  I0420 14:34:32.563444 13 service_latency.go:356] Created: latency-svc-pqbk7
  I0420 14:34:32.590691 13 service_latency.go:363] Got endpoints: latency-svc-wh8tr [752.987734ms]
  E0420 14:34:32.595617      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:34:32.607664 13 service_latency.go:356] Created: latency-svc-48xtg
  I0420 14:34:32.638620 13 service_latency.go:363] Got endpoints: latency-svc-tbkn6 [750.423236ms]
  I0420 14:34:32.657377 13 service_latency.go:356] Created: latency-svc-d6ppd
  I0420 14:34:32.694600 13 service_latency.go:363] Got endpoints: latency-svc-s2wmr [744.374739ms]
  I0420 14:34:32.720689 13 service_latency.go:356] Created: latency-svc-c9l5l
  I0420 14:34:32.743563 13 service_latency.go:363] Got endpoints: latency-svc-2lhlp [751.543695ms]
  I0420 14:34:32.767942 13 service_latency.go:356] Created: latency-svc-vtnp8
  I0420 14:34:32.790430 13 service_latency.go:363] Got endpoints: latency-svc-zdzlv [745.055556ms]
  I0420 14:34:32.814386 13 service_latency.go:356] Created: latency-svc-rqjw8
  I0420 14:34:32.837463 13 service_latency.go:363] Got endpoints: latency-svc-5sgz4 [739.602884ms]
  I0420 14:34:32.861152 13 service_latency.go:356] Created: latency-svc-9rlw2
  I0420 14:34:32.886983 13 service_latency.go:363] Got endpoints: latency-svc-8lgr4 [736.292312ms]
  I0420 14:34:32.906507 13 service_latency.go:356] Created: latency-svc-vhwdn
  I0420 14:34:32.937427 13 service_latency.go:363] Got endpoints: latency-svc-4944t [730.73781ms]
  I0420 14:34:32.955135 13 service_latency.go:356] Created: latency-svc-628kf
  I0420 14:34:32.991450 13 service_latency.go:363] Got endpoints: latency-svc-z8jgg [741.827195ms]
  I0420 14:34:33.012443 13 service_latency.go:356] Created: latency-svc-dzx6w
  I0420 14:34:33.039497 13 service_latency.go:363] Got endpoints: latency-svc-c6zb7 [743.792905ms]
  I0420 14:34:33.057587 13 service_latency.go:356] Created: latency-svc-z5wrq
  I0420 14:34:33.088167 13 service_latency.go:363] Got endpoints: latency-svc-d6rkp [750.515008ms]
  I0420 14:34:33.107679 13 service_latency.go:356] Created: latency-svc-jt622
  I0420 14:34:33.144600 13 service_latency.go:363] Got endpoints: latency-svc-8xjr2 [753.804537ms]
  I0420 14:34:33.172420 13 service_latency.go:356] Created: latency-svc-2vvmw
  I0420 14:34:33.188554 13 service_latency.go:363] Got endpoints: latency-svc-wptc9 [744.199561ms]
  I0420 14:34:33.207441 13 service_latency.go:356] Created: latency-svc-gcrpk
  I0420 14:34:33.244241 13 service_latency.go:363] Got endpoints: latency-svc-sg5b4 [756.837532ms]
  I0420 14:34:33.265676 13 service_latency.go:356] Created: latency-svc-fxbdq
  I0420 14:34:33.289664 13 service_latency.go:363] Got endpoints: latency-svc-pqbk7 [744.20979ms]
  I0420 14:34:33.314377 13 service_latency.go:356] Created: latency-svc-k5qc9
  I0420 14:34:33.337784 13 service_latency.go:363] Got endpoints: latency-svc-48xtg [746.916292ms]
  I0420 14:34:33.354662 13 service_latency.go:356] Created: latency-svc-6lgbn
  I0420 14:34:33.387417 13 service_latency.go:363] Got endpoints: latency-svc-d6ppd [748.660208ms]
  I0420 14:34:33.404906 13 service_latency.go:356] Created: latency-svc-m9k8g
  I0420 14:34:33.440699 13 service_latency.go:363] Got endpoints: latency-svc-c9l5l [744.594818ms]
  I0420 14:34:33.459397 13 service_latency.go:356] Created: latency-svc-gqc8n
  I0420 14:34:33.488156 13 service_latency.go:363] Got endpoints: latency-svc-vtnp8 [744.502731ms]
  I0420 14:34:33.507212 13 service_latency.go:356] Created: latency-svc-99tf5
  I0420 14:34:33.537105 13 service_latency.go:363] Got endpoints: latency-svc-rqjw8 [746.552861ms]
  I0420 14:34:33.556526 13 service_latency.go:356] Created: latency-svc-r2222
  I0420 14:34:33.589344 13 service_latency.go:363] Got endpoints: latency-svc-9rlw2 [751.780482ms]
  E0420 14:34:33.596199      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:34:33.608279 13 service_latency.go:356] Created: latency-svc-mqjvg
  I0420 14:34:33.637328 13 service_latency.go:363] Got endpoints: latency-svc-vhwdn [750.256719ms]
  I0420 14:34:33.677919 13 service_latency.go:356] Created: latency-svc-vl4kc
  I0420 14:34:33.697196 13 service_latency.go:363] Got endpoints: latency-svc-628kf [759.673059ms]
  I0420 14:34:33.722024 13 service_latency.go:356] Created: latency-svc-4sp74
  I0420 14:34:33.741208 13 service_latency.go:363] Got endpoints: latency-svc-dzx6w [749.158881ms]
  I0420 14:34:33.759296 13 service_latency.go:356] Created: latency-svc-r7l8h
  I0420 14:34:33.789515 13 service_latency.go:363] Got endpoints: latency-svc-z5wrq [749.885327ms]
  I0420 14:34:33.814113 13 service_latency.go:356] Created: latency-svc-xbkt5
  I0420 14:34:33.844607 13 service_latency.go:363] Got endpoints: latency-svc-jt622 [755.92101ms]
  I0420 14:34:33.866109 13 service_latency.go:356] Created: latency-svc-xx6jf
  I0420 14:34:33.895349 13 service_latency.go:363] Got endpoints: latency-svc-2vvmw [750.642956ms]
  I0420 14:34:33.921462 13 service_latency.go:356] Created: latency-svc-b7flq
  I0420 14:34:33.940582 13 service_latency.go:363] Got endpoints: latency-svc-gcrpk [751.191154ms]
  I0420 14:34:33.964466 13 service_latency.go:356] Created: latency-svc-q5kqr
  I0420 14:34:33.991819 13 service_latency.go:363] Got endpoints: latency-svc-fxbdq [747.267726ms]
  I0420 14:34:34.012158 13 service_latency.go:356] Created: latency-svc-fjv77
  I0420 14:34:34.043458 13 service_latency.go:363] Got endpoints: latency-svc-k5qc9 [753.577546ms]
  I0420 14:34:34.063643 13 service_latency.go:356] Created: latency-svc-zthzp
  I0420 14:34:34.090595 13 service_latency.go:363] Got endpoints: latency-svc-6lgbn [752.623043ms]
  I0420 14:34:34.108222 13 service_latency.go:356] Created: latency-svc-j4htv
  I0420 14:34:34.139576 13 service_latency.go:363] Got endpoints: latency-svc-m9k8g [752.079674ms]
  I0420 14:34:34.157264 13 service_latency.go:356] Created: latency-svc-86hnw
  I0420 14:34:34.187511 13 service_latency.go:363] Got endpoints: latency-svc-gqc8n [745.957873ms]
  I0420 14:34:34.208970 13 service_latency.go:356] Created: latency-svc-fq4w8
  I0420 14:34:34.241301 13 service_latency.go:363] Got endpoints: latency-svc-99tf5 [753.059883ms]
  I0420 14:34:34.265933 13 service_latency.go:356] Created: latency-svc-g75xj
  I0420 14:34:34.289529 13 service_latency.go:363] Got endpoints: latency-svc-r2222 [752.347809ms]
  I0420 14:34:34.309288 13 service_latency.go:356] Created: latency-svc-m5qxd
  I0420 14:34:34.339155 13 service_latency.go:363] Got endpoints: latency-svc-mqjvg [749.718411ms]
  I0420 14:34:34.354875 13 service_latency.go:356] Created: latency-svc-2jcmw
  I0420 14:34:34.401023 13 service_latency.go:363] Got endpoints: latency-svc-vl4kc [763.522165ms]
  I0420 14:34:34.425514 13 service_latency.go:356] Created: latency-svc-sddfl
  I0420 14:34:34.437132 13 service_latency.go:363] Got endpoints: latency-svc-4sp74 [739.858853ms]
  I0420 14:34:34.459616 13 service_latency.go:356] Created: latency-svc-smsk7
  I0420 14:34:34.492473 13 service_latency.go:363] Got endpoints: latency-svc-r7l8h [751.199582ms]
  I0420 14:34:34.513273 13 service_latency.go:356] Created: latency-svc-m5cwc
  I0420 14:34:34.541613 13 service_latency.go:363] Got endpoints: latency-svc-xbkt5 [750.466389ms]
  I0420 14:34:34.559844 13 service_latency.go:356] Created: latency-svc-zszjv
  I0420 14:34:34.588284 13 service_latency.go:363] Got endpoints: latency-svc-xx6jf [743.280109ms]
  E0420 14:34:34.597825      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:34:34.606514 13 service_latency.go:356] Created: latency-svc-h56l2
  I0420 14:34:34.637637 13 service_latency.go:363] Got endpoints: latency-svc-b7flq [741.883081ms]
  I0420 14:34:34.664631 13 service_latency.go:356] Created: latency-svc-4lkjq
  I0420 14:34:34.694598 13 service_latency.go:363] Got endpoints: latency-svc-q5kqr [753.719792ms]
  I0420 14:34:34.745843 13 service_latency.go:363] Got endpoints: latency-svc-fjv77 [753.636501ms]
  I0420 14:34:34.761577 13 service_latency.go:356] Created: latency-svc-ngxjb
  I0420 14:34:34.777043 13 service_latency.go:356] Created: latency-svc-56bvj
  I0420 14:34:34.793095 13 service_latency.go:363] Got endpoints: latency-svc-zthzp [749.523122ms]
  I0420 14:34:34.824781 13 service_latency.go:356] Created: latency-svc-8p5t4
  I0420 14:34:34.839664 13 service_latency.go:363] Got endpoints: latency-svc-j4htv [748.975535ms]
  I0420 14:34:34.856860 13 service_latency.go:356] Created: latency-svc-bklml
  I0420 14:34:34.891257 13 service_latency.go:363] Got endpoints: latency-svc-86hnw [751.593387ms]
  I0420 14:34:34.911253 13 service_latency.go:356] Created: latency-svc-kj7w2
  I0420 14:34:34.934880 13 service_latency.go:363] Got endpoints: latency-svc-fq4w8 [747.209042ms]
  I0420 14:34:34.953448 13 service_latency.go:356] Created: latency-svc-6br4j
  I0420 14:34:34.985296 13 service_latency.go:363] Got endpoints: latency-svc-g75xj [743.890578ms]
  I0420 14:34:35.004765 13 service_latency.go:356] Created: latency-svc-g8lpl
  I0420 14:34:35.049415 13 service_latency.go:363] Got endpoints: latency-svc-m5qxd [759.781106ms]
  I0420 14:34:35.073076 13 service_latency.go:356] Created: latency-svc-4cqjq
  I0420 14:34:35.094541 13 service_latency.go:363] Got endpoints: latency-svc-2jcmw [755.249967ms]
  I0420 14:34:35.114199 13 service_latency.go:356] Created: latency-svc-5lphq
  I0420 14:34:35.137552 13 service_latency.go:363] Got endpoints: latency-svc-sddfl [734.525896ms]
  I0420 14:34:35.157044 13 service_latency.go:356] Created: latency-svc-2npjz
  I0420 14:34:35.189208 13 service_latency.go:363] Got endpoints: latency-svc-smsk7 [751.031299ms]
  I0420 14:34:35.211919 13 service_latency.go:356] Created: latency-svc-t6mvh
  I0420 14:34:35.238772 13 service_latency.go:363] Got endpoints: latency-svc-m5cwc [745.763ms]
  I0420 14:34:35.260480 13 service_latency.go:356] Created: latency-svc-t856n
  I0420 14:34:35.290912 13 service_latency.go:363] Got endpoints: latency-svc-zszjv [749.140878ms]
  I0420 14:34:35.310637 13 service_latency.go:356] Created: latency-svc-6qdhd
  I0420 14:34:35.342076 13 service_latency.go:363] Got endpoints: latency-svc-h56l2 [753.690088ms]
  I0420 14:34:35.363495 13 service_latency.go:356] Created: latency-svc-tts8r
  I0420 14:34:35.388025 13 service_latency.go:363] Got endpoints: latency-svc-4lkjq [750.247809ms]
  I0420 14:34:35.412397 13 service_latency.go:356] Created: latency-svc-rvvkv
  I0420 14:34:35.436374 13 service_latency.go:363] Got endpoints: latency-svc-ngxjb [741.678436ms]
  I0420 14:34:35.458343 13 service_latency.go:356] Created: latency-svc-gddws
  I0420 14:34:35.488454 13 service_latency.go:363] Got endpoints: latency-svc-56bvj [742.293963ms]
  I0420 14:34:35.510456 13 service_latency.go:356] Created: latency-svc-ddnl9
  I0420 14:34:35.540810 13 service_latency.go:363] Got endpoints: latency-svc-8p5t4 [747.569475ms]
  I0420 14:34:35.583135 13 service_latency.go:356] Created: latency-svc-gmxnp
  I0420 14:34:35.593702 13 service_latency.go:363] Got endpoints: latency-svc-bklml [753.891371ms]
  E0420 14:34:35.598329      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:34:35.615943 13 service_latency.go:356] Created: latency-svc-95wb2
  I0420 14:34:35.642909 13 service_latency.go:363] Got endpoints: latency-svc-kj7w2 [751.539468ms]
  I0420 14:34:35.664533 13 service_latency.go:356] Created: latency-svc-9mqb5
  I0420 14:34:35.692588 13 service_latency.go:363] Got endpoints: latency-svc-6br4j [757.63092ms]
  I0420 14:34:35.721889 13 service_latency.go:356] Created: latency-svc-bs265
  I0420 14:34:35.738274 13 service_latency.go:363] Got endpoints: latency-svc-g8lpl [752.844319ms]
  I0420 14:34:35.769523 13 service_latency.go:356] Created: latency-svc-d8kbw
  I0420 14:34:35.794798 13 service_latency.go:363] Got endpoints: latency-svc-4cqjq [745.294826ms]
  I0420 14:34:35.819331 13 service_latency.go:356] Created: latency-svc-wpswv
  I0420 14:34:35.840341 13 service_latency.go:363] Got endpoints: latency-svc-5lphq [745.554762ms]
  I0420 14:34:35.861141 13 service_latency.go:356] Created: latency-svc-jrkwc
  I0420 14:34:35.887465 13 service_latency.go:363] Got endpoints: latency-svc-2npjz [749.761418ms]
  I0420 14:34:35.909092 13 service_latency.go:356] Created: latency-svc-rp7pd
  I0420 14:34:35.938305 13 service_latency.go:363] Got endpoints: latency-svc-t6mvh [748.950488ms]
  I0420 14:34:35.957635 13 service_latency.go:356] Created: latency-svc-q7ckd
  I0420 14:34:35.991782 13 service_latency.go:363] Got endpoints: latency-svc-t856n [752.910891ms]
  I0420 14:34:36.009352 13 service_latency.go:356] Created: latency-svc-p4ncb
  I0420 14:34:36.038212 13 service_latency.go:363] Got endpoints: latency-svc-6qdhd [747.163698ms]
  I0420 14:34:36.056379 13 service_latency.go:356] Created: latency-svc-p6kzl
  I0420 14:34:36.092679 13 service_latency.go:363] Got endpoints: latency-svc-tts8r [750.442301ms]
  I0420 14:34:36.114191 13 service_latency.go:356] Created: latency-svc-q6z2k
  I0420 14:34:36.139601 13 service_latency.go:363] Got endpoints: latency-svc-rvvkv [751.422008ms]
  I0420 14:34:36.159634 13 service_latency.go:356] Created: latency-svc-z7229
  I0420 14:34:36.190653 13 service_latency.go:363] Got endpoints: latency-svc-gddws [754.079828ms]
  I0420 14:34:36.209800 13 service_latency.go:356] Created: latency-svc-kqmjr
  I0420 14:34:36.252217 13 service_latency.go:363] Got endpoints: latency-svc-ddnl9 [763.092499ms]
  I0420 14:34:36.272609 13 service_latency.go:356] Created: latency-svc-tq82p
  I0420 14:34:36.288062 13 service_latency.go:363] Got endpoints: latency-svc-gmxnp [747.140911ms]
  I0420 14:34:36.314004 13 service_latency.go:356] Created: latency-svc-bv9gq
  I0420 14:34:36.336028 13 service_latency.go:363] Got endpoints: latency-svc-95wb2 [742.130483ms]
  I0420 14:34:36.359245 13 service_latency.go:356] Created: latency-svc-cnsm6
  I0420 14:34:36.388538 13 service_latency.go:363] Got endpoints: latency-svc-9mqb5 [745.433293ms]
  I0420 14:34:36.409590 13 service_latency.go:356] Created: latency-svc-xtxz7
  I0420 14:34:36.438663 13 service_latency.go:363] Got endpoints: latency-svc-bs265 [745.965707ms]
  I0420 14:34:36.455341 13 service_latency.go:356] Created: latency-svc-bj2vd
  I0420 14:34:36.488331 13 service_latency.go:363] Got endpoints: latency-svc-d8kbw [747.316165ms]
  I0420 14:34:36.510156 13 service_latency.go:356] Created: latency-svc-xkqdc
  I0420 14:34:36.539221 13 service_latency.go:363] Got endpoints: latency-svc-wpswv [744.311788ms]
  I0420 14:34:36.589569 13 service_latency.go:363] Got endpoints: latency-svc-jrkwc [749.114939ms]
  E0420 14:34:36.598140      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:34:36.638041 13 service_latency.go:363] Got endpoints: latency-svc-rp7pd [750.405094ms]
  I0420 14:34:36.689972 13 service_latency.go:363] Got endpoints: latency-svc-q7ckd [751.557061ms]
  I0420 14:34:36.744436 13 service_latency.go:363] Got endpoints: latency-svc-p4ncb [752.51651ms]
  I0420 14:34:36.791816 13 service_latency.go:363] Got endpoints: latency-svc-p6kzl [753.430455ms]
  I0420 14:34:36.838281 13 service_latency.go:363] Got endpoints: latency-svc-q6z2k [745.431814ms]
  I0420 14:34:36.894485 13 service_latency.go:363] Got endpoints: latency-svc-z7229 [754.713515ms]
  I0420 14:34:36.948682 13 service_latency.go:363] Got endpoints: latency-svc-kqmjr [757.314331ms]
  I0420 14:34:36.989777 13 service_latency.go:363] Got endpoints: latency-svc-tq82p [737.380929ms]
  I0420 14:34:37.041323 13 service_latency.go:363] Got endpoints: latency-svc-bv9gq [752.773288ms]
  I0420 14:34:37.092943 13 service_latency.go:363] Got endpoints: latency-svc-cnsm6 [754.771412ms]
  I0420 14:34:37.142193 13 service_latency.go:363] Got endpoints: latency-svc-xtxz7 [753.128136ms]
  I0420 14:34:37.196408 13 service_latency.go:363] Got endpoints: latency-svc-bj2vd [757.634071ms]
  I0420 14:34:37.245424 13 service_latency.go:363] Got endpoints: latency-svc-xkqdc [756.84987ms]
  I0420 14:34:37.247677 13 service_latency.go:114] Latencies: [42.931825ms 54.380153ms 72.66504ms 88.153313ms 106.863514ms 127.356347ms 143.289676ms 190.180061ms 194.505531ms 202.699895ms 221.075085ms 221.786997ms 224.635343ms 225.679862ms 226.016335ms 232.357738ms 233.079138ms 234.739329ms 260.406037ms 267.467694ms 267.64639ms 273.807442ms 274.624143ms 276.164926ms 278.762995ms 279.250823ms 289.975326ms 290.547794ms 294.956033ms 295.186639ms 295.217179ms 295.786495ms 296.220008ms 301.3481ms 301.43974ms 302.270665ms 303.436544ms 303.975504ms 304.228399ms 306.794642ms 307.363298ms 308.255051ms 308.889534ms 311.001283ms 313.178029ms 317.63124ms 319.40861ms 324.165902ms 354.037438ms 365.994071ms 417.577246ms 452.79863ms 496.055851ms 497.727203ms 510.182867ms 532.041775ms 566.652244ms 585.99925ms 630.020048ms 662.438012ms 680.7119ms 710.768269ms 715.290906ms 715.999804ms 717.86199ms 730.73781ms 734.525896ms 734.931568ms 735.126099ms 736.292312ms 737.380929ms 739.602884ms 739.858853ms 739.950055ms 740.263248ms 740.470891ms 741.476315ms 741.669034ms 741.678436ms 741.827195ms 741.883081ms 742.130483ms 742.2229ms 742.293963ms 742.467385ms 743.280109ms 743.792905ms 743.890578ms 744.199561ms 744.20979ms 744.311788ms 744.374739ms 744.464016ms 744.502731ms 744.594818ms 745.055556ms 745.140704ms 745.294826ms 745.350908ms 745.431814ms 745.433293ms 745.554762ms 745.763ms 745.831161ms 745.957873ms 745.965707ms 746.006803ms 746.552861ms 746.916292ms 747.140911ms 747.163698ms 747.209042ms 747.267726ms 747.316165ms 747.569475ms 748.137783ms 748.660208ms 748.950488ms 748.975535ms 749.114939ms 749.140878ms 749.158881ms 749.523122ms 749.544259ms 749.718411ms 749.739412ms 749.761418ms 749.885327ms 750.247809ms 750.256719ms 750.405094ms 750.423236ms 750.429386ms 750.442301ms 750.466389ms 750.515008ms 750.642956ms 750.917681ms 750.934516ms 751.031299ms 751.08435ms 751.191154ms 751.199582ms 751.305225ms 751.422008ms 751.539468ms 751.543695ms 751.557061ms 751.593387ms 751.780482ms 752.079674ms 752.347809ms 752.51651ms 752.623043ms 752.773288ms 752.844319ms 752.910891ms 752.987734ms 753.059883ms 753.128136ms 753.300811ms 753.430455ms 753.577546ms 753.636501ms 753.690088ms 753.719792ms 753.804537ms 753.891371ms 753.956064ms 754.079828ms 754.466755ms 754.713515ms 754.771412ms 755.249967ms 755.650388ms 755.92101ms 755.953336ms 756.837532ms 756.84987ms 756.981823ms 757.126216ms 757.257111ms 757.314331ms 757.63092ms 757.634071ms 758.309276ms 759.159886ms 759.426903ms 759.673059ms 759.781106ms 760.7397ms 763.092499ms 763.522165ms 765.146582ms 765.180145ms 766.675369ms 770.25714ms 783.979493ms 793.651775ms 796.379146ms]
  I0420 14:34:37.247900 13 service_latency.go:118] 50 %ile: 745.433293ms
  I0420 14:34:37.248167 13 service_latency.go:119] 90 %ile: 757.126216ms
  I0420 14:34:37.248547 13 service_latency.go:120] 99 %ile: 793.651775ms
  I0420 14:34:37.248656 13 service_latency.go:121] Total sample count: 200
  I0420 14:34:37.249588 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-949" for this suite. @ 04/20/24 14:34:37.266
• [10.837 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 04/20/24 14:34:37.284
  I0420 14:34:37.284523 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename apf @ 04/20/24 14:34:37.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:37.329
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:37.336
  STEP: getting /apis @ 04/20/24 14:34:37.344
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 04/20/24 14:34:37.354
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 04/20/24 14:34:37.363
  STEP: creating @ 04/20/24 14:34:37.367
  STEP: getting @ 04/20/24 14:34:37.402
  STEP: listing @ 04/20/24 14:34:37.409
  STEP: watching @ 04/20/24 14:34:37.415
  I0420 14:34:37.416011 13 flowcontrol.go:620] starting watch
  STEP: patching @ 04/20/24 14:34:37.418
  STEP: updating @ 04/20/24 14:34:37.432
  I0420 14:34:37.449125 13 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 04/20/24 14:34:37.449
  STEP: patching /status @ 04/20/24 14:34:37.456
  STEP: updating /status @ 04/20/24 14:34:37.467
  STEP: deleting @ 04/20/24 14:34:37.486
  STEP: deleting a collection @ 04/20/24 14:34:37.541
  E0420 14:34:37.598411      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:34:37.603183 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-9124" for this suite. @ 04/20/24 14:34:37.623
• [0.360 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 04/20/24 14:34:37.643
  I0420 14:34:37.643386 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename init-container @ 04/20/24 14:34:37.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:34:37.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:34:37.695
  STEP: creating the pod @ 04/20/24 14:34:37.703
  I0420 14:34:37.704065 13 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0420 14:34:38.599697      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:39.599846      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:40.600451      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:41.600548      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:42.601055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:43.602067      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:44.601684      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:45.603204      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:46.603815      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:47.604661      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:48.605989      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:49.607507      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:50.608432      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:51.609906      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:52.610085      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:53.610673      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:54.611245      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:55.611147      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:56.611496      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:57.611658      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:58.612987      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:34:59.613464      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:00.613609      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:01.614811      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:02.615028      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:03.616013      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:04.616462      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:05.616883      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:06.616992      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:07.618149      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:08.618330      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:09.619323      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:10.619524      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:11.620003      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:12.620897      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:13.621263      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:14.621493      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:15.621692      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:16.622129      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:35:17.021962 13 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-686aca3e-f750-4ce5-926a-72a2f71cafd7", GenerateName:"", Namespace:"init-container-9831", SelfLink:"", UID:"aa19f00a-ebd8-4a3b-a6a7-4a2fd373ae3c", ResourceVersion:"55800", Generation:0, CreationTimestamp:time.Date(2024, time.April, 20, 14, 34, 37, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"703945108"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 34, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00095dba8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 20, 14, 35, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00095dbd8), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-jwbfx", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0055e1c40), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-jwbfx", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-jwbfx", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-jwbfx", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00446e8a8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ier3chochiph-3", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0051d3c00), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00446e930)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00446e950)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00446e958), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00446e95c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004bf1ee0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 20, 14, 34, 38, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 20, 14, 34, 37, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 20, 14, 34, 37, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 20, 14, 34, 37, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 20, 14, 34, 37, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.121.103", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.121.103"}}, PodIP:"10.233.66.64", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.233.66.64"}}, StartTime:time.Date(2024, time.April, 20, 14, 34, 37, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000480e70)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000480ee0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"cri-o://6483b6e00e2c6e19e4d19b7ae23469e2a8bfdbbe3a9b2ed32797a6003a567003", Started:(*bool)(0xc00446e9fa), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0055e1ca0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00446ea0f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc0055e1c80), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00446e9df), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0420 14:35:17.024251 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9831" for this suite. @ 04/20/24 14:35:17.046
• [39.422 seconds]
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 04/20/24 14:35:17.066
  I0420 14:35:17.066468 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename gc @ 04/20/24 14:35:17.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:35:17.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:35:17.12
  STEP: create the deployment @ 04/20/24 14:35:17.127
  W0420 14:35:17.144244      13 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/20/24 14:35:17.145
  E0420 14:35:17.623139      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 04/20/24 14:35:17.663
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 04/20/24 14:35:17.682
  STEP: Gathering metrics @ 04/20/24 14:35:18.218
  I0420 14:35:18.453805 13 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0420 14:35:18.454533 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7109" for this suite. @ 04/20/24 14:35:18.467
• [1.414 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 04/20/24 14:35:18.482
  I0420 14:35:18.482703 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename pv @ 04/20/24 14:35:18.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:35:18.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:35:18.526
  STEP: Creating initial PV and PVC @ 04/20/24 14:35:18.533
  I0420 14:35:18.533918 13 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-6894" @ 04/20/24 14:35:18.564
  STEP: Listing PVCs in namespace "pv-6894" @ 04/20/24 14:35:18.572
  STEP: Reading "pvc-58qnl" Status @ 04/20/24 14:35:18.58
  STEP: Reading "pv-6894-7hxzv" Status @ 04/20/24 14:35:18.596
  STEP: Patching "pvc-58qnl" Status @ 04/20/24 14:35:18.611
  E0420 14:35:18.622526      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching "pv-6894-7hxzv" Status @ 04/20/24 14:35:18.637
  STEP: Updating "pvc-58qnl" Status @ 04/20/24 14:35:18.65
  STEP: Updating "pv-6894-7hxzv" Status @ 04/20/24 14:35:18.674
  I0420 14:35:18.729164 13 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I0420 14:35:18.729267 13 pv.go:201] Deleting PersistentVolumeClaim "pvc-58qnl"
  I0420 14:35:18.742141 13 pv.go:189] Deleting PersistentVolume "pv-6894-7hxzv"
  I0420 14:35:18.761457 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-6894" for this suite. @ 04/20/24 14:35:18.777
• [0.318 seconds]
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 04/20/24 14:35:18.801
  I0420 14:35:18.801107 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename runtimeclass @ 04/20/24 14:35:18.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:35:18.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:35:18.847
  I0420 14:35:18.867026 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1433" for this suite. @ 04/20/24 14:35:18.88
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 04/20/24 14:35:18.895
  I0420 14:35:18.895545 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename deployment @ 04/20/24 14:35:18.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:35:18.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:35:18.935
  I0420 14:35:18.961439 13 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  E0420 14:35:19.624912      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:20.625258      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:21.626280      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:22.626817      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:23.627164      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:35:23.973586 13 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 14:35:23.973
  I0420 14:35:23.973790 13 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0420 14:35:24.628621      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:25.629899      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:35:25.982679 13 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0420 14:35:26.001152 13 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0420 14:35:26.630182      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:27.630555      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:35:28.019928 13 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0420 14:35:28.035204 13 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0420 14:35:28.057519 13 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0420 14:35:28.086225 13 deployment.go:313] Updating deployment test-rollover-deployment
  I0420 14:35:28.086393 13 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0420 14:35:28.631223      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:29.631763      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:35:30.102867 13 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0420 14:35:30.131856 13 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0420 14:35:30.149661 13 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0420 14:35:30.149890 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 35, 26, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 35, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 35, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 35, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 14:35:30.632884      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:31.633589      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:35:32.169304 13 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0420 14:35:32.170940 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 35, 26, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 35, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 35, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 35, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 14:35:32.634161      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:33.634997      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:35:34.166915 13 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0420 14:35:34.167054 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 35, 26, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 35, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 35, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 35, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 14:35:34.636002      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:35.636616      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:35:36.172505 13 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0420 14:35:36.173315 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 35, 26, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 35, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 35, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 35, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 14:35:36.637921      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:37.638361      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:35:38.166334 13 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0420 14:35:38.166502 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 35, 26, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 35, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 14, 35, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 14, 35, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 14:35:38.638662      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:39.640375      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:35:40.171523 13 deployment.go:94] 
  I0420 14:35:40.172054 13 deployment.go:974] Ensure that both old replica sets have no replicas
  I0420 14:35:40.195995 13 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8366",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6dc84756-4666-4d7b-8a46-a8bd4e904529",
      ResourceVersion: (string) (len=5) "56023",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220539,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220539,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220526,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-679c966bdf\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0420 14:35:40.215113 13 deployment.go:39] New ReplicaSet "test-rollover-deployment-679c966bdf" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8366",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b0882988-de08-437e-a343-ff6932b328d6",
      ResourceVersion: (string) (len=5) "56013",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220528,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "6dc84756-4666-4d7b-8a46-a8bd4e904529",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 64 63 38 34 37  35 36 2d 34 36 36 36 2d  |\"6dc84756-4666-|
              00000120  34 64 37 62 2d 38 61 34  36 2d 61 38 62 64 34 65  |4d7b-8a46-a8bd4e|
              00000130  39 30 34 35 32 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |904529\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220539,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0420 14:35:40.222041 13 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0420 14:35:40.222658 13 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8366",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aa3d6a0f-545a-4014-8c06-780de72e8a97",
      ResourceVersion: (string) (len=5) "56022",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220518,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "6dc84756-4666-4d7b-8a46-a8bd4e904529",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220518,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220539,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  36 64 63 38 34 37 35 36  2d 34 36 36 36 2d 34 64  |6dc84756-4666-4d|
              000000c0  37 62 2d 38 61 34 36 2d  61 38 62 64 34 65 39 30  |7b-8a46-a8bd4e90|
              000000d0  34 35 32 39 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |4529\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220539,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0420 14:35:40.227529 13 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-65bd487b4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8366",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e229849b-9536-48f6-a049-9f6c52fead31",
      ResourceVersion: (string) (len=5) "55985",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220526,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "6dc84756-4666-4d7b-8a46-a8bd4e904529",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 64 63 38 34 37  35 36 2d 34 36 36 36 2d  |\"6dc84756-4666-|
              00000120  34 64 37 62 2d 38 61 34  36 2d 61 38 62 64 34 65  |4d7b-8a46-a8bd4e|
              00000130  39 30 34 35 32 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |904529\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0420 14:35:40.245197 13 deployment.go:67] Pod "test-rollover-deployment-679c966bdf-bmvpc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-679c966bdf-bmvpc",
      GenerateName: (string) (len=36) "test-rollover-deployment-679c966bdf-",
      Namespace: (string) (len=15) "deployment-8366",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e073993-4243-4430-a8e7-eb39706746ac",
      ResourceVersion: (string) (len=5) "55993",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220528,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
          UID: (types.UID) (len=36) "b0882988-de08-437e-a343-ff6932b328d6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 30  38 38 32 39 38 38 2d 64  |d\":\"b0882988-d|
              00000090  65 30 38 2d 34 33 37 65  2d 61 33 34 33 2d 66 66  |e08-437e-a343-ff|
              000000a0  36 39 33 32 62 33 32 38  64 36 5c 22 7d 22 3a 7b  |6932b328d6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  36 38 5c 22 7d 22 3a 7b  |.233.66.68\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j8fmz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j8fmz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220529,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849220528,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.103"
        }
      },
      PodIP: (string) (len=12) "10.233.66.68",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.68"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849220528,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849220528,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a",
          ContainerID: (string) (len=72) "cri-o://72f837ba4c7517f1806411cf8bcbe352de2c3590b617c39c0c46e500f77151d6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 14:35:40.253774 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8366" for this suite. @ 04/20/24 14:35:40.265
• [21.396 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 04/20/24 14:35:40.292
  I0420 14:35:40.292450 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 14:35:40.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:35:40.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:35:40.342
  STEP: set up a multi version CRD @ 04/20/24 14:35:40.348
  I0420 14:35:40.349753 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 14:35:40.641154      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:41.642407      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:42.642668      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:43.643200      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:44.645007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 04/20/24 14:35:45.236
  STEP: check the new version name is served @ 04/20/24 14:35:45.267
  E0420 14:35:45.646190      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:46.645166      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 04/20/24 14:35:46.732
  E0420 14:35:47.645427      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 04/20/24 14:35:47.682
  E0420 14:35:48.646236      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:49.646559      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:50.647457      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:35:51.326499 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-886" for this suite. @ 04/20/24 14:35:51.346
• [11.081 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 04/20/24 14:35:51.373
  I0420 14:35:51.373984 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:35:51.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:35:51.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:35:51.42
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-cdf3f6e3-689c-4e3d-b966-0835d73ca2d0 @ 04/20/24 14:35:51.432
  STEP: Creating the pod @ 04/20/24 14:35:51.441
  E0420 14:35:51.648177      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:52.652226      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-cdf3f6e3-689c-4e3d-b966-0835d73ca2d0 @ 04/20/24 14:35:53.505
  STEP: waiting to observe update in volume @ 04/20/24 14:35:53.516
  E0420 14:35:53.649952      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:54.650535      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:55.651126      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:56.651388      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:57.651561      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:58.652350      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:35:59.653790      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:00.654514      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:01.654682      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:02.655144      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:03.655307      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:04.655765      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:05.656547      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:06.657167      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:07.657884      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:08.659132      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:09.659516      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:10.660251      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:11.661364      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:12.661598      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:13.662843      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:14.663297      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:15.664362      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:16.665186      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:17.665894      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:18.666536      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:19.666935      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:20.667636      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:21.668650      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:22.669093      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:23.670079      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:24.670909      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:25.670633      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:26.670983      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:27.671905      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:28.672562      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:29.672850      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:30.673190      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:31.673996      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:32.674237      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:33.674523      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:34.676602      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:35.674962      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:36.675113      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:37.676236      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:38.676960      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:39.677462      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:40.677401      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:41.677551      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:42.678050      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:43.678925      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:44.679493      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:45.680024      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:46.681040      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:47.681295      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:48.681444      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:49.681849      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:50.682888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:51.682657      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:52.683266      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:53.683665      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:54.684651      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:55.686616      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:56.686218      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:57.687301      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:58.687441      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:36:59.691848      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:37:00.212133 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-370" for this suite. @ 04/20/24 14:37:00.229
• [68.872 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 04/20/24 14:37:00.247
  I0420 14:37:00.247602 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename events @ 04/20/24 14:37:00.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:37:00.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:37:00.308
  STEP: creating a test event @ 04/20/24 14:37:00.314
  STEP: listing events in all namespaces @ 04/20/24 14:37:00.328
  STEP: listing events in test namespace @ 04/20/24 14:37:00.426
  STEP: listing events with field selection filtering on source @ 04/20/24 14:37:00.434
  STEP: listing events with field selection filtering on reportingController @ 04/20/24 14:37:00.441
  STEP: getting the test event @ 04/20/24 14:37:00.448
  STEP: patching the test event @ 04/20/24 14:37:00.454
  STEP: getting the test event @ 04/20/24 14:37:00.478
  STEP: updating the test event @ 04/20/24 14:37:00.484
  STEP: getting the test event @ 04/20/24 14:37:00.502
  STEP: deleting the test event @ 04/20/24 14:37:00.509
  STEP: listing events in all namespaces @ 04/20/24 14:37:00.527
  STEP: listing events in test namespace @ 04/20/24 14:37:00.589
  I0420 14:37:00.598763 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5426" for this suite. @ 04/20/24 14:37:00.61
• [0.380 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 04/20/24 14:37:00.628
  I0420 14:37:00.628817 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename pod-network-test @ 04/20/24 14:37:00.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:37:00.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:37:00.682
  STEP: Performing setup for networking test in namespace pod-network-test-6983 @ 04/20/24 14:37:00.688
  STEP: creating a selector @ 04/20/24 14:37:00.688
  STEP: Creating the service pods in kubernetes @ 04/20/24 14:37:00.688
  I0420 14:37:00.688511 13 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0420 14:37:00.691101      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:01.691849      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:02.691977      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:03.692133      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:04.693162      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:05.713491      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:06.695158      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:07.696127      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:08.696995      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:09.697092      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:10.698163      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:11.698626      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:12.699177      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/20/24 14:37:12.866
  E0420 14:37:13.707969      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:14.703434      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:37:14.899345 13 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0420 14:37:14.899490 13 networking.go:42] Breadth first check of 10.233.64.173 on host 192.168.121.80...
  I0420 14:37:14.907417 13 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.71:9080/dial?request=hostname&protocol=http&host=10.233.64.173&port=8083&tries=1'] Namespace:pod-network-test-6983 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 14:37:14.907634 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 14:37:14.911472 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 14:37:14.911638 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6983/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.71%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.64.173%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0420 14:37:15.081590 13 utils.go:331] Waiting for responses: map[]
  I0420 14:37:15.082246 13 utils.go:335] reached 10.233.64.173 after 0/1 tries
  I0420 14:37:15.082288 13 networking.go:42] Breadth first check of 10.233.65.167 on host 192.168.121.188...
  I0420 14:37:15.106462 13 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.71:9080/dial?request=hostname&protocol=http&host=10.233.65.167&port=8083&tries=1'] Namespace:pod-network-test-6983 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 14:37:15.106535 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 14:37:15.109281 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 14:37:15.109974 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6983/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.71%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.65.167%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0420 14:37:15.211967 13 utils.go:331] Waiting for responses: map[]
  I0420 14:37:15.212046 13 utils.go:335] reached 10.233.65.167 after 0/1 tries
  I0420 14:37:15.212070 13 networking.go:42] Breadth first check of 10.233.66.70 on host 192.168.121.103...
  I0420 14:37:15.218896 13 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.71:9080/dial?request=hostname&protocol=http&host=10.233.66.70&port=8083&tries=1'] Namespace:pod-network-test-6983 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 14:37:15.218949 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 14:37:15.221417 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 14:37:15.222326 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6983/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.71%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.66.70%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0420 14:37:15.334049 13 utils.go:331] Waiting for responses: map[]
  I0420 14:37:15.334159 13 utils.go:335] reached 10.233.66.70 after 0/1 tries
  I0420 14:37:15.334304 13 networking.go:53] Going to retry 0 out of 3 pods....
  I0420 14:37:15.335227 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6983" for this suite. @ 04/20/24 14:37:15.344
• [14.729 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 04/20/24 14:37:15.36
  I0420 14:37:15.360227 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename configmap @ 04/20/24 14:37:15.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:37:15.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:37:15.41
  STEP: creating a ConfigMap @ 04/20/24 14:37:15.416
  STEP: fetching the ConfigMap @ 04/20/24 14:37:15.426
  STEP: patching the ConfigMap @ 04/20/24 14:37:15.44
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 04/20/24 14:37:15.452
  STEP: deleting the ConfigMap by collection with a label selector @ 04/20/24 14:37:15.462
  STEP: listing all ConfigMaps in test namespace @ 04/20/24 14:37:15.477
  I0420 14:37:15.496972 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6030" for this suite. @ 04/20/24 14:37:15.514
• [0.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 04/20/24 14:37:15.531
  I0420 14:37:15.532006 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename gc @ 04/20/24 14:37:15.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:37:15.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:37:15.57
  STEP: create the rc @ 04/20/24 14:37:15.583
  W0420 14:37:15.594571      13 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0420 14:37:15.704023      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:16.704636      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:17.705315      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:18.705593      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:19.706766      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:20.715913      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 04/20/24 14:37:21.624
  STEP: wait for the rc to be deleted @ 04/20/24 14:37:21.686
  E0420 14:37:21.707682      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:22.708600      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:37:22.812254 13 garbage_collector.go:670] 80 pods remaining
  I0420 14:37:22.812348 13 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0420 14:37:22.812365 13 garbage_collector.go:678] 
  E0420 14:37:23.709729      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:37:23.846340 13 garbage_collector.go:670] 73 pods remaining
  I0420 14:37:23.846423 13 garbage_collector.go:677] 71 pods has nil DeletionTimestamp
  I0420 14:37:23.846441 13 garbage_collector.go:678] 
  E0420 14:37:24.710278      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:37:24.757652 13 garbage_collector.go:670] 60 pods remaining
  I0420 14:37:24.758076 13 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I0420 14:37:24.758111 13 garbage_collector.go:678] 
  E0420 14:37:25.711142      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:37:25.860299 13 garbage_collector.go:670] 42 pods remaining
  I0420 14:37:25.860418 13 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0420 14:37:25.860437 13 garbage_collector.go:678] 
  E0420 14:37:26.713674      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:37:26.736525 13 garbage_collector.go:670] 31 pods remaining
  I0420 14:37:26.736625 13 garbage_collector.go:677] 30 pods has nil DeletionTimestamp
  I0420 14:37:26.736874 13 garbage_collector.go:678] 
  E0420 14:37:27.714502      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:37:27.843697 13 garbage_collector.go:670] 20 pods remaining
  I0420 14:37:27.843912 13 garbage_collector.go:677] 18 pods has nil DeletionTimestamp
  I0420 14:37:27.843978 13 garbage_collector.go:678] 
  E0420 14:37:28.714523      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:37:28.714670 13 garbage_collector.go:670] 0 pods remaining
  I0420 14:37:28.714750 13 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0420 14:37:28.714833 13 garbage_collector.go:678] 
  STEP: Gathering metrics @ 04/20/24 14:37:29.713
  E0420 14:37:29.715868      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:37:30.157566 13 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0420 14:37:30.158373 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1813" for this suite. @ 04/20/24 14:37:30.177
• [14.662 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 04/20/24 14:37:30.197
  I0420 14:37:30.197967 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:37:30.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:37:30.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:37:30.261
  STEP: starting the proxy server @ 04/20/24 14:37:30.268
  I0420 14:37:30.271554 13 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2391 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 04/20/24 14:37:30.483
  I0420 14:37:30.517255 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0420 14:37:30.526379 13 kubectl.go:2223] kubectl proxy stdout: Starting to serve on 127.0.0.1:36219

  I0420 14:37:30.526785 13 kubectl.go:2228] kubectl proxy stderr: W0420 14:37:30.482188     582 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-2391" for this suite. @ 04/20/24 14:37:30.539
• [0.372 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 04/20/24 14:37:30.605
  I0420 14:37:30.605523 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:37:30.613
  E0420 14:37:30.715901      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:37:30.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:37:30.739
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:37:30.748
  E0420 14:37:31.716368      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:32.717112      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:33.717599      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:34.718247      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:37:34.876
  I0420 14:37:34.895362 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod downwardapi-volume-2303639f-ff7e-4680-b1d6-60dc648cf29d container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:37:34.932
  I0420 14:37:35.029827 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8208" for this suite. @ 04/20/24 14:37:35.046
• [4.474 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 04/20/24 14:37:35.077
  I0420 14:37:35.077803 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:37:35.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:37:35.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:37:35.161
  STEP: Creating projection with secret that has name projected-secret-test-4b4f885b-ab9b-4bda-bb01-abc07181a7bc @ 04/20/24 14:37:35.17
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:37:35.185
  E0420 14:37:35.719344      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:36.720201      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:37.720530      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:38.720782      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:37:39.273
  I0420 14:37:39.287477 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-projected-secrets-b7b23878-a033-4d39-8c51-4dd21b9b8957 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:37:39.321
  I0420 14:37:39.417539 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7504" for this suite. @ 04/20/24 14:37:39.448
• [4.411 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 04/20/24 14:37:39.49
  I0420 14:37:39.490129 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:37:39.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:37:39.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:37:39.538
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:37:39.543
  E0420 14:37:39.722081      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:40.722335      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:41.722481      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:42.723221      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:37:43.592
  I0420 14:37:43.601878 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod downwardapi-volume-59142b0a-40b6-401d-b37e-795d19790406 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:37:43.619
  I0420 14:37:43.654567 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1775" for this suite. @ 04/20/24 14:37:43.663
• [4.183 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 04/20/24 14:37:43.673
  I0420 14:37:43.673800 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:37:43.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:37:43.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:37:43.708
  STEP: Starting the proxy @ 04/20/24 14:37:43.713
  I0420 14:37:43.716184 13 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-8291 proxy --unix-socket=/tmp/kubectl-proxy-unix1319937601/test'
  E0420 14:37:43.723690      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving proxy /api/ output @ 04/20/24 14:37:43.82
  I0420 14:37:43.826585 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8291" for this suite. @ 04/20/24 14:37:43.839
• [0.179 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 04/20/24 14:37:43.856
  I0420 14:37:43.856660 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 14:37:43.86
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:37:43.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:37:43.897
  I0420 14:37:43.923759 13 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0420 14:37:44.724347      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:45.725032      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:46.725268      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:47.726095      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:48.726359      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:37:48.932805 13 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 14:37:48.932
  STEP: Scaling up "test-rs" replicaset @ 04/20/24 14:37:48.933
  I0420 14:37:48.954342 13 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 04/20/24 14:37:48.954
  I0420 14:37:48.978255 13 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7959 with ReadyReplicas 1, AvailableReplicas 1
  I0420 14:37:49.021584 13 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7959 with ReadyReplicas 1, AvailableReplicas 1
  I0420 14:37:49.173323 13 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7959 with ReadyReplicas 1, AvailableReplicas 1
  I0420 14:37:49.196421 13 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7959 with ReadyReplicas 1, AvailableReplicas 1
  E0420 14:37:49.726878      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:37:50.052178 13 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7959 with ReadyReplicas 2, AvailableReplicas 2
  I0420 14:37:50.508610 13 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-7959 with ReadyReplicas 3 found true
  I0420 14:37:50.509395 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7959" for this suite. @ 04/20/24 14:37:50.524
• [6.688 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 04/20/24 14:37:50.544
  I0420 14:37:50.544305 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:37:50.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:37:50.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:37:50.596
  STEP: Creating secret with name secret-test-map-157742d6-71a3-485e-aaf9-41942e462e3f @ 04/20/24 14:37:50.604
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:37:50.616
  E0420 14:37:50.726945      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:51.727440      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:52.728045      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:53.728656      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:37:54.667
  I0420 14:37:54.674512 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-secrets-4c12fb8b-6e5b-4f17-9e67-8454061be1fe container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:37:54.689
  E0420 14:37:54.729687      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:37:54.763984 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4949" for this suite. @ 04/20/24 14:37:54.778
• [4.247 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 04/20/24 14:37:54.79
  I0420 14:37:54.790858 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/20/24 14:37:54.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:37:54.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:37:54.834
  STEP: create the container to handle the HTTPGet hook request. @ 04/20/24 14:37:54.85
  E0420 14:37:55.731264      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:56.731269      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/20/24 14:37:56.909
  E0420 14:37:57.731855      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:37:58.732376      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 04/20/24 14:37:58.978
  E0420 14:37:59.732843      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:00.732888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 04/20/24 14:38:01.007
  I0420 14:38:01.020875 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7485" for this suite. @ 04/20/24 14:38:01.028
• [6.250 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 04/20/24 14:38:01.041
  I0420 14:38:01.041226 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 14:38:01.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:38:01.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:38:01.075
  I0420 14:38:01.079643 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 14:38:01.734160      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:02.734806      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:03.735223      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0420 14:38:03.784703      13 warnings.go:70] unknown field "alpha"
  W0420 14:38:03.784795      13 warnings.go:70] unknown field "beta"
  W0420 14:38:03.784806      13 warnings.go:70] unknown field "delta"
  W0420 14:38:03.784814      13 warnings.go:70] unknown field "epsilon"
  W0420 14:38:03.784822      13 warnings.go:70] unknown field "gamma"
  I0420 14:38:04.354350 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8771" for this suite. @ 04/20/24 14:38:04.365
• [3.338 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 04/20/24 14:38:04.38
  I0420 14:38:04.380791 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 14:38:04.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:38:04.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:38:04.43
  STEP: Creating a ResourceQuota with terminating scope @ 04/20/24 14:38:04.433
  STEP: Ensuring ResourceQuota status is calculated @ 04/20/24 14:38:04.445
  E0420 14:38:04.735858      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:05.736043      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 04/20/24 14:38:06.455
  STEP: Ensuring ResourceQuota status is calculated @ 04/20/24 14:38:06.465
  E0420 14:38:06.736156      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:07.737426      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 04/20/24 14:38:08.473
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 04/20/24 14:38:08.495
  E0420 14:38:08.738199      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:09.739258      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 04/20/24 14:38:10.503
  E0420 14:38:10.739685      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:11.740643      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/20/24 14:38:12.509
  STEP: Ensuring resource quota status released the pod usage @ 04/20/24 14:38:12.525
  E0420 14:38:12.741600      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:13.742210      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 04/20/24 14:38:14.531
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 04/20/24 14:38:14.555
  E0420 14:38:14.742999      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:15.743152      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 04/20/24 14:38:16.563
  E0420 14:38:16.743243      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:17.743663      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/20/24 14:38:18.569
  STEP: Ensuring resource quota status released the pod usage @ 04/20/24 14:38:18.588
  E0420 14:38:18.744376      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:19.745237      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:38:20.596522 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3524" for this suite. @ 04/20/24 14:38:20.604
• [16.237 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 04/20/24 14:38:20.617
  I0420 14:38:20.617811 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/20/24 14:38:20.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:38:20.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:38:20.656
  E0420 14:38:20.745982      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:21.746668      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 04/20/24 14:38:22.72
  STEP: Cleaning up the configmap @ 04/20/24 14:38:22.73
  STEP: Cleaning up the pod @ 04/20/24 14:38:22.739
  E0420 14:38:22.746777      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:38:22.759941 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-5694" for this suite. @ 04/20/24 14:38:22.767
• [2.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 04/20/24 14:38:22.778
  I0420 14:38:22.778587 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/20/24 14:38:22.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:38:22.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:38:22.809
  I0420 14:38:22.822285 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4418" for this suite. @ 04/20/24 14:38:22.83
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3572
  STEP: Creating a kubernetes client @ 04/20/24 14:38:22.842
  I0420 14:38:22.842558 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename services @ 04/20/24 14:38:22.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:38:22.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:38:22.875
  STEP: creating a collection of services @ 04/20/24 14:38:22.879
  I0420 14:38:22.880004 13 service.go:3608] Creating e2e-svc-a-fjqg4
  I0420 14:38:22.897928 13 service.go:3608] Creating e2e-svc-b-kct7h
  I0420 14:38:22.914972 13 service.go:3608] Creating e2e-svc-c-bl267
  STEP: deleting service collection @ 04/20/24 14:38:22.945
  I0420 14:38:23.005115 13 service.go:3643] Collection of services has been deleted
  I0420 14:38:23.005628 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3095" for this suite. @ 04/20/24 14:38:23.016
• [0.192 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 04/20/24 14:38:23.034
  I0420 14:38:23.034762 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename disruption @ 04/20/24 14:38:23.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:38:23.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:38:23.098
  STEP: Creating a kubernetes client @ 04/20/24 14:38:23.102
  I0420 14:38:23.102684 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename disruption-2 @ 04/20/24 14:38:23.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:38:23.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:38:23.133
  STEP: Waiting for the pdb to be processed @ 04/20/24 14:38:23.147
  E0420 14:38:23.747842      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:24.748539      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 04/20/24 14:38:25.16
  STEP: Waiting for the pdb to be processed @ 04/20/24 14:38:25.182
  E0420 14:38:25.748648      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:26.749260      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 04/20/24 14:38:27.189
  STEP: listing a collection of PDBs in namespace disruption-6944 @ 04/20/24 14:38:27.195
  STEP: deleting a collection of PDBs @ 04/20/24 14:38:27.199
  STEP: Waiting for the PDB collection to be deleted @ 04/20/24 14:38:27.219
  I0420 14:38:27.224202 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-6263" for this suite. @ 04/20/24 14:38:27.231
  I0420 14:38:27.243668 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6944" for this suite. @ 04/20/24 14:38:27.251
• [4.230 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 04/20/24 14:38:27.265
  I0420 14:38:27.265457 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/20/24 14:38:27.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:38:27.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:38:27.3
  STEP: getting /apis @ 04/20/24 14:38:27.316
  STEP: getting /apis/admissionregistration.k8s.io @ 04/20/24 14:38:27.322
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 04/20/24 14:38:27.324
  STEP: creating @ 04/20/24 14:38:27.325
  STEP: getting @ 04/20/24 14:38:27.347
  STEP: listing @ 04/20/24 14:38:27.351
  STEP: watching @ 04/20/24 14:38:27.356
  I0420 14:38:27.356826 13 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 04/20/24 14:38:27.358
  STEP: updating @ 04/20/24 14:38:27.37
  I0420 14:38:27.384553 13 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 04/20/24 14:38:27.384
  STEP: deleting a collection @ 04/20/24 14:38:27.406
  I0420 14:38:27.436158 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9513" for this suite. @ 04/20/24 14:38:27.442
• [0.188 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 04/20/24 14:38:27.453
  I0420 14:38:27.453891 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename kubelet-test @ 04/20/24 14:38:27.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:38:27.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:38:27.486
  E0420 14:38:27.750266      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:28.751139      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:38:29.528070 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9326" for this suite. @ 04/20/24 14:38:29.535
• [2.093 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 04/20/24 14:38:29.547
  I0420 14:38:29.547847 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:38:29.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:38:29.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:38:29.578
  STEP: Setting up server cert @ 04/20/24 14:38:29.614
  E0420 14:38:29.752133      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:38:30.045
  STEP: Deploying the webhook pod @ 04/20/24 14:38:30.058
  STEP: Wait for the deployment to be ready @ 04/20/24 14:38:30.074
  I0420 14:38:30.086302 13 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0420 14:38:30.753140      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:31.754010      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 14:38:32.104
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:38:32.12
  E0420 14:38:32.754970      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:38:33.121921 13 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/20/24 14:38:33.227
  STEP: Creating a configMap that should be mutated @ 04/20/24 14:38:33.256
  STEP: Deleting the collection of validation webhooks @ 04/20/24 14:38:33.3
  STEP: Creating a configMap that should not be mutated @ 04/20/24 14:38:33.375
  I0420 14:38:33.460161 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-363" for this suite. @ 04/20/24 14:38:33.47
  STEP: Destroying namespace "webhook-markers-1386" for this suite. @ 04/20/24 14:38:33.484
• [3.948 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 04/20/24 14:38:33.496
  I0420 14:38:33.497849 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename sysctl @ 04/20/24 14:38:33.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:38:33.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:38:33.537
  STEP: Creating a pod with one valid and two invalid sysctls @ 04/20/24 14:38:33.541
  I0420 14:38:33.547921 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-3698" for this suite. @ 04/20/24 14:38:33.554
• [0.067 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 04/20/24 14:38:33.565
  I0420 14:38:33.565224 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename pod-network-test @ 04/20/24 14:38:33.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:38:33.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:38:33.592
  STEP: Performing setup for networking test in namespace pod-network-test-3486 @ 04/20/24 14:38:33.595
  STEP: creating a selector @ 04/20/24 14:38:33.595
  STEP: Creating the service pods in kubernetes @ 04/20/24 14:38:33.595
  I0420 14:38:33.596013 13 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0420 14:38:33.755478      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:34.755614      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:35.756502      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:36.756923      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:37.757817      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:38.758379      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:39.759151      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:40.759285      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:41.760153      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:42.760953      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:43.761972      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:44.762375      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:45.762845      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:46.763598      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:47.764534      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:48.765079      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:49.766157      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:50.766475      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:51.767126      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:52.768097      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:53.768594      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:54.769176      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/20/24 14:38:55.752
  E0420 14:38:55.769997      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:56.770999      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:38:57.771233      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:38:57.827008 13 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0420 14:38:57.827127 13 utils.go:472] Going to poll 10.233.64.207 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0420 14:38:57.832841 13 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.64.207 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3486 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 14:38:57.832925 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 14:38:57.834770 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 14:38:57.834920 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3486/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.64.207+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0420 14:38:58.771373      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:38:58.969107 13 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I0420 14:38:58.969255 13 utils.go:472] Going to poll 10.233.65.202 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0420 14:38:58.974835 13 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.65.202 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3486 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 14:38:58.975095 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 14:38:58.976919 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 14:38:58.977043 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3486/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.65.202+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0420 14:38:59.771864      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:39:00.075311 13 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I0420 14:39:00.075387 13 utils.go:472] Going to poll 10.233.66.119 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0420 14:39:00.081986 13 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.66.119 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3486 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 14:39:00.082044 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 14:39:00.083940 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 14:39:00.084045 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3486/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.66.119+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E0420 14:39:00.772492      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:39:01.176997 13 utils.go:489] Found all 1 expected endpoints: [netserver-2]
  I0420 14:39:01.177244 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3486" for this suite. @ 04/20/24 14:39:01.185
• [27.632 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 04/20/24 14:39:01.199
  I0420 14:39:01.199385 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 14:39:01.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:39:01.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:39:01.249
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 04/20/24 14:39:01.257
  E0420 14:39:01.772648      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:02.773847      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 04/20/24 14:39:03.295
  STEP: Then the orphan pod is adopted @ 04/20/24 14:39:03.306
  E0420 14:39:03.774574      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:39:04.325274 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2364" for this suite. @ 04/20/24 14:39:04.334
• [3.146 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 04/20/24 14:39:04.346
  I0420 14:39:04.346660 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 14:39:04.349
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:39:04.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:39:04.384
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/20/24 14:39:04.39
  E0420 14:39:04.775624      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:05.775223      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:06.775520      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:07.776097      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:39:08.434
  I0420 14:39:08.441246 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-7c58a7bd-1d10-41a9-b0dc-548b1198c468 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:39:08.452
  I0420 14:39:08.479597 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6708" for this suite. @ 04/20/24 14:39:08.486
• [4.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 04/20/24 14:39:08.502
  I0420 14:39:08.502597 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/20/24 14:39:08.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:39:08.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:39:08.54
  STEP: getting /apis @ 04/20/24 14:39:08.555
  STEP: getting /apis/admissionregistration.k8s.io @ 04/20/24 14:39:08.563
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 04/20/24 14:39:08.565
  STEP: creating @ 04/20/24 14:39:08.567
  STEP: getting @ 04/20/24 14:39:08.599
  STEP: listing @ 04/20/24 14:39:08.604
  STEP: watching @ 04/20/24 14:39:08.61
  I0420 14:39:08.610535 13 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 04/20/24 14:39:08.612
  STEP: updating @ 04/20/24 14:39:08.627
  I0420 14:39:08.648827 13 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 04/20/24 14:39:08.649
  STEP: patching /status @ 04/20/24 14:39:08.657
  STEP: updating /status @ 04/20/24 14:39:08.671
  STEP: deleting @ 04/20/24 14:39:08.687
  STEP: deleting a collection @ 04/20/24 14:39:08.714
  I0420 14:39:08.744403 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5313" for this suite. @ 04/20/24 14:39:08.753
• [0.267 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 04/20/24 14:39:08.769
  I0420 14:39:08.769428 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:39:08.772
  E0420 14:39:08.776481      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:39:08.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:39:08.808
  STEP: Creating configMap with name projected-configmap-test-volume-afec9252-440f-4397-974f-375784d991b0 @ 04/20/24 14:39:08.813
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:39:08.82
  E0420 14:39:09.777950      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:10.777987      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:11.778882      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:12.779755      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:39:12.861
  I0420 14:39:12.866338 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-projected-configmaps-66c9eb0d-5cd4-4334-abc1-c4b233d6ecc8 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:39:12.882
  I0420 14:39:12.906798 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2913" for this suite. @ 04/20/24 14:39:12.912
• [4.160 seconds]
------------------------------
S
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 04/20/24 14:39:12.93
  I0420 14:39:12.930102 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename hostport @ 04/20/24 14:39:12.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:39:12.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:39:12.971
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 04/20/24 14:39:12.994
  E0420 14:39:13.780334      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:14.780316      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.121.103 on the node which pod1 resides and expect scheduled @ 04/20/24 14:39:15.042
  E0420 14:39:15.781361      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:16.781570      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.121.103 but use UDP protocol on the node which pod2 resides @ 04/20/24 14:39:17.074
  E0420 14:39:17.782448      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:18.782541      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:19.783162      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:20.783980      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 04/20/24 14:39:21.141
  I0420 14:39:21.142005 13 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.121.103 http://127.0.0.1:54323/hostname] Namespace:hostport-1522 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 14:39:21.142060 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 14:39:21.143971 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 14:39:21.144110 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-1522/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.121.103+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.103, port: 54323 @ 04/20/24 14:39:21.257
  I0420 14:39:21.258053 13 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.121.103:54323/hostname] Namespace:hostport-1522 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 14:39:21.258089 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 14:39:21.260315 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 14:39:21.260431 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-1522/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.121.103%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.103, port: 54323 UDP @ 04/20/24 14:39:21.344
  I0420 14:39:21.344378 13 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.121.103 54323] Namespace:hostport-1522 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 14:39:21.344410 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 14:39:21.346553 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 14:39:21.346682 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-1522/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.121.103+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0420 14:39:21.784135      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:22.785072      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:23.785240      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:24.786049      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:25.785810      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:39:26.428933 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-1522" for this suite. @ 04/20/24 14:39:26.436
• [13.519 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 04/20/24 14:39:26.451
  I0420 14:39:26.451220 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 14:39:26.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:39:26.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:39:26.488
  STEP: Creating simple DaemonSet "daemon-set" @ 04/20/24 14:39:26.539
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 14:39:26.556
  I0420 14:39:26.575769 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0420 14:39:26.576394 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  E0420 14:39:26.786026      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:39:27.572260 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0420 14:39:27.572355 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  E0420 14:39:27.786315      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:39:28.571030 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0420 14:39:28.571103 13 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 04/20/24 14:39:28.575
  I0420 14:39:28.580801 13 daemon_set.go:912] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 04/20/24 14:39:28.58
  I0420 14:39:28.600748 13 daemon_set.go:932] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 04/20/24 14:39:28.601
  I0420 14:39:28.605872 13 daemon_set.go:957] Observed &DaemonSet event: ADDED
  I0420 14:39:28.606152 13 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0420 14:39:28.606847 13 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0420 14:39:28.607310 13 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0420 14:39:28.607885 13 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0420 14:39:28.608324 13 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0420 14:39:28.608435 13 daemon_set.go:950] Found daemon set daemon-set in namespace daemonsets-3479 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0420 14:39:28.608516 13 daemon_set.go:961] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 04/20/24 14:39:28.608
  STEP: watching for the daemon set status to be patched @ 04/20/24 14:39:28.622
  I0420 14:39:28.627141 13 daemon_set.go:1001] Observed &DaemonSet event: ADDED
  I0420 14:39:28.627536 13 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0420 14:39:28.629037 13 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0420 14:39:28.630191 13 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0420 14:39:28.631766 13 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0420 14:39:28.632784 13 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0420 14:39:28.633206 13 daemon_set.go:997] Observed daemon set daemon-set in namespace daemonsets-3479 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0420 14:39:28.633885 13 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0420 14:39:28.633956 13 daemon_set.go:994] Found daemon set daemon-set in namespace daemonsets-3479 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0420 14:39:28.634002 13 daemon_set.go:1005] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 14:39:28.644
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3479, will wait for the garbage collector to delete the pods @ 04/20/24 14:39:28.644
  I0420 14:39:28.715244 13 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.993867ms
  E0420 14:39:28.787312      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:39:28.815813 13 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.575412ms
  E0420 14:39:29.787950      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:30.788530      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:39:31.525335 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0420 14:39:31.525527 13 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0420 14:39:31.536607 13 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"58908"},"items":null}

  I0420 14:39:31.548462 13 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"58908"},"items":null}

  I0420 14:39:31.611118 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3479" for this suite. @ 04/20/24 14:39:31.619
• [5.183 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 04/20/24 14:39:31.635
  I0420 14:39:31.636005 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 14:39:31.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:39:31.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:39:31.709
  STEP: creating the pod with failed condition @ 04/20/24 14:39:31.714
  E0420 14:39:31.788990      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:32.788901      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:33.789031      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:34.789251      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:35.790144      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:36.791127      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:37.791895      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:38.792785      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:39.793307      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:40.793768      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:41.794254      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:42.794757      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:43.795551      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:44.795811      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:45.796077      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:46.796676      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:47.796804      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:48.796947      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:49.797101      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:50.797304      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:51.798407      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:52.798972      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:53.799855      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:54.800328      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:55.800491      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:56.800794      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:57.801858      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:58.802883      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:39:59.803607      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:00.803917      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:01.804803      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:02.805843      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:03.806494      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:04.806639      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:05.806981      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:06.807182      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:07.808054      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:08.808477      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:09.808848      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:10.809225      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:11.809445      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:12.810159      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:13.810752      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:14.810604      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:15.811047      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:16.811103      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:17.811892      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:18.812137      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:19.812214      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:20.812801      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:21.812966      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:22.813420      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:23.814410      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:24.815334      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:25.815903      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:26.816148      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:27.817070      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:28.817385      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:29.817964      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:30.818373      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:31.818559      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:32.819512      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:33.820087      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:34.820255      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:35.821027      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:36.822012      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:37.822911      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:38.824073      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:39.824454      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:40.825161      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:41.825339      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:42.825625      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:43.826426      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:44.828048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:45.827617      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:46.828141      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:47.828951      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:48.830036      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:49.831006      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:50.833102      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:51.834054      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:52.835083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:53.835387      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:54.835481      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:55.835660      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:56.836077      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:57.837222      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:58.837257      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:40:59.837627      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:00.837668      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:01.838697      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:02.839192      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:03.839347      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:04.839503      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:05.840232      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:06.840389      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:07.841547      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:08.842166      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:09.842406      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:10.842935      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:11.843259      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:12.844244      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:13.844486      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:14.845492      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:15.846013      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:16.846450      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:17.847136      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:18.847265      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:19.849068      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:20.849181      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:21.850296      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:22.851082      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:23.851913      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:24.852087      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:25.852418      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:26.852830      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:27.852917      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:28.853268      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:29.853642      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:30.853698      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 04/20/24 14:41:31.735
  E0420 14:41:31.854225      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:41:32.266838 13 pod_client.go:141] Successfully updated pod "var-expansion-13ed9905-45e2-401d-80d4-e16e6c2e371e"
  STEP: waiting for pod running @ 04/20/24 14:41:32.267
  E0420 14:41:32.854824      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:33.855293      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 04/20/24 14:41:34.286
  I0420 14:41:34.286415 13 delete.go:62] Deleting pod "var-expansion-13ed9905-45e2-401d-80d4-e16e6c2e371e" in namespace "var-expansion-2518"
  I0420 14:41:34.300643 13 delete.go:70] Wait up to 5m0s for pod "var-expansion-13ed9905-45e2-401d-80d4-e16e6c2e371e" to be fully deleted
  E0420 14:41:34.855777      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:35.856323      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:36.856920      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:37.857983      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:38.858362      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:39.860038      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:40.859960      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:41.860514      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:42.860794      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:43.861269      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:44.861797      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:45.861879      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:46.862384      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:47.863208      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:48.863307      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:49.864117      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:50.865052      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:51.865763      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:52.866380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:53.866803      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:54.867176      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:55.867297      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:56.867862      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:57.869000      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:58.869348      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:41:59.870352      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:00.870294      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:01.870997      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:02.871618      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:03.872341      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:04.873226      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:05.874394      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:42:06.460786 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2518" for this suite. @ 04/20/24 14:42:06.473
• [154.854 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 04/20/24 14:42:06.492
  I0420 14:42:06.492448 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename taint-single-pod @ 04/20/24 14:42:06.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:42:06.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:42:06.534
  I0420 14:42:06.539750 13 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0420 14:42:06.874627      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:07.875454      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:08.876760      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:09.877453      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:10.878308      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:11.878704      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:12.879344      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:13.880002      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:14.881146      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:15.885313      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:16.884669      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:17.885410      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:18.885668      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:19.885891      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:20.886107      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:21.886814      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:22.887465      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:23.888004      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:24.889144      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:25.889679      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:26.890499      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:27.891067      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:28.891957      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:29.892682      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:30.893786      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:31.894096      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:32.894066      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:33.894593      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:34.895212      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:35.896975      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:36.896633      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:37.896915      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:38.897195      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:39.898082      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:40.898394      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:41.898663      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:42.899652      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:43.899846      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:44.900602      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:45.900985      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:46.901621      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:47.901834      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:48.902021      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:49.902392      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:50.902628      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:51.902486      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:52.902780      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:53.902982      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:54.903365      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:55.903883      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:56.904904      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:57.905026      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:58.906048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:42:59.906544      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:00.907436      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:01.907596      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:02.908587      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:03.909177      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:04.909455      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:05.910345      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:43:06.540832 13 util.go:400] Waiting for terminating namespaces to be deleted...
  I0420 14:43:06.550499 13 taints.go:150] Starting informer...
  STEP: Starting pod... @ 04/20/24 14:43:06.55
  I0420 14:43:06.780902 13 taints.go:300] Pod is running on ier3chochiph-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/20/24 14:43:06.782
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/20/24 14:43:06.814
  STEP: Waiting short time to make sure Pod is queued for deletion @ 04/20/24 14:43:06.825
  I0420 14:43:06.826280 13 taints.go:319] Pod wasn't evicted. Proceeding
  I0420 14:43:06.826503 13 taints.go:326] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/20/24 14:43:06.878
  E0420 14:43:06.910865      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting some time to make sure that toleration time passed. @ 04/20/24 14:43:06.912
  E0420 14:43:07.910494      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:08.910816      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:09.911169      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:10.911272      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:11.911629      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:12.911900      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:13.911966      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:14.912631      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:15.913313      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:16.913793      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:17.913984      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:18.914691      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:19.915370      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:20.916506      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:21.917169      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:22.918246      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:23.918989      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:24.919554      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:25.920160      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:26.920894      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:27.920953      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:28.921532      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:29.922022      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:30.922433      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:31.922610      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:32.923120      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:33.924142      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:34.924264      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:35.924452      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:36.924696      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:37.925027      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:38.925288      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:39.925594      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:40.925763      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:41.926813      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:42.927662      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:43.928334      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:44.928347      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:45.929446      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:46.930610      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:47.931035      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:48.931688      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:49.931899      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:50.932556      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:51.933378      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:52.934322      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:53.934702      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:54.934970      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:55.935829      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:56.936237      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:57.937303      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:58.937687      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:43:59.937818      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:00.938295      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:01.938466      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:02.938952      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:03.939219      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:04.939556      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:05.939974      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:06.940945      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:07.941219      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:08.941979      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:09.943056      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:10.942536      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:11.943623      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:12.944410      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:13.944419      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:14.945069      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:15.945363      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:16.945818      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:17.945841      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:18.946010      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:19.946499      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:20.946495      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:44:21.913292 13 taints.go:335] Pod wasn't evicted. Test successful
  I0420 14:44:21.914100 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-5242" for this suite. @ 04/20/24 14:44:21.928
• [135.452 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1793
  STEP: Creating a kubernetes client @ 04/20/24 14:44:21.945
  I0420 14:44:21.945581 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 14:44:21.947281      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:44:21.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:44:21.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:44:21.992
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/20/24 14:44:21.999
  I0420 14:44:21.999789 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-8781 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0420 14:44:22.249368 13 builder.go:146] stderr: ""
  I0420 14:44:22.249625 13 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 04/20/24 14:44:22.25
  E0420 14:44:22.949043      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:23.948936      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:24.949181      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:25.949341      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:26.949787      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/20/24 14:44:27.302
  I0420 14:44:27.303112 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-8781 get pod e2e-test-httpd-pod -o json'
  I0420 14:44:27.557156 13 builder.go:146] stderr: ""
  I0420 14:44:27.558302 13 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-04-20T14:44:22Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-8781\",\n        \"resourceVersion\": \"59603\",\n        \"uid\": \"d9ccbd41-59a1-4879-bd14-93b1a6a24b4e\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-cprxl\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ier3chochiph-3\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-cprxl\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-20T14:44:23Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-20T14:44:22Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-20T14:44:23Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-20T14:44:23Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-20T14:44:22Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"cri-o://0ab36898d66e2894c0d67e99f1c5b1b8b85167f16f487462c8eae650421c9cad\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-04-20T14:44:22Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.121.103\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.121.103\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.233.66.130\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.233.66.130\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-04-20T14:44:22Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 04/20/24 14:44:27.558
  I0420 14:44:27.559426 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-8781 replace -f -'
  I0420 14:44:27.939946 13 builder.go:146] stderr: ""
  I0420 14:44:27.940446 13 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 04/20/24 14:44:27.94
  E0420 14:44:27.950117      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:44:27.959467 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-8781 delete pods e2e-test-httpd-pod'
  E0420 14:44:28.951123      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:29.953191      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:44:30.032237 13 builder.go:146] stderr: ""
  I0420 14:44:30.032320 13 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0420 14:44:30.032806 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8781" for this suite. @ 04/20/24 14:44:30.042
• [8.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 04/20/24 14:44:30.058
  I0420 14:44:30.058917 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 14:44:30.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:44:30.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:44:30.101
  I0420 14:44:30.107136 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 14:44:30.953104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:31.954322      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0420 14:44:32.855755      13 warnings.go:70] unknown field "alpha"
  W0420 14:44:32.855851      13 warnings.go:70] unknown field "beta"
  W0420 14:44:32.855865      13 warnings.go:70] unknown field "delta"
  W0420 14:44:32.855876      13 warnings.go:70] unknown field "epsilon"
  W0420 14:44:32.855887      13 warnings.go:70] unknown field "gamma"
  E0420 14:44:32.955594      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:44:33.448262 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9582" for this suite. @ 04/20/24 14:44:33.458
• [3.411 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 04/20/24 14:44:33.473
  I0420 14:44:33.473746 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 14:44:33.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:44:33.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:44:33.512
  STEP: Creating a pod to test substitution in container's args @ 04/20/24 14:44:33.517
  E0420 14:44:33.956705      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:34.956651      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:35.956658      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:36.957088      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:44:37.563
  I0420 14:44:37.571321 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod var-expansion-4ceac411-18f9-4fdd-80b3-742063a4f02a container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 14:44:37.607
  I0420 14:44:37.637072 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7208" for this suite. @ 04/20/24 14:44:37.645
• [4.183 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 04/20/24 14:44:37.656
  I0420 14:44:37.656855 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename deployment @ 04/20/24 14:44:37.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:44:37.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:44:37.698
  STEP: creating a Deployment @ 04/20/24 14:44:37.71
  STEP: waiting for Deployment to be created @ 04/20/24 14:44:37.719
  STEP: waiting for all Replicas to be Ready @ 04/20/24 14:44:37.723
  I0420 14:44:37.726322 13 deployment.go:246] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0420 14:44:37.726379 13 deployment.go:248] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0420 14:44:37.742207 13 deployment.go:246] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0420 14:44:37.742316 13 deployment.go:248] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0420 14:44:37.790518 13 deployment.go:246] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0420 14:44:37.790591 13 deployment.go:248] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0420 14:44:37.865603 13 deployment.go:246] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0420 14:44:37.865681 13 deployment.go:248] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0420 14:44:37.957679      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:38.958066      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:44:39.040893 13 deployment.go:246] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0420 14:44:39.041001 13 deployment.go:248] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0420 14:44:39.163703 13 deployment.go:248] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 04/20/24 14:44:39.164
  I0420 14:44:39.189940 13 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 04/20/24 14:44:39.19
  I0420 14:44:39.193596 13 deployment.go:309] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 0
  I0420 14:44:39.193668 13 deployment.go:311] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 0
  I0420 14:44:39.193743 13 deployment.go:309] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 0
  I0420 14:44:39.193820 13 deployment.go:311] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 0
  I0420 14:44:39.193852 13 deployment.go:309] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 0
  I0420 14:44:39.193870 13 deployment.go:311] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 0
  I0420 14:44:39.194028 13 deployment.go:309] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 0
  I0420 14:44:39.194056 13 deployment.go:311] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 0
  I0420 14:44:39.195041 13 deployment.go:309] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 1
  I0420 14:44:39.195304 13 deployment.go:311] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 1
  I0420 14:44:39.195388 13 deployment.go:309] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 2
  I0420 14:44:39.195428 13 deployment.go:311] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 2
  I0420 14:44:39.195471 13 deployment.go:309] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 2
  I0420 14:44:39.195489 13 deployment.go:311] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 2
  I0420 14:44:39.212387 13 deployment.go:309] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 2
  I0420 14:44:39.212466 13 deployment.go:311] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 2
  I0420 14:44:39.252690 13 deployment.go:309] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 2
  I0420 14:44:39.252813 13 deployment.go:311] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 2
  I0420 14:44:39.300466 13 deployment.go:309] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 1
  I0420 14:44:39.300547 13 deployment.go:311] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 1
  I0420 14:44:39.324952 13 deployment.go:309] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 1
  I0420 14:44:39.325069 13 deployment.go:311] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 1
  E0420 14:44:39.958354      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:44:40.055434 13 deployment.go:309] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 2
  I0420 14:44:40.055545 13 deployment.go:311] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 2
  I0420 14:44:40.129084 13 deployment.go:311] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 1
  STEP: listing Deployments @ 04/20/24 14:44:40.129
  I0420 14:44:40.140549 13 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 04/20/24 14:44:40.14
  I0420 14:44:40.179895 13 deployment.go:360] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 04/20/24 14:44:40.18
  I0420 14:44:40.201614 13 deployment.go:389] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0420 14:44:40.295146 13 deployment.go:389] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0420 14:44:40.350782 13 deployment.go:389] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0420 14:44:40.505444 13 deployment.go:389] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0420 14:44:40.552266 13 deployment.go:389] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0420 14:44:40.958489      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:44:41.155076 13 deployment.go:389] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0420 14:44:41.315056 13 deployment.go:389] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0420 14:44:41.351149 13 deployment.go:389] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0420 14:44:41.467922 13 deployment.go:389] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0420 14:44:41.959406      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:44:42.755423 13 deployment.go:389] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 04/20/24 14:44:42.845
  STEP: fetching the DeploymentStatus @ 04/20/24 14:44:42.863
  I0420 14:44:42.876224 13 deployment.go:449] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 1
  I0420 14:44:42.876326 13 deployment.go:449] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 1
  I0420 14:44:42.876494 13 deployment.go:449] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 1
  I0420 14:44:42.878329 13 deployment.go:449] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 1
  I0420 14:44:42.878397 13 deployment.go:449] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 1
  I0420 14:44:42.878525 13 deployment.go:449] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 2
  I0420 14:44:42.878639 13 deployment.go:449] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 2
  I0420 14:44:42.880905 13 deployment.go:449] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 2
  I0420 14:44:42.881063 13 deployment.go:449] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 2
  I0420 14:44:42.881339 13 deployment.go:449] observed Deployment test-deployment in namespace deployment-3839 with ReadyReplicas 3
  STEP: deleting the Deployment @ 04/20/24 14:44:42.881
  I0420 14:44:42.918464 13 deployment.go:475] observed event type MODIFIED
  I0420 14:44:42.918539 13 deployment.go:475] observed event type MODIFIED
  I0420 14:44:42.918565 13 deployment.go:475] observed event type MODIFIED
  I0420 14:44:42.919060 13 deployment.go:475] observed event type MODIFIED
  I0420 14:44:42.919117 13 deployment.go:475] observed event type MODIFIED
  I0420 14:44:42.919144 13 deployment.go:475] observed event type MODIFIED
  I0420 14:44:42.919289 13 deployment.go:475] observed event type MODIFIED
  I0420 14:44:42.919586 13 deployment.go:475] observed event type MODIFIED
  I0420 14:44:42.919652 13 deployment.go:475] observed event type MODIFIED
  I0420 14:44:42.919846 13 deployment.go:475] observed event type MODIFIED
  I0420 14:44:42.920328 13 deployment.go:475] observed event type MODIFIED
  I0420 14:44:42.920460 13 deployment.go:475] observed event type MODIFIED
  I0420 14:44:42.920494 13 deployment.go:475] observed event type MODIFIED
  I0420 14:44:42.933100 13 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0420 14:44:42.945567 13 deployment.go:657] ReplicaSet "test-deployment-5bf4984755":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-5bf4984755",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3839",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a32f67f1-aeae-485a-a5a1-c68933414273",
      ResourceVersion: (string) (len=5) "59767",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221077,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "6bebd82b-ca98-4455-9301-db80eb81f0f0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 62 65 62  64 38 32 62 2d 63 61 39  |":\"6bebd82b-ca9|
              00000130  38 2d 34 34 35 35 2d 39  33 30 31 2d 64 62 38 30  |8-4455-9301-db80|
              00000140  65 62 38 31 66 30 66 30  5c 22 7d 22 3a 7b 7d 7d  |eb81f0f0\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  E0420 14:44:42.960295      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:44:42.974860 13 deployment.go:657] ReplicaSet "test-deployment-65fbf5b65d":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-65fbf5b65d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3839",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8a2c2c8d-543c-4cf5-9558-34f9c406a06e",
      ResourceVersion: (string) (len=5) "59851",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "6bebd82b-ca98-4455-9301-db80eb81f0f0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 62 65 62  64 38 32 62 2d 63 61 39  |":\"6bebd82b-ca9|
              00000130  38 2d 34 34 35 35 2d 39  33 30 31 2d 64 62 38 30  |8-4455-9301-db80|
              00000140  65 62 38 31 66 30 66 30  5c 22 7d 22 3a 7b 7d 7d  |eb81f0f0\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0420 14:44:42.991808 13 deployment.go:669] pod: "test-deployment-65fbf5b65d-zfwsz":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-65fbf5b65d-zfwsz",
      GenerateName: (string) (len=27) "test-deployment-65fbf5b65d-",
      Namespace: (string) (len=15) "deployment-3839",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1355a7e1-6aa3-4726-b908-54cd8bd754c9",
      ResourceVersion: (string) (len=5) "59847",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221084,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-65fbf5b65d",
          UID: (types.UID) (len=36) "8a2c2c8d-543c-4cf5-9558-34f9c406a06e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 61 32 63 32 63 38 64  |uid\":\"8a2c2c8d|
              000000a0  2d 35 34 33 63 2d 34 63  66 35 2d 39 35 35 38 2d  |-543c-4cf5-9558-|
              000000b0  33 34 66 39 63 34 30 36  61 30 36 65 5c 22 7d 22  |34f9c406a06e\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 33 33 5c 22 7d 22 3a  |.233.66.133\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9l6tm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9l6tm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221079,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.103"
        }
      },
      PodIP: (string) (len=13) "10.233.66.133",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.133"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221079,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849221079,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=72) "cri-o://120fc7a5ba2d2561c40f421b59af46d282e366962bf1c798c85735b628c19fab",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0420 14:44:43.004568 13 deployment.go:657] ReplicaSet "test-deployment-6b9f8f4d48":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6b9f8f4d48",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3839",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "59f78bd6-114d-47bc-bb2e-9ab59be4154b",
      ResourceVersion: (string) (len=5) "59842",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221080,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "6bebd82b-ca98-4455-9301-db80eb81f0f0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 62 65 62  64 38 32 62 2d 63 61 39  |":\"6bebd82b-ca9|
              00000130  38 2d 34 34 35 35 2d 39  33 30 31 2d 64 62 38 30  |8-4455-9301-db80|
              00000140  65 62 38 31 66 30 66 30  5c 22 7d 22 3a 7b 7d 7d  |eb81f0f0\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0420 14:44:43.034887 13 deployment.go:669] pod: "test-deployment-6b9f8f4d48-n8466":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6b9f8f4d48-n8466",
      GenerateName: (string) (len=27) "test-deployment-6b9f8f4d48-",
      Namespace: (string) (len=15) "deployment-3839",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5351fda5-334d-4c02-8a51-f3e6d47a4ec9",
      ResourceVersion: (string) (len=5) "59860",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221081,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221084,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6b9f8f4d48",
          UID: (types.UID) (len=36) "59f78bd6-114d-47bc-bb2e-9ab59be4154b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  35 39 66 37 38 62 64 36  |uid\":\"59f78bd6|
              000000a0  2d 31 31 34 64 2d 34 37  62 63 2d 62 62 32 65 2d  |-114d-47bc-bb2e-|
              000000b0  39 61 62 35 39 62 65 34  31 35 34 62 5c 22 7d 22  |9ab59be4154b\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  32 30 35 5c 22 7d 22 3a  |.233.65.205\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-df2wp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-df2wp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221082,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.188",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.188"
        }
      },
      PodIP: (string) (len=13) "10.233.65.205",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.205"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221081,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849221082,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://6bfb772f53697cb2f52677674a8487ba663bc2488c1b5ab94e4051f72c20e152",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0420 14:44:43.048365 13 deployment.go:669] pod: "test-deployment-6b9f8f4d48-v8x8v":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6b9f8f4d48-v8x8v",
      GenerateName: (string) (len=27) "test-deployment-6b9f8f4d48-",
      Namespace: (string) (len=15) "deployment-3839",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "63890b2d-a909-4502-8578-48cfa6adee9b",
      ResourceVersion: (string) (len=5) "59859",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221080,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221084,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6b9f8f4d48",
          UID: (types.UID) (len=36) "59f78bd6-114d-47bc-bb2e-9ab59be4154b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  35 39 66 37 38 62 64 36  |uid\":\"59f78bd6|
              000000a0  2d 31 31 34 64 2d 34 37  62 63 2d 62 62 32 65 2d  |-114d-47bc-bb2e-|
              000000b0  39 61 62 35 39 62 65 34  31 35 34 62 5c 22 7d 22  |9ab59be4154b\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 33 34 5c 22 7d 22 3a  |.233.66.134\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nxzzt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nxzzt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221081,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221080,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.103"
        }
      },
      PodIP: (string) (len=13) "10.233.66.134",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.134"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221080,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849221080,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://4b9d7c9e0905e371cc4d7f280e0dbb0c74cbd82e41c71cecccb5a5212438ee31",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0420 14:44:43.081090 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3839" for this suite. @ 04/20/24 14:44:43.108
• [5.467 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 04/20/24 14:44:43.131
  I0420 14:44:43.131315 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:44:43.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:44:43.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:44:43.194
  STEP: Creating projection with secret that has name projected-secret-test-map-b76bebea-9cda-42a0-a1b6-35539d4b48eb @ 04/20/24 14:44:43.2
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:44:43.214
  E0420 14:44:43.961584      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:44.961702      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:45.961998      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:46.962652      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:44:47.261
  I0420 14:44:47.268151 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-projected-secrets-193be9c0-44a7-459d-9349-24b781aa7601 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:44:47.28
  I0420 14:44:47.319787 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6503" for this suite. @ 04/20/24 14:44:47.338
• [4.225 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 04/20/24 14:44:47.361
  I0420 14:44:47.361550 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename runtimeclass @ 04/20/24 14:44:47.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:44:47.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:44:47.419
  I0420 14:44:47.491022 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-83" for this suite. @ 04/20/24 14:44:47.503
• [0.158 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 04/20/24 14:44:47.52
  I0420 14:44:47.520430 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 14:44:47.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:44:47.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:44:47.559
  I0420 14:44:47.565659 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 14:44:47.963335      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:48.963671      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:49.963866      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:44:50.931415 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-808" for this suite. @ 04/20/24 14:44:50.944
• [3.437 seconds]
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 04/20/24 14:44:50.957
  I0420 14:44:50.957700 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename deployment @ 04/20/24 14:44:50.96
  E0420 14:44:50.965045      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:44:51.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:44:51.01
  I0420 14:44:51.045587 13 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  E0420 14:44:51.965463      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:52.966159      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:53.966758      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:54.966962      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:55.966987      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:44:56.055609 13 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 14:44:56.055
  I0420 14:44:56.055897 13 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 04/20/24 14:44:56.079
  I0420 14:44:56.101858 13 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90a3902c-29f0-4639-9fa8-b7c80f66338f",
      ResourceVersion: (string) (len=5) "60037",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221096,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0420 14:44:56.117786 13 deployment.go:41] New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  I0420 14:44:56.118705 13 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0420 14:44:56.119857 13 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cb3a4bc3-2141-4be6-b276-358581934289",
      ResourceVersion: (string) (len=5) "60038",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "90a3902c-29f0-4639-9fa8-b7c80f66338f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221096,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 39 30 61 33 39 30 32  |"uid\":\"90a3902|
              00000040  63 2d 32 39 66 30 2d 34  36 33 39 2d 39 66 61 38  |c-29f0-4639-9fa8|
              00000050  2d 62 37 63 38 30 66 36  36 33 33 38 66 5c 22 7d  |-b7c80f66338f\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0420 14:44:56.130973 13 deployment.go:67] Pod "test-cleanup-controller-8v24z" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-8v24z",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-1817",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "75b041af-a43b-48a3-986c-2e3b158ab1b2",
      ResourceVersion: (string) (len=5) "60010",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "cb3a4bc3-2141-4be6-b276-358581934289",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  63 62 33 61 34 62 63 33  |uid\":\"cb3a4bc3|
              00000080  2d 32 31 34 31 2d 34 62  65 36 2d 62 32 37 36 2d  |-2141-4be6-b276-|
              00000090  33 35 38 35 38 31 39 33  34 32 38 39 5c 22 7d 22  |358581934289\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 33 36 5c 22 7d 22 3a  |.233.66.136\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jdvtg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jdvtg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221092,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221091,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.103"
        }
      },
      PodIP: (string) (len=13) "10.233.66.136",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.136"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221091,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849221091,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://8552f29003893bb4ea5e6e5db5c44a9fa847db316fce08f11bbb45286c5338b7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 14:44:56.134782 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1817" for this suite. @ 04/20/24 14:44:56.148
• [5.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 04/20/24 14:44:56.171
  I0420 14:44:56.171510 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename discovery @ 04/20/24 14:44:56.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:44:56.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:44:56.309
  STEP: Setting up server cert @ 04/20/24 14:44:56.317
  STEP: Requesting APIResourceList from "/api/v1" @ 04/20/24 14:44:56.962
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 04/20/24 14:44:56.966
  E0420 14:44:56.967337      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 04/20/24 14:44:56.968
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 04/20/24 14:44:56.97
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 04/20/24 14:44:56.972
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 04/20/24 14:44:56.974
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 04/20/24 14:44:56.976
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 04/20/24 14:44:56.978
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 04/20/24 14:44:56.98
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 04/20/24 14:44:56.982
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 04/20/24 14:44:56.983
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 04/20/24 14:44:56.985
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 04/20/24 14:44:56.987
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 04/20/24 14:44:56.989
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 04/20/24 14:44:56.991
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 04/20/24 14:44:56.993
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 04/20/24 14:44:56.995
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 04/20/24 14:44:56.997
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 04/20/24 14:44:56.998
  I0420 14:44:57.001160 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7170" for this suite. @ 04/20/24 14:44:57.009
• [0.850 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 04/20/24 14:44:57.021
  I0420 14:44:57.021948 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:44:57.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:44:57.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:44:57.065
  STEP: Creating secret with name secret-test-32f7e3f1-f15a-4947-8867-193c806b2247 @ 04/20/24 14:44:57.07
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:44:57.078
  E0420 14:44:57.968481      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:58.968638      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:44:59.969794      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:00.970348      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:45:01.115
  I0420 14:45:01.122417 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-secrets-ac01e965-0464-4ffd-9a67-aec92fb5b5c5 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:45:01.134
  I0420 14:45:01.158863 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9585" for this suite. @ 04/20/24 14:45:01.167
• [4.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 04/20/24 14:45:01.18
  I0420 14:45:01.180191 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/20/24 14:45:01.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:45:01.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:45:01.232
  I0420 14:45:01.237150 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 14:45:01.970831      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:02.970934      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:03.971105      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:45:04.455092 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7833" for this suite. @ 04/20/24 14:45:04.471
• [3.311 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 04/20/24 14:45:04.49
  I0420 14:45:04.490915 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:45:04.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:45:04.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:45:04.544
  STEP: Creating secret with name projected-secret-test-277d4e80-c9ae-4d82-a6c4-f5cffb2e915c @ 04/20/24 14:45:04.55
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:45:04.559
  E0420 14:45:04.971358      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:05.971799      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:06.971909      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:07.971922      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:45:08.604
  I0420 14:45:08.611179 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-projected-secrets-b9adeee5-d259-4b00-a15b-a00a8fd2bb1d container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:45:08.623
  I0420 14:45:08.657070 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5320" for this suite. @ 04/20/24 14:45:08.665
• [4.188 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 04/20/24 14:45:08.679
  I0420 14:45:08.679607 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:45:08.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:45:08.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:45:08.722
  I0420 14:45:08.806123 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-372" for this suite. @ 04/20/24 14:45:08.813
• [0.149 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 04/20/24 14:45:08.828
  I0420 14:45:08.828482 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename taint-multiple-pods @ 04/20/24 14:45:08.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:45:08.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:45:08.873
  I0420 14:45:08.878574 13 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0420 14:45:08.972814      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:09.973374      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:10.973880      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:11.975032      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:12.975305      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:13.975394      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:14.975656      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:15.975887      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:16.976481      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:17.977357      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:18.977486      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:19.977657      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:20.978329      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:21.979480      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:22.980464      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:23.981119      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:24.981606      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:25.982251      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:26.982906      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:27.983301      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:28.984184      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:29.984272      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:30.985341      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:31.985850      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:32.986952      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:33.987183      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:34.987572      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:35.988005      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:36.988339      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:37.989150      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:38.989435      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:39.989786      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:40.990396      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:41.991535      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:42.992136      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:43.992240      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:44.993044      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:45.993278      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:46.993496      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:47.993562      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:48.994191      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:49.995891      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:50.995975      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:51.996128      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:52.996939      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:53.997570      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:54.998888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:55.998995      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:56.999305      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:58.000242      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:45:59.000390      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:00.000813      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:01.001135      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:02.002008      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:03.002234      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:04.002504      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:05.003505      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:06.003805      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:07.004615      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:08.005458      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:46:08.879476 13 util.go:400] Waiting for terminating namespaces to be deleted...
  I0420 14:46:08.898496 13 taints.go:150] Starting informer...
  STEP: Starting pods... @ 04/20/24 14:46:08.898
  E0420 14:46:09.006226      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:46:09.160311 13 taints.go:469] Pod1 is running on ier3chochiph-3. Tainting Node
  E0420 14:46:10.007174      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:11.007544      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:46:11.417053 13 taints.go:477] Pod2 is running on ier3chochiph-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/20/24 14:46:11.417
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/20/24 14:46:11.453
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 04/20/24 14:46:11.473
  E0420 14:46:12.008128      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:13.009372      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:14.009749      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:15.010250      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:16.010577      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:17.011429      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:46:17.673459 13 taints.go:498] Noticed Pod "taint-eviction-b1" gets evicted.
  E0420 14:46:18.012698      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:19.012983      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:20.013914      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:21.014591      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:22.015031      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:23.015072      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:24.015529      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:25.015588      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:26.016021      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:27.017503      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:28.017295      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:29.017632      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:30.017944      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:31.018806      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:32.018994      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:33.019177      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:34.019319      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:35.021211      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:36.021120      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:37.021546      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:46:37.767768 13 taints.go:498] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/20/24 14:46:37.802
  I0420 14:46:37.819583 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-3583" for this suite. @ 04/20/24 14:46:37.835
• [89.023 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 04/20/24 14:46:37.862
  I0420 14:46:37.862834 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename sched-pred @ 04/20/24 14:46:37.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:46:37.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:46:37.947
  I0420 14:46:37.953046 13 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0420 14:46:37.972966 13 util.go:400] Waiting for terminating namespaces to be deleted...
  I0420 14:46:37.978291 13 predicates.go:121] 
  Logging pods the apiserver thinks is on node ier3chochiph-1 before test
  I0420 14:46:37.993495 13 predicates.go:887] coredns-7db6d8ff4d-9bjg9 from kube-system started at 2024-04-20 14:11:30 +0000 UTC (1 container statuses recorded)
  I0420 14:46:37.993571 13 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0420 14:46:37.993593 13 predicates.go:887] kube-addon-manager-ier3chochiph-1 from kube-system started at 2024-04-20 14:04:31 +0000 UTC (1 container statuses recorded)
  I0420 14:46:37.993650 13 predicates.go:889] 	Container kube-addon-manager ready: true, restart count 8
  I0420 14:46:37.993668 13 predicates.go:887] kube-apiserver-ier3chochiph-1 from kube-system started at 2024-04-20 14:04:31 +0000 UTC (1 container statuses recorded)
  I0420 14:46:37.993683 13 predicates.go:889] 	Container kube-apiserver ready: true, restart count 10
  I0420 14:46:37.993699 13 predicates.go:887] kube-controller-manager-ier3chochiph-1 from kube-system started at 2024-04-20 14:04:31 +0000 UTC (1 container statuses recorded)
  I0420 14:46:37.993886 13 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 8
  I0420 14:46:37.993913 13 predicates.go:887] kube-flannel-ds-mzt2f from kube-system started at 2024-04-20 14:11:30 +0000 UTC (1 container statuses recorded)
  I0420 14:46:37.993962 13 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0420 14:46:37.993981 13 predicates.go:887] kube-proxy-lkdx8 from kube-system started at 2024-04-20 14:11:31 +0000 UTC (1 container statuses recorded)
  I0420 14:46:37.993995 13 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0420 14:46:37.994010 13 predicates.go:887] kube-scheduler-ier3chochiph-1 from kube-system started at 2024-04-20 14:04:31 +0000 UTC (1 container statuses recorded)
  I0420 14:46:37.994023 13 predicates.go:889] 	Container kube-scheduler ready: true, restart count 8
  I0420 14:46:37.994066 13 predicates.go:887] sonobuoy-systemd-logs-daemon-set-a313837afcd448ea-mhmwj from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  I0420 14:46:37.994080 13 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0420 14:46:37.994094 13 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0420 14:46:37.994109 13 predicates.go:121] 
  Logging pods the apiserver thinks is on node ier3chochiph-2 before test
  I0420 14:46:38.010497 13 predicates.go:887] coredns-7db6d8ff4d-vjdgd from kube-system started at 2024-04-20 14:43:07 +0000 UTC (1 container statuses recorded)
  I0420 14:46:38.010569 13 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0420 14:46:38.010591 13 predicates.go:887] kube-addon-manager-ier3chochiph-2 from kube-system started at 2024-04-20 14:04:55 +0000 UTC (1 container statuses recorded)
  I0420 14:46:38.010608 13 predicates.go:889] 	Container kube-addon-manager ready: true, restart count 8
  I0420 14:46:38.010626 13 predicates.go:887] kube-apiserver-ier3chochiph-2 from kube-system started at 2024-04-20 14:04:55 +0000 UTC (1 container statuses recorded)
  I0420 14:46:38.010642 13 predicates.go:889] 	Container kube-apiserver ready: true, restart count 8
  I0420 14:46:38.010659 13 predicates.go:887] kube-controller-manager-ier3chochiph-2 from kube-system started at 2024-04-20 14:04:55 +0000 UTC (1 container statuses recorded)
  I0420 14:46:38.010696 13 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 8
  I0420 14:46:38.010755 13 predicates.go:887] kube-flannel-ds-k64d2 from kube-system started at 2024-04-20 14:11:31 +0000 UTC (1 container statuses recorded)
  I0420 14:46:38.010775 13 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0420 14:46:38.010792 13 predicates.go:887] kube-proxy-2tn7g from kube-system started at 2024-04-20 14:11:31 +0000 UTC (1 container statuses recorded)
  I0420 14:46:38.010807 13 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0420 14:46:38.010823 13 predicates.go:887] kube-scheduler-ier3chochiph-2 from kube-system started at 2024-04-20 14:04:55 +0000 UTC (1 container statuses recorded)
  I0420 14:46:38.010838 13 predicates.go:889] 	Container kube-scheduler ready: true, restart count 9
  I0420 14:46:38.010858 13 predicates.go:887] sonobuoy from sonobuoy started at 2024-04-20 14:11:48 +0000 UTC (1 container statuses recorded)
  I0420 14:46:38.010899 13 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0420 14:46:38.010918 13 predicates.go:887] sonobuoy-systemd-logs-daemon-set-a313837afcd448ea-8wcps from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  I0420 14:46:38.010932 13 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0420 14:46:38.010947 13 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0420 14:46:38.010963 13 predicates.go:121] 
  Logging pods the apiserver thinks is on node ier3chochiph-3 before test
  E0420 14:46:38.022094      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:46:38.024776 13 predicates.go:887] kube-flannel-ds-9cdlx from kube-system started at 2024-04-20 14:46:37 +0000 UTC (1 container statuses recorded)
  I0420 14:46:38.024829 13 predicates.go:889] 	Container kube-flannel ready: false, restart count 0
  I0420 14:46:38.024851 13 predicates.go:887] kube-proxy-phg8k from kube-system started at 2024-04-20 14:11:31 +0000 UTC (1 container statuses recorded)
  I0420 14:46:38.024869 13 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0420 14:46:38.024894 13 predicates.go:887] sonobuoy-e2e-job-6517e7bc161d48e3 from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  I0420 14:46:38.024910 13 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0420 14:46:38.025058 13 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0420 14:46:38.025086 13 predicates.go:887] sonobuoy-systemd-logs-daemon-set-a313837afcd448ea-2vtbv from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  I0420 14:46:38.025207 13 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0420 14:46:38.025225 13 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 04/20/24 14:46:38.025
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17c8044f974d4187], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 04/20/24 14:46:38.076
  E0420 14:46:39.023015      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:46:39.077663 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3447" for this suite. @ 04/20/24 14:46:39.089
• [1.245 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 04/20/24 14:46:39.109
  I0420 14:46:39.110419 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename pod-network-test @ 04/20/24 14:46:39.116
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:46:39.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:46:39.153
  STEP: Performing setup for networking test in namespace pod-network-test-4437 @ 04/20/24 14:46:39.158
  STEP: creating a selector @ 04/20/24 14:46:39.158
  STEP: Creating the service pods in kubernetes @ 04/20/24 14:46:39.158
  I0420 14:46:39.158547 13 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0420 14:46:40.031793      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:41.027082      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:42.027849      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:43.028457      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:44.028552      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:45.028687      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:46.028888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:47.029470      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:48.029961      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:49.030086      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:50.030081      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:51.030574      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/20/24 14:46:51.325
  E0420 14:46:52.031541      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:53.031697      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:46:53.355304 13 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0420 14:46:53.355389 13 networking.go:42] Breadth first check of 10.233.64.211 on host 192.168.121.80...
  I0420 14:46:53.361033 13 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.142:9080/dial?request=hostname&protocol=udp&host=10.233.64.211&port=8081&tries=1'] Namespace:pod-network-test-4437 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 14:46:53.361123 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 14:46:53.363013 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 14:46:53.363262 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4437/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.142%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.64.211%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0420 14:46:53.560139 13 utils.go:331] Waiting for responses: map[]
  I0420 14:46:53.560260 13 utils.go:335] reached 10.233.64.211 after 0/1 tries
  I0420 14:46:53.560310 13 networking.go:42] Breadth first check of 10.233.65.206 on host 192.168.121.188...
  I0420 14:46:53.569270 13 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.142:9080/dial?request=hostname&protocol=udp&host=10.233.65.206&port=8081&tries=1'] Namespace:pod-network-test-4437 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 14:46:53.569339 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 14:46:53.571212 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 14:46:53.571390 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4437/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.142%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.65.206%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0420 14:46:53.677171 13 utils.go:331] Waiting for responses: map[]
  I0420 14:46:53.677247 13 utils.go:335] reached 10.233.65.206 after 0/1 tries
  I0420 14:46:53.677272 13 networking.go:42] Breadth first check of 10.233.66.141 on host 192.168.121.103...
  I0420 14:46:53.685948 13 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.142:9080/dial?request=hostname&protocol=udp&host=10.233.66.141&port=8081&tries=1'] Namespace:pod-network-test-4437 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 14:46:53.686009 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 14:46:53.687986 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 14:46:53.688229 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4437/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.142%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.66.141%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0420 14:46:53.792439 13 utils.go:331] Waiting for responses: map[]
  I0420 14:46:53.792524 13 utils.go:335] reached 10.233.66.141 after 0/1 tries
  I0420 14:46:53.792564 13 networking.go:53] Going to retry 0 out of 3 pods....
  I0420 14:46:53.794060 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4437" for this suite. @ 04/20/24 14:46:53.803
• [14.706 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 04/20/24 14:46:53.818
  I0420 14:46:53.818889 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 14:46:53.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:46:53.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:46:53.86
  STEP: Creating a pod to test emptydir volume type on node default medium @ 04/20/24 14:46:53.865
  E0420 14:46:54.032635      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:55.032843      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:46:55.896
  I0420 14:46:55.903295 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-be004cb7-1b7e-46f3-8718-ab63e6fa6172 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:46:55.937
  I0420 14:46:55.968594 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6652" for this suite. @ 04/20/24 14:46:55.978
• [2.175 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2218
  STEP: Creating a kubernetes client @ 04/20/24 14:46:55.994
  I0420 14:46:55.994979 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename services @ 04/20/24 14:46:55.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:46:56.032
  E0420 14:46:56.032867      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:46:56.038
  STEP: creating service in namespace services-9830 @ 04/20/24 14:46:56.043
  STEP: creating service affinity-nodeport in namespace services-9830 @ 04/20/24 14:46:56.043
  STEP: creating replication controller affinity-nodeport in namespace services-9830 @ 04/20/24 14:46:56.067
  I0420 14:46:56.081895      13 runners.go:198] Created replication controller with name: affinity-nodeport, namespace: services-9830, replica count: 3
  E0420 14:46:57.033835      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:58.034002      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:46:59.034072      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:46:59.133873      13 runners.go:198] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0420 14:46:59.158024 13 resource.go:361] Creating new exec pod
  E0420 14:47:00.034277      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:01.034546      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:02.035966      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:47:02.215226 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9830 exec execpod-affinity4m2ft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0420 14:47:02.531287 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I0420 14:47:02.531429 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0420 14:47:02.531994 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9830 exec execpod-affinity4m2ft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.36.38 80'
  I0420 14:47:02.833099 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.36.38 80\nConnection to 10.233.36.38 80 port [tcp/http] succeeded!\n"
  I0420 14:47:02.833233 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0420 14:47:02.833842 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9830 exec execpod-affinity4m2ft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.103 32657'
  E0420 14:47:03.036787      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:47:03.101134 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.103 32657\nConnection to 192.168.121.103 32657 port [tcp/*] succeeded!\n"
  I0420 14:47:03.101420 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0420 14:47:03.103047 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9830 exec execpod-affinity4m2ft -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.80 32657'
  I0420 14:47:03.375877 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.80 32657\nConnection to 192.168.121.80 32657 port [tcp/*] succeeded!\n"
  I0420 14:47:03.376180 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0420 14:47:03.376896 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9830 exec execpod-affinity4m2ft -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.80:32657/ ; done'
  I0420 14:47:03.918972 13 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:32657/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:32657/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:32657/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:32657/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:32657/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:32657/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:32657/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:32657/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:32657/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:32657/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:32657/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:32657/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:32657/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:32657/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:32657/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:32657/\n"
  I0420 14:47:03.919325 13 builder.go:147] stdout: "\naffinity-nodeport-zlftk\naffinity-nodeport-zlftk\naffinity-nodeport-zlftk\naffinity-nodeport-zlftk\naffinity-nodeport-zlftk\naffinity-nodeport-zlftk\naffinity-nodeport-zlftk\naffinity-nodeport-zlftk\naffinity-nodeport-zlftk\naffinity-nodeport-zlftk\naffinity-nodeport-zlftk\naffinity-nodeport-zlftk\naffinity-nodeport-zlftk\naffinity-nodeport-zlftk\naffinity-nodeport-zlftk\naffinity-nodeport-zlftk"
  I0420 14:47:03.919382 13 service.go:242] Received response from host: affinity-nodeport-zlftk
  I0420 14:47:03.919404 13 service.go:242] Received response from host: affinity-nodeport-zlftk
  I0420 14:47:03.919422 13 service.go:242] Received response from host: affinity-nodeport-zlftk
  I0420 14:47:03.919438 13 service.go:242] Received response from host: affinity-nodeport-zlftk
  I0420 14:47:03.919455 13 service.go:242] Received response from host: affinity-nodeport-zlftk
  I0420 14:47:03.919471 13 service.go:242] Received response from host: affinity-nodeport-zlftk
  I0420 14:47:03.919486 13 service.go:242] Received response from host: affinity-nodeport-zlftk
  I0420 14:47:03.919501 13 service.go:242] Received response from host: affinity-nodeport-zlftk
  I0420 14:47:03.919529 13 service.go:242] Received response from host: affinity-nodeport-zlftk
  I0420 14:47:03.919549 13 service.go:242] Received response from host: affinity-nodeport-zlftk
  I0420 14:47:03.919565 13 service.go:242] Received response from host: affinity-nodeport-zlftk
  I0420 14:47:03.919580 13 service.go:242] Received response from host: affinity-nodeport-zlftk
  I0420 14:47:03.919640 13 service.go:242] Received response from host: affinity-nodeport-zlftk
  I0420 14:47:03.919871 13 service.go:242] Received response from host: affinity-nodeport-zlftk
  I0420 14:47:03.919901 13 service.go:242] Received response from host: affinity-nodeport-zlftk
  I0420 14:47:03.920086 13 service.go:242] Received response from host: affinity-nodeport-zlftk
  I0420 14:47:03.920474 13 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-9830, will wait for the garbage collector to delete the pods @ 04/20/24 14:47:03.946
  I0420 14:47:04.024662 13 resources.go:139] Deleting ReplicationController affinity-nodeport took: 16.193815ms
  E0420 14:47:04.038088      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:47:04.125850 13 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 101.224355ms
  E0420 14:47:05.038599      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:06.039392      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:07.040775      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:47:07.114969 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9830" for this suite. @ 04/20/24 14:47:07.125
• [11.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 04/20/24 14:47:07.141
  I0420 14:47:07.141814 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:47:07.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:07.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:07.177
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:47:07.182
  E0420 14:47:08.040679      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:09.041599      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:47:09.215
  I0420 14:47:09.222907 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod downwardapi-volume-d53d1f13-2dfb-4452-aa8b-84712c20cb32 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:47:09.235
  I0420 14:47:09.270102 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6224" for this suite. @ 04/20/24 14:47:09.28
• [2.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 04/20/24 14:47:09.295
  I0420 14:47:09.295885 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/20/24 14:47:09.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:09.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:09.351
  STEP: creating the policy @ 04/20/24 14:47:09.37
  STEP: waiting until the marker is denied @ 04/20/24 14:47:09.413
  STEP: testing a replicated Deployment to be allowed @ 04/20/24 14:47:09.836
  STEP: testing a non-replicated ReplicaSet not to be denied @ 04/20/24 14:47:09.859
  I0420 14:47:09.947131 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7236" for this suite. @ 04/20/24 14:47:09.972
• [0.723 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 04/20/24 14:47:10.018
  I0420 14:47:10.018687 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename configmap @ 04/20/24 14:47:10.026
  E0420 14:47:10.042554      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:10.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:10.077
  STEP: Creating configMap configmap-1220/configmap-test-6bb6e337-b689-435c-b45e-90174d240ff7 @ 04/20/24 14:47:10.082
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:47:10.09
  E0420 14:47:11.043062      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:12.043817      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:47:12.121
  I0420 14:47:12.130276 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-configmaps-bd9c7c17-0c28-48f8-9fc3-b5bfc23fc3be container env-test: <nil>
  STEP: delete the pod @ 04/20/24 14:47:12.161
  I0420 14:47:12.225980 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1220" for this suite. @ 04/20/24 14:47:12.236
• [2.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 04/20/24 14:47:12.268
  I0420 14:47:12.268876 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename watch @ 04/20/24 14:47:12.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:12.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:12.314
  STEP: creating a new configmap @ 04/20/24 14:47:12.321
  STEP: modifying the configmap once @ 04/20/24 14:47:12.33
  STEP: modifying the configmap a second time @ 04/20/24 14:47:12.348
  STEP: deleting the configmap @ 04/20/24 14:47:12.363
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 04/20/24 14:47:12.382
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 04/20/24 14:47:12.386
  I0420 14:47:12.387758 13 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-23  f6b2fba4-770a-4eab-9b93-508518103d90 60831 0 2024-04-20 14:47:12 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-04-20 14:47:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0420 14:47:12.388239 13 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-23  f6b2fba4-770a-4eab-9b93-508518103d90 60833 0 2024-04-20 14:47:12 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-04-20 14:47:12 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0420 14:47:12.388386 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-23" for this suite. @ 04/20/24 14:47:12.401
• [0.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 04/20/24 14:47:12.417
  I0420 14:47:12.417182 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename endpointslice @ 04/20/24 14:47:12.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:12.452
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:12.458
  STEP: getting /apis @ 04/20/24 14:47:12.463
  STEP: getting /apis/discovery.k8s.io @ 04/20/24 14:47:12.471
  STEP: getting /apis/discovery.k8s.iov1 @ 04/20/24 14:47:12.474
  STEP: creating @ 04/20/24 14:47:12.476
  STEP: getting @ 04/20/24 14:47:12.508
  STEP: listing @ 04/20/24 14:47:12.514
  STEP: watching @ 04/20/24 14:47:12.521
  I0420 14:47:12.521761 13 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 04/20/24 14:47:12.523
  STEP: cluster-wide watching @ 04/20/24 14:47:12.53
  I0420 14:47:12.530919 13 endpointslice.go:459] starting watch
  STEP: patching @ 04/20/24 14:47:12.533
  STEP: updating @ 04/20/24 14:47:12.545
  I0420 14:47:12.565165 13 endpointslice.go:482] waiting for watch events with expected annotations
  I0420 14:47:12.565317 13 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 04/20/24 14:47:12.565
  STEP: deleting a collection @ 04/20/24 14:47:12.589
  I0420 14:47:12.625625 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-419" for this suite. @ 04/20/24 14:47:12.633
• [0.228 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 04/20/24 14:47:12.646
  I0420 14:47:12.646468 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename deployment @ 04/20/24 14:47:12.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:12.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:12.688
  I0420 14:47:12.694926 13 deployment.go:1645] Creating simple deployment test-new-deployment
  I0420 14:47:12.720190 13 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  E0420 14:47:13.044231      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:14.044333      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 04/20/24 14:47:14.773
  STEP: updating a scale subresource @ 04/20/24 14:47:14.779
  STEP: verifying the deployment Spec.Replicas was modified @ 04/20/24 14:47:14.794
  STEP: Patch a scale subresource @ 04/20/24 14:47:14.8
  I0420 14:47:14.829161 13 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2870",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "62609344-bcf3-4da7-a64a-ea925dde6eb0",
      ResourceVersion: (string) (len=5) "60901",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-77db57d8df\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0420 14:47:14.843194 13 deployment.go:39] New ReplicaSet "test-new-deployment-77db57d8df" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2870",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "067b36fb-166c-4a27-bd29-0d09f4c10a68",
      ResourceVersion: (string) (len=5) "60902",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "62609344-bcf3-4da7-a64a-ea925dde6eb0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 32 36 30 39 33  34 34 2d 62 63 66 33 2d  |\"62609344-bcf3-|
              00000120  34 64 61 37 2d 61 36 34  61 2d 65 61 39 32 35 64  |4da7-a64a-ea925d|
              00000130  64 65 36 65 62 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |de6eb0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0420 14:47:14.860667 13 deployment.go:67] Pod "test-new-deployment-77db57d8df-hhxf7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-hhxf7",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-2870",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b122302c-7ac5-479b-8b58-3cebda74c82f",
      ResourceVersion: (string) (len=5) "60891",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "067b36fb-166c-4a27-bd29-0d09f4c10a68",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  37 62 33 36 66 62 2d 31  |d\":\"067b36fb-1|
              00000090  36 36 63 2d 34 61 32 37  2d 62 64 32 39 2d 30 64  |66c-4a27-bd29-0d|
              000000a0  30 39 66 34 63 31 30 61  36 38 5c 22 7d 22 3a 7b  |09f4c10a68\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  31 34 38 5c 22 7d 22 3a  |.233.66.148\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9xrs7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9xrs7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.103"
        }
      },
      PodIP: (string) (len=13) "10.233.66.148",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.148"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849221233,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://2682ccbc23bf752eab22b06b541659075bb12f524b277f51ff6f6c7d8b80daf7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 14:47:14.867677 13 deployment.go:67] Pod "test-new-deployment-77db57d8df-qnqrs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-qnqrs",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-2870",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "675fa2fe-a395-4349-9dea-fed032a155d3",
      ResourceVersion: (string) (len=5) "60903",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849221234,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "067b36fb-166c-4a27-bd29-0d09f4c10a68",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849221234,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 36  37 62 33 36 66 62 2d 31  |d\":\"067b36fb-1|
              00000090  36 36 63 2d 34 61 32 37  2d 62 64 32 39 2d 30 64  |66c-4a27-bd29-0d|
              000000a0  30 39 66 34 63 31 30 61  36 38 5c 22 7d 22 3a 7b  |09f4c10a68\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hxzkh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hxzkh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 14:47:14.870061 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2870" for this suite. @ 04/20/24 14:47:14.889
• [2.266 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 04/20/24 14:47:14.912
  I0420 14:47:14.912950 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 14:47:14.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:15.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:15.03
  E0420 14:47:15.045345      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:47:15.075998 13 service_accounts.go:618] created pod
  E0420 14:47:16.045599      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:17.046041      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:18.047529      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:19.048328      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:47:19.103
  E0420 14:47:20.048326      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:21.048701      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:22.049114      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:23.049197      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:24.050001      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:25.050448      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:26.050567      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:27.051043      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:28.052088      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:29.052220      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:30.052779      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:31.052929      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:32.053958      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:33.055136      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:34.055675      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:35.056670      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:36.057204      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:37.057873      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:38.058010      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:39.058789      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:40.059112      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:41.059786      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:42.060117      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:43.060335      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:44.060562      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:45.060957      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:46.061845      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:47.062171      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:48.062509      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:49.063141      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:47:49.104673 13 service_accounts.go:624] polling logs
  I0420 14:47:49.133517 13 service_accounts.go:634] Pod logs: 
  I0420 14:47:15.848207       1 log.go:245] OK: Got token
  I0420 14:47:15.850373       1 log.go:245] validating with in-cluster discovery
  I0420 14:47:15.853272       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0420 14:47:15.853335       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-1332:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000b9930), NotBefore:(*jwt.NumericDate)(0xc0000b9a20), IssuedAt:(*jwt.NumericDate)(0xc0000b9940), ID:"84c29667-84d7-4ae9-b64a-30995816e7e7"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1332", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"9283db9b-c496-4cfb-b9d1-99d7094b93eb"}}}
  I0420 14:47:15.880288       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0420 14:47:15.892220       1 log.go:245] OK: Validated signature on JWT
  I0420 14:47:15.892569       1 log.go:245] OK: Got valid claims from token!
  I0420 14:47:15.892755       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-1332:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000013170), NotBefore:(*jwt.NumericDate)(0xc000013198), IssuedAt:(*jwt.NumericDate)(0xc000013178), ID:"84c29667-84d7-4ae9-b64a-30995816e7e7"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-1332", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"9283db9b-c496-4cfb-b9d1-99d7094b93eb"}}}

  I0420 14:47:49.133656 13 service_accounts.go:638] completed pod
  I0420 14:47:49.147139 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1332" for this suite. @ 04/20/24 14:47:49.158
• [34.261 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 04/20/24 14:47:49.175
  I0420 14:47:49.175233 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename container-runtime @ 04/20/24 14:47:49.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:49.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:49.223
  STEP: create the container @ 04/20/24 14:47:49.228
  W0420 14:47:49.246062      13 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/20/24 14:47:49.246
  E0420 14:47:50.063667      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:51.064351      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:52.064647      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/20/24 14:47:52.281
  STEP: the container should be terminated @ 04/20/24 14:47:52.288
  STEP: the termination message should be set @ 04/20/24 14:47:52.289
  I0420 14:47:52.289456 13 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 04/20/24 14:47:52.289
  I0420 14:47:52.319548 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7189" for this suite. @ 04/20/24 14:47:52.328
• [3.169 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 04/20/24 14:47:52.344
  I0420 14:47:52.345038 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename proxy @ 04/20/24 14:47:52.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:52.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:52.393
  STEP: starting an echo server on multiple ports @ 04/20/24 14:47:52.426
  STEP: creating replication controller proxy-service-vpwdq in namespace proxy-6746 @ 04/20/24 14:47:52.426
  I0420 14:47:52.448268      13 runners.go:198] Created replication controller with name: proxy-service-vpwdq, namespace: proxy-6746, replica count: 1
  E0420 14:47:53.064839      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:47:53.499884      13 runners.go:198] proxy-service-vpwdq Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0420 14:47:54.065055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:47:54.500182      13 runners.go:198] proxy-service-vpwdq Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0420 14:47:54.508040 13 proxy.go:230] setup took 2.107239906s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 04/20/24 14:47:54.508
  I0420 14:47:54.547015 13 proxy.go:558] (0) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">... (200; 37.87126ms)
  I0420 14:47:54.548151 13 proxy.go:558] (0) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 37.728637ms)
  I0420 14:47:54.548293 13 proxy.go:558] (0) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 38.96121ms)
  I0420 14:47:54.559196 13 proxy.go:558] (0) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">test<... (200; 49.0047ms)
  I0420 14:47:54.562046 13 proxy.go:558] (0) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 51.821321ms)
  I0420 14:47:54.563618 13 proxy.go:558] (0) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname2/proxy/: bar (200; 55.179367ms)
  I0420 14:47:54.567443 13 proxy.go:558] (0) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname1/proxy/: foo (200; 57.94021ms)
  I0420 14:47:54.567654 13 proxy.go:558] (0) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 58.798126ms)
  I0420 14:47:54.567782 13 proxy.go:558] (0) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname2/proxy/: bar (200; 57.426277ms)
  I0420 14:47:54.568208 13 proxy.go:558] (0) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/rewriteme">test</a> (200; 59.439915ms)
  I0420 14:47:54.568338 13 proxy.go:558] (0) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname1/proxy/: foo (200; 58.697807ms)
  I0420 14:47:54.568891 13 proxy.go:558] (0) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname2/proxy/: tls qux (200; 59.906026ms)
  I0420 14:47:54.569030 13 proxy.go:558] (0) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:460/proxy/: tls baz (200; 59.852967ms)
  I0420 14:47:54.569096 13 proxy.go:558] (0) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:462/proxy/: tls qux (200; 60.683756ms)
  I0420 14:47:54.569156 13 proxy.go:558] (0) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname1/proxy/: tls baz (200; 60.521604ms)
  I0420 14:47:54.577485 13 proxy.go:558] (0) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/tlsrewritem... (200; 67.918018ms)
  I0420 14:47:54.591163 13 proxy.go:558] (1) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 13.191383ms)
  I0420 14:47:54.593386 13 proxy.go:558] (1) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:462/proxy/: tls qux (200; 14.941331ms)
  I0420 14:47:54.593400 13 proxy.go:558] (1) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 15.235981ms)
  I0420 14:47:54.596954 13 proxy.go:558] (1) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">... (200; 18.455762ms)
  I0420 14:47:54.597045 13 proxy.go:558] (1) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:460/proxy/: tls baz (200; 18.477902ms)
  I0420 14:47:54.597045 13 proxy.go:558] (1) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname1/proxy/: foo (200; 19.461882ms)
  I0420 14:47:54.599150 13 proxy.go:558] (1) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/rewriteme">test</a> (200; 21.068887ms)
  I0420 14:47:54.603225 13 proxy.go:558] (1) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">test<... (200; 24.010378ms)
  I0420 14:47:54.604032 13 proxy.go:558] (1) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 24.875284ms)
  I0420 14:47:54.605799 13 proxy.go:558] (1) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 26.901586ms)
  I0420 14:47:54.605900 13 proxy.go:558] (1) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname1/proxy/: tls baz (200; 28.027018ms)
  I0420 14:47:54.605960 13 proxy.go:558] (1) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname2/proxy/: bar (200; 27.691454ms)
  I0420 14:47:54.605029 13 proxy.go:558] (1) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/tlsrewritem... (200; 25.688894ms)
  I0420 14:47:54.610173 13 proxy.go:558] (1) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname2/proxy/: bar (200; 31.40832ms)
  I0420 14:47:54.610418 13 proxy.go:558] (1) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname1/proxy/: foo (200; 31.45009ms)
  I0420 14:47:54.613077 13 proxy.go:558] (1) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname2/proxy/: tls qux (200; 34.418873ms)
  I0420 14:47:54.627842 13 proxy.go:558] (2) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/rewriteme">test</a> (200; 13.583243ms)
  I0420 14:47:54.627999 13 proxy.go:558] (2) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:462/proxy/: tls qux (200; 14.644009ms)
  I0420 14:47:54.628629 13 proxy.go:558] (2) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 14.224152ms)
  I0420 14:47:54.629203 13 proxy.go:558] (2) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">test<... (200; 13.765879ms)
  I0420 14:47:54.633806 13 proxy.go:558] (2) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/tlsrewritem... (200; 18.000927ms)
  I0420 14:47:54.634280 13 proxy.go:558] (2) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 18.622095ms)
  I0420 14:47:54.645842 13 proxy.go:558] (2) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 30.339602ms)
  I0420 14:47:54.646562 13 proxy.go:558] (2) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 30.848208ms)
  I0420 14:47:54.651674 13 proxy.go:558] (2) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname2/proxy/: tls qux (200; 37.081297ms)
  I0420 14:47:54.651772 13 proxy.go:558] (2) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:460/proxy/: tls baz (200; 36.182775ms)
  I0420 14:47:54.651866 13 proxy.go:558] (2) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">... (200; 36.598167ms)
  I0420 14:47:54.651921 13 proxy.go:558] (2) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname2/proxy/: bar (200; 36.008044ms)
  I0420 14:47:54.653303 13 proxy.go:558] (2) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname1/proxy/: foo (200; 38.348898ms)
  I0420 14:47:54.660073 13 proxy.go:558] (2) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname2/proxy/: bar (200; 44.881183ms)
  I0420 14:47:54.669919 13 proxy.go:558] (2) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname1/proxy/: foo (200; 54.795753ms)
  I0420 14:47:54.671135 13 proxy.go:558] (2) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname1/proxy/: tls baz (200; 57.350009ms)
  I0420 14:47:54.689598 13 proxy.go:558] (3) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:462/proxy/: tls qux (200; 18.370729ms)
  I0420 14:47:54.702587 13 proxy.go:558] (3) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 30.326483ms)
  I0420 14:47:54.704202 13 proxy.go:558] (3) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">test<... (200; 32.111533ms)
  I0420 14:47:54.704597 13 proxy.go:558] (3) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname1/proxy/: foo (200; 32.947977ms)
  I0420 14:47:54.706343 13 proxy.go:558] (3) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 33.054444ms)
  I0420 14:47:54.706620 13 proxy.go:558] (3) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/tlsrewritem... (200; 34.171497ms)
  I0420 14:47:54.709644 13 proxy.go:558] (3) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname2/proxy/: bar (200; 37.752334ms)
  I0420 14:47:54.711790 13 proxy.go:558] (3) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">... (200; 38.568594ms)
  I0420 14:47:54.713841 13 proxy.go:558] (3) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/rewriteme">test</a> (200; 40.804171ms)
  I0420 14:47:54.715101 13 proxy.go:558] (3) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 41.766092ms)
  I0420 14:47:54.715205 13 proxy.go:558] (3) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname1/proxy/: foo (200; 43.739778ms)
  I0420 14:47:54.715243 13 proxy.go:558] (3) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 42.164952ms)
  I0420 14:47:54.715277 13 proxy.go:558] (3) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname2/proxy/: bar (200; 42.657821ms)
  I0420 14:47:54.715323 13 proxy.go:558] (3) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:460/proxy/: tls baz (200; 42.162906ms)
  I0420 14:47:54.715861 13 proxy.go:558] (3) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname1/proxy/: tls baz (200; 42.867705ms)
  I0420 14:47:54.737699 13 proxy.go:558] (3) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname2/proxy/: tls qux (200; 64.778384ms)
  I0420 14:47:54.754100 13 proxy.go:558] (4) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:462/proxy/: tls qux (200; 15.607558ms)
  I0420 14:47:54.764316 13 proxy.go:558] (4) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">test<... (200; 25.991483ms)
  I0420 14:47:54.764432 13 proxy.go:558] (4) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/tlsrewritem... (200; 25.132512ms)
  I0420 14:47:54.764662 13 proxy.go:558] (4) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 26.166841ms)
  I0420 14:47:54.767492 13 proxy.go:558] (4) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname2/proxy/: bar (200; 29.520203ms)
  I0420 14:47:54.768023 13 proxy.go:558] (4) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:460/proxy/: tls baz (200; 28.97082ms)
  I0420 14:47:54.770069 13 proxy.go:558] (4) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">... (200; 31.084276ms)
  I0420 14:47:54.770078 13 proxy.go:558] (4) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 30.956248ms)
  I0420 14:47:54.771173 13 proxy.go:558] (4) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 32.095902ms)
  I0420 14:47:54.772057 13 proxy.go:558] (4) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 33.485528ms)
  I0420 14:47:54.772888 13 proxy.go:558] (4) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/rewriteme">test</a> (200; 34.089237ms)
  I0420 14:47:54.775259 13 proxy.go:558] (4) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname1/proxy/: tls baz (200; 36.554348ms)
  I0420 14:47:54.775281 13 proxy.go:558] (4) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname1/proxy/: foo (200; 36.030898ms)
  I0420 14:47:54.776680 13 proxy.go:558] (4) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname1/proxy/: foo (200; 37.31037ms)
  I0420 14:47:54.778945 13 proxy.go:558] (4) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname2/proxy/: bar (200; 40.286648ms)
  I0420 14:47:54.781992 13 proxy.go:558] (4) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname2/proxy/: tls qux (200; 43.065109ms)
  I0420 14:47:54.794878 13 proxy.go:558] (5) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:460/proxy/: tls baz (200; 12.75058ms)
  I0420 14:47:54.798948 13 proxy.go:558] (5) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/tlsrewritem... (200; 16.440533ms)
  I0420 14:47:54.798997 13 proxy.go:558] (5) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 16.657458ms)
  I0420 14:47:54.802179 13 proxy.go:558] (5) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/rewriteme">test</a> (200; 18.982052ms)
  I0420 14:47:54.803204 13 proxy.go:558] (5) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">... (200; 19.857082ms)
  I0420 14:47:54.803263 13 proxy.go:558] (5) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 21.099374ms)
  I0420 14:47:54.805556 13 proxy.go:558] (5) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:462/proxy/: tls qux (200; 23.149ms)
  I0420 14:47:54.807563 13 proxy.go:558] (5) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 25.214824ms)
  I0420 14:47:54.808864 13 proxy.go:558] (5) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname2/proxy/: bar (200; 25.781405ms)
  I0420 14:47:54.809105 13 proxy.go:558] (5) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">test<... (200; 25.842152ms)
  I0420 14:47:54.809820 13 proxy.go:558] (5) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 26.533941ms)
  I0420 14:47:54.809863 13 proxy.go:558] (5) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname1/proxy/: tls baz (200; 27.11221ms)
  I0420 14:47:54.809970 13 proxy.go:558] (5) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname1/proxy/: foo (200; 27.103815ms)
  I0420 14:47:54.813133 13 proxy.go:558] (5) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname2/proxy/: bar (200; 30.52152ms)
  I0420 14:47:54.813197 13 proxy.go:558] (5) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname1/proxy/: foo (200; 30.268897ms)
  I0420 14:47:54.813821 13 proxy.go:558] (5) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname2/proxy/: tls qux (200; 30.622559ms)
  I0420 14:47:54.828342 13 proxy.go:558] (6) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">... (200; 13.81011ms)
  I0420 14:47:54.841277 13 proxy.go:558] (6) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname2/proxy/: bar (200; 25.891227ms)
  I0420 14:47:54.841376 13 proxy.go:558] (6) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname1/proxy/: foo (200; 26.076714ms)
  I0420 14:47:54.842769 13 proxy.go:558] (6) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">test<... (200; 27.334106ms)
  I0420 14:47:54.841437 13 proxy.go:558] (6) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 26.338588ms)
  I0420 14:47:54.844336 13 proxy.go:558] (6) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 29.098043ms)
  I0420 14:47:54.844430 13 proxy.go:558] (6) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname2/proxy/: bar (200; 28.888365ms)
  I0420 14:47:54.844644 13 proxy.go:558] (6) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:462/proxy/: tls qux (200; 29.465817ms)
  I0420 14:47:54.847274 13 proxy.go:558] (6) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname2/proxy/: tls qux (200; 33.161295ms)
  I0420 14:47:54.847282 13 proxy.go:558] (6) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 32.188387ms)
  I0420 14:47:54.847605 13 proxy.go:558] (6) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname1/proxy/: foo (200; 32.72104ms)
  I0420 14:47:54.849702 13 proxy.go:558] (6) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 34.95157ms)
  I0420 14:47:54.849871 13 proxy.go:558] (6) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:460/proxy/: tls baz (200; 34.8753ms)
  I0420 14:47:54.849944 13 proxy.go:558] (6) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/tlsrewritem... (200; 35.290599ms)
  I0420 14:47:54.849940 13 proxy.go:558] (6) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/rewriteme">test</a> (200; 34.337061ms)
  I0420 14:47:54.849974 13 proxy.go:558] (6) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname1/proxy/: tls baz (200; 34.502694ms)
  I0420 14:47:54.859365 13 proxy.go:558] (7) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 9.070631ms)
  I0420 14:47:54.861325 13 proxy.go:558] (7) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">test<... (200; 11.196439ms)
  I0420 14:47:54.862962 13 proxy.go:558] (7) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/tlsrewritem... (200; 12.59577ms)
  I0420 14:47:54.865126 13 proxy.go:558] (7) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname1/proxy/: tls baz (200; 15.07194ms)
  I0420 14:47:54.865332 13 proxy.go:558] (7) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:460/proxy/: tls baz (200; 14.784583ms)
  I0420 14:47:54.870426 13 proxy.go:558] (7) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/rewriteme">test</a> (200; 19.77263ms)
  I0420 14:47:54.870623 13 proxy.go:558] (7) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">... (200; 19.87304ms)
  I0420 14:47:54.872186 13 proxy.go:558] (7) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname1/proxy/: foo (200; 21.756392ms)
  I0420 14:47:54.874294 13 proxy.go:558] (7) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname1/proxy/: foo (200; 23.745284ms)
  I0420 14:47:54.876467 13 proxy.go:558] (7) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 25.515643ms)
  I0420 14:47:54.876482 13 proxy.go:558] (7) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:462/proxy/: tls qux (200; 25.619806ms)
  I0420 14:47:54.876526 13 proxy.go:558] (7) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 25.67705ms)
  I0420 14:47:54.878234 13 proxy.go:558] (7) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname2/proxy/: bar (200; 27.303362ms)
  I0420 14:47:54.878859 13 proxy.go:558] (7) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname2/proxy/: bar (200; 27.874087ms)
  I0420 14:47:54.886079 13 proxy.go:558] (7) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 35.164972ms)
  I0420 14:47:54.886116 13 proxy.go:558] (7) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname2/proxy/: tls qux (200; 35.476851ms)
  I0420 14:47:54.901104 13 proxy.go:558] (8) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:460/proxy/: tls baz (200; 13.510824ms)
  I0420 14:47:54.901249 13 proxy.go:558] (8) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/tlsrewritem... (200; 15.032001ms)
  I0420 14:47:54.903402 13 proxy.go:558] (8) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/rewriteme">test</a> (200; 16.50205ms)
  I0420 14:47:54.903412 13 proxy.go:558] (8) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 16.345695ms)
  I0420 14:47:54.903467 13 proxy.go:558] (8) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">... (200; 16.037991ms)
  I0420 14:47:54.903493 13 proxy.go:558] (8) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 15.62446ms)
  I0420 14:47:54.910102 13 proxy.go:558] (8) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 21.912436ms)
  I0420 14:47:54.911589 13 proxy.go:558] (8) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 23.667339ms)
  I0420 14:47:54.913364 13 proxy.go:558] (8) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname2/proxy/: tls qux (200; 26.134368ms)
  I0420 14:47:54.913571 13 proxy.go:558] (8) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname2/proxy/: bar (200; 27.007856ms)
  I0420 14:47:54.914454 13 proxy.go:558] (8) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">test<... (200; 26.302046ms)
  I0420 14:47:54.914531 13 proxy.go:558] (8) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:462/proxy/: tls qux (200; 26.546419ms)
  I0420 14:47:54.915551 13 proxy.go:558] (8) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname1/proxy/: tls baz (200; 28.864834ms)
  I0420 14:47:54.915253 13 proxy.go:558] (8) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname2/proxy/: bar (200; 27.192838ms)
  I0420 14:47:54.916205 13 proxy.go:558] (8) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname1/proxy/: foo (200; 28.092904ms)
  I0420 14:47:54.916285 13 proxy.go:558] (8) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname1/proxy/: foo (200; 28.507008ms)
  I0420 14:47:54.930415 13 proxy.go:558] (9) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/rewriteme">test</a> (200; 14.051082ms)
  I0420 14:47:54.931740 13 proxy.go:558] (9) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">... (200; 14.931912ms)
  I0420 14:47:54.935480 13 proxy.go:558] (9) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:462/proxy/: tls qux (200; 18.085847ms)
  I0420 14:47:54.940460 13 proxy.go:558] (9) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 23.234493ms)
  I0420 14:47:54.940977 13 proxy.go:558] (9) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 23.3192ms)
  I0420 14:47:54.941141 13 proxy.go:558] (9) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 23.106144ms)
  I0420 14:47:54.942001 13 proxy.go:558] (9) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">test<... (200; 24.484941ms)
  I0420 14:47:54.942072 13 proxy.go:558] (9) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/tlsrewritem... (200; 24.2578ms)
  I0420 14:47:54.942114 13 proxy.go:558] (9) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname2/proxy/: tls qux (200; 25.517138ms)
  I0420 14:47:54.942208 13 proxy.go:558] (9) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:460/proxy/: tls baz (200; 25.274728ms)
  I0420 14:47:54.943799 13 proxy.go:558] (9) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname1/proxy/: foo (200; 25.904976ms)
  I0420 14:47:54.944797 13 proxy.go:558] (9) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 27.717729ms)
  I0420 14:47:54.944939 13 proxy.go:558] (9) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname2/proxy/: bar (200; 27.179147ms)
  I0420 14:47:54.945704 13 proxy.go:558] (9) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname1/proxy/: tls baz (200; 27.620261ms)
  I0420 14:47:54.945740 13 proxy.go:558] (9) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname2/proxy/: bar (200; 27.750756ms)
  I0420 14:47:54.946191 13 proxy.go:558] (9) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname1/proxy/: foo (200; 28.334216ms)
  I0420 14:47:54.962056 13 proxy.go:558] (10) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 15.217488ms)
  I0420 14:47:54.962380 13 proxy.go:558] (10) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 16.110241ms)
  I0420 14:47:54.962457 13 proxy.go:558] (10) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">test<... (200; 16.027462ms)
  I0420 14:47:54.962803 13 proxy.go:558] (10) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/rewriteme">test</a> (200; 16.114571ms)
  I0420 14:47:54.962943 13 proxy.go:558] (10) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 16.420512ms)
  I0420 14:47:54.962930 13 proxy.go:558] (10) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:460/proxy/: tls baz (200; 16.316153ms)
  I0420 14:47:54.964017 13 proxy.go:558] (10) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/tlsrewritem... (200; 17.443069ms)
  I0420 14:47:54.966500 13 proxy.go:558] (10) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname2/proxy/: bar (200; 20.139969ms)
  I0420 14:47:54.967698 13 proxy.go:558] (10) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname2/proxy/: bar (200; 20.82291ms)
  I0420 14:47:54.970085 13 proxy.go:558] (10) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">... (200; 22.896616ms)
  I0420 14:47:54.970407 13 proxy.go:558] (10) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:462/proxy/: tls qux (200; 23.324131ms)
  I0420 14:47:54.973156 13 proxy.go:558] (10) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname1/proxy/: tls baz (200; 26.158981ms)
  I0420 14:47:54.974234 13 proxy.go:558] (10) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 26.976386ms)
  I0420 14:47:54.974299 13 proxy.go:558] (10) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname2/proxy/: tls qux (200; 27.174696ms)
  I0420 14:47:54.974383 13 proxy.go:558] (10) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname1/proxy/: foo (200; 27.733874ms)
  I0420 14:47:54.974544 13 proxy.go:558] (10) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname1/proxy/: foo (200; 28.000427ms)
  I0420 14:47:54.986943 13 proxy.go:558] (11) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/tlsrewritem... (200; 11.939707ms)
  I0420 14:47:54.987021 13 proxy.go:558] (11) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:460/proxy/: tls baz (200; 12.097364ms)
  I0420 14:47:54.987284 13 proxy.go:558] (11) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 11.958167ms)
  I0420 14:47:54.987486 13 proxy.go:558] (11) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 12.246379ms)
  I0420 14:47:54.989044 13 proxy.go:558] (11) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">test<... (200; 12.778177ms)
  I0420 14:47:54.990894 13 proxy.go:558] (11) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/rewriteme">test</a> (200; 15.309082ms)
  I0420 14:47:54.991526 13 proxy.go:558] (11) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 15.868745ms)
  I0420 14:47:54.993869 13 proxy.go:558] (11) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname1/proxy/: foo (200; 17.770497ms)
  I0420 14:47:54.994921 13 proxy.go:558] (11) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname2/proxy/: bar (200; 19.478528ms)
  I0420 14:47:54.996118 13 proxy.go:558] (11) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 19.79388ms)
  I0420 14:47:54.999615 13 proxy.go:558] (11) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname1/proxy/: tls baz (200; 24.091881ms)
  I0420 14:47:55.000062 13 proxy.go:558] (11) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">... (200; 24.188345ms)
  I0420 14:47:55.000661 13 proxy.go:558] (11) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname2/proxy/: bar (200; 24.407811ms)
  I0420 14:47:55.001084 13 proxy.go:558] (11) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:462/proxy/: tls qux (200; 25.078634ms)
  I0420 14:47:55.002501 13 proxy.go:558] (11) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname1/proxy/: foo (200; 26.602862ms)
  I0420 14:47:55.002650 13 proxy.go:558] (11) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname2/proxy/: tls qux (200; 26.807468ms)
  I0420 14:47:55.013312 13 proxy.go:558] (12) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 10.389853ms)
  I0420 14:47:55.015434 13 proxy.go:558] (12) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">test<... (200; 11.903764ms)
  I0420 14:47:55.015671 13 proxy.go:558] (12) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 12.060994ms)
  I0420 14:47:55.017519 13 proxy.go:558] (12) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/rewriteme">test</a> (200; 13.403655ms)
  I0420 14:47:55.019020 13 proxy.go:558] (12) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 14.556586ms)
  I0420 14:47:55.019878 13 proxy.go:558] (12) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:460/proxy/: tls baz (200; 15.513716ms)
  I0420 14:47:55.024229 13 proxy.go:558] (12) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/tlsrewritem... (200; 20.405586ms)
  I0420 14:47:55.024634 13 proxy.go:558] (12) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">... (200; 20.324315ms)
  I0420 14:47:55.038328 13 proxy.go:558] (12) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname2/proxy/: tls qux (200; 34.084959ms)
  I0420 14:47:55.038425 13 proxy.go:558] (12) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:462/proxy/: tls qux (200; 33.872045ms)
  I0420 14:47:55.040927 13 proxy.go:558] (12) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname1/proxy/: tls baz (200; 36.960561ms)
  I0420 14:47:55.041806 13 proxy.go:558] (12) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname2/proxy/: bar (200; 38.511555ms)
  I0420 14:47:55.044228 13 proxy.go:558] (12) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname1/proxy/: foo (200; 41.241813ms)
  I0420 14:47:55.047675 13 proxy.go:558] (12) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname2/proxy/: bar (200; 43.815606ms)
  I0420 14:47:55.047790 13 proxy.go:558] (12) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 43.648998ms)
  I0420 14:47:55.050070 13 proxy.go:558] (12) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname1/proxy/: foo (200; 45.377778ms)
  I0420 14:47:55.062814 13 proxy.go:558] (13) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 12.275115ms)
  I0420 14:47:55.063538 13 proxy.go:558] (13) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:460/proxy/: tls baz (200; 13.383542ms)
  I0420 14:47:55.064535 13 proxy.go:558] (13) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/tlsrewritem... (200; 13.66134ms)
  I0420 14:47:55.064578 13 proxy.go:558] (13) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:462/proxy/: tls qux (200; 13.806694ms)
  E0420 14:47:55.065408      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:47:55.065668 13 proxy.go:558] (13) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">... (200; 14.316471ms)
  I0420 14:47:55.067178 13 proxy.go:558] (13) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">test<... (200; 15.690947ms)
  I0420 14:47:55.068146 13 proxy.go:558] (13) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 17.776853ms)
  I0420 14:47:55.069973 13 proxy.go:558] (13) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname1/proxy/: tls baz (200; 18.911877ms)
  I0420 14:47:55.070080 13 proxy.go:558] (13) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 18.828982ms)
  I0420 14:47:55.073531 13 proxy.go:558] (13) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname1/proxy/: foo (200; 22.268547ms)
  I0420 14:47:55.074102 13 proxy.go:558] (13) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname1/proxy/: foo (200; 22.660796ms)
  I0420 14:47:55.078081 13 proxy.go:558] (13) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 26.590517ms)
  I0420 14:47:55.078083 13 proxy.go:558] (13) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/rewriteme">test</a> (200; 26.877622ms)
  I0420 14:47:55.081491 13 proxy.go:558] (13) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname2/proxy/: tls qux (200; 30.197184ms)
  I0420 14:47:55.084292 13 proxy.go:558] (13) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname2/proxy/: bar (200; 32.893014ms)
  I0420 14:47:55.105034 13 proxy.go:558] (13) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname2/proxy/: bar (200; 54.117952ms)
  I0420 14:47:55.117860 13 proxy.go:558] (14) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">test<... (200; 11.940083ms)
  I0420 14:47:55.117937 13 proxy.go:558] (14) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 11.858808ms)
  I0420 14:47:55.118862 13 proxy.go:558] (14) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 10.121458ms)
  I0420 14:47:55.121186 13 proxy.go:558] (14) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 12.817827ms)
  I0420 14:47:55.121796 13 proxy.go:558] (14) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/tlsrewritem... (200; 15.543987ms)
  I0420 14:47:55.121853 13 proxy.go:558] (14) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/rewriteme">test</a> (200; 14.036741ms)
  I0420 14:47:55.122661 13 proxy.go:558] (14) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname1/proxy/: foo (200; 17.250301ms)
  I0420 14:47:55.122765 13 proxy.go:558] (14) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">... (200; 15.594183ms)
  I0420 14:47:55.125140 13 proxy.go:558] (14) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:462/proxy/: tls qux (200; 19.930776ms)
  I0420 14:47:55.125416 13 proxy.go:558] (14) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname1/proxy/: tls baz (200; 18.85125ms)
  I0420 14:47:55.125539 13 proxy.go:558] (14) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:460/proxy/: tls baz (200; 16.925891ms)
  I0420 14:47:55.125744 13 proxy.go:558] (14) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname2/proxy/: bar (200; 17.077246ms)
  I0420 14:47:55.125927 13 proxy.go:558] (14) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 17.915699ms)
  I0420 14:47:55.127282 13 proxy.go:558] (14) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname2/proxy/: bar (200; 20.861085ms)
  I0420 14:47:55.127351 13 proxy.go:558] (14) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname2/proxy/: tls qux (200; 19.194873ms)
  I0420 14:47:55.129355 13 proxy.go:558] (14) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname1/proxy/: foo (200; 23.785979ms)
  I0420 14:47:55.142288 13 proxy.go:558] (15) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/tlsrewritem... (200; 12.027342ms)
  I0420 14:47:55.142343 13 proxy.go:558] (15) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 12.76765ms)
  I0420 14:47:55.142377 13 proxy.go:558] (15) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 12.4777ms)
  I0420 14:47:55.144986 13 proxy.go:558] (15) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 14.412523ms)
  I0420 14:47:55.145062 13 proxy.go:558] (15) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">test<... (200; 15.623705ms)
  I0420 14:47:55.145125 13 proxy.go:558] (15) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 15.093827ms)
  I0420 14:47:55.145178 13 proxy.go:558] (15) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:462/proxy/: tls qux (200; 15.193633ms)
  I0420 14:47:55.145278 13 proxy.go:558] (15) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname1/proxy/: tls baz (200; 15.474144ms)
  I0420 14:47:55.145424 13 proxy.go:558] (15) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname1/proxy/: foo (200; 15.189817ms)
  I0420 14:47:55.149652 13 proxy.go:558] (15) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname2/proxy/: bar (200; 19.9526ms)
  I0420 14:47:55.149738 13 proxy.go:558] (15) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:460/proxy/: tls baz (200; 19.095684ms)
  I0420 14:47:55.149813 13 proxy.go:558] (15) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname2/proxy/: bar (200; 19.504299ms)
  I0420 14:47:55.149393 13 proxy.go:558] (15) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/rewriteme">test</a> (200; 18.925662ms)
  I0420 14:47:55.149975 13 proxy.go:558] (15) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">... (200; 19.370724ms)
  I0420 14:47:55.150287 13 proxy.go:558] (15) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname1/proxy/: foo (200; 20.01661ms)
  I0420 14:47:55.150791 13 proxy.go:558] (15) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname2/proxy/: tls qux (200; 20.387024ms)
  I0420 14:47:55.164047 13 proxy.go:558] (16) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/rewriteme">test</a> (200; 12.701392ms)
  I0420 14:47:55.164142 13 proxy.go:558] (16) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 12.729576ms)
  I0420 14:47:55.164235 13 proxy.go:558] (16) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 12.162545ms)
  I0420 14:47:55.167746 13 proxy.go:558] (16) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/tlsrewritem... (200; 15.502656ms)
  I0420 14:47:55.168182 13 proxy.go:558] (16) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 16.107161ms)
  I0420 14:47:55.168449 13 proxy.go:558] (16) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">... (200; 16.643036ms)
  I0420 14:47:55.168887 13 proxy.go:558] (16) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:462/proxy/: tls qux (200; 17.66987ms)
  I0420 14:47:55.170517 13 proxy.go:558] (16) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname1/proxy/: foo (200; 18.20256ms)
  I0420 14:47:55.169767 13 proxy.go:558] (16) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:460/proxy/: tls baz (200; 18.135436ms)
  I0420 14:47:55.170974 13 proxy.go:558] (16) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">test<... (200; 19.038445ms)
  I0420 14:47:55.171578 13 proxy.go:558] (16) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 19.103792ms)
  I0420 14:47:55.172203 13 proxy.go:558] (16) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname1/proxy/: foo (200; 21.042498ms)
  I0420 14:47:55.172274 13 proxy.go:558] (16) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname2/proxy/: bar (200; 20.772145ms)
  I0420 14:47:55.172342 13 proxy.go:558] (16) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname1/proxy/: tls baz (200; 20.769323ms)
  I0420 14:47:55.173024 13 proxy.go:558] (16) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname2/proxy/: bar (200; 20.892129ms)
  I0420 14:47:55.175497 13 proxy.go:558] (16) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname2/proxy/: tls qux (200; 23.810116ms)
  I0420 14:47:55.185621 13 proxy.go:558] (17) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:460/proxy/: tls baz (200; 10.041043ms)
  I0420 14:47:55.187176 13 proxy.go:558] (17) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 11.362656ms)
  I0420 14:47:55.187560 13 proxy.go:558] (17) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">test<... (200; 11.597471ms)
  I0420 14:47:55.190884 13 proxy.go:558] (17) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">... (200; 13.84283ms)
  I0420 14:47:55.194417 13 proxy.go:558] (17) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/rewriteme">test</a> (200; 18.217964ms)
  I0420 14:47:55.196576 13 proxy.go:558] (17) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 20.188546ms)
  I0420 14:47:55.198428 13 proxy.go:558] (17) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 21.80985ms)
  I0420 14:47:55.199647 13 proxy.go:558] (17) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname2/proxy/: tls qux (200; 22.658351ms)
  I0420 14:47:55.199705 13 proxy.go:558] (17) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:462/proxy/: tls qux (200; 23.157078ms)
  I0420 14:47:55.199882 13 proxy.go:558] (17) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname2/proxy/: bar (200; 24.225972ms)
  I0420 14:47:55.200064 13 proxy.go:558] (17) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 23.598722ms)
  I0420 14:47:55.200119 13 proxy.go:558] (17) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname1/proxy/: foo (200; 23.232845ms)
  I0420 14:47:55.200183 13 proxy.go:558] (17) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname2/proxy/: bar (200; 24.108614ms)
  I0420 14:47:55.199582 13 proxy.go:558] (17) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/tlsrewritem... (200; 22.904488ms)
  I0420 14:47:55.202833 13 proxy.go:558] (17) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname1/proxy/: foo (200; 26.054231ms)
  I0420 14:47:55.205686 13 proxy.go:558] (17) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname1/proxy/: tls baz (200; 29.525437ms)
  I0420 14:47:55.229041 13 proxy.go:558] (18) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:460/proxy/: tls baz (200; 22.863067ms)
  I0420 14:47:55.229126 13 proxy.go:558] (18) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 22.349934ms)
  I0420 14:47:55.229229 13 proxy.go:558] (18) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">... (200; 23.14604ms)
  I0420 14:47:55.229322 13 proxy.go:558] (18) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 23.062397ms)
  I0420 14:47:55.229370 13 proxy.go:558] (18) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:462/proxy/: tls qux (200; 23.027602ms)
  I0420 14:47:55.229416 13 proxy.go:558] (18) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 23.621727ms)
  I0420 14:47:55.229468 13 proxy.go:558] (18) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 23.671763ms)
  I0420 14:47:55.229587 13 proxy.go:558] (18) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname2/proxy/: tls qux (200; 23.63488ms)
  I0420 14:47:55.229661 13 proxy.go:558] (18) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/tlsrewritem... (200; 23.24884ms)
  I0420 14:47:55.229899 13 proxy.go:558] (18) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">test<... (200; 22.47152ms)
  I0420 14:47:55.231858 13 proxy.go:558] (18) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/rewriteme">test</a> (200; 24.756666ms)
  I0420 14:47:55.232276 13 proxy.go:558] (18) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname2/proxy/: bar (200; 25.309415ms)
  I0420 14:47:55.235327 13 proxy.go:558] (18) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname2/proxy/: bar (200; 28.078313ms)
  I0420 14:47:55.235961 13 proxy.go:558] (18) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname1/proxy/: tls baz (200; 28.939526ms)
  I0420 14:47:55.237284 13 proxy.go:558] (18) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname1/proxy/: foo (200; 30.169101ms)
  I0420 14:47:55.237551 13 proxy.go:558] (18) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname1/proxy/: foo (200; 30.367091ms)
  I0420 14:47:55.256488 13 proxy.go:558] (19) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth/proxy/rewriteme">test</a> (200; 18.584391ms)
  I0420 14:47:55.256560 13 proxy.go:558] (19) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:462/proxy/: tls qux (200; 18.653321ms)
  I0420 14:47:55.261453 13 proxy.go:558] (19) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 22.831359ms)
  I0420 14:47:55.262422 13 proxy.go:558] (19) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">test<... (200; 23.533537ms)
  I0420 14:47:55.262600 13 proxy.go:558] (19) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 24.530411ms)
  I0420 14:47:55.262896 13 proxy.go:558] (19) /api/v1/namespaces/proxy-6746/pods/proxy-service-vpwdq-8wpth:162/proxy/: bar (200; 24.365019ms)
  I0420 14:47:55.265620 13 proxy.go:558] (19) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname2/proxy/: bar (200; 27.4208ms)
  I0420 14:47:55.267057 13 proxy.go:558] (19) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:443/proxy/tlsrewritem... (200; 28.05683ms)
  I0420 14:47:55.267202 13 proxy.go:558] (19) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:160/proxy/: foo (200; 28.263993ms)
  I0420 14:47:55.268778 13 proxy.go:558] (19) /api/v1/namespaces/proxy-6746/services/http:proxy-service-vpwdq:portname1/proxy/: foo (200; 31.142538ms)
  I0420 14:47:55.268868 13 proxy.go:558] (19) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname2/proxy/: bar (200; 30.042811ms)
  I0420 14:47:55.268891 13 proxy.go:558] (19) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname1/proxy/: tls baz (200; 30.559596ms)
  I0420 14:47:55.268917 13 proxy.go:558] (19) /api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/: <a href="/api/v1/namespaces/proxy-6746/pods/http:proxy-service-vpwdq-8wpth:1080/proxy/rewriteme">... (200; 29.492809ms)
  I0420 14:47:55.269931 13 proxy.go:558] (19) /api/v1/namespaces/proxy-6746/pods/https:proxy-service-vpwdq-8wpth:460/proxy/: tls baz (200; 30.565355ms)
  I0420 14:47:55.271020 13 proxy.go:558] (19) /api/v1/namespaces/proxy-6746/services/https:proxy-service-vpwdq:tlsportname2/proxy/: tls qux (200; 31.757553ms)
  I0420 14:47:55.271459 13 proxy.go:558] (19) /api/v1/namespaces/proxy-6746/services/proxy-service-vpwdq:portname1/proxy/: foo (200; 32.386044ms)
  STEP: deleting ReplicationController proxy-service-vpwdq in namespace proxy-6746, will wait for the garbage collector to delete the pods @ 04/20/24 14:47:55.271
  I0420 14:47:55.340479 13 resources.go:139] Deleting ReplicationController proxy-service-vpwdq took: 13.247109ms
  I0420 14:47:55.441131 13 resources.go:163] Terminating ReplicationController proxy-service-vpwdq pods took: 100.645545ms
  E0420 14:47:56.066138      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:57.068459      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:47:57.342383 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6746" for this suite. @ 04/20/24 14:47:57.353
• [5.027 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 04/20/24 14:47:57.372
  I0420 14:47:57.372513 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:47:57.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:57.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:57.42
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:47:57.427
  E0420 14:47:58.069761      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:47:59.069983      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:47:59.46
  I0420 14:47:59.466894 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod downwardapi-volume-ac5bdbea-b544-4c90-b361-c92afbc3b3d5 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:47:59.484
  I0420 14:47:59.515558 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6759" for this suite. @ 04/20/24 14:47:59.526
• [2.166 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 04/20/24 14:47:59.538
  I0420 14:47:59.538231 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:47:59.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:47:59.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:47:59.576
  STEP: creating secret secrets-6839/secret-test-1cff3f45-86f1-4269-8787-5b18f6088bb0 @ 04/20/24 14:47:59.581
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:47:59.591
  E0420 14:48:00.070465      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:01.071166      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:48:01.62
  I0420 14:48:01.627424 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-configmaps-444e1ba1-3156-4122-a1b2-ee670a8037bc container env-test: <nil>
  STEP: delete the pod @ 04/20/24 14:48:01.641
  I0420 14:48:01.679459 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6839" for this suite. @ 04/20/24 14:48:01.693
• [2.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 04/20/24 14:48:01.708
  I0420 14:48:01.708336 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename kubelet-test @ 04/20/24 14:48:01.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:48:01.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:48:01.755
  STEP: Waiting for pod completion @ 04/20/24 14:48:01.776
  E0420 14:48:02.072110      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:03.072559      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:04.073151      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:05.073911      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:48:05.821992 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-403" for this suite. @ 04/20/24 14:48:05.833
• [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 04/20/24 14:48:05.856
  I0420 14:48:05.856433 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename gc @ 04/20/24 14:48:05.861
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:48:05.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:48:05.912
  STEP: create the rc @ 04/20/24 14:48:05.919
  W0420 14:48:05.933206      13 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0420 14:48:06.075133      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:07.075468      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:08.075328      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:09.080394      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:10.076548      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 04/20/24 14:48:10.944
  STEP: wait for all pods to be garbage collected @ 04/20/24 14:48:10.962
  E0420 14:48:11.076950      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:12.077251      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:13.078093      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:14.084993      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:15.080096      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/20/24 14:48:15.978
  E0420 14:48:16.080767      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:48:16.180839 13 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0420 14:48:16.181546 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-408" for this suite. @ 04/20/24 14:48:16.198
• [10.362 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 04/20/24 14:48:16.224
  I0420 14:48:16.224375 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 14:48:16.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:48:16.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:48:16.293
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/20/24 14:48:16.3
  E0420 14:48:17.081923      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:18.082322      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:19.082513      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:20.082991      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:48:20.342
  I0420 14:48:20.349932 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-92afda13-97cd-4456-bb23-4c83b4830351 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 14:48:20.367
  I0420 14:48:20.418825 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1926" for this suite. @ 04/20/24 14:48:20.427
• [4.217 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 04/20/24 14:48:20.442
  I0420 14:48:20.442245 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:48:20.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:48:20.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:48:20.483
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:48:20.49
  E0420 14:48:21.084178      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:22.084493      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:48:22.547
  I0420 14:48:22.555344 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod downwardapi-volume-001c59ae-daf3-443d-ae63-34ef4c293f42 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:48:22.567
  I0420 14:48:22.592915 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9234" for this suite. @ 04/20/24 14:48:22.61
• [2.181 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 04/20/24 14:48:22.624
  I0420 14:48:22.624329 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 14:48:22.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:48:22.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:48:22.662
  STEP: Counting existing ResourceQuota @ 04/20/24 14:48:22.667
  E0420 14:48:23.085444      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:24.086467      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:25.087169      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:26.087267      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:27.088419      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/20/24 14:48:27.675
  STEP: Ensuring resource quota status is calculated @ 04/20/24 14:48:27.687
  E0420 14:48:28.089869      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:29.091030      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 04/20/24 14:48:29.702
  STEP: Creating a NodePort Service @ 04/20/24 14:48:29.747
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 04/20/24 14:48:29.811
  STEP: Ensuring resource quota status captures service creation @ 04/20/24 14:48:29.861
  E0420 14:48:30.091520      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:31.092115      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 04/20/24 14:48:31.873
  STEP: Ensuring resource quota status released usage @ 04/20/24 14:48:31.964
  E0420 14:48:32.092935      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:33.093046      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:48:33.973665 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8617" for this suite. @ 04/20/24 14:48:33.985
• [11.374 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 04/20/24 14:48:33.999
  I0420 14:48:33.999907 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename sched-pred @ 04/20/24 14:48:34.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:48:34.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:48:34.043
  I0420 14:48:34.049244 13 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0420 14:48:34.072799 13 util.go:400] Waiting for terminating namespaces to be deleted...
  I0420 14:48:34.080311 13 predicates.go:121] 
  Logging pods the apiserver thinks is on node ier3chochiph-1 before test
  E0420 14:48:34.093524      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:48:34.099300 13 predicates.go:887] coredns-7db6d8ff4d-9bjg9 from kube-system started at 2024-04-20 14:11:30 +0000 UTC (1 container statuses recorded)
  I0420 14:48:34.099422 13 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0420 14:48:34.099461 13 predicates.go:887] kube-addon-manager-ier3chochiph-1 from kube-system started at 2024-04-20 14:04:31 +0000 UTC (1 container statuses recorded)
  I0420 14:48:34.099488 13 predicates.go:889] 	Container kube-addon-manager ready: true, restart count 8
  I0420 14:48:34.099518 13 predicates.go:887] kube-apiserver-ier3chochiph-1 from kube-system started at 2024-04-20 14:04:31 +0000 UTC (1 container statuses recorded)
  I0420 14:48:34.099542 13 predicates.go:889] 	Container kube-apiserver ready: true, restart count 10
  I0420 14:48:34.099572 13 predicates.go:887] kube-controller-manager-ier3chochiph-1 from kube-system started at 2024-04-20 14:04:31 +0000 UTC (1 container statuses recorded)
  I0420 14:48:34.099597 13 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 8
  I0420 14:48:34.099624 13 predicates.go:887] kube-flannel-ds-mzt2f from kube-system started at 2024-04-20 14:11:30 +0000 UTC (1 container statuses recorded)
  I0420 14:48:34.099647 13 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0420 14:48:34.099691 13 predicates.go:887] kube-proxy-lkdx8 from kube-system started at 2024-04-20 14:11:31 +0000 UTC (1 container statuses recorded)
  I0420 14:48:34.099772 13 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0420 14:48:34.099842 13 predicates.go:887] kube-scheduler-ier3chochiph-1 from kube-system started at 2024-04-20 14:04:31 +0000 UTC (1 container statuses recorded)
  I0420 14:48:34.099869 13 predicates.go:889] 	Container kube-scheduler ready: true, restart count 8
  I0420 14:48:34.099933 13 predicates.go:887] sonobuoy-systemd-logs-daemon-set-a313837afcd448ea-mhmwj from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  I0420 14:48:34.099960 13 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0420 14:48:34.099983 13 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0420 14:48:34.100023 13 predicates.go:121] 
  Logging pods the apiserver thinks is on node ier3chochiph-2 before test
  I0420 14:48:34.118595 13 predicates.go:887] coredns-7db6d8ff4d-vjdgd from kube-system started at 2024-04-20 14:43:07 +0000 UTC (1 container statuses recorded)
  I0420 14:48:34.118691 13 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0420 14:48:34.118787 13 predicates.go:887] kube-addon-manager-ier3chochiph-2 from kube-system started at 2024-04-20 14:04:55 +0000 UTC (1 container statuses recorded)
  I0420 14:48:34.118819 13 predicates.go:889] 	Container kube-addon-manager ready: true, restart count 8
  I0420 14:48:34.118872 13 predicates.go:887] kube-apiserver-ier3chochiph-2 from kube-system started at 2024-04-20 14:04:55 +0000 UTC (1 container statuses recorded)
  I0420 14:48:34.118900 13 predicates.go:889] 	Container kube-apiserver ready: true, restart count 8
  I0420 14:48:34.118927 13 predicates.go:887] kube-controller-manager-ier3chochiph-2 from kube-system started at 2024-04-20 14:04:55 +0000 UTC (1 container statuses recorded)
  I0420 14:48:34.118951 13 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 8
  I0420 14:48:34.118979 13 predicates.go:887] kube-flannel-ds-k64d2 from kube-system started at 2024-04-20 14:11:31 +0000 UTC (1 container statuses recorded)
  I0420 14:48:34.119003 13 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0420 14:48:34.119033 13 predicates.go:887] kube-proxy-2tn7g from kube-system started at 2024-04-20 14:11:31 +0000 UTC (1 container statuses recorded)
  I0420 14:48:34.119091 13 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0420 14:48:34.119154 13 predicates.go:887] kube-scheduler-ier3chochiph-2 from kube-system started at 2024-04-20 14:04:55 +0000 UTC (1 container statuses recorded)
  I0420 14:48:34.119181 13 predicates.go:889] 	Container kube-scheduler ready: true, restart count 9
  I0420 14:48:34.119246 13 predicates.go:887] sonobuoy from sonobuoy started at 2024-04-20 14:11:48 +0000 UTC (1 container statuses recorded)
  I0420 14:48:34.119288 13 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0420 14:48:34.119327 13 predicates.go:887] sonobuoy-systemd-logs-daemon-set-a313837afcd448ea-8wcps from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  I0420 14:48:34.119351 13 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0420 14:48:34.119373 13 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0420 14:48:34.119418 13 predicates.go:121] 
  Logging pods the apiserver thinks is on node ier3chochiph-3 before test
  I0420 14:48:34.131382 13 predicates.go:887] kube-flannel-ds-9cdlx from kube-system started at 2024-04-20 14:46:37 +0000 UTC (1 container statuses recorded)
  I0420 14:48:34.131457 13 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0420 14:48:34.131479 13 predicates.go:887] kube-proxy-phg8k from kube-system started at 2024-04-20 14:11:31 +0000 UTC (1 container statuses recorded)
  I0420 14:48:34.131495 13 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0420 14:48:34.131515 13 predicates.go:887] sonobuoy-e2e-job-6517e7bc161d48e3 from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  I0420 14:48:34.131551 13 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0420 14:48:34.131566 13 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0420 14:48:34.131585 13 predicates.go:887] sonobuoy-systemd-logs-daemon-set-a313837afcd448ea-2vtbv from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  I0420 14:48:34.131600 13 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0420 14:48:34.131614 13 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ier3chochiph-1 @ 04/20/24 14:48:34.172
  STEP: verifying the node has the label node ier3chochiph-2 @ 04/20/24 14:48:34.209
  STEP: verifying the node has the label node ier3chochiph-3 @ 04/20/24 14:48:34.258
  I0420 14:48:34.300092 13 predicates.go:374] Pod coredns-7db6d8ff4d-9bjg9 requesting resource cpu=100m on Node ier3chochiph-1
  I0420 14:48:34.300166 13 predicates.go:374] Pod coredns-7db6d8ff4d-vjdgd requesting resource cpu=100m on Node ier3chochiph-2
  I0420 14:48:34.300186 13 predicates.go:374] Pod kube-addon-manager-ier3chochiph-1 requesting resource cpu=5m on Node ier3chochiph-1
  I0420 14:48:34.300203 13 predicates.go:374] Pod kube-addon-manager-ier3chochiph-2 requesting resource cpu=5m on Node ier3chochiph-2
  I0420 14:48:34.300241 13 predicates.go:374] Pod kube-apiserver-ier3chochiph-1 requesting resource cpu=250m on Node ier3chochiph-1
  I0420 14:48:34.300282 13 predicates.go:374] Pod kube-apiserver-ier3chochiph-2 requesting resource cpu=250m on Node ier3chochiph-2
  I0420 14:48:34.300319 13 predicates.go:374] Pod kube-controller-manager-ier3chochiph-1 requesting resource cpu=200m on Node ier3chochiph-1
  I0420 14:48:34.300335 13 predicates.go:374] Pod kube-controller-manager-ier3chochiph-2 requesting resource cpu=200m on Node ier3chochiph-2
  I0420 14:48:34.300350 13 predicates.go:374] Pod kube-flannel-ds-9cdlx requesting resource cpu=100m on Node ier3chochiph-3
  I0420 14:48:34.300366 13 predicates.go:374] Pod kube-flannel-ds-k64d2 requesting resource cpu=100m on Node ier3chochiph-2
  I0420 14:48:34.300381 13 predicates.go:374] Pod kube-flannel-ds-mzt2f requesting resource cpu=100m on Node ier3chochiph-1
  I0420 14:48:34.300396 13 predicates.go:374] Pod kube-proxy-2tn7g requesting resource cpu=0m on Node ier3chochiph-2
  I0420 14:48:34.300412 13 predicates.go:374] Pod kube-proxy-lkdx8 requesting resource cpu=0m on Node ier3chochiph-1
  I0420 14:48:34.300427 13 predicates.go:374] Pod kube-proxy-phg8k requesting resource cpu=0m on Node ier3chochiph-3
  I0420 14:48:34.300443 13 predicates.go:374] Pod kube-scheduler-ier3chochiph-1 requesting resource cpu=100m on Node ier3chochiph-1
  I0420 14:48:34.300458 13 predicates.go:374] Pod kube-scheduler-ier3chochiph-2 requesting resource cpu=100m on Node ier3chochiph-2
  I0420 14:48:34.301115 13 predicates.go:374] Pod sonobuoy requesting resource cpu=0m on Node ier3chochiph-2
  I0420 14:48:34.301140 13 predicates.go:374] Pod sonobuoy-e2e-job-6517e7bc161d48e3 requesting resource cpu=0m on Node ier3chochiph-3
  I0420 14:48:34.301186 13 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-a313837afcd448ea-2vtbv requesting resource cpu=0m on Node ier3chochiph-3
  I0420 14:48:34.301202 13 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-a313837afcd448ea-8wcps requesting resource cpu=0m on Node ier3chochiph-2
  I0420 14:48:34.301243 13 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-a313837afcd448ea-mhmwj requesting resource cpu=0m on Node ier3chochiph-1
  STEP: Starting Pods to consume most of the cluster CPU. @ 04/20/24 14:48:34.301
  I0420 14:48:34.301343 13 predicates.go:384] Creating a pod which consumes cpu=591m on Node ier3chochiph-1
  I0420 14:48:34.319845 13 predicates.go:384] Creating a pod which consumes cpu=591m on Node ier3chochiph-2
  I0420 14:48:34.339513 13 predicates.go:384] Creating a pod which consumes cpu=1050m on Node ier3chochiph-3
  E0420 14:48:35.093819      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:36.094506      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 04/20/24 14:48:36.407
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-44308cdd-89e9-4cef-940c-319906989b91.17c8046aabb16dfa], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6148/filler-pod-44308cdd-89e9-4cef-940c-319906989b91 to ier3chochiph-2] @ 04/20/24 14:48:36.422
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-44308cdd-89e9-4cef-940c-319906989b91.17c8046accd433d8], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/20/24 14:48:36.423
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-44308cdd-89e9-4cef-940c-319906989b91.17c8046ada1e159d], Reason = [Created], Message = [Created container filler-pod-44308cdd-89e9-4cef-940c-319906989b91] @ 04/20/24 14:48:36.423
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-44308cdd-89e9-4cef-940c-319906989b91.17c8046adbaf99c2], Reason = [Started], Message = [Started container filler-pod-44308cdd-89e9-4cef-940c-319906989b91] @ 04/20/24 14:48:36.423
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5e3dcd47-bf74-4a44-affc-f529189a49ea.17c8046aa9e6e587], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6148/filler-pod-5e3dcd47-bf74-4a44-affc-f529189a49ea to ier3chochiph-1] @ 04/20/24 14:48:36.423
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5e3dcd47-bf74-4a44-affc-f529189a49ea.17c8046ac75652c7], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/20/24 14:48:36.423
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5e3dcd47-bf74-4a44-affc-f529189a49ea.17c8046ace39a5e9], Reason = [Created], Message = [Created container filler-pod-5e3dcd47-bf74-4a44-affc-f529189a49ea] @ 04/20/24 14:48:36.423
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-5e3dcd47-bf74-4a44-affc-f529189a49ea.17c8046ad0314502], Reason = [Started], Message = [Started container filler-pod-5e3dcd47-bf74-4a44-affc-f529189a49ea] @ 04/20/24 14:48:36.423
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cfd54cd0-7998-40c9-a1ed-15d56f5e6634.17c8046aad8277ab], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6148/filler-pod-cfd54cd0-7998-40c9-a1ed-15d56f5e6634 to ier3chochiph-3] @ 04/20/24 14:48:36.424
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cfd54cd0-7998-40c9-a1ed-15d56f5e6634.17c8046ac84d87ca], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/20/24 14:48:36.424
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cfd54cd0-7998-40c9-a1ed-15d56f5e6634.17c8046acfd68c4a], Reason = [Created], Message = [Created container filler-pod-cfd54cd0-7998-40c9-a1ed-15d56f5e6634] @ 04/20/24 14:48:36.424
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cfd54cd0-7998-40c9-a1ed-15d56f5e6634.17c8046ad1524d93], Reason = [Started], Message = [Started container filler-pod-cfd54cd0-7998-40c9-a1ed-15d56f5e6634] @ 04/20/24 14:48:36.424
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17c8046b2722c17f], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod.] @ 04/20/24 14:48:36.455
  E0420 14:48:37.095589      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ier3chochiph-1 @ 04/20/24 14:48:37.465
  STEP: verifying the node doesn't have the label node @ 04/20/24 14:48:37.509
  STEP: removing the label node off the node ier3chochiph-2 @ 04/20/24 14:48:37.53
  STEP: verifying the node doesn't have the label node @ 04/20/24 14:48:37.571
  STEP: removing the label node off the node ier3chochiph-3 @ 04/20/24 14:48:37.584
  STEP: verifying the node doesn't have the label node @ 04/20/24 14:48:37.611
  I0420 14:48:37.627627 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6148" for this suite. @ 04/20/24 14:48:37.643
• [3.668 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 04/20/24 14:48:37.67
  I0420 14:48:37.670196 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:48:37.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:48:37.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:48:37.739
  STEP: Setting up server cert @ 04/20/24 14:48:37.795
  E0420 14:48:38.096028      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:48:38.256
  STEP: Deploying the webhook pod @ 04/20/24 14:48:38.28
  STEP: Wait for the deployment to be ready @ 04/20/24 14:48:38.309
  I0420 14:48:38.333833 13 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 14:48:39.097230      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:40.098114      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 14:48:40.361
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:48:40.397
  E0420 14:48:41.097984      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:48:41.398312 13 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/20/24 14:48:41.424
  STEP: create a pod @ 04/20/24 14:48:41.48
  E0420 14:48:42.098157      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:43.098508      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 04/20/24 14:48:43.518
  I0420 14:48:43.519083 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=webhook-2908 attach --namespace=webhook-2908 to-be-attached-pod -i -c=container1'
  I0420 14:48:43.854212 13 builder.go:135] rc: 1
  I0420 14:48:43.979891 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2908" for this suite. @ 04/20/24 14:48:44.002
  STEP: Destroying namespace "webhook-markers-3892" for this suite. @ 04/20/24 14:48:44.028
• [6.373 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 04/20/24 14:48:44.046
  I0420 14:48:44.046557 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 14:48:44.059
  E0420 14:48:44.098314      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:48:44.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:48:44.127
  STEP: apply creating a deployment @ 04/20/24 14:48:44.137
  I0420 14:48:44.172691 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-390" for this suite. @ 04/20/24 14:48:44.208
• [0.181 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2181
  STEP: Creating a kubernetes client @ 04/20/24 14:48:44.227
  I0420 14:48:44.227901 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename services @ 04/20/24 14:48:44.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:48:44.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:48:44.296
  STEP: creating service in namespace services-473 @ 04/20/24 14:48:44.302
  STEP: creating service affinity-clusterip in namespace services-473 @ 04/20/24 14:48:44.302
  STEP: creating replication controller affinity-clusterip in namespace services-473 @ 04/20/24 14:48:44.333
  I0420 14:48:44.353867      13 runners.go:198] Created replication controller with name: affinity-clusterip, namespace: services-473, replica count: 3
  E0420 14:48:45.098566      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:46.099119      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:47.101180      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:48:47.405318      13 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0420 14:48:47.429825 13 resource.go:361] Creating new exec pod
  E0420 14:48:48.101438      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:49.102121      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:50.102367      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:48:50.475924 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-473 exec execpod-affinity8mq64 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0420 14:48:50.925651 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I0420 14:48:50.925806 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0420 14:48:50.926209 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-473 exec execpod-affinity8mq64 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.53.151 80'
  E0420 14:48:51.102875      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:48:51.192325 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.53.151 80\nConnection to 10.233.53.151 80 port [tcp/http] succeeded!\n"
  I0420 14:48:51.192463 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0420 14:48:51.192804 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-473 exec execpod-affinity8mq64 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.53.151:80/ ; done'
  I0420 14:48:51.731854 13 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.53.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.53.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.53.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.53.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.53.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.53.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.53.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.53.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.53.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.53.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.53.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.53.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.53.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.53.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.53.151:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.53.151:80/\n"
  I0420 14:48:51.731971 13 builder.go:147] stdout: "\naffinity-clusterip-mn9zh\naffinity-clusterip-mn9zh\naffinity-clusterip-mn9zh\naffinity-clusterip-mn9zh\naffinity-clusterip-mn9zh\naffinity-clusterip-mn9zh\naffinity-clusterip-mn9zh\naffinity-clusterip-mn9zh\naffinity-clusterip-mn9zh\naffinity-clusterip-mn9zh\naffinity-clusterip-mn9zh\naffinity-clusterip-mn9zh\naffinity-clusterip-mn9zh\naffinity-clusterip-mn9zh\naffinity-clusterip-mn9zh\naffinity-clusterip-mn9zh"
  I0420 14:48:51.732079 13 service.go:242] Received response from host: affinity-clusterip-mn9zh
  I0420 14:48:51.732204 13 service.go:242] Received response from host: affinity-clusterip-mn9zh
  I0420 14:48:51.732227 13 service.go:242] Received response from host: affinity-clusterip-mn9zh
  I0420 14:48:51.732272 13 service.go:242] Received response from host: affinity-clusterip-mn9zh
  I0420 14:48:51.732317 13 service.go:242] Received response from host: affinity-clusterip-mn9zh
  I0420 14:48:51.732337 13 service.go:242] Received response from host: affinity-clusterip-mn9zh
  I0420 14:48:51.732353 13 service.go:242] Received response from host: affinity-clusterip-mn9zh
  I0420 14:48:51.732369 13 service.go:242] Received response from host: affinity-clusterip-mn9zh
  I0420 14:48:51.732387 13 service.go:242] Received response from host: affinity-clusterip-mn9zh
  I0420 14:48:51.732402 13 service.go:242] Received response from host: affinity-clusterip-mn9zh
  I0420 14:48:51.732419 13 service.go:242] Received response from host: affinity-clusterip-mn9zh
  I0420 14:48:51.732438 13 service.go:242] Received response from host: affinity-clusterip-mn9zh
  I0420 14:48:51.732453 13 service.go:242] Received response from host: affinity-clusterip-mn9zh
  I0420 14:48:51.732480 13 service.go:242] Received response from host: affinity-clusterip-mn9zh
  I0420 14:48:51.732496 13 service.go:242] Received response from host: affinity-clusterip-mn9zh
  I0420 14:48:51.732513 13 service.go:242] Received response from host: affinity-clusterip-mn9zh
  I0420 14:48:51.732809 13 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-473, will wait for the garbage collector to delete the pods @ 04/20/24 14:48:51.767
  I0420 14:48:51.863354 13 resources.go:139] Deleting ReplicationController affinity-clusterip took: 37.32982ms
  I0420 14:48:51.964745 13 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 101.381907ms
  E0420 14:48:52.103585      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:53.104439      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:54.104604      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:48:55.015185 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-473" for this suite. @ 04/20/24 14:48:55.031
• [10.819 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:882
  STEP: Creating a kubernetes client @ 04/20/24 14:48:55.052
  I0420 14:48:55.052262 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:48:55.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:48:55.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:48:55.099
  E0420 14:48:55.105316      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: validating api versions @ 04/20/24 14:48:55.106
  I0420 14:48:55.107018 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-4977 api-versions'
  I0420 14:48:55.298879 13 builder.go:146] stderr: ""
  I0420 14:48:55.298998 13 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0420 14:48:55.299218 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4977" for this suite. @ 04/20/24 14:48:55.313
• [0.275 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 04/20/24 14:48:55.326
  I0420 14:48:55.326795 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 14:48:55.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:48:55.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:48:55.375
  STEP: Counting existing ResourceQuota @ 04/20/24 14:48:55.38
  E0420 14:48:56.106091      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:57.107269      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:58.107347      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:48:59.107602      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:00.108033      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/20/24 14:49:00.395
  STEP: Ensuring resource quota status is calculated @ 04/20/24 14:49:00.41
  E0420 14:49:01.109210      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:02.110044      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 04/20/24 14:49:02.417
  STEP: Ensuring resource quota status captures replication controller creation @ 04/20/24 14:49:02.45
  E0420 14:49:03.110341      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:04.110987      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 04/20/24 14:49:04.462
  STEP: Ensuring resource quota status released usage @ 04/20/24 14:49:04.476
  E0420 14:49:05.111168      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:06.112429      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:49:06.491926 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3323" for this suite. @ 04/20/24 14:49:06.505
• [11.197 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 04/20/24 14:49:06.524
  I0420 14:49:06.524426 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename configmap @ 04/20/24 14:49:06.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:06.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:06.586
  STEP: Creating configMap with name configmap-test-upd-4307777c-a5dc-4fc6-8e14-1c27200c0aae @ 04/20/24 14:49:06.611
  STEP: Creating the pod @ 04/20/24 14:49:06.627
  E0420 14:49:07.112678      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:08.113904      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 04/20/24 14:49:08.671
  STEP: Waiting for pod with binary data @ 04/20/24 14:49:08.688
  I0420 14:49:08.700839 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5911" for this suite. @ 04/20/24 14:49:08.715
• [2.209 seconds]
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 04/20/24 14:49:08.733
  I0420 14:49:08.733203 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename gc @ 04/20/24 14:49:08.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:08.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:08.777
  STEP: create the deployment @ 04/20/24 14:49:08.784
  W0420 14:49:08.796650      13 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/20/24 14:49:08.796
  E0420 14:49:09.114380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 04/20/24 14:49:09.307
  STEP: wait for all rs to be garbage collected @ 04/20/24 14:49:09.328
  STEP: expected 0 rs, got 1 rs @ 04/20/24 14:49:09.35
  STEP: expected 0 pods, got 2 pods @ 04/20/24 14:49:09.364
  STEP: Gathering metrics @ 04/20/24 14:49:09.854
  I0420 14:49:10.047904 13 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0420 14:49:10.048309 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4090" for this suite. @ 04/20/24 14:49:10.059
• [1.342 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 04/20/24 14:49:10.077
  I0420 14:49:10.077143 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename subpath @ 04/20/24 14:49:10.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:10.112
  E0420 14:49:10.114910      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:10.118
  STEP: Setting up data @ 04/20/24 14:49:10.123
  STEP: Creating pod pod-subpath-test-configmap-xhb7 @ 04/20/24 14:49:10.142
  STEP: Creating a pod to test atomic-volume-subpath @ 04/20/24 14:49:10.142
  E0420 14:49:11.116497      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:12.116680      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:13.117148      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:14.117365      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:15.118036      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:16.119130      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:17.119920      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:18.119948      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:19.121244      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:20.122476      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:21.122519      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:22.125054      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:23.123973      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:24.125246      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:25.126503      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:26.127348      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:27.127429      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:28.128307      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:29.128560      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:30.129058      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:31.129561      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:32.130051      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:33.132276      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:34.131395      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:49:34.328
  I0420 14:49:34.336579 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-subpath-test-configmap-xhb7 container test-container-subpath-configmap-xhb7: <nil>
  STEP: delete the pod @ 04/20/24 14:49:34.357
  STEP: Deleting pod pod-subpath-test-configmap-xhb7 @ 04/20/24 14:49:34.394
  I0420 14:49:34.394241 13 delete.go:62] Deleting pod "pod-subpath-test-configmap-xhb7" in namespace "subpath-9192"
  I0420 14:49:34.399888 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9192" for this suite. @ 04/20/24 14:49:34.41
• [24.351 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 04/20/24 14:49:34.428
  I0420 14:49:34.429041 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/20/24 14:49:34.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:34.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:34.472
  I0420 14:49:34.477454 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 14:49:35.131765      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:36.133449      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:37.134146      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:49:37.690855 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1717" for this suite. @ 04/20/24 14:49:37.702
• [3.290 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 04/20/24 14:49:37.72
  I0420 14:49:37.720358 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 14:49:37.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:37.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:37.772
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 14:49:37.777
  E0420 14:49:38.134411      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:39.135379      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:40.135534      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:41.136203      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:49:41.816
  I0420 14:49:41.824105 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod downwardapi-volume-0f3ac53b-dc7b-483e-8a5a-425716e9fdbd container client-container: <nil>
  STEP: delete the pod @ 04/20/24 14:49:41.84
  I0420 14:49:41.865454 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2616" for this suite. @ 04/20/24 14:49:41.873
• [4.164 seconds]
------------------------------
SSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 04/20/24 14:49:41.884
  I0420 14:49:41.884847 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename proxy @ 04/20/24 14:49:41.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:41.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:41.921
  I0420 14:49:41.927101 13 proxy.go:387] Creating pod...
  E0420 14:49:42.137153      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:43.137286      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:49:43.957122 13 proxy.go:411] Creating service...
  I0420 14:49:43.995167 13 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4996/pods/agnhost/proxy?method=DELETE
  I0420 14:49:44.020144 13 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0420 14:49:44.020257 13 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4996/pods/agnhost/proxy?method=OPTIONS
  I0420 14:49:44.028213 13 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0420 14:49:44.028327 13 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4996/pods/agnhost/proxy?method=PATCH
  I0420 14:49:44.038049 13 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0420 14:49:44.038166 13 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4996/pods/agnhost/proxy?method=POST
  I0420 14:49:44.047592 13 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0420 14:49:44.047694 13 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4996/pods/agnhost/proxy?method=PUT
  I0420 14:49:44.057244 13 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0420 14:49:44.057323 13 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4996/services/e2e-proxy-test-service/proxy?method=DELETE
  I0420 14:49:44.069010 13 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0420 14:49:44.069267 13 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4996/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0420 14:49:44.081148 13 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0420 14:49:44.081299 13 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4996/services/e2e-proxy-test-service/proxy?method=PATCH
  I0420 14:49:44.096926 13 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0420 14:49:44.097060 13 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4996/services/e2e-proxy-test-service/proxy?method=POST
  I0420 14:49:44.106608 13 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0420 14:49:44.106677 13 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4996/services/e2e-proxy-test-service/proxy?method=PUT
  I0420 14:49:44.115480 13 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0420 14:49:44.115556 13 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4996/pods/agnhost/proxy?method=GET
  I0420 14:49:44.124848 13 proxy.go:487] http.Client request:GET StatusCode:301
  I0420 14:49:44.124951 13 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4996/services/e2e-proxy-test-service/proxy?method=GET
  I0420 14:49:44.133228 13 proxy.go:487] http.Client request:GET StatusCode:301
  I0420 14:49:44.133302 13 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4996/pods/agnhost/proxy?method=HEAD
  E0420 14:49:44.137796      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:49:44.138230 13 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0420 14:49:44.138271 13 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4996/services/e2e-proxy-test-service/proxy?method=HEAD
  I0420 14:49:44.147022 13 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0420 14:49:44.147311 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4996" for this suite. @ 04/20/24 14:49:44.156
• [2.282 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 04/20/24 14:49:44.168
  I0420 14:49:44.168493 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename runtimeclass @ 04/20/24 14:49:44.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:44.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:44.216
  STEP: getting /apis @ 04/20/24 14:49:44.222
  STEP: getting /apis/node.k8s.io @ 04/20/24 14:49:44.232
  STEP: getting /apis/node.k8s.io/v1 @ 04/20/24 14:49:44.234
  STEP: creating @ 04/20/24 14:49:44.236
  STEP: watching @ 04/20/24 14:49:44.28
  I0420 14:49:44.280244 13 runtimeclass.go:275] starting watch
  STEP: getting @ 04/20/24 14:49:44.295
  STEP: listing @ 04/20/24 14:49:44.303
  STEP: patching @ 04/20/24 14:49:44.309
  STEP: updating @ 04/20/24 14:49:44.318
  I0420 14:49:44.328984 13 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 04/20/24 14:49:44.329
  STEP: deleting a collection @ 04/20/24 14:49:44.348
  I0420 14:49:44.374984 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3750" for this suite. @ 04/20/24 14:49:44.386
• [0.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:789
  STEP: Creating a kubernetes client @ 04/20/24 14:49:44.398
  I0420 14:49:44.398104 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename services @ 04/20/24 14:49:44.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:44.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:44.437
  STEP: creating service endpoint-test2 in namespace services-260 @ 04/20/24 14:49:44.442
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-260 to expose endpoints map[] @ 04/20/24 14:49:44.463
  I0420 14:49:44.473958 13 service.go:4226] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0420 14:49:45.138356      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:49:45.496372 13 service.go:4258] successfully validated that service endpoint-test2 in namespace services-260 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-260 @ 04/20/24 14:49:45.496
  E0420 14:49:46.139678      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:47.140080      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-260 to expose endpoints map[pod1:[80]] @ 04/20/24 14:49:47.562
  I0420 14:49:47.591578 13 service.go:4258] successfully validated that service endpoint-test2 in namespace services-260 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 04/20/24 14:49:47.591
  I0420 14:49:47.592020 13 resource.go:361] Creating new exec pod
  E0420 14:49:48.140191      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:49.141150      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:50.142774      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:49:50.634149 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-260 exec execpoddl4sp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0420 14:49:51.026901 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0420 14:49:51.027126 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0420 14:49:51.027503 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-260 exec execpoddl4sp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.29.0 80'
  E0420 14:49:51.142967      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:49:51.309576 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.29.0 80\nConnection to 10.233.29.0 80 port [tcp/http] succeeded!\n"
  I0420 14:49:51.309752 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-260 @ 04/20/24 14:49:51.309
  E0420 14:49:52.144155      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:53.144644      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-260 to expose endpoints map[pod1:[80] pod2:[80]] @ 04/20/24 14:49:53.352
  I0420 14:49:53.402043 13 service.go:4258] successfully validated that service endpoint-test2 in namespace services-260 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 04/20/24 14:49:53.402
  E0420 14:49:54.145585      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:49:54.403585 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-260 exec execpoddl4sp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0420 14:49:54.761563 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0420 14:49:54.761648 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0420 14:49:54.762022 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-260 exec execpoddl4sp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.29.0 80'
  I0420 14:49:55.019553 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.29.0 80\nConnection to 10.233.29.0 80 port [tcp/http] succeeded!\n"
  I0420 14:49:55.019684 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-260 @ 04/20/24 14:49:55.019
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-260 to expose endpoints map[pod2:[80]] @ 04/20/24 14:49:55.055
  E0420 14:49:55.146492      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:49:55.192921 13 service.go:4258] successfully validated that service endpoint-test2 in namespace services-260 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 04/20/24 14:49:55.193
  E0420 14:49:56.147696      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:49:56.196127 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-260 exec execpoddl4sp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0420 14:49:56.513101 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0420 14:49:56.513197 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0420 14:49:56.513425 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-260 exec execpoddl4sp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.29.0 80'
  I0420 14:49:56.801625 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.29.0 80\nConnection to 10.233.29.0 80 port [tcp/http] succeeded!\n"
  I0420 14:49:56.801737 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-260 @ 04/20/24 14:49:56.801
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-260 to expose endpoints map[] @ 04/20/24 14:49:56.833
  I0420 14:49:56.863854 13 service.go:4258] successfully validated that service endpoint-test2 in namespace services-260 exposes endpoints map[]
  I0420 14:49:56.924519 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-260" for this suite. @ 04/20/24 14:49:56.94
• [12.575 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 04/20/24 14:49:56.974
  I0420 14:49:56.974697 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename podtemplate @ 04/20/24 14:49:56.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:57.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:57.018
  STEP: Create a pod template @ 04/20/24 14:49:57.023
  STEP: Replace a pod template @ 04/20/24 14:49:57.036
  I0420 14:49:57.056936 13 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0420 14:49:57.057211 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8286" for this suite. @ 04/20/24 14:49:57.066
• [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 04/20/24 14:49:57.085
  I0420 14:49:57.085684 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 14:49:57.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:57.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:57.122
  STEP: creating a ServiceAccount @ 04/20/24 14:49:57.127
  STEP: watching for the ServiceAccount to be added @ 04/20/24 14:49:57.141
  STEP: patching the ServiceAccount @ 04/20/24 14:49:57.144
  E0420 14:49:57.148484      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 04/20/24 14:49:57.156
  STEP: deleting the ServiceAccount @ 04/20/24 14:49:57.161
  I0420 14:49:57.185457 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1715" for this suite. @ 04/20/24 14:49:57.195
• [0.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:927
  STEP: Creating a kubernetes client @ 04/20/24 14:49:57.208
  I0420 14:49:57.208232 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename job @ 04/20/24 14:49:57.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:49:57.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:49:57.246
  STEP: Creating a suspended job @ 04/20/24 14:49:57.256
  STEP: Patching the Job @ 04/20/24 14:49:57.266
  STEP: Watching for Job to be patched @ 04/20/24 14:49:57.301
  I0420 14:49:57.305228 13 job.go:1109] Event ADDED observed for Job e2e-vqk8m in namespace job-9084 with labels: map[e2e-job-label:e2e-vqk8m] and annotations: map[]
  I0420 14:49:57.305652 13 job.go:1109] Event MODIFIED observed for Job e2e-vqk8m in namespace job-9084 with labels: map[e2e-job-label:e2e-vqk8m] and annotations: map[]
  I0420 14:49:57.306551 13 job.go:1112] Event MODIFIED found for Job e2e-vqk8m in namespace job-9084 with labels: map[e2e-job-label:e2e-vqk8m e2e-vqk8m:patched] and annotations: map[]
  STEP: Updating the job @ 04/20/24 14:49:57.306
  STEP: Watching for Job to be updated @ 04/20/24 14:49:57.324
  I0420 14:49:57.327312 13 job.go:1112] Event MODIFIED found for Job e2e-vqk8m in namespace job-9084 with labels: map[e2e-job-label:e2e-vqk8m e2e-vqk8m:patched] and annotations: map[updated:true]
  I0420 14:49:57.327580 13 job.go:1005] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 04/20/24 14:49:57.327
  I0420 14:49:57.335513 13 job.go:1012] Job: e2e-vqk8m as labels: map[e2e-job-label:e2e-vqk8m e2e-vqk8m:patched]
  STEP: Waiting for job to complete @ 04/20/24 14:49:57.336
  E0420 14:49:58.148888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:49:59.149186      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:00.150100      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:01.150521      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:02.151014      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:03.151426      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:04.152341      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:05.152946      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:06.153246      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:07.154093      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 04/20/24 14:50:07.349
  STEP: Watching for Job to be deleted @ 04/20/24 14:50:07.377
  I0420 14:50:07.384945 13 job.go:1109] Event MODIFIED observed for Job e2e-vqk8m in namespace job-9084 with labels: map[e2e-job-label:e2e-vqk8m e2e-vqk8m:patched] and annotations: map[updated:true]
  I0420 14:50:07.387212 13 job.go:1109] Event MODIFIED observed for Job e2e-vqk8m in namespace job-9084 with labels: map[e2e-job-label:e2e-vqk8m e2e-vqk8m:patched] and annotations: map[updated:true]
  I0420 14:50:07.388050 13 job.go:1109] Event MODIFIED observed for Job e2e-vqk8m in namespace job-9084 with labels: map[e2e-job-label:e2e-vqk8m e2e-vqk8m:patched] and annotations: map[updated:true]
  I0420 14:50:07.388151 13 job.go:1109] Event MODIFIED observed for Job e2e-vqk8m in namespace job-9084 with labels: map[e2e-job-label:e2e-vqk8m e2e-vqk8m:patched] and annotations: map[updated:true]
  I0420 14:50:07.388230 13 job.go:1109] Event MODIFIED observed for Job e2e-vqk8m in namespace job-9084 with labels: map[e2e-job-label:e2e-vqk8m e2e-vqk8m:patched] and annotations: map[updated:true]
  I0420 14:50:07.388707 13 job.go:1112] Event DELETED found for Job e2e-vqk8m in namespace job-9084 with labels: map[e2e-job-label:e2e-vqk8m e2e-vqk8m:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 04/20/24 14:50:07.389
  I0420 14:50:07.398416 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9084" for this suite. @ 04/20/24 14:50:07.441
• [10.250 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 04/20/24 14:50:07.458
  I0420 14:50:07.458993 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename discovery @ 04/20/24 14:50:07.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:50:07.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:50:07.51
  STEP: Setting up server cert @ 04/20/24 14:50:07.518
  I0420 14:50:08.035857 13 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0420 14:50:08.039203 13 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0420 14:50:08.039338 13 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0420 14:50:08.039367 13 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0420 14:50:08.039385 13 discovery.go:139] Checking APIGroup: apps
  I0420 14:50:08.042171 13 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0420 14:50:08.042570 13 discovery.go:148] Versions found [{apps/v1 v1}]
  I0420 14:50:08.042610 13 discovery.go:154] apps/v1 matches apps/v1
  I0420 14:50:08.042645 13 discovery.go:139] Checking APIGroup: events.k8s.io
  I0420 14:50:08.045083 13 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0420 14:50:08.045138 13 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0420 14:50:08.045157 13 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0420 14:50:08.045173 13 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0420 14:50:08.048582 13 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0420 14:50:08.048796 13 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0420 14:50:08.048988 13 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0420 14:50:08.049077 13 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0420 14:50:08.052449 13 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0420 14:50:08.052503 13 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0420 14:50:08.052520 13 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0420 14:50:08.052536 13 discovery.go:139] Checking APIGroup: autoscaling
  I0420 14:50:08.055182 13 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0420 14:50:08.055273 13 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0420 14:50:08.055301 13 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0420 14:50:08.055326 13 discovery.go:139] Checking APIGroup: batch
  I0420 14:50:08.057975 13 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0420 14:50:08.058028 13 discovery.go:148] Versions found [{batch/v1 v1}]
  I0420 14:50:08.058045 13 discovery.go:154] batch/v1 matches batch/v1
  I0420 14:50:08.058062 13 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0420 14:50:08.060691 13 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0420 14:50:08.060849 13 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0420 14:50:08.060878 13 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0420 14:50:08.060945 13 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0420 14:50:08.063424 13 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0420 14:50:08.063477 13 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0420 14:50:08.063495 13 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0420 14:50:08.063511 13 discovery.go:139] Checking APIGroup: policy
  I0420 14:50:08.066100 13 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0420 14:50:08.066196 13 discovery.go:148] Versions found [{policy/v1 v1}]
  I0420 14:50:08.066264 13 discovery.go:154] policy/v1 matches policy/v1
  I0420 14:50:08.066298 13 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0420 14:50:08.068879 13 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0420 14:50:08.068968 13 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0420 14:50:08.068988 13 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0420 14:50:08.069004 13 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0420 14:50:08.071649 13 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0420 14:50:08.071958 13 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0420 14:50:08.071988 13 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0420 14:50:08.072013 13 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0420 14:50:08.075606 13 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0420 14:50:08.075921 13 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0420 14:50:08.075978 13 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0420 14:50:08.076007 13 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0420 14:50:08.078619 13 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0420 14:50:08.078761 13 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0420 14:50:08.078799 13 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0420 14:50:08.078824 13 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0420 14:50:08.081816 13 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0420 14:50:08.081924 13 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0420 14:50:08.081953 13 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0420 14:50:08.081986 13 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0420 14:50:08.084271 13 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0420 14:50:08.084361 13 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0420 14:50:08.084390 13 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0420 14:50:08.084416 13 discovery.go:139] Checking APIGroup: node.k8s.io
  I0420 14:50:08.086927 13 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0420 14:50:08.087015 13 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0420 14:50:08.087033 13 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0420 14:50:08.087049 13 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0420 14:50:08.089798 13 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0420 14:50:08.089879 13 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0420 14:50:08.089938 13 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0420 14:50:08.090010 13 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0420 14:50:08.092616 13 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0420 14:50:08.092674 13 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I0420 14:50:08.092692 13 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0420 14:50:08.092912 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-6425" for this suite. @ 04/20/24 14:50:08.109
• [0.668 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 04/20/24 14:50:08.127
  I0420 14:50:08.127170 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename dns @ 04/20/24 14:50:08.131
  E0420 14:50:08.154395      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:50:08.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:50:08.191
  STEP: Creating a test headless service @ 04/20/24 14:50:08.197
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5676.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-5676.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5676.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-5676.svc.cluster.local;sleep 1; done
   @ 04/20/24 14:50:08.22
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5676.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5676.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5676.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5676.svc.cluster.local;sleep 1; done
   @ 04/20/24 14:50:08.22
  STEP: creating a pod to probe DNS @ 04/20/24 14:50:08.22
  STEP: submitting the pod to kubernetes @ 04/20/24 14:50:08.221
  E0420 14:50:09.155780      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:10.156136      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:11.156694      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:12.157027      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/20/24 14:50:12.318
  STEP: looking for the results for each expected name from probers @ 04/20/24 14:50:12.333
  I0420 14:50:12.349991 13 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:12.357810 13 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:12.367630 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:12.388094 13 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:12.395157 13 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:12.410407 13 dns_common.go:489] Lookups using dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5676.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local]

  I0420 14:50:12.425130 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 14:50:12.438962 13 dns_common.go:495] Pod client logs for querier: 
  I0420 14:50:12.452944 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 14:50:13.157144      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:14.157574      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:15.157910      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:16.158693      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:17.159511      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:50:17.346377 13 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:17.359284 13 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:17.402970 13 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:17.417138 13 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:17.436576 13 dns_common.go:489] Lookups using dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local]

  I0420 14:50:17.457493 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 14:50:17.479400 13 dns_common.go:495] Pod client logs for querier: 
  I0420 14:50:17.499168 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 14:50:18.160461      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:19.161299      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:20.161098      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:21.161456      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:22.161589      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:50:22.345682 13 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:22.352203 13 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:22.380649 13 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:22.386964 13 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:22.400947 13 dns_common.go:489] Lookups using dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local]

  I0420 14:50:22.414516 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 14:50:22.429965 13 dns_common.go:495] Pod client logs for querier: 
  I0420 14:50:22.443391 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 14:50:23.161976      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:24.173824      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:25.168350      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:26.173771      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:27.169476      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:50:27.353001 13 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:27.368391 13 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:27.404632 13 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:27.414311 13 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:27.435364 13 dns_common.go:489] Lookups using dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local]

  I0420 14:50:27.449619 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 14:50:27.462258 13 dns_common.go:495] Pod client logs for querier: 
  I0420 14:50:27.479188 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 14:50:28.170162      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:29.171050      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:30.172114      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:31.172498      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:32.172966      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:50:32.346192 13 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:32.358355 13 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:32.398556 13 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:32.411598 13 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:32.435829 13 dns_common.go:489] Lookups using dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local]

  I0420 14:50:32.455682 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 14:50:32.478808 13 dns_common.go:495] Pod client logs for querier: 
  I0420 14:50:32.496554 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 14:50:33.173414      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:34.173452      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:35.176384      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:36.176001      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:37.176393      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:50:37.350865 13 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:37.363498 13 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:37.399319 13 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:37.411339 13 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local from pod dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e: the server could not find the requested resource (get pods dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e)
  I0420 14:50:37.437702 13 dns_common.go:489] Lookups using dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5676.svc.cluster.local]

  I0420 14:50:37.452284 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 14:50:37.470172 13 dns_common.go:495] Pod client logs for querier: 
  I0420 14:50:37.492859 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 14:50:38.177618      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:39.177855      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:40.179775      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:41.179176      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:42.179802      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:50:42.433595 13 dns_common.go:527] DNS probes using dns-5676/dns-test-a78328cb-0c1d-45f8-b7ec-c2478583227e succeeded

  STEP: deleting the pod @ 04/20/24 14:50:42.436
  STEP: deleting the test headless service @ 04/20/24 14:50:42.505
  I0420 14:50:42.542419 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5676" for this suite. @ 04/20/24 14:50:42.557
• [34.447 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 04/20/24 14:50:42.575
  I0420 14:50:42.575133 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:50:42.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:50:42.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:50:42.634
  STEP: Creating projection with secret that has name secret-emptykey-test-048c68de-2849-4924-8e25-e290563fe91a @ 04/20/24 14:50:42.64
  I0420 14:50:42.644782 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3919" for this suite. @ 04/20/24 14:50:42.656
• [0.092 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 04/20/24 14:50:42.671
  I0420 14:50:42.671616 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename chunking @ 04/20/24 14:50:42.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:50:42.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:50:42.741
  STEP: creating a large number of resources @ 04/20/24 14:50:42.749
  E0420 14:50:43.180249      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:44.180921      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:45.182012      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:46.182216      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:47.183259      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:48.183667      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:49.184832      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:50.186141      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:51.186540      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:52.187518      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:53.188445      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:54.189097      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:55.189905      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:56.191130      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:57.191323      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:58.191478      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:50:59.192019      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:00.192581      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 04/20/24 14:51:00.389
  I0420 14:51:00.439596 13 chunking.go:98] Retrieved 17/17 results with rv 62830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0420 14:51:00.486498 13 chunking.go:98] Retrieved 17/17 results with rv 62830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzAsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0420 14:51:00.536301 13 chunking.go:98] Retrieved 17/17 results with rv 62830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzAsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0420 14:51:00.587869 13 chunking.go:98] Retrieved 17/17 results with rv 62830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzAsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0420 14:51:00.636984 13 chunking.go:98] Retrieved 17/17 results with rv 62830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzAsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0420 14:51:00.686678 13 chunking.go:98] Retrieved 17/17 results with rv 62830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzAsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0420 14:51:00.742567 13 chunking.go:98] Retrieved 17/17 results with rv 62830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzAsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0420 14:51:00.790897 13 chunking.go:98] Retrieved 17/17 results with rv 62830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzAsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0420 14:51:00.838238 13 chunking.go:98] Retrieved 17/17 results with rv 62830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzAsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0420 14:51:00.892287 13 chunking.go:98] Retrieved 17/17 results with rv 62830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzAsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0420 14:51:00.940475 13 chunking.go:98] Retrieved 17/17 results with rv 62830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzAsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0420 14:51:00.988802 13 chunking.go:98] Retrieved 17/17 results with rv 62830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzAsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0420 14:51:01.041464 13 chunking.go:98] Retrieved 17/17 results with rv 62830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzAsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0420 14:51:01.092348 13 chunking.go:98] Retrieved 17/17 results with rv 62830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzAsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0420 14:51:01.139353 13 chunking.go:98] Retrieved 17/17 results with rv 62830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzAsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0420 14:51:01.189554 13 chunking.go:98] Retrieved 17/17 results with rv 62830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzAsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  E0420 14:51:01.193683      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:51:01.240529 13 chunking.go:98] Retrieved 17/17 results with rv 62830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzAsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0420 14:51:01.289906 13 chunking.go:98] Retrieved 17/17 results with rv 62830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzAsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0420 14:51:01.341835 13 chunking.go:98] Retrieved 17/17 results with rv 62830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzAsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0420 14:51:01.395868 13 chunking.go:98] Retrieved 17/17 results with rv 62830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzAsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0420 14:51:01.439363 13 chunking.go:98] Retrieved 17/17 results with rv 62830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzAsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0420 14:51:01.487107 13 chunking.go:98] Retrieved 17/17 results with rv 62830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzAsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0420 14:51:01.540615 13 chunking.go:98] Retrieved 17/17 results with rv 62830 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzAsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0420 14:51:01.586444 13 chunking.go:98] Retrieved 9/17 results with rv 62830 and continue 
  I0420 14:51:01.644944 13 chunking.go:98] Retrieved 17/17 results with rv 62835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0420 14:51:01.703769 13 chunking.go:98] Retrieved 17/17 results with rv 62835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0420 14:51:01.750166 13 chunking.go:98] Retrieved 17/17 results with rv 62835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0420 14:51:01.796619 13 chunking.go:98] Retrieved 17/17 results with rv 62835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0420 14:51:01.851131 13 chunking.go:98] Retrieved 17/17 results with rv 62835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0420 14:51:01.893643 13 chunking.go:98] Retrieved 17/17 results with rv 62835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0420 14:51:01.937470 13 chunking.go:98] Retrieved 17/17 results with rv 62835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0420 14:51:01.988170 13 chunking.go:98] Retrieved 17/17 results with rv 62835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0420 14:51:02.043386 13 chunking.go:98] Retrieved 17/17 results with rv 62835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0420 14:51:02.092477 13 chunking.go:98] Retrieved 17/17 results with rv 62835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0420 14:51:02.137085 13 chunking.go:98] Retrieved 17/17 results with rv 62835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0420 14:51:02.187325 13 chunking.go:98] Retrieved 17/17 results with rv 62835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  E0420 14:51:02.194158      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:51:02.235417 13 chunking.go:98] Retrieved 17/17 results with rv 62835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0420 14:51:02.287449 13 chunking.go:98] Retrieved 17/17 results with rv 62835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0420 14:51:02.335903 13 chunking.go:98] Retrieved 17/17 results with rv 62835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0420 14:51:02.390568 13 chunking.go:98] Retrieved 17/17 results with rv 62835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0420 14:51:02.436160 13 chunking.go:98] Retrieved 17/17 results with rv 62835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0420 14:51:02.487736 13 chunking.go:98] Retrieved 17/17 results with rv 62835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0420 14:51:02.542481 13 chunking.go:98] Retrieved 17/17 results with rv 62835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0420 14:51:02.587122 13 chunking.go:98] Retrieved 17/17 results with rv 62835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0420 14:51:02.635249 13 chunking.go:98] Retrieved 17/17 results with rv 62835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0420 14:51:02.689072 13 chunking.go:98] Retrieved 17/17 results with rv 62835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0420 14:51:02.752013 13 chunking.go:98] Retrieved 17/17 results with rv 62835 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0420 14:51:02.785320 13 chunking.go:98] Retrieved 9/17 results with rv 62835 and continue 
  I0420 14:51:02.836946 13 chunking.go:98] Retrieved 17/17 results with rv 62837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0420 14:51:02.887556 13 chunking.go:98] Retrieved 17/17 results with rv 62837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0420 14:51:02.936566 13 chunking.go:98] Retrieved 17/17 results with rv 62837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0420 14:51:02.988152 13 chunking.go:98] Retrieved 17/17 results with rv 62837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0420 14:51:03.037567 13 chunking.go:98] Retrieved 17/17 results with rv 62837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0420 14:51:03.087632 13 chunking.go:98] Retrieved 17/17 results with rv 62837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0420 14:51:03.137346 13 chunking.go:98] Retrieved 17/17 results with rv 62837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0420 14:51:03.187699 13 chunking.go:98] Retrieved 17/17 results with rv 62837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  E0420 14:51:03.194480      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:51:03.238025 13 chunking.go:98] Retrieved 17/17 results with rv 62837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0420 14:51:03.289023 13 chunking.go:98] Retrieved 17/17 results with rv 62837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0420 14:51:03.338889 13 chunking.go:98] Retrieved 17/17 results with rv 62837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0420 14:51:03.388994 13 chunking.go:98] Retrieved 17/17 results with rv 62837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0420 14:51:03.436499 13 chunking.go:98] Retrieved 17/17 results with rv 62837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0420 14:51:03.485810 13 chunking.go:98] Retrieved 17/17 results with rv 62837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0420 14:51:03.540168 13 chunking.go:98] Retrieved 17/17 results with rv 62837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0420 14:51:03.591671 13 chunking.go:98] Retrieved 17/17 results with rv 62837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0420 14:51:03.636506 13 chunking.go:98] Retrieved 17/17 results with rv 62837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0420 14:51:03.686219 13 chunking.go:98] Retrieved 17/17 results with rv 62837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0420 14:51:03.737700 13 chunking.go:98] Retrieved 17/17 results with rv 62837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0420 14:51:03.788200 13 chunking.go:98] Retrieved 17/17 results with rv 62837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0420 14:51:03.837913 13 chunking.go:98] Retrieved 17/17 results with rv 62837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0420 14:51:03.889243 13 chunking.go:98] Retrieved 17/17 results with rv 62837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0420 14:51:03.937332 13 chunking.go:98] Retrieved 17/17 results with rv 62837 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjI4MzcsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0420 14:51:03.984942 13 chunking.go:98] Retrieved 9/17 results with rv 62837 and continue 
  STEP: retrieving those results all at once @ 04/20/24 14:51:03.985
  I0420 14:51:04.075111 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-6100" for this suite. @ 04/20/24 14:51:04.087
• [21.471 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 04/20/24 14:51:04.146
  I0420 14:51:04.146251 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename aggregateddiscovery @ 04/20/24 14:51:04.151
  E0420 14:51:04.195358      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:04.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:04.206
  I0420 14:51:04.219625 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6418" for this suite. @ 04/20/24 14:51:04.234
• [0.127 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 04/20/24 14:51:04.274
  I0420 14:51:04.274367 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 14:51:04.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:04.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:04.315
  STEP: creating Agnhost RC @ 04/20/24 14:51:04.321
  I0420 14:51:04.321567 13 kubectl.go:1540] namespace kubectl-613
  I0420 14:51:04.322131 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-613 create -f -'
  I0420 14:51:04.794895 13 builder.go:146] stderr: ""
  I0420 14:51:04.794993 13 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/20/24 14:51:04.795
  E0420 14:51:05.196162      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:51:05.810437 13 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0420 14:51:05.810558 13 framework.go:733] Found 1 / 1
  I0420 14:51:05.810816 13 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0420 14:51:05.820592 13 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0420 14:51:05.821019 13 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0420 14:51:05.821077 13 kubectl.go:1547] wait on agnhost-primary startup in kubectl-613 
  I0420 14:51:05.821772 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-613 logs agnhost-primary-gr5qs agnhost-primary'
  I0420 14:51:06.073588 13 builder.go:146] stderr: ""
  I0420 14:51:06.074210 13 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 04/20/24 14:51:06.074
  I0420 14:51:06.075817 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-613 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  E0420 14:51:06.197657      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:51:06.282663 13 builder.go:146] stderr: ""
  I0420 14:51:06.282795 13 builder.go:147] stdout: "service/rm2 exposed\n"
  I0420 14:51:06.296908 13 utils.go:1179] Service rm2 in namespace kubectl-613 found.
  E0420 14:51:07.197940      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:08.199226      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 04/20/24 14:51:08.315
  I0420 14:51:08.315961 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-613 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0420 14:51:08.547136 13 builder.go:146] stderr: ""
  I0420 14:51:08.547250 13 builder.go:147] stdout: "service/rm3 exposed\n"
  I0420 14:51:08.560373 13 utils.go:1179] Service rm3 in namespace kubectl-613 found.
  E0420 14:51:09.199651      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:10.199879      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:51:10.575393 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-613" for this suite. @ 04/20/24 14:51:10.585
• [6.321 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 04/20/24 14:51:10.596
  I0420 14:51:10.596482 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename secrets @ 04/20/24 14:51:10.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:10.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:10.652
  STEP: Creating secret with name secret-test-75c85a79-350b-407d-8d1b-e9516ff13d2c @ 04/20/24 14:51:10.659
  STEP: Creating a pod to test consume secrets @ 04/20/24 14:51:10.669
  E0420 14:51:11.200091      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:12.202487      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:13.203896      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:14.203924      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:51:14.768
  I0420 14:51:14.776508 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-secrets-6bc2791d-34b3-4b0a-b8dd-e43b608613c5 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 14:51:14.803
  I0420 14:51:14.833324 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9949" for this suite. @ 04/20/24 14:51:14.844
• [4.259 seconds]
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 04/20/24 14:51:14.855
  I0420 14:51:14.855252 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 14:51:14.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:14.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:14.892
  STEP: Creating a pod to test downward api env vars @ 04/20/24 14:51:14.898
  E0420 14:51:15.204555      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:16.205236      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:17.206100      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:18.207237      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:51:18.938
  I0420 14:51:18.946555 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod downward-api-bcca9c6e-c8f1-4fde-ae45-c60fb338d4f6 container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 14:51:18.968
  I0420 14:51:19.004236 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7523" for this suite. @ 04/20/24 14:51:19.013
• [4.182 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 04/20/24 14:51:19.037
  I0420 14:51:19.037983 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename configmap @ 04/20/24 14:51:19.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:19.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:19.09
  STEP: Creating configMap with name configmap-test-volume-5533c2e3-caf4-4123-ae48-0ae40f0e7862 @ 04/20/24 14:51:19.096
  STEP: Creating a pod to test consume configMaps @ 04/20/24 14:51:19.104
  E0420 14:51:19.207356      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:20.208073      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:21.208771      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:22.208923      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 14:51:23.147
  I0420 14:51:23.155281 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-configmaps-c34fb0e2-1803-488a-95a2-ddcbec4f627a container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 14:51:23.17
  I0420 14:51:23.199475 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0420 14:51:23.208911      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "configmap-6895" for this suite. @ 04/20/24 14:51:23.21
• [4.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 04/20/24 14:51:23.226
  I0420 14:51:23.226687 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename webhook @ 04/20/24 14:51:23.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:23.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:23.264
  STEP: Setting up server cert @ 04/20/24 14:51:23.315
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 14:51:24.142
  STEP: Deploying the webhook pod @ 04/20/24 14:51:24.161
  STEP: Wait for the deployment to be ready @ 04/20/24 14:51:24.189
  E0420 14:51:24.210005      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:51:24.209941 13 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 14:51:25.210868      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:26.211511      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 14:51:26.23
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 14:51:26.252
  E0420 14:51:27.212376      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:51:27.253145 13 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/20/24 14:51:27.394
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/20/24 14:51:27.472
  STEP: Deleting the collection of validation webhooks @ 04/20/24 14:51:27.529
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/20/24 14:51:27.629
  I0420 14:51:27.731142 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6309" for this suite. @ 04/20/24 14:51:27.742
  STEP: Destroying namespace "webhook-markers-8193" for this suite. @ 04/20/24 14:51:27.756
• [4.549 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 04/20/24 14:51:27.775
  I0420 14:51:27.776030 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename gc @ 04/20/24 14:51:27.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:27.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:27.813
  I0420 14:51:27.883302 13 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"a242c91b-6537-4da5-9a81-68e8a0d39077", Controller:(*bool)(0xc002c34b26), BlockOwnerDeletion:(*bool)(0xc002c34b27)}}
  I0420 14:51:27.900571 13 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"9f812875-9eb8-45e8-b4c4-c9046b00d125", Controller:(*bool)(0xc0039782b6), BlockOwnerDeletion:(*bool)(0xc0039782b7)}}
  I0420 14:51:27.912158 13 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"ae20c5f2-ed03-4b9e-bc8f-310cbb5bec5f", Controller:(*bool)(0xc002c34e06), BlockOwnerDeletion:(*bool)(0xc002c34e07)}}
  E0420 14:51:28.219688      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:29.216058      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:30.216032      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:31.216799      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:32.217128      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:51:32.946417 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7991" for this suite. @ 04/20/24 14:51:32.969
• [5.215 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 04/20/24 14:51:33.01
  I0420 14:51:33.010678 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 14:51:33.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:51:33.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:51:33.063
  STEP: Creating service test in namespace statefulset-7529 @ 04/20/24 14:51:33.095
  STEP: Creating a new StatefulSet @ 04/20/24 14:51:33.108
  I0420 14:51:33.136256 13 wait.go:40] Found 0 stateful pods, waiting for 3
  E0420 14:51:33.217809      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:34.219210      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:35.219057      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:36.219806      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:37.220195      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:38.220473      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:39.221426      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:40.223369      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:41.223695      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:42.223995      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:51:43.148866 13 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0420 14:51:43.149117 13 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0420 14:51:43.149159 13 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0420 14:51:43.181605 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=statefulset-7529 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0420 14:51:43.225045      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:51:43.573919 13 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0420 14:51:43.574280 13 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0420 14:51:43.574713 13 statefulset.go:2184] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0420 14:51:44.225417      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:45.226519      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:46.227669      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:47.228706      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:48.229166      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:49.229387      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:50.229643      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:51.230167      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:52.231643      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:53.232118      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/20/24 14:51:53.605
  I0420 14:51:53.643935 13 statefulset.go:2241] Updating stateful set ss2
  STEP: Creating a new revision @ 04/20/24 14:51:53.644
  E0420 14:51:54.232067      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:55.233073      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:56.233950      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:57.234335      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:58.234879      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:51:59.236133      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:00.236294      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:01.236600      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:02.236668      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:03.237250      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 04/20/24 14:52:03.664
  I0420 14:52:03.673102 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=statefulset-7529 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0420 14:52:03.987860 13 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0420 14:52:03.987960 13 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0420 14:52:03.987987 13 statefulset.go:2208] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0420 14:52:04.238029      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:05.238626      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:06.239412      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:07.240538      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:08.241820      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:09.242130      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:10.242959      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:11.243231      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:12.243379      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:13.244491      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 04/20/24 14:52:14.041
  I0420 14:52:14.042834 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=statefulset-7529 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0420 14:52:14.245282      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:52:14.412826 13 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0420 14:52:14.412924 13 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0420 14:52:14.412954 13 statefulset.go:2184] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0420 14:52:15.246445      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:16.247425      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:17.247802      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:18.248698      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:19.250610      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:20.250101      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:21.250999      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:22.251363      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:23.251585      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:24.251878      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:52:24.480690 13 statefulset.go:2241] Updating stateful set ss2
  E0420 14:52:25.252235      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:26.252637      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:27.253428      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:28.253434      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:29.253914      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:30.254925      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:31.255810      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:32.255983      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:33.256171      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:34.257027      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 04/20/24 14:52:34.504
  I0420 14:52:34.515698 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=statefulset-7529 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0420 14:52:34.848338 13 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0420 14:52:34.849140 13 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0420 14:52:34.849179 13 statefulset.go:2208] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0420 14:52:35.257665      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:36.258141      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:37.258312      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:38.259528      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:39.259936      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:40.260157      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:41.261378      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:42.262361      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:43.263571      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:44.264091      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:52:44.898764 13 statefulset.go:135] Deleting all statefulset in ns statefulset-7529
  I0420 14:52:44.908918 13 rest.go:150] Scaling statefulset ss2 to 0
  E0420 14:52:45.265199      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:46.265604      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:47.266096      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:48.267019      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:49.267221      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:50.267535      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:51.268152      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:52.269495      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:53.269685      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:54.270593      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:52:54.944872 13 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0420 14:52:54.954795 13 rest.go:88] Deleting statefulset ss2
  I0420 14:52:54.980402 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7529" for this suite. @ 04/20/24 14:52:54.991
• [82.001 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3161
  STEP: Creating a kubernetes client @ 04/20/24 14:52:55.012
  I0420 14:52:55.012583 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename services @ 04/20/24 14:52:55.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:52:55.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:52:55.095
  STEP: creating an Endpoint @ 04/20/24 14:52:55.109
  STEP: waiting for available Endpoint @ 04/20/24 14:52:55.118
  STEP: listing all Endpoints @ 04/20/24 14:52:55.121
  STEP: updating the Endpoint @ 04/20/24 14:52:55.128
  STEP: fetching the Endpoint @ 04/20/24 14:52:55.138
  STEP: patching the Endpoint @ 04/20/24 14:52:55.144
  STEP: fetching the Endpoint @ 04/20/24 14:52:55.163
  STEP: deleting the Endpoint by Collection @ 04/20/24 14:52:55.168
  STEP: waiting for Endpoint deletion @ 04/20/24 14:52:55.182
  STEP: fetching the Endpoint @ 04/20/24 14:52:55.184
  I0420 14:52:55.191027 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6286" for this suite. @ 04/20/24 14:52:55.201
• [0.202 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 04/20/24 14:52:55.214
  I0420 14:52:55.214992 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename events @ 04/20/24 14:52:55.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:52:55.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:52:55.256
  STEP: Create set of events @ 04/20/24 14:52:55.262
  E0420 14:52:55.271080      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get a list of Events with a label in the current namespace @ 04/20/24 14:52:55.296
  STEP: delete a list of events @ 04/20/24 14:52:55.308
  I0420 14:52:55.309483 13 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/20/24 14:52:55.353
  I0420 14:52:55.370777 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7348" for this suite. @ 04/20/24 14:52:55.384
• [0.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 04/20/24 14:52:55.402
  I0420 14:52:55.402278 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename chunking @ 04/20/24 14:52:55.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 14:52:55.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 14:52:55.441
  STEP: creating a large number of resources @ 04/20/24 14:52:55.447
  E0420 14:52:56.271784      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:57.271926      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:58.272464      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:52:59.272300      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:00.272658      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:01.273547      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:02.274983      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:03.275031      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:04.275583      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:05.276410      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:06.276695      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:07.277420      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:08.277796      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:09.278222      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:10.278511      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:11.278908      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:12.279379      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 04/20/24 14:53:13.125
  I0420 14:53:13.172810 13 chunking.go:163] Retrieved 40/40 results with rv 64564 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 04/20/24 14:53:13.172
  E0420 14:53:13.280565      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:14.283514      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:15.285152      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:16.282875      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:17.283139      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:18.283969      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:19.284553      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:20.284981      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:21.285631      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:22.286519      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:23.287386      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:24.287973      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:25.288344      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:26.289349      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:27.291767      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:28.290860      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:29.291674      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:30.292565      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:31.293500      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:32.293517      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:53:33.194611 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:53:33.294645      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:34.296117      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:35.296415      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:36.297281      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:37.297924      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:38.298697      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:39.299566      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:40.300296      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:41.301158      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:42.301199      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:43.302677      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:44.302702      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:45.303122      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:46.303341      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:47.303503      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:48.303755      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:49.304410      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:50.304464      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:51.304829      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:52.305034      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:53:53.194214 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:53:53.306189      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:54.307058      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:55.307982      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:56.308215      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:57.308472      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:58.309483      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:53:59.310317      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:00.310364      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:01.310688      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:02.310997      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:03.312285      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:04.313043      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:05.313616      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:06.313992      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:07.314153      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:08.315344      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:09.315522      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:10.316910      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:11.317008      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:12.318137      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:54:13.186222 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:54:13.318668      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:14.319580      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:15.321227      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:16.321667      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:17.322824      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:18.323201      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:19.324032      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:20.324360      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:21.324486      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:22.324814      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:23.325079      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:24.325194      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:25.325672      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:26.326354      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:27.326478      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:28.326523      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:29.327243      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:30.326989      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:31.327485      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:32.327468      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:54:33.187483 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:54:33.328129      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:34.328830      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:35.329032      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:36.329837      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:37.330407      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:38.330598      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:39.331255      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:40.331418      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:41.332415      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:42.332147      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:43.332596      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:44.332856      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:45.333024      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:46.333139      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:47.333481      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:48.334535      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:49.334783      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:50.334764      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:51.335354      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:52.335454      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:54:53.188703 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:54:53.335876      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:54.336646      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:55.337515      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:56.337635      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:57.338291      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:58.338564      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:54:59.339143      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:00.339354      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:01.340154      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:02.340032      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:03.341144      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:04.341587      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:05.342277      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:06.342916      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:07.343054      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:08.343340      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:09.344196      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:10.344393      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:11.344821      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:12.344953      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:55:13.186534 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:55:13.345437      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:14.345640      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:15.346834      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:16.348292      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:17.347875      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:18.348587      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:19.348816      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:20.349332      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:21.349534      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:22.350094      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:23.350199      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:24.350444      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:25.351097      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:26.351597      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:27.351650      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:28.352256      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:29.352620      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:30.353014      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:31.353260      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:32.353392      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:55:33.197595 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:55:33.354509      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:34.355201      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:35.355527      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:36.356339      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:37.356451      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:38.357663      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:39.358038      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:40.358694      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:41.359013      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:42.361224      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:43.360435      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:44.363091      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:45.362440      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:46.362055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:47.362859      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:48.363087      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:49.363912      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:50.364230      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:51.366104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:52.364854      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:55:53.200676 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:55:53.364931      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:54.365284      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:55.366397      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:56.366109      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:57.366052      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:58.366533      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:55:59.367364      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:00.367838      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:01.368034      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:02.368252      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:03.368399      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:04.368599      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:05.369378      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:06.369885      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:07.370092      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:08.371178      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:09.371139      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:10.371922      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:11.372300      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:12.372370      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:56:13.204106 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:56:13.373568      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:14.374557      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:15.374622      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:16.374943      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:17.375242      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:18.375370      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:19.376947      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:20.376562      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:21.377130      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:22.378239      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:23.378842      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:24.379691      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:25.380136      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:26.380091      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:27.381929      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:28.382253      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:29.383072      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:30.383600      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:31.384336      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:32.385213      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:56:33.194416 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:56:33.387308      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:34.387091      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:35.387933      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:36.388704      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:37.389381      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:38.390290      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:39.390978      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:40.391232      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:41.391466      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:42.392077      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:43.393189      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:44.393486      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:45.393840      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:46.394198      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:47.394522      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:48.394629      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:49.394977      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:50.395667      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:51.396313      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:52.396699      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:56:53.185864 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:56:53.397171      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:54.398031      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:55.398386      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:56.399324      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:57.399025      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:58.399289      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:56:59.399843      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:00.400339      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:01.400927      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:02.401056      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:03.402083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:04.407224      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:05.404078      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:06.404602      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:07.409586      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:08.408361      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:09.409179      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:10.409645      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:11.410282      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:12.411167      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:57:13.187687 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:57:13.411451      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:14.412162      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:15.412317      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:16.418564      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:17.414143      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:18.415224      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:19.415668      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:20.416420      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:21.416782      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:22.417949      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:23.418001      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:24.418215      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:25.418529      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:26.418860      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:27.419025      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:28.419283      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:29.421181      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:30.421100      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:31.420924      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:32.420962      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:57:33.191300 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:57:33.421852      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:34.422246      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:35.422661      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:36.423236      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:37.423665      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:38.424467      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:39.425104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:40.425875      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:41.425839      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:42.426838      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:43.426871      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:44.427007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:45.427583      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:46.428209      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:47.428797      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:48.428959      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:49.429510      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:50.429911      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:51.430275      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:52.431130      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:57:53.201116 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:57:53.432060      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:54.432272      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:55.432931      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:56.432965      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:57.434144      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:58.434183      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:57:59.434999      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:00.435593      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:01.435838      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:02.436086      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:03.436534      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:04.436927      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:05.437642      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:06.438230      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:07.438602      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:08.438684      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:09.439017      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:10.439151      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:11.439502      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:12.440874      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:58:13.189352 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:58:13.441380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:14.442184      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:15.442770      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:16.442933      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:17.443172      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:18.444135      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:19.444526      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:20.444678      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:21.445050      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:22.445189      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:23.445852      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:24.446290      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:25.446593      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:26.447241      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:27.447635      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:28.448321      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:29.448855      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:30.449005      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:31.449606      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:32.450391      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:58:33.186392 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:58:33.451239      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:34.452093      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:35.452149      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:36.452899      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:37.452947      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:38.453310      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:39.453551      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:40.453583      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:41.454086      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:42.454201      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:43.456898      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:44.456132      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:45.456542      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:46.457395      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:47.457488      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:48.458609      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:49.458773      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:50.460007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:51.460363      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:52.460535      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:58:53.190171 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:58:53.460534      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:54.461132      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:55.461314      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:56.462128      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:57.461902      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:58.461791      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:58:59.462131      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:00.462885      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:01.463546      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:02.464394      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:03.464388      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:04.465160      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:05.465965      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:06.466416      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:07.466919      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:08.467017      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:09.468274      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:10.468877      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:11.469054      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:12.469903      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:59:13.185500 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:59:13.470671      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:14.471291      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:15.471655      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:16.472168      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:17.473126      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:18.473914      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:19.474116      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:20.474647      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:21.475076      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:22.475837      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:23.476148      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:24.476886      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:25.476703      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:26.477150      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:27.478029      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:28.478239      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:29.480349      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:30.479074      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:31.479852      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:32.480835      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:59:33.188869 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:59:33.481901      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:34.482626      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:35.483230      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:36.483258      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:37.483847      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:38.484063      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:39.484309      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:40.484511      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:41.485390      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:42.485137      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:43.485360      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:44.486339      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:45.487190      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:46.487285      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:47.487786      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:48.488448      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:49.489011      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:50.489856      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:51.489875      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:52.490853      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 14:59:53.191977 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 14:59:53.491634      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:54.492689      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:55.493149      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:56.493148      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:57.494201      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:58.493852      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 14:59:59.494677      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:00.494786      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:01.494903      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:02.495597      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:03.496030      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:04.496215      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:05.496292      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:06.496912      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:07.497144      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:08.497048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:09.497223      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:10.497833      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:11.498100      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:12.498230      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:00:13.189014 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:00:13.498419      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:14.498787      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:15.498892      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:16.499572      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:17.500281      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:18.500311      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:19.500500      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:20.500620      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:21.501364      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:22.502066      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:23.501860      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:24.502331      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:25.502912      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:26.503080      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:27.503586      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:28.504323      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:29.505206      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:30.505525      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:31.506691      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:32.506876      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:00:33.188907 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:00:33.507833      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:34.509030      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:35.509234      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:36.509466      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:37.509910      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:38.509945      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:39.510205      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:40.510815      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:41.511890      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:42.511970      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:43.512149      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:44.513440      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:45.513066      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:46.513821      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:47.513477      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:48.513988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:49.514025      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:50.514316      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:51.515106      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:52.515684      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:00:53.188086 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:00:53.516002      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:54.516168      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:55.517114      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:56.517537      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:57.518007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:58.518015      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:00:59.518189      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:00.519223      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:01.519615      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:02.519816      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:03.520470      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:04.520883      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:05.521078      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:06.521645      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:07.521884      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:08.522146      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:09.522439      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:10.522683      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:11.522869      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:12.523579      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:01:13.189486 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:01:13.523895      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:14.524299      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:15.524281      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:16.524610      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:17.525031      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:18.525504      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:19.525680      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:20.525991      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:21.526429      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:22.527050      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:23.527868      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:24.528809      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:25.529659      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:26.530588      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:27.530911      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:28.531109      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:29.531351      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:30.531810      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:31.532542      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:32.532668      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:01:33.187760 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:01:33.533021      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:34.533623      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:35.533954      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:36.534509      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:37.534811      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:38.534955      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:39.535071      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:40.535291      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:41.536421      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:42.537460      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:43.538302      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:44.538641      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:45.538949      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:46.539220      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:47.539428      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:48.539553      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:49.540020      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:50.541036      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:51.542225      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:52.542376      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:01:53.194001 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:01:53.542657      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:54.542918      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:55.543416      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:56.543551      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:57.543934      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:58.544270      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:01:59.544893      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:00.544767      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:01.545597      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:02.545822      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:03.546912      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:04.547645      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:05.548073      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:06.548825      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:07.549396      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:08.550301      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:09.550858      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:10.550913      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:11.551900      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:12.552435      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:02:13.186874 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:02:13.552690      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:14.552958      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:15.553530      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:16.553673      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:17.554055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:18.554115      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:19.554388      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:20.554866      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:21.555519      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:22.556230      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:23.557158      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:24.557658      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:25.558536      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:26.559120      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:27.559546      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:28.560253      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:29.561364      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:30.561883      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:31.563045      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:32.564039      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:02:33.183855 13 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjQ1NjQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0420 15:02:33.564609      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:34.564933      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:35.565544      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:36.565531      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:37.565801      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:38.566066      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:39.566564      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:40.566923      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:41.567553      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:42.568151      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:43.568281      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:44.568757      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:45.568795      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:46.569416      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:47.570184      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:48.572858      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:49.573675      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:50.574976      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:51.574869      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:52.575444      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:02:53.187792 13 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0420 15:02:53.187945 13 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 04/20/24 15:02:53.188
  STEP: retrieving all remaining pages @ 04/20/24 15:02:53.2
  I0420 15:02:53.215901 13 chunking.go:221] Retrieved 40/40 results with rv 65600 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjU2MDAsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0420 15:02:53.231214 13 chunking.go:221] Retrieved 40/40 results with rv 65600 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjU2MDAsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0420 15:02:53.244386 13 chunking.go:221] Retrieved 40/40 results with rv 65600 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjU2MDAsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0420 15:02:53.257376 13 chunking.go:221] Retrieved 40/40 results with rv 65600 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjU2MDAsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0420 15:02:53.272749 13 chunking.go:221] Retrieved 40/40 results with rv 65600 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjU2MDAsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0420 15:02:53.285968 13 chunking.go:221] Retrieved 40/40 results with rv 65600 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjU2MDAsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0420 15:02:53.299368 13 chunking.go:221] Retrieved 40/40 results with rv 65600 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NjU2MDAsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0420 15:02:53.318899 13 chunking.go:221] Retrieved 40/40 results with rv 65600 and continue 
  I0420 15:02:53.320546 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-3024" for this suite. @ 04/20/24 15:02:53.341
• [597.960 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 04/20/24 15:02:53.365
  I0420 15:02:53.365390 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 15:02:53.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:02:53.44
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:02:53.446
  STEP: Creating pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792 @ 04/20/24 15:02:53.454
  E0420 15:02:53.576126      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:54.577012      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 15:02:55.495
  I0420 15:02:55.505197 13 container_probe.go:1749] Initial restart count of pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 is 0
  I0420 15:02:55.511561 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:02:55.577822      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:56.578811      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:02:57.519837 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:02:57.578481      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:02:58.578826      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:02:59.528054 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:02:59.579417      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:00.581107      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:01.539769 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:03:01.581828      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:02.582580      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:03.548635 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:03:03.582553      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:04.584154      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:05.571223 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:03:05.587377      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:06.587200      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:07.579453 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:03:07.588036      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:08.588789      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:09.587380 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:03:09.588925      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:10.589315      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:11.590300      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:11.596973 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:03:12.590658      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:13.590926      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:13.605641 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:03:14.591118      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:15.591665      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:15.614453 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:03:16.592881      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:17.593160      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:17.623343 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:03:18.593438      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:19.594111      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:19.631285 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:03:20.594465      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:21.595511      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:21.639325 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:03:22.595976      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:23.596084      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:23.652757 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:03:24.596267      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:25.596851      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:25.660492 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:03:26.596993      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:27.597625      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:27.667788 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:03:28.597779      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:29.598608      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:29.676989 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:03:30.598810      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:31.599934      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:31.685183 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:03:32.599993      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:33.601083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:33.692922 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:03:34.601413      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:35.602282      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:35.703503 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:03:36.602461      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:37.602808      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:37.712680 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:03:38.603287      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:39.603850      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:39.720360 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:03:40.604311      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:41.605028      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:41.728237 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:03:42.605208      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:43.605344      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:43.738790 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  E0420 15:03:44.605786      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:45.605803      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:45.747205 13 container_probe.go:1759] Get pod busybox-ae52efda-3623-4790-91bd-cc6c121d8554 in namespace container-probe-7792
  I0420 15:03:45.747330 13 container_probe.go:1763] Restart count of pod container-probe-7792/busybox-ae52efda-3623-4790-91bd-cc6c121d8554 is now 1 (50.242022813s elapsed)
  STEP: deleting the pod @ 04/20/24 15:03:45.747
  I0420 15:03:45.769253 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7792" for this suite. @ 04/20/24 15:03:45.779
• [52.426 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 04/20/24 15:03:45.791
  I0420 15:03:45.791743 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 15:03:45.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:03:45.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:03:45.835
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/20/24 15:03:45.84
  E0420 15:03:46.606245      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:47.606312      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:48.606409      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:49.607082      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:03:49.88
  I0420 15:03:49.888137 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-f1b11266-1646-4645-9669-fefac6cd9ce8 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 15:03:49.927
  I0420 15:03:49.967880 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8561" for this suite. @ 04/20/24 15:03:49.978
• [4.208 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 04/20/24 15:03:50
  I0420 15:03:50.000282 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename pods @ 04/20/24 15:03:50.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:03:50.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:03:50.055
  I0420 15:03:50.063460 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: creating the pod @ 04/20/24 15:03:50.065
  STEP: submitting the pod to kubernetes @ 04/20/24 15:03:50.067
  E0420 15:03:50.608125      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:51.609084      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:52.226616 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5332" for this suite. @ 04/20/24 15:03:52.268
• [2.284 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 04/20/24 15:03:52.285
  I0420 15:03:52.285267 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:03:52.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:03:52.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:03:52.332
  STEP: Setting up server cert @ 04/20/24 15:03:52.382
  E0420 15:03:52.609294      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:53.610159      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:03:53.766
  STEP: Deploying the webhook pod @ 04/20/24 15:03:53.782
  STEP: Wait for the deployment to be ready @ 04/20/24 15:03:53.806
  I0420 15:03:53.816894 13 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0420 15:03:54.610389      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:55.610878      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:55.839560 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 3, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 3, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 3, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 3, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:03:56.611858      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:57.612344      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:57.849189 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 3, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 3, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 3, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 3, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:03:58.612907      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:03:59.612924      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:03:59.848821 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 3, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 3, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 3, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 3, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:04:00.613532      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:01.613364      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:04:01.849562 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 3, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 3, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 3, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 3, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:04:02.613563      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:03.613930      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:04:03.848850 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 3, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 3, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 3, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 3, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:04:04.614124      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:05.614686      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:04:05.849
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:04:05.874
  E0420 15:04:06.614893      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:04:06.875915 13 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 04/20/24 15:04:06.89
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 04/20/24 15:04:06.939
  STEP: Creating a configMap that should not be mutated @ 04/20/24 15:04:06.949
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 04/20/24 15:04:06.968
  STEP: Creating a configMap that should be mutated @ 04/20/24 15:04:06.98
  I0420 15:04:07.152487 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7534" for this suite. @ 04/20/24 15:04:07.166
  STEP: Destroying namespace "webhook-markers-397" for this suite. @ 04/20/24 15:04:07.186
• [14.923 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 04/20/24 15:04:07.211
  I0420 15:04:07.211410 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 15:04:07.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:04:07.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:04:07.251
  E0420 15:04:07.616185      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:08.616925      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:09.617866      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:10.617818      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:11.618888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:12.620240      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:13.620334      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:14.621385      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:15.621497      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:16.622594      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:17.623558      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:18.623786      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:19.624300      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:20.624850      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:21.625010      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:22.625842      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:23.626613      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:24.626837      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:25.627633      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:26.627972      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:27.628079      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:28.629118      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:29.629206      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:30.629843      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:31.630676      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:32.631697      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:33.631989      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:34.632266      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:35.633042      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:36.634030      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:37.634040      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:38.634540      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:39.635162      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:40.635668      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:41.636439      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:42.637159      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:43.637364      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:44.637807      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:45.638835      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:46.640168      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:47.639448      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:48.639701      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:49.640092      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:50.640426      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:51.640518      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:52.641502      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:53.641147      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:54.642221      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:55.642860      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:56.643391      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:57.643602      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:58.646048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:04:59.644593      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:00.644781      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:01.645070      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:02.645697      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:03.646323      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:04.646672      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:05.647779      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:06.648238      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:05:07.284498 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6673" for this suite. @ 04/20/24 15:05:07.296
• [60.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 04/20/24 15:05:07.312
  I0420 15:05:07.312912 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename validating-admission-policy @ 04/20/24 15:05:07.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:05:07.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:05:07.37
  STEP: creating a policy with variables @ 04/20/24 15:05:07.399
  STEP: waiting until the marker is denied @ 04/20/24 15:05:07.431
  STEP: testing a replicated Deployment to be allowed @ 04/20/24 15:05:07.555
  STEP: testing a non-replicated ReplicaSet not to be denied @ 04/20/24 15:05:07.597
  E0420 15:05:07.648536      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:05:07.719641 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1265" for this suite. @ 04/20/24 15:05:07.777
• [0.519 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 04/20/24 15:05:07.832
  I0420 15:05:07.832693 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename security-context-test @ 04/20/24 15:05:07.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:05:07.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:05:07.884
  E0420 15:05:08.649929      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:09.649383      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:10.649845      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:11.650548      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:05:11.935017 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1916" for this suite. @ 04/20/24 15:05:11.944
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 04/20/24 15:05:11.956
  I0420 15:05:11.956911 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename crd-webhook @ 04/20/24 15:05:11.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:05:11.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:05:11.997
  STEP: Setting up server cert @ 04/20/24 15:05:12.003
  E0420 15:05:12.651326      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/20/24 15:05:12.757
  STEP: Deploying the custom resource conversion webhook pod @ 04/20/24 15:05:12.781
  STEP: Wait for the deployment to be ready @ 04/20/24 15:05:12.812
  I0420 15:05:12.828008 13 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0420 15:05:13.651951      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:14.652204      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:05:14.849
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:05:14.873
  E0420 15:05:15.653414      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:05:15.877047 13 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0420 15:05:15.890805 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 15:05:16.654228      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:17.655344      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:18.656584      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 04/20/24 15:05:18.676
  STEP: Create a v2 custom resource @ 04/20/24 15:05:18.755
  STEP: List CRs in v1 @ 04/20/24 15:05:18.969
  STEP: List CRs in v2 @ 04/20/24 15:05:18.981
  I0420 15:05:19.628806 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3595" for this suite. @ 04/20/24 15:05:19.644
  E0420 15:05:19.657187      13 retrywatcher.go:129] "Watch failed" err="context canceled"
• [7.711 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 04/20/24 15:05:19.671
  I0420 15:05:19.671616 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/20/24 15:05:19.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:05:19.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:05:19.726
  STEP: creating @ 04/20/24 15:05:19.731
  STEP: getting @ 04/20/24 15:05:19.766
  STEP: listing in namespace @ 04/20/24 15:05:19.774
  STEP: patching @ 04/20/24 15:05:19.782
  STEP: deleting @ 04/20/24 15:05:19.794
  I0420 15:05:19.833766 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1337" for this suite. @ 04/20/24 15:05:19.862
• [0.204 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 04/20/24 15:05:19.879
  I0420 15:05:19.880046 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:05:19.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:05:19.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:05:19.931
  STEP: Setting up server cert @ 04/20/24 15:05:19.976
  E0420 15:05:20.659221      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:05:21.224
  STEP: Deploying the webhook pod @ 04/20/24 15:05:21.235
  STEP: Wait for the deployment to be ready @ 04/20/24 15:05:21.261
  I0420 15:05:21.285487 13 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 15:05:21.659343      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:22.660595      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:05:23.31
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:05:23.335
  E0420 15:05:23.661562      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:05:24.336611 13 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 04/20/24 15:05:24.353
  STEP: create the configmap with a random name @ 04/20/24 15:05:24.398
  STEP: verify the configmap is mutated @ 04/20/24 15:05:24.422
  STEP: create the configmap with 'skip-me' name @ 04/20/24 15:05:24.422
  I0420 15:05:24.570252 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9808" for this suite. @ 04/20/24 15:05:24.581
  STEP: Destroying namespace "webhook-markers-8442" for this suite. @ 04/20/24 15:05:24.6
• [4.732 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 04/20/24 15:05:24.615
  I0420 15:05:24.615586 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename init-container @ 04/20/24 15:05:24.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:05:24.656
  E0420 15:05:24.661934      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:05:24.662
  STEP: creating the pod @ 04/20/24 15:05:24.673
  I0420 15:05:24.674158 13 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0420 15:05:25.663020      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:26.663893      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:27.665422      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:05:27.697763 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2626" for this suite. @ 04/20/24 15:05:27.711
• [3.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 04/20/24 15:05:27.728
  I0420 15:05:27.729157 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename kubelet-test @ 04/20/24 15:05:27.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:05:27.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:05:27.774
  E0420 15:05:28.665109      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:29.665281      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:05:29.862056 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3474" for this suite. @ 04/20/24 15:05:29.878
• [2.164 seconds]
------------------------------
S
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 04/20/24 15:05:29.894
  I0420 15:05:29.894353 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 15:05:29.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:05:29.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:05:29.959
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 15:05:29.966
  E0420 15:05:30.666096      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:31.667133      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:32.667214      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:33.667362      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:05:34.015
  I0420 15:05:34.020841 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod downwardapi-volume-6eb5d4ec-6424-42be-9b0d-c69cc34bb342 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 15:05:34.036
  I0420 15:05:34.063316 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3939" for this suite. @ 04/20/24 15:05:34.073
• [4.194 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 04/20/24 15:05:34.089
  I0420 15:05:34.089135 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename sched-pred @ 04/20/24 15:05:34.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:05:34.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:05:34.134
  I0420 15:05:34.139787 13 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0420 15:05:34.163465 13 util.go:400] Waiting for terminating namespaces to be deleted...
  I0420 15:05:34.171573 13 predicates.go:121] 
  Logging pods the apiserver thinks is on node ier3chochiph-1 before test
  I0420 15:05:34.191003 13 predicates.go:887] coredns-7db6d8ff4d-9bjg9 from kube-system started at 2024-04-20 14:11:30 +0000 UTC (1 container statuses recorded)
  I0420 15:05:34.191093 13 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0420 15:05:34.191117 13 predicates.go:887] kube-addon-manager-ier3chochiph-1 from kube-system started at 2024-04-20 14:04:31 +0000 UTC (1 container statuses recorded)
  I0420 15:05:34.191135 13 predicates.go:889] 	Container kube-addon-manager ready: true, restart count 8
  I0420 15:05:34.191153 13 predicates.go:887] kube-apiserver-ier3chochiph-1 from kube-system started at 2024-04-20 14:04:31 +0000 UTC (1 container statuses recorded)
  I0420 15:05:34.191188 13 predicates.go:889] 	Container kube-apiserver ready: true, restart count 10
  I0420 15:05:34.191206 13 predicates.go:887] kube-controller-manager-ier3chochiph-1 from kube-system started at 2024-04-20 14:04:31 +0000 UTC (1 container statuses recorded)
  I0420 15:05:34.191221 13 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 8
  I0420 15:05:34.191649 13 predicates.go:887] kube-flannel-ds-mzt2f from kube-system started at 2024-04-20 14:11:30 +0000 UTC (1 container statuses recorded)
  I0420 15:05:34.191951 13 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0420 15:05:34.191980 13 predicates.go:887] kube-proxy-lkdx8 from kube-system started at 2024-04-20 14:11:31 +0000 UTC (1 container statuses recorded)
  I0420 15:05:34.191996 13 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0420 15:05:34.192012 13 predicates.go:887] kube-scheduler-ier3chochiph-1 from kube-system started at 2024-04-20 14:04:31 +0000 UTC (1 container statuses recorded)
  I0420 15:05:34.192027 13 predicates.go:889] 	Container kube-scheduler ready: true, restart count 8
  I0420 15:05:34.192043 13 predicates.go:887] sonobuoy-systemd-logs-daemon-set-a313837afcd448ea-mhmwj from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  I0420 15:05:34.192089 13 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0420 15:05:34.192104 13 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0420 15:05:34.192136 13 predicates.go:121] 
  Logging pods the apiserver thinks is on node ier3chochiph-2 before test
  I0420 15:05:34.210964 13 predicates.go:887] coredns-7db6d8ff4d-vjdgd from kube-system started at 2024-04-20 14:43:07 +0000 UTC (1 container statuses recorded)
  I0420 15:05:34.211695 13 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0420 15:05:34.212003 13 predicates.go:887] kube-addon-manager-ier3chochiph-2 from kube-system started at 2024-04-20 14:04:55 +0000 UTC (1 container statuses recorded)
  I0420 15:05:34.212303 13 predicates.go:889] 	Container kube-addon-manager ready: true, restart count 8
  I0420 15:05:34.212333 13 predicates.go:887] kube-apiserver-ier3chochiph-2 from kube-system started at 2024-04-20 14:04:55 +0000 UTC (1 container statuses recorded)
  I0420 15:05:34.212601 13 predicates.go:889] 	Container kube-apiserver ready: true, restart count 8
  I0420 15:05:34.212777 13 predicates.go:887] kube-controller-manager-ier3chochiph-2 from kube-system started at 2024-04-20 14:04:55 +0000 UTC (1 container statuses recorded)
  I0420 15:05:34.212799 13 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 8
  I0420 15:05:34.212851 13 predicates.go:887] kube-flannel-ds-k64d2 from kube-system started at 2024-04-20 14:11:31 +0000 UTC (1 container statuses recorded)
  I0420 15:05:34.212867 13 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0420 15:05:34.212884 13 predicates.go:887] kube-proxy-2tn7g from kube-system started at 2024-04-20 14:11:31 +0000 UTC (1 container statuses recorded)
  I0420 15:05:34.212899 13 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0420 15:05:34.212939 13 predicates.go:887] kube-scheduler-ier3chochiph-2 from kube-system started at 2024-04-20 14:04:55 +0000 UTC (1 container statuses recorded)
  I0420 15:05:34.212954 13 predicates.go:889] 	Container kube-scheduler ready: true, restart count 9
  I0420 15:05:34.212986 13 predicates.go:887] sonobuoy from sonobuoy started at 2024-04-20 14:11:48 +0000 UTC (1 container statuses recorded)
  I0420 15:05:34.213004 13 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0420 15:05:34.213022 13 predicates.go:887] sonobuoy-systemd-logs-daemon-set-a313837afcd448ea-8wcps from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  I0420 15:05:34.213054 13 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0420 15:05:34.213070 13 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0420 15:05:34.213086 13 predicates.go:121] 
  Logging pods the apiserver thinks is on node ier3chochiph-3 before test
  I0420 15:05:34.228036 13 predicates.go:887] kube-flannel-ds-9cdlx from kube-system started at 2024-04-20 14:46:37 +0000 UTC (1 container statuses recorded)
  I0420 15:05:34.228108 13 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0420 15:05:34.228131 13 predicates.go:887] kube-proxy-phg8k from kube-system started at 2024-04-20 14:11:31 +0000 UTC (1 container statuses recorded)
  I0420 15:05:34.228147 13 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0420 15:05:34.228177 13 predicates.go:887] busybox-scheduling-5d44dc6b-4dbb-460d-9bbe-2bb2c34e7137 from kubelet-test-3474 started at 2024-04-20 15:05:27 +0000 UTC (1 container statuses recorded)
  I0420 15:05:34.228192 13 predicates.go:889] 	Container busybox-scheduling-5d44dc6b-4dbb-460d-9bbe-2bb2c34e7137 ready: true, restart count 0
  I0420 15:05:34.228209 13 predicates.go:887] sonobuoy-e2e-job-6517e7bc161d48e3 from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  I0420 15:05:34.228224 13 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0420 15:05:34.228238 13 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0420 15:05:34.228259 13 predicates.go:887] sonobuoy-systemd-logs-daemon-set-a313837afcd448ea-2vtbv from sonobuoy started at 2024-04-20 14:11:56 +0000 UTC (2 container statuses recorded)
  I0420 15:05:34.228273 13 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0420 15:05:34.228288 13 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/20/24 15:05:34.228
  E0420 15:05:34.668249      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:35.668781      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/20/24 15:05:36.27
  STEP: Trying to apply a random label on the found node. @ 04/20/24 15:05:36.3
  STEP: verifying the node has the label kubernetes.io/e2e-c9b36de8-dd06-4728-9a01-9c8dd5b1f5e0 95 @ 04/20/24 15:05:36.328
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 04/20/24 15:05:36.338
  E0420 15:05:36.669249      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:37.669918      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.121.103 on the node which pod4 resides and expect not scheduled @ 04/20/24 15:05:38.385
  E0420 15:05:38.669675      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:39.670284      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:40.671385      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:41.671569      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:42.674025      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:43.674906      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:44.675174      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:45.675532      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:46.677054      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:47.677074      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:48.679895      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:49.678939      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:50.678979      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:51.679555      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:52.680662      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:53.681785      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:54.681677      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:55.682157      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:56.683065      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:57.683956      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:58.685003      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:05:59.685838      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:00.686978      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:01.687587      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:02.688519      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:03.689540      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:04.690599      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:05.691623      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:06.691925      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:07.692927      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:08.693068      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:09.693749      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:10.694425      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:11.695600      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:12.695985      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:13.696330      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:14.696877      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:15.697298      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:16.697513      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:17.697859      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:18.698429      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:19.698513      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:20.699395      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:21.699798      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:22.700020      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:23.700484      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:24.700689      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:25.701068      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:26.701338      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:27.701876      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:28.702047      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:29.702096      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:30.702344      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:31.702988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:32.703533      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:33.703887      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:34.704678      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:35.704907      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:36.705118      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:37.706306      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:38.706913      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:39.707295      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:40.707439      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:41.708835      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:42.708949      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:43.709154      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:44.709890      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:45.709923      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:46.710083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:47.711001      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:48.711889      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:49.712313      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:50.712843      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:51.713190      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:52.713616      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:53.714090      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:54.714609      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:55.714667      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:56.715124      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:57.715459      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:58.716185      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:06:59.717089      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:00.717899      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:01.718705      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:02.719799      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:03.720407      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:04.721176      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:05.721456      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:06.727281      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:07.723519      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:08.723226      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:09.723425      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:10.724191      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:11.724496      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:12.725649      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:13.725923      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:14.726466      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:15.727690      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:16.728069      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:17.728879      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:18.729261      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:19.729800      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:20.729601      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:21.730171      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:22.730086      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:23.730845      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:24.731254      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:25.731374      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:26.731961      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:27.733147      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:28.734118      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:29.734987      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:30.735621      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:31.736697      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:32.736935      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:33.737146      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:34.737820      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:35.738590      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:36.739336      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:37.739955      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:38.740668      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:39.741435      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:40.741502      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:41.742040      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:42.742902      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:43.742980      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:44.743171      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:45.743549      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:46.744123      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:47.744563      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:48.747118      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:49.747329      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:50.748141      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:51.748447      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:52.748881      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:53.749134      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:54.750075      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:55.750370      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:56.750440      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:57.750889      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:58.751101      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:07:59.751349      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:00.752383      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:01.752926      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:02.753410      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:03.753615      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:04.753794      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:05.754418      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:06.755113      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:07.755475      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:08.755974      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:09.756884      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:10.756776      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:11.757048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:12.758204      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:13.758937      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:14.758917      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:15.760015      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:16.760283      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:17.760873      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:18.761616      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:19.762073      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:20.762377      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:21.762603      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:22.762845      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:23.763247      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:24.764158      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:25.764586      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:26.764668      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:27.765791      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:28.766646      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:29.767619      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:30.767630      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:31.767968      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:32.768928      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:33.770035      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:34.770632      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:35.771421      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:36.771665      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:37.772062      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:38.772195      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:39.773041      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:40.774213      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:41.774475      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:42.775039      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:43.776081      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:44.776986      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:45.778131      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:46.778264      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:47.778371      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:48.778901      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:49.779979      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:50.780068      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:51.780416      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:52.781049      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:53.781445      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:54.782067      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:55.782824      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:56.783501      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:57.783685      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:58.783983      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:08:59.785027      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:00.785380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:01.786130      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:02.787063      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:03.788077      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:04.788329      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:05.789392      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:06.789578      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:07.790858      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:08.790518      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:09.790764      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:10.791431      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:11.792413      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:12.793510      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:13.794409      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:14.795999      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:15.795975      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:16.796091      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:17.796760      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:18.803060      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:19.800744      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:20.800855      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:21.801271      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:22.801899      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:23.802831      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:24.803320      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:25.803614      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:26.804332      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:27.804848      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:28.805344      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:29.806303      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:30.807401      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:31.807189      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:32.808125      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:33.808204      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:34.808306      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:35.809332      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:36.809278      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:37.809804      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:38.810372      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:39.810697      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:40.811007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:41.811392      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:42.812078      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:43.812293      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:44.812640      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:45.812810      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:46.813165      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:47.813676      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:48.815007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:49.816160      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:50.818116      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:51.818283      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:52.818976      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:53.819380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:54.819557      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:55.820669      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:56.821205      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:57.822139      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:58.822664      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:09:59.823281      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:00.823810      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:01.824312      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:02.825104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:03.825453      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:04.826481      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:05.826860      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:06.827283      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:07.828163      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:08.828406      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:09.828560      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:10.829377      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:11.829410      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:12.830351      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:13.831002      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:14.831339      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:15.831554      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:16.831809      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:17.832602      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:18.833480      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:19.833456      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:20.833819      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:21.833609      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:22.834950      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:23.836391      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:24.836422      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:25.836878      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:26.837073      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:27.837176      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:28.838455      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:29.839447      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:30.839333      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:31.839796      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:32.840145      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:33.840590      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:34.840600      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:35.842307      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:36.842349      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:37.843033      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-c9b36de8-dd06-4728-9a01-9c8dd5b1f5e0 off the node ier3chochiph-3 @ 04/20/24 15:10:38.405
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-c9b36de8-dd06-4728-9a01-9c8dd5b1f5e0 @ 04/20/24 15:10:38.431
  I0420 15:10:38.445302 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9815" for this suite. @ 04/20/24 15:10:38.462
• [304.390 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1497
  STEP: Creating a kubernetes client @ 04/20/24 15:10:38.485
  I0420 15:10:38.486216 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename services @ 04/20/24 15:10:38.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:10:38.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:10:38.542
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-4798 @ 04/20/24 15:10:38.548
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/20/24 15:10:38.57
  STEP: creating service externalsvc in namespace services-4798 @ 04/20/24 15:10:38.57
  STEP: creating replication controller externalsvc in namespace services-4798 @ 04/20/24 15:10:38.6
  I0420 15:10:38.619336      13 runners.go:198] Created replication controller with name: externalsvc, namespace: services-4798, replica count: 2
  E0420 15:10:38.843198      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:39.844446      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:40.845226      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:10:41.672746      13 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 04/20/24 15:10:41.68
  I0420 15:10:41.709106 13 resource.go:361] Creating new exec pod
  E0420 15:10:41.845368      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:42.845835      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:10:43.754587 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-4798 exec execpodj5ffr -- /bin/sh -x -c nslookup clusterip-service.services-4798.svc.cluster.local'
  E0420 15:10:43.847427      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:10:44.304590 13 builder.go:146] stderr: "+ nslookup clusterip-service.services-4798.svc.cluster.local\n"
  I0420 15:10:44.304779 13 builder.go:147] stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nclusterip-service.services-4798.svc.cluster.local\tcanonical name = externalsvc.services-4798.svc.cluster.local.\nName:\texternalsvc.services-4798.svc.cluster.local\nAddress: 10.233.45.241\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-4798, will wait for the garbage collector to delete the pods @ 04/20/24 15:10:44.305
  I0420 15:10:44.383127 13 resources.go:139] Deleting ReplicationController externalsvc took: 14.919933ms
  I0420 15:10:44.484856 13 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.713219ms
  E0420 15:10:44.847683      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:45.848749      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:46.849597      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:10:47.419483 13 service.go:1506] Cleaning up the ClusterIP to ExternalName test service
  I0420 15:10:47.442855 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4798" for this suite. @ 04/20/24 15:10:47.461
• [8.994 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3136
  STEP: Creating a kubernetes client @ 04/20/24 15:10:47.483
  I0420 15:10:47.483672 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename services @ 04/20/24 15:10:47.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:10:47.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:10:47.524
  STEP: fetching services @ 04/20/24 15:10:47.531
  I0420 15:10:47.538817 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9856" for this suite. @ 04/20/24 15:10:47.547
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 04/20/24 15:10:47.564
  I0420 15:10:47.564132 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename sysctl @ 04/20/24 15:10:47.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:10:47.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:10:47.602
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 04/20/24 15:10:47.608
  STEP: Watching for error events or started pod @ 04/20/24 15:10:47.623
  E0420 15:10:47.850627      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:48.850643      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 04/20/24 15:10:49.631
  E0420 15:10:49.851491      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:50.852097      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 04/20/24 15:10:51.649
  STEP: Getting logs from the pod @ 04/20/24 15:10:51.65
  STEP: Checking that the sysctl is actually updated @ 04/20/24 15:10:51.683
  I0420 15:10:51.683625 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-405" for this suite. @ 04/20/24 15:10:51.694
• [4.144 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3345
  STEP: Creating a kubernetes client @ 04/20/24 15:10:51.708
  I0420 15:10:51.709037 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename services @ 04/20/24 15:10:51.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:10:51.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:10:51.748
  STEP: creating a Service @ 04/20/24 15:10:51.76
  STEP: watching for the Service to be added @ 04/20/24 15:10:51.788
  I0420 15:10:51.792812 13 service.go:3397] Found Service test-service-mssm6 in namespace services-9849 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32715}]
  I0420 15:10:51.793002 13 service.go:3404] Service test-service-mssm6 created
  STEP: Getting /status @ 04/20/24 15:10:51.793
  I0420 15:10:51.802966 13 service.go:3415] Service test-service-mssm6 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 04/20/24 15:10:51.803
  STEP: watching for the Service to be patched @ 04/20/24 15:10:51.819
  I0420 15:10:51.822351 13 service.go:3438] observed Service test-service-mssm6 in namespace services-9849 with annotations: map[] & LoadBalancer: {[]}
  I0420 15:10:51.822430 13 service.go:3441] Found Service test-service-mssm6 in namespace services-9849 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc001362980 []}]}
  I0420 15:10:51.822472 13 service.go:3448] Service test-service-mssm6 has service status patched
  STEP: updating the ServiceStatus @ 04/20/24 15:10:51.822
  I0420 15:10:51.849401 13 service.go:3468] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 04/20/24 15:10:51.849
  E0420 15:10:51.852641      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:10:51.853847 13 service.go:3479] Observed Service test-service-mssm6 in namespace services-9849 with annotations: map[] & Conditions: {[]}
  I0420 15:10:51.855292 13 service.go:3494] Observed event: &Service{ObjectMeta:{test-service-mssm6  services-9849  bad0258e-e4ef-49f4-b5ba-908b8df1ac10 67509 0 2024-04-20 15:10:51 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-04-20 15:10:51 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-04-20 15:10:51 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:32715,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.233.13.224,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.233.13.224],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,TrafficDistribution:nil,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:*VIP,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  I0420 15:10:51.855914 13 service.go:3486] Found Service test-service-mssm6 in namespace services-9849 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0420 15:10:51.855964 13 service.go:3498] Service test-service-mssm6 has service status updated
  STEP: patching the service @ 04/20/24 15:10:51.856
  STEP: watching for the Service to be patched @ 04/20/24 15:10:51.895
  I0420 15:10:51.899255 13 service.go:3521] observed Service test-service-mssm6 in namespace services-9849 with labels: map[test-service-static:true]
  I0420 15:10:51.899404 13 service.go:3521] observed Service test-service-mssm6 in namespace services-9849 with labels: map[test-service-static:true]
  I0420 15:10:51.899470 13 service.go:3521] observed Service test-service-mssm6 in namespace services-9849 with labels: map[test-service-static:true]
  I0420 15:10:51.899700 13 service.go:3524] Found Service test-service-mssm6 in namespace services-9849 with labels: map[test-service:patched test-service-static:true]
  I0420 15:10:51.899784 13 service.go:3531] Service test-service-mssm6 patched
  STEP: deleting the service @ 04/20/24 15:10:51.899
  STEP: watching for the Service to be deleted @ 04/20/24 15:10:51.947
  I0420 15:10:51.949927 13 service.go:3555] Observed event: ADDED
  I0420 15:10:51.949997 13 service.go:3555] Observed event: MODIFIED
  I0420 15:10:51.950024 13 service.go:3555] Observed event: MODIFIED
  I0420 15:10:51.950230 13 service.go:3555] Observed event: MODIFIED
  I0420 15:10:51.950366 13 service.go:3551] Found Service test-service-mssm6 in namespace services-9849 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0420 15:10:51.950395 13 service.go:3560] Service test-service-mssm6 deleted
  I0420 15:10:51.950597 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9849" for this suite. @ 04/20/24 15:10:51.96
• [0.265 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 04/20/24 15:10:51.974
  I0420 15:10:51.974578 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 15:10:51.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:10:52.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:10:52.021
  I0420 15:10:52.025662 13 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0420 15:10:52.852877      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 04/20/24 15:10:53.05
  STEP: Checking rc "condition-test" has the desired failure condition set @ 04/20/24 15:10:53.069
  E0420 15:10:53.853563      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 04/20/24 15:10:54.086
  I0420 15:10:54.103905 13 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 04/20/24 15:10:54.104
  E0420 15:10:54.854607      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:10:55.117805 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8935" for this suite. @ 04/20/24 15:10:55.126
• [3.165 seconds]
------------------------------
SS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:348
  STEP: Creating a kubernetes client @ 04/20/24 15:10:55.14
  I0420 15:10:55.140138 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename disruption @ 04/20/24 15:10:55.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:10:55.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:10:55.178
  STEP: Creating a pdb that targets all three pods in a test replica set @ 04/20/24 15:10:55.183
  STEP: Waiting for the pdb to be processed @ 04/20/24 15:10:55.194
  E0420 15:10:55.854874      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:56.855119      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 04/20/24 15:10:57.215
  STEP: Waiting for all pods to be running @ 04/20/24 15:10:57.215
  I0420 15:10:57.222991 13 disruption.go:567] pods: 0 < 3
  E0420 15:10:57.856085      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:10:58.857082      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 04/20/24 15:10:59.224
  STEP: Updating the pdb to allow a pod to be evicted @ 04/20/24 15:10:59.251
  STEP: Waiting for the pdb to be processed @ 04/20/24 15:10:59.269
  E0420 15:10:59.857302      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:00.858399      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/20/24 15:11:01.278
  STEP: Waiting for all pods to be running @ 04/20/24 15:11:01.278
  STEP: Waiting for the pdb to observed all healthy pods @ 04/20/24 15:11:01.288
  STEP: Patching the pdb to disallow a pod to be evicted @ 04/20/24 15:11:01.368
  STEP: Waiting for the pdb to be processed @ 04/20/24 15:11:01.447
  E0420 15:11:01.858513      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:02.858648      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 04/20/24 15:11:03.456
  STEP: locating a running pod @ 04/20/24 15:11:03.464
  STEP: Deleting the pdb to allow a pod to be evicted @ 04/20/24 15:11:03.486
  STEP: Waiting for the pdb to be deleted @ 04/20/24 15:11:03.497
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/20/24 15:11:03.504
  STEP: Waiting for all pods to be running @ 04/20/24 15:11:03.504
  I0420 15:11:03.543544 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3251" for this suite. @ 04/20/24 15:11:03.565
• [8.443 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 04/20/24 15:11:03.584
  I0420 15:11:03.584517 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 15:11:03.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:11:03.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:11:03.67
  STEP: Creating a pod to test env composition @ 04/20/24 15:11:03.675
  E0420 15:11:03.859554      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:04.860102      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:05.860893      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:06.860972      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:11:07.723
  I0420 15:11:07.735142 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod var-expansion-549fc0ad-779e-4108-a4a8-f97646a6b012 container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 15:11:07.749
  I0420 15:11:07.783058 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1076" for this suite. @ 04/20/24 15:11:07.815
• [4.246 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 04/20/24 15:11:07.83
  I0420 15:11:07.830884 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename pods @ 04/20/24 15:11:07.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:11:07.861
  E0420 15:11:07.862593      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:11:07.87
  I0420 15:11:07.875336 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: creating the pod @ 04/20/24 15:11:07.877
  STEP: submitting the pod to kubernetes @ 04/20/24 15:11:07.877
  E0420 15:11:08.862954      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:09.864142      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:11:09.965478 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8111" for this suite. @ 04/20/24 15:11:09.975
• [2.164 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 04/20/24 15:11:09.995
  I0420 15:11:09.995868 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 15:11:09.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:11:10.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:11:10.033
  STEP: Creating a ResourceQuota with best effort scope @ 04/20/24 15:11:10.039
  STEP: Ensuring ResourceQuota status is calculated @ 04/20/24 15:11:10.046
  E0420 15:11:10.864617      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:11.865548      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 04/20/24 15:11:12.054
  STEP: Ensuring ResourceQuota status is calculated @ 04/20/24 15:11:12.064
  E0420 15:11:12.866770      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:13.866693      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 04/20/24 15:11:14.076
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 04/20/24 15:11:14.106
  E0420 15:11:14.866900      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:15.867408      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 04/20/24 15:11:16.114
  E0420 15:11:16.868373      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:17.868891      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/20/24 15:11:18.123
  STEP: Ensuring resource quota status released the pod usage @ 04/20/24 15:11:18.152
  E0420 15:11:18.869245      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:19.870315      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 04/20/24 15:11:20.164
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 04/20/24 15:11:20.212
  E0420 15:11:20.870946      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:21.872028      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 04/20/24 15:11:22.221
  E0420 15:11:22.872813      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:23.873678      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/20/24 15:11:24.23
  STEP: Ensuring resource quota status released the pod usage @ 04/20/24 15:11:24.26
  E0420 15:11:24.873974      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:25.874214      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:11:26.271295 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9438" for this suite. @ 04/20/24 15:11:26.282
• [16.299 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 04/20/24 15:11:26.295
  I0420 15:11:26.295172 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:11:26.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:11:26.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:11:26.353
  STEP: Creating configMap with name projected-configmap-test-volume-map-ca431a1c-56b5-484e-991c-b36acd0ec1ec @ 04/20/24 15:11:26.361
  STEP: Creating a pod to test consume configMaps @ 04/20/24 15:11:26.373
  E0420 15:11:26.875078      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:27.875326      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:28.875645      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:29.876028      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:11:30.422
  I0420 15:11:30.431839 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-projected-configmaps-0255596c-4e1f-4ac8-bc0e-a7367b10123c container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 15:11:30.457
  I0420 15:11:30.501544 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8667" for this suite. @ 04/20/24 15:11:30.514
• [4.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 04/20/24 15:11:30.539
  I0420 15:11:30.539380 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename configmap @ 04/20/24 15:11:30.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:11:30.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:11:30.588
  STEP: Creating configMap with name cm-test-opt-del-f967844e-fe4e-4b8b-8ad6-0c34f5cdd214 @ 04/20/24 15:11:30.611
  STEP: Creating configMap with name cm-test-opt-upd-4420b3c9-4d8a-4d59-a89a-fd413752237b @ 04/20/24 15:11:30.623
  STEP: Creating the pod @ 04/20/24 15:11:30.631
  E0420 15:11:30.876157      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:31.877171      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-f967844e-fe4e-4b8b-8ad6-0c34f5cdd214 @ 04/20/24 15:11:32.764
  STEP: Updating configmap cm-test-opt-upd-4420b3c9-4d8a-4d59-a89a-fd413752237b @ 04/20/24 15:11:32.783
  STEP: Creating configMap with name cm-test-opt-create-db97ed41-f9d3-4e61-9319-cd2f39928006 @ 04/20/24 15:11:32.797
  STEP: waiting to observe update in volume @ 04/20/24 15:11:32.81
  E0420 15:11:32.877673      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:33.878251      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:34.879252      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:11:34.898426 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4072" for this suite. @ 04/20/24 15:11:34.912
• [4.392 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 04/20/24 15:11:34.935
  I0420 15:11:34.935545 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 15:11:34.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:11:34.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:11:34.993
  STEP: Creating service test in namespace statefulset-6574 @ 04/20/24 15:11:35
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 04/20/24 15:11:35.007
  STEP: Creating stateful set ss in namespace statefulset-6574 @ 04/20/24 15:11:35.015
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6574 @ 04/20/24 15:11:35.035
  I0420 15:11:35.046973 13 wait.go:40] Found 0 stateful pods, waiting for 1
  E0420 15:11:35.880131      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:36.880419      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:37.880497      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:38.881901      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:39.881556      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:40.882083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:41.882816      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:42.883983      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:43.884182      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:44.884799      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:11:45.046538 13 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 04/20/24 15:11:45.046
  I0420 15:11:45.056964 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=statefulset-6574 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0420 15:11:45.393790 13 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0420 15:11:45.393984 13 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0420 15:11:45.394015 13 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0420 15:11:45.401264 13 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0420 15:11:45.885659      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:46.886345      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:47.886991      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:48.888664      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:49.888550      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:50.889369      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:51.889647      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:52.890081      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:53.890114      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:11:54.890466      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:11:55.402906 13 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0420 15:11:55.403037 13 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0420 15:11:55.435567 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 9.999998983s
  E0420 15:11:55.891227      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:11:56.445292 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 8.991972079s
  E0420 15:11:56.891498      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:11:57.455495 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 7.98285495s
  E0420 15:11:57.892356      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:11:58.468376 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 6.971627682s
  E0420 15:11:58.893474      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:11:59.480364 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 5.959474401s
  E0420 15:11:59.893982      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:12:00.487983 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 4.947476209s
  E0420 15:12:00.894553      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:12:01.498497 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 3.939256027s
  E0420 15:12:01.894640      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:12:02.506221 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 2.929633577s
  E0420 15:12:02.895899      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:12:03.512417 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 1.921818181s
  E0420 15:12:03.896089      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:12:04.522038 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 914.642148ms
  E0420 15:12:04.896260      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6574 @ 04/20/24 15:12:05.522
  I0420 15:12:05.530959 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=statefulset-6574 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0420 15:12:05.798453 13 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0420 15:12:05.798564 13 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0420 15:12:05.798591 13 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0420 15:12:05.805973 13 wait.go:40] Found 1 stateful pods, waiting for 3
  E0420 15:12:05.897165      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:06.898315      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:07.898937      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:08.899581      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:09.900259      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:10.900493      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:11.900601      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:12.901828      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:13.902281      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:14.902533      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:12:15.810111 13 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0420 15:12:15.810373 13 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0420 15:12:15.810412 13 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 04/20/24 15:12:15.81
  STEP: Scale down will halt with unhealthy stateful pod @ 04/20/24 15:12:15.81
  I0420 15:12:15.825442 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=statefulset-6574 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0420 15:12:15.903393      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:12:16.077895 13 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0420 15:12:16.078026 13 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0420 15:12:16.078084 13 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0420 15:12:16.078371 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=statefulset-6574 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0420 15:12:16.365288 13 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0420 15:12:16.365359 13 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0420 15:12:16.365382 13 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0420 15:12:16.365819 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=statefulset-6574 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0420 15:12:16.651579 13 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0420 15:12:16.651664 13 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0420 15:12:16.651689 13 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0420 15:12:16.651732 13 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0420 15:12:16.659478 13 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0420 15:12:16.904341      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:17.906037      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:18.905850      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:19.905965      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:20.906103      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:21.907287      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:22.908367      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:23.912144      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:24.911432      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:25.912136      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:12:26.681449 13 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0420 15:12:26.682013 13 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0420 15:12:26.682675 13 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0420 15:12:26.770511 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 9.999999294s
  E0420 15:12:26.912897      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:12:27.790847 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 8.980812797s
  E0420 15:12:27.915647      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:12:28.800254 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 7.961144676s
  E0420 15:12:28.916586      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:12:29.810551 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 6.95182988s
  E0420 15:12:29.917648      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:12:30.826506 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 5.941737005s
  E0420 15:12:30.917756      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:12:31.836785 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 4.92581794s
  E0420 15:12:31.918531      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:12:32.847151 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 3.914743761s
  E0420 15:12:32.919346      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:12:33.855999 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 2.90462597s
  E0420 15:12:33.919836      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:12:34.869308 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 1.895442087s
  E0420 15:12:34.920125      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:12:35.878162 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 883.089002ms
  E0420 15:12:35.920652      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6574 @ 04/20/24 15:12:36.878
  I0420 15:12:36.887539 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=statefulset-6574 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0420 15:12:36.921377      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:12:37.196059 13 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0420 15:12:37.196194 13 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0420 15:12:37.196223 13 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0420 15:12:37.196898 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=statefulset-6574 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0420 15:12:37.474509 13 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0420 15:12:37.474626 13 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0420 15:12:37.474703 13 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0420 15:12:37.475245 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=statefulset-6574 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0420 15:12:37.755594 13 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0420 15:12:37.756061 13 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0420 15:12:37.756086 13 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0420 15:12:37.756129 13 rest.go:150] Scaling statefulset ss to 0
  E0420 15:12:37.921743      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:38.921803      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:39.922141      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:40.923040      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:41.923962      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:42.925061      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:43.925156      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:44.926372      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:45.927052      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:46.927084      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 04/20/24 15:12:47.786
  I0420 15:12:47.787210 13 statefulset.go:135] Deleting all statefulset in ns statefulset-6574
  I0420 15:12:47.795133 13 rest.go:150] Scaling statefulset ss to 0
  I0420 15:12:47.832763 13 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0420 15:12:47.839918 13 rest.go:88] Deleting statefulset ss
  I0420 15:12:47.867598 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6574" for this suite. @ 04/20/24 15:12:47.883
• [72.972 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 04/20/24 15:12:47.909
  I0420 15:12:47.910078 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename limitrange @ 04/20/24 15:12:47.917
  E0420 15:12:47.928082      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:12:47.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:12:47.963
  STEP: Creating a LimitRange @ 04/20/24 15:12:47.969
  STEP: Setting up watch @ 04/20/24 15:12:47.969
  STEP: Submitting a LimitRange @ 04/20/24 15:12:48.078
  STEP: Verifying LimitRange creation was observed @ 04/20/24 15:12:48.095
  STEP: Fetching the LimitRange to ensure it has proper values @ 04/20/24 15:12:48.095
  I0420 15:12:48.102359 13 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0420 15:12:48.102496 13 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 04/20/24 15:12:48.102
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 04/20/24 15:12:48.115
  I0420 15:12:48.124301 13 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0420 15:12:48.124431 13 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 04/20/24 15:12:48.124
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 04/20/24 15:12:48.137
  I0420 15:12:48.144278 13 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0420 15:12:48.144370 13 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 04/20/24 15:12:48.144
  STEP: Failing to create a Pod with more than max resources @ 04/20/24 15:12:48.149
  STEP: Updating a LimitRange @ 04/20/24 15:12:48.155
  STEP: Verifying LimitRange updating is effective @ 04/20/24 15:12:48.167
  E0420 15:12:48.928495      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:49.929110      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 04/20/24 15:12:50.174
  STEP: Failing to create a Pod with more than max resources @ 04/20/24 15:12:50.185
  STEP: Deleting a LimitRange @ 04/20/24 15:12:50.189
  STEP: Verifying the LimitRange was deleted @ 04/20/24 15:12:50.216
  E0420 15:12:50.929291      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:51.930096      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:52.930887      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:53.931525      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:54.931599      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:12:55.223098 13 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 04/20/24 15:12:55.223
  I0420 15:12:55.238568 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-22" for this suite. @ 04/20/24 15:12:55.248
• [7.352 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 04/20/24 15:12:55.261
  I0420 15:12:55.261592 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 15:12:55.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:12:55.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:12:55.304
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 15:12:55.311
  E0420 15:12:55.932183      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:56.933048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:57.932962      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:12:58.933148      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:12:59.36
  I0420 15:12:59.369856 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod downwardapi-volume-bee9c181-0dc0-41cd-995f-0fd8c9318ee4 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 15:12:59.392
  I0420 15:12:59.434782 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3436" for this suite. @ 04/20/24 15:12:59.449
• [4.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 04/20/24 15:12:59.471
  I0420 15:12:59.471774 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename configmap @ 04/20/24 15:12:59.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:12:59.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:12:59.508
  STEP: Creating configMap with name configmap-test-volume-ade812da-b246-4bdf-afa1-07965c8bc96f @ 04/20/24 15:12:59.514
  STEP: Creating a pod to test consume configMaps @ 04/20/24 15:12:59.522
  E0420 15:12:59.933304      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:00.934200      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:01.935114      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:02.935961      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:13:03.565
  I0420 15:13:03.570746 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-configmaps-2c574f62-b3fd-4c86-8b93-b4ef6e7e291f container configmap-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 15:13:03.582
  I0420 15:13:03.609630 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4407" for this suite. @ 04/20/24 15:13:03.617
• [4.159 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 04/20/24 15:13:03.631
  I0420 15:13:03.631688 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 15:13:03.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:13:03.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:13:03.673
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/20/24 15:13:03.678
  E0420 15:13:03.936778      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:04.937528      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:05.938304      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:06.938591      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:13:07.723
  I0420 15:13:07.729570 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-3e9677c9-2925-4b93-9040-cf1890f7a516 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 15:13:07.742
  I0420 15:13:07.767990 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7487" for this suite. @ 04/20/24 15:13:07.776
• [4.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 04/20/24 15:13:07.792
  I0420 15:13:07.792962 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 15:13:07.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:13:07.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:13:07.833
  I0420 15:13:07.839593 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 15:13:07.938706      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:08.940832      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/20/24 15:13:09.908
  I0420 15:13:09.909007 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-1775 --namespace=crd-publish-openapi-1775 create -f -'
  E0420 15:13:09.940966      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:13:10.224526 13 builder.go:146] stderr: ""
  I0420 15:13:10.224627 13 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7666-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0420 15:13:10.225550 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-1775 --namespace=crd-publish-openapi-1775 delete e2e-test-crd-publish-openapi-7666-crds test-cr'
  I0420 15:13:10.410341 13 builder.go:146] stderr: ""
  I0420 15:13:10.410440 13 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7666-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0420 15:13:10.411177 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-1775 --namespace=crd-publish-openapi-1775 apply -f -'
  I0420 15:13:10.733634 13 builder.go:146] stderr: ""
  I0420 15:13:10.734176 13 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7666-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0420 15:13:10.734588 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-1775 --namespace=crd-publish-openapi-1775 delete e2e-test-crd-publish-openapi-7666-crds test-cr'
  E0420 15:13:10.941989      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:13:10.956965 13 builder.go:146] stderr: ""
  I0420 15:13:10.957140 13 builder.go:147] stdout: "e2e-test-crd-publish-openapi-7666-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/20/24 15:13:10.957
  I0420 15:13:10.957497 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-1775 explain e2e-test-crd-publish-openapi-7666-crds'
  I0420 15:13:11.132648 13 builder.go:146] stderr: ""
  I0420 15:13:11.132881 13 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-7666-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0420 15:13:11.941670      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:12.942489      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:13:13.242918 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1775" for this suite. @ 04/20/24 15:13:13.277
• [5.508 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 04/20/24 15:13:13.301
  I0420 15:13:13.301477 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename watch @ 04/20/24 15:13:13.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:13:13.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:13:13.357
  STEP: creating a watch on configmaps with label A @ 04/20/24 15:13:13.364
  STEP: creating a watch on configmaps with label B @ 04/20/24 15:13:13.379
  STEP: creating a watch on configmaps with label A or B @ 04/20/24 15:13:13.381
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 04/20/24 15:13:13.384
  I0420 15:13:13.394402 13 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9494  6ce00969-6900-4f00-a49f-552f9e1333aa 68532 0 2024-04-20 15:13:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 15:13:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0420 15:13:13.394831 13 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9494  6ce00969-6900-4f00-a49f-552f9e1333aa 68532 0 2024-04-20 15:13:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 15:13:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 04/20/24 15:13:13.394
  I0420 15:13:13.423839 13 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9494  6ce00969-6900-4f00-a49f-552f9e1333aa 68533 0 2024-04-20 15:13:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 15:13:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0420 15:13:13.424152 13 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9494  6ce00969-6900-4f00-a49f-552f9e1333aa 68533 0 2024-04-20 15:13:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 15:13:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 04/20/24 15:13:13.424
  I0420 15:13:13.443190 13 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9494  6ce00969-6900-4f00-a49f-552f9e1333aa 68534 0 2024-04-20 15:13:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 15:13:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0420 15:13:13.443429 13 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9494  6ce00969-6900-4f00-a49f-552f9e1333aa 68534 0 2024-04-20 15:13:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 15:13:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 04/20/24 15:13:13.443
  I0420 15:13:13.457663 13 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9494  6ce00969-6900-4f00-a49f-552f9e1333aa 68536 0 2024-04-20 15:13:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 15:13:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0420 15:13:13.457829 13 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9494  6ce00969-6900-4f00-a49f-552f9e1333aa 68536 0 2024-04-20 15:13:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-20 15:13:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 04/20/24 15:13:13.457
  I0420 15:13:13.465026 13 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9494  33518854-7b12-4c14-b362-66fbb88bcc9e 68537 0 2024-04-20 15:13:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-20 15:13:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0420 15:13:13.465222 13 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9494  33518854-7b12-4c14-b362-66fbb88bcc9e 68537 0 2024-04-20 15:13:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-20 15:13:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0420 15:13:13.942593      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:14.944041      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:15.943990      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:16.944208      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:17.944842      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:18.945303      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:19.945782      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:20.945916      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:21.946970      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:22.947344      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 04/20/24 15:13:23.466
  I0420 15:13:23.479692 13 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9494  33518854-7b12-4c14-b362-66fbb88bcc9e 68561 0 2024-04-20 15:13:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-20 15:13:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0420 15:13:23.480870 13 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9494  33518854-7b12-4c14-b362-66fbb88bcc9e 68561 0 2024-04-20 15:13:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-20 15:13:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E0420 15:13:23.947460      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:24.948162      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:25.948446      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:26.949036      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:27.949105      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:28.949892      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:29.950124      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:30.950415      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:31.950784      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:32.951456      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:13:33.481836 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9494" for this suite. @ 04/20/24 15:13:33.493
• [20.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 04/20/24 15:13:33.507
  I0420 15:13:33.508082 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename dns @ 04/20/24 15:13:33.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:13:33.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:13:33.549
  STEP: Creating a test headless service @ 04/20/24 15:13:33.554
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-931.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-931.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 04/20/24 15:13:33.571
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-931.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-931.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 04/20/24 15:13:33.571
  STEP: creating a pod to probe DNS @ 04/20/24 15:13:33.571
  STEP: submitting the pod to kubernetes @ 04/20/24 15:13:33.571
  E0420 15:13:33.951762      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:34.952152      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/20/24 15:13:35.621
  STEP: looking for the results for each expected name from probers @ 04/20/24 15:13:35.634
  I0420 15:13:35.671546 13 dns_common.go:478] Unable to read jessie_hosts@dns-querier-2 from pod dns-931/dns-test-4688ffce-6210-4fb8-ba87-24662cecc27c: the server could not find the requested resource (get pods dns-test-4688ffce-6210-4fb8-ba87-24662cecc27c)
  I0420 15:13:35.671628 13 dns_common.go:489] Lookups using dns-931/dns-test-4688ffce-6210-4fb8-ba87-24662cecc27c failed for: [jessie_hosts@dns-querier-2]

  I0420 15:13:35.707276 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 15:13:35.718565 13 dns_common.go:495] Pod client logs for querier: 
  I0420 15:13:35.730237 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 15:13:35.952872      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:36.953403      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:37.954091      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:38.954605      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:39.955316      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:13:40.664932 13 dns_common.go:478] Unable to read jessie_hosts@dns-querier-2 from pod dns-931/dns-test-4688ffce-6210-4fb8-ba87-24662cecc27c: the server could not find the requested resource (get pods dns-test-4688ffce-6210-4fb8-ba87-24662cecc27c)
  I0420 15:13:40.665039 13 dns_common.go:489] Lookups using dns-931/dns-test-4688ffce-6210-4fb8-ba87-24662cecc27c failed for: [jessie_hosts@dns-querier-2]

  I0420 15:13:40.683293 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 15:13:40.698460 13 dns_common.go:495] Pod client logs for querier: 
  I0420 15:13:40.716160 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 15:13:40.955502      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:41.956459      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:42.956559      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:43.957696      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:44.957902      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:13:45.670444 13 dns_common.go:527] DNS probes using dns-931/dns-test-4688ffce-6210-4fb8-ba87-24662cecc27c succeeded

  STEP: deleting the pod @ 04/20/24 15:13:45.67
  STEP: deleting the test headless service @ 04/20/24 15:13:45.713
  I0420 15:13:45.764317 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-931" for this suite. @ 04/20/24 15:13:45.79
• [12.296 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 04/20/24 15:13:45.803
  I0420 15:13:45.803878 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename pods @ 04/20/24 15:13:45.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:13:45.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:13:45.85
  STEP: creating the pod @ 04/20/24 15:13:45.856
  STEP: submitting the pod to kubernetes @ 04/20/24 15:13:45.856
  E0420 15:13:45.958623      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:46.959366      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 04/20/24 15:13:47.902
  STEP: updating the pod @ 04/20/24 15:13:47.909
  E0420 15:13:47.959624      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:13:48.431693 13 pod_client.go:141] Successfully updated pod "pod-update-e831b5f3-1464-4c18-beea-8d7da7800a95"
  STEP: verifying the updated pod is in kubernetes @ 04/20/24 15:13:48.439
  I0420 15:13:48.445175 13 pods.go:391] Pod update OK
  I0420 15:13:48.445414 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-833" for this suite. @ 04/20/24 15:13:48.454
• [2.662 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 04/20/24 15:13:48.466
  I0420 15:13:48.466235 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/20/24 15:13:48.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:13:48.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:13:48.503
  STEP: creating a target pod @ 04/20/24 15:13:48.508
  E0420 15:13:48.959694      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:49.960610      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 04/20/24 15:13:50.545
  E0420 15:13:50.961252      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:51.962075      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 04/20/24 15:13:52.585
  I0420 15:13:52.585650 13 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4857 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 15:13:52.585788 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 15:13:52.587831 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 15:13:52.588189 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-4857/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0420 15:13:52.702590 13 exec_util.go:106] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 04/20/24 15:13:52.72
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 04/20/24 15:13:52.729
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 04/20/24 15:13:52.756
  I0420 15:13:52.777965 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4857" for this suite. @ 04/20/24 15:13:52.794
• [4.353 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 04/20/24 15:13:52.821
  I0420 15:13:52.821078 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 15:13:52.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:13:52.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:13:52.874
  STEP: creating a Namespace @ 04/20/24 15:13:52.879
  STEP: patching the Namespace @ 04/20/24 15:13:52.924
  STEP: get the Namespace and ensuring it has the label @ 04/20/24 15:13:52.95
  I0420 15:13:52.960768 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0420 15:13:52.961922      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "namespaces-3519" for this suite. @ 04/20/24 15:13:52.975
  STEP: Destroying namespace "nspatchtest-30742d7f-a16d-441e-b733-9b2e0a2498e7-9960" for this suite. @ 04/20/24 15:13:52.996
• [0.196 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 04/20/24 15:13:53.018
  I0420 15:13:53.018995 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename cronjob @ 04/20/24 15:13:53.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:13:53.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:13:53.067
  STEP: Creating a ReplaceConcurrent cronjob @ 04/20/24 15:13:53.077
  STEP: Ensuring a job is scheduled @ 04/20/24 15:13:53.091
  E0420 15:13:53.963328      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:54.962869      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:55.962764      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:56.963191      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:57.964476      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:58.965138      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:13:59.965356      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:00.966038      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 04/20/24 15:14:01.102
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/20/24 15:14:01.109
  STEP: Ensuring the job is replaced with a new one @ 04/20/24 15:14:01.116
  E0420 15:14:01.967146      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:02.968553      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:03.968949      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:04.969820      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:05.970327      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:06.970457      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:07.971446      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:08.972126      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:09.972164      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:10.972857      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:11.972971      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:12.975645      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:13.976219      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:14.976421      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:15.976902      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:16.977185      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:17.978039      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:18.978687      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:19.978888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:20.979164      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:21.979519      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:22.980030      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:23.979957      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:24.980512      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:25.981320      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:26.981303      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:27.982095      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:28.982309      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:29.982492      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:30.982700      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:31.982998      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:32.984013      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:33.984453      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:34.985273      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:35.985418      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:36.986123      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:37.986991      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:38.987640      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:39.987861      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:40.988093      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:41.988952      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:42.989981      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:43.990528      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:44.990678      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:45.990964      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:46.991519      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:47.992155      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:48.993262      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:49.994205      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:50.994431      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:51.994696      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:52.994988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:53.995087      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:54.995823      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:55.996299      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:56.996453      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:57.997083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:58.997346      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:14:59.997598      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:00.998047      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 04/20/24 15:15:01.123
  I0420 15:15:01.138012 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9062" for this suite. @ 04/20/24 15:15:01.151
• [68.152 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 04/20/24 15:15:01.172
  I0420 15:15:01.173112 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 15:15:01.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:15:01.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:15:01.231
  I0420 15:15:01.298074 13 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0420 15:15:01.313908 13 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0420 15:15:01.334031 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0420 15:15:01.334143 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  E0420 15:15:01.998472      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:15:02.337942 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0420 15:15:02.338045 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  E0420 15:15:02.998944      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:15:03.336817 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0420 15:15:03.336920 13 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0420 15:15:03.336952 13 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0420 15:15:03.353599 13 daemon_set.go:102] Updating DaemonSet daemon-set
  E0420 15:15:03.999180      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:15:04.383378 13 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0420 15:15:04.415857 13 daemon_set.go:102] Updating DaemonSet daemon-set
  I0420 15:15:04.416024 13 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0420 15:15:04.429448 13 daemon_set.go:1178] Wrong image for pod: daemon-set-c6f9w. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0420 15:15:04.429543 13 daemon_set.go:1183] Pod daemon-set-c6f9w is not available
  E0420 15:15:04.999798      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:06.000046      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:07.000056      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:08.001062      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:09.001355      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:10.002407      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:15:10.427472 13 daemon_set.go:1183] Pod daemon-set-rshv6 is not available
  STEP: Deleting DaemonSet "daemon-set" @ 04/20/24 15:15:10.451
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2954, will wait for the garbage collector to delete the pods @ 04/20/24 15:15:10.451
  I0420 15:15:10.522413 13 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 12.860023ms
  I0420 15:15:10.623167 13 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.772005ms
  E0420 15:15:11.002996      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:12.003393      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:15:12.431991 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0420 15:15:12.432102 13 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0420 15:15:12.439663 13 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"69035"},"items":null}

  I0420 15:15:12.446966 13 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"69035"},"items":null}

  I0420 15:15:12.482653 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2954" for this suite. @ 04/20/24 15:15:12.493
• [11.338 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 04/20/24 15:15:12.513
  I0420 15:15:12.513627 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename dns @ 04/20/24 15:15:12.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:15:12.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:15:12.573
  STEP: Creating a test headless service @ 04/20/24 15:15:12.58
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7731.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7731.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7731.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7731.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7731.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7731.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7731.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7731.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7731.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7731.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 41.44.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.44.41_udp@PTR;check="$$(dig +tcp +noall +answer +search 41.44.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.44.41_tcp@PTR;sleep 1; done
   @ 04/20/24 15:15:12.636
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7731.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7731.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7731.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7731.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7731.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7731.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7731.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7731.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7731.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7731.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 41.44.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.44.41_udp@PTR;check="$$(dig +tcp +noall +answer +search 41.44.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.44.41_tcp@PTR;sleep 1; done
   @ 04/20/24 15:15:12.636
  STEP: creating a pod to probe DNS @ 04/20/24 15:15:12.636
  STEP: submitting the pod to kubernetes @ 04/20/24 15:15:12.636
  E0420 15:15:13.003694      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:14.004824      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/20/24 15:15:14.714
  STEP: looking for the results for each expected name from probers @ 04/20/24 15:15:14.721
  I0420 15:15:14.734585 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:14.742212 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:14.750869 13 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:14.757940 13 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:14.798880 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:14.805377 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:14.811917 13 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:14.818821 13 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:14.844879 13 dns_common.go:489] Lookups using dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39 failed for: [wheezy_udp@dns-test-service.dns-7731.svc.cluster.local wheezy_tcp@dns-test-service.dns-7731.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local jessie_udp@dns-test-service.dns-7731.svc.cluster.local jessie_tcp@dns-test-service.dns-7731.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local]

  I0420 15:15:14.855989 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 15:15:14.869028 13 dns_common.go:495] Pod client logs for querier: 
  I0420 15:15:14.882587 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 15:15:15.005092      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:16.005624      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:17.005854      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:18.006979      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:19.007208      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:15:19.732473 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:19.741981 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:19.751699 13 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:19.762208 13 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:19.799457 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:19.808102 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:19.816109 13 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:19.822578 13 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:19.854543 13 dns_common.go:489] Lookups using dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39 failed for: [wheezy_udp@dns-test-service.dns-7731.svc.cluster.local wheezy_tcp@dns-test-service.dns-7731.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local jessie_udp@dns-test-service.dns-7731.svc.cluster.local jessie_tcp@dns-test-service.dns-7731.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local]

  I0420 15:15:19.876253 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 15:15:19.891034 13 dns_common.go:495] Pod client logs for querier: 
  I0420 15:15:19.908110 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 15:15:20.007991      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:21.008836      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:22.008795      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:23.009043      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:24.009954      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:15:24.736252 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:24.746275 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:24.755098 13 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:24.761209 13 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:24.800585 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:24.809468 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:24.818795 13 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:24.826549 13 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:24.855180 13 dns_common.go:489] Lookups using dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39 failed for: [wheezy_udp@dns-test-service.dns-7731.svc.cluster.local wheezy_tcp@dns-test-service.dns-7731.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local jessie_udp@dns-test-service.dns-7731.svc.cluster.local jessie_tcp@dns-test-service.dns-7731.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local]

  I0420 15:15:24.869273 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 15:15:24.883863 13 dns_common.go:495] Pod client logs for querier: 
  I0420 15:15:24.897222 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 15:15:25.010698      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:26.011071      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:27.011314      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:28.012220      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:29.012585      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:15:29.732999 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:29.741094 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:29.748312 13 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:29.756307 13 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:29.803528 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:29.812005 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:29.821074 13 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:29.828852 13 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:29.861103 13 dns_common.go:489] Lookups using dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39 failed for: [wheezy_udp@dns-test-service.dns-7731.svc.cluster.local wheezy_tcp@dns-test-service.dns-7731.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local jessie_udp@dns-test-service.dns-7731.svc.cluster.local jessie_tcp@dns-test-service.dns-7731.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local]

  I0420 15:15:29.877104 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 15:15:29.892340 13 dns_common.go:495] Pod client logs for querier: 
  I0420 15:15:29.906071 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 15:15:30.012876      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:31.013597      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:32.014224      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:33.015139      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:34.015002      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:15:34.731425 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:34.739517 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:34.747100 13 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:34.752865 13 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:34.782270 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:34.787957 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:34.793227 13 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:34.801692 13 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:34.829928 13 dns_common.go:489] Lookups using dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39 failed for: [wheezy_udp@dns-test-service.dns-7731.svc.cluster.local wheezy_tcp@dns-test-service.dns-7731.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local jessie_udp@dns-test-service.dns-7731.svc.cluster.local jessie_tcp@dns-test-service.dns-7731.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local]

  I0420 15:15:34.842009 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 15:15:34.853384 13 dns_common.go:495] Pod client logs for querier: 
  I0420 15:15:34.864274 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 15:15:35.015198      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:36.016092      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:37.016221      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:38.016908      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:39.017303      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:15:39.730025 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:39.735943 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:39.743077 13 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:39.749584 13 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:39.775477 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:39.780785 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:39.785944 13 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:39.791163 13 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local from pod dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39: the server could not find the requested resource (get pods dns-test-b002168b-8fff-4544-b230-0670d99d8d39)
  I0420 15:15:39.812814 13 dns_common.go:489] Lookups using dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39 failed for: [wheezy_udp@dns-test-service.dns-7731.svc.cluster.local wheezy_tcp@dns-test-service.dns-7731.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local jessie_udp@dns-test-service.dns-7731.svc.cluster.local jessie_tcp@dns-test-service.dns-7731.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7731.svc.cluster.local]

  I0420 15:15:39.822541 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 15:15:39.834285 13 dns_common.go:495] Pod client logs for querier: 
  I0420 15:15:39.845349 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 15:15:40.018141      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:41.018795      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:42.019056      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:43.019346      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:44.019458      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:15:44.849400 13 dns_common.go:527] DNS probes using dns-7731/dns-test-b002168b-8fff-4544-b230-0670d99d8d39 succeeded

  STEP: deleting the pod @ 04/20/24 15:15:44.85
  STEP: deleting the test service @ 04/20/24 15:15:44.887
  STEP: deleting the test headless service @ 04/20/24 15:15:44.978
  I0420 15:15:45.018968 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0420 15:15:45.020375      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "dns-7731" for this suite. @ 04/20/24 15:15:45.036
• [32.540 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:342
  STEP: Creating a kubernetes client @ 04/20/24 15:15:45.055
  I0420 15:15:45.055403 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 15:15:45.076
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:15:45.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:15:45.129
  STEP: creating a replication controller @ 04/20/24 15:15:45.135
  I0420 15:15:45.136664 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2368 create -f -'
  I0420 15:15:45.680927 13 builder.go:146] stderr: ""
  I0420 15:15:45.681059 13 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/20/24 15:15:45.681
  I0420 15:15:45.682260 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2368 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0420 15:15:45.971373 13 builder.go:146] stderr: ""
  I0420 15:15:45.971690 13 builder.go:147] stdout: "update-demo-nautilus-pr968 update-demo-nautilus-t6hmr "
  I0420 15:15:45.972546 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2368 get pods update-demo-nautilus-pr968 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0420 15:15:46.022289      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:15:46.173602 13 builder.go:146] stderr: ""
  I0420 15:15:46.173780 13 builder.go:147] stdout: ""
  I0420 15:15:46.173888 13 kubectl.go:2501] update-demo-nautilus-pr968 is created but not running
  E0420 15:15:47.023082      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:48.024012      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:49.024450      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:50.024434      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:51.025784      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:15:51.175774 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2368 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0420 15:15:51.410392 13 builder.go:146] stderr: ""
  I0420 15:15:51.410475 13 builder.go:147] stdout: "update-demo-nautilus-pr968 update-demo-nautilus-t6hmr "
  I0420 15:15:51.410683 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2368 get pods update-demo-nautilus-pr968 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0420 15:15:51.621684 13 builder.go:146] stderr: ""
  I0420 15:15:51.621801 13 builder.go:147] stdout: "true"
  I0420 15:15:51.622183 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2368 get pods update-demo-nautilus-pr968 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0420 15:15:51.796094 13 builder.go:146] stderr: ""
  I0420 15:15:51.796193 13 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0420 15:15:51.796238 13 kubectl.go:2392] validating pod update-demo-nautilus-pr968
  I0420 15:15:51.820194 13 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0420 15:15:51.820394 13 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0420 15:15:51.820430 13 kubectl.go:2519] update-demo-nautilus-pr968 is verified up and running
  I0420 15:15:51.820759 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2368 get pods update-demo-nautilus-t6hmr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0420 15:15:52.005808 13 builder.go:146] stderr: ""
  I0420 15:15:52.005901 13 builder.go:147] stdout: ""
  I0420 15:15:52.005926 13 kubectl.go:2501] update-demo-nautilus-t6hmr is created but not running
  E0420 15:15:52.025963      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:53.027345      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:54.027390      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:55.027530      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:15:56.027977      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:15:57.006516 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2368 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0420 15:15:57.028663      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:15:57.162860 13 builder.go:146] stderr: ""
  I0420 15:15:57.163217 13 builder.go:147] stdout: "update-demo-nautilus-pr968 update-demo-nautilus-t6hmr "
  I0420 15:15:57.163695 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2368 get pods update-demo-nautilus-pr968 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0420 15:15:57.325583 13 builder.go:146] stderr: ""
  I0420 15:15:57.325660 13 builder.go:147] stdout: "true"
  I0420 15:15:57.326331 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2368 get pods update-demo-nautilus-pr968 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0420 15:15:57.501495 13 builder.go:146] stderr: ""
  I0420 15:15:57.501593 13 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0420 15:15:57.501684 13 kubectl.go:2392] validating pod update-demo-nautilus-pr968
  I0420 15:15:57.509341 13 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0420 15:15:57.509466 13 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0420 15:15:57.509497 13 kubectl.go:2519] update-demo-nautilus-pr968 is verified up and running
  I0420 15:15:57.511898 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2368 get pods update-demo-nautilus-t6hmr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0420 15:15:57.699384 13 builder.go:146] stderr: ""
  I0420 15:15:57.699671 13 builder.go:147] stdout: "true"
  I0420 15:15:57.700072 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2368 get pods update-demo-nautilus-t6hmr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0420 15:15:57.894539 13 builder.go:146] stderr: ""
  I0420 15:15:57.894703 13 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0420 15:15:57.894820 13 kubectl.go:2392] validating pod update-demo-nautilus-t6hmr
  I0420 15:15:57.922230 13 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0420 15:15:57.922361 13 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0420 15:15:57.922390 13 kubectl.go:2519] update-demo-nautilus-t6hmr is verified up and running
  STEP: using delete to clean up resources @ 04/20/24 15:15:57.922
  I0420 15:15:57.923120 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2368 delete --grace-period=0 --force -f -'
  E0420 15:15:58.028814      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:15:58.079276 13 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0420 15:15:58.079368 13 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0420 15:15:58.079998 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2368 get rc,svc -l name=update-demo --no-headers'
  I0420 15:15:58.332847 13 builder.go:146] stderr: "No resources found in kubectl-2368 namespace.\n"
  I0420 15:15:58.332999 13 builder.go:147] stdout: ""
  I0420 15:15:58.333572 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-2368 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0420 15:15:58.527537 13 builder.go:146] stderr: ""
  I0420 15:15:58.527885 13 builder.go:147] stdout: ""
  I0420 15:15:58.528427 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2368" for this suite. @ 04/20/24 15:15:58.541
• [13.499 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 04/20/24 15:15:58.563
  I0420 15:15:58.563445 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:15:58.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:15:58.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:15:58.616
  STEP: Setting up server cert @ 04/20/24 15:15:58.695
  E0420 15:15:59.030062      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:00.030301      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:16:00.103
  STEP: Deploying the webhook pod @ 04/20/24 15:16:00.123
  STEP: Wait for the deployment to be ready @ 04/20/24 15:16:00.149
  I0420 15:16:00.172046 13 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 15:16:01.030421      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:02.031064      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:16:02.194
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:16:02.218
  E0420 15:16:03.031888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:16:03.220787 13 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 04/20/24 15:16:03.238
  STEP: create a namespace for the webhook @ 04/20/24 15:16:03.271
  STEP: create a configmap should be unconditionally rejected by the webhook @ 04/20/24 15:16:03.304
  I0420 15:16:03.462293 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3121" for this suite. @ 04/20/24 15:16:03.481
  STEP: Destroying namespace "webhook-markers-5941" for this suite. @ 04/20/24 15:16:03.504
  STEP: Destroying namespace "fail-closed-namespace-2963" for this suite. @ 04/20/24 15:16:03.525
• [4.978 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 04/20/24 15:16:03.545
  I0420 15:16:03.546020 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename disruption @ 04/20/24 15:16:03.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:16:03.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:16:03.601
  STEP: Waiting for the pdb to be processed @ 04/20/24 15:16:03.638
  E0420 15:16:04.032000      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:05.033621      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 04/20/24 15:16:05.696
  I0420 15:16:05.721607 13 disruption.go:578] running pods: 0 < 3
  E0420 15:16:06.033909      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:07.034932      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:16:07.711382 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4952" for this suite. @ 04/20/24 15:16:07.724
• [4.191 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 04/20/24 15:16:07.737
  I0420 15:16:07.737639 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename sched-preemption @ 04/20/24 15:16:07.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:16:07.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:16:07.776
  I0420 15:16:07.817418 13 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0420 15:16:08.035284      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:09.036392      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:10.037477      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:11.037667      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:12.037900      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:13.038976      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:14.040160      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:15.040836      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:16.041851      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:17.042256      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:18.043015      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:19.043438      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:20.043612      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:21.044825      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:22.045625      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:23.046845      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:24.047462      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:25.048210      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:26.049255      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:27.049329      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:28.049879      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:29.050118      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:30.050665      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:31.050578      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:32.051006      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:33.051653      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:34.052081      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:35.052312      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:36.053398      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:37.054062      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:38.054195      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:39.055185      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:40.055396      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:41.056186      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:42.056983      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:43.058411      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:44.058008      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:45.058275      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:46.058420      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:47.059018      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:48.060015      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:49.059783      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:50.060470      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:51.060634      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:52.060904      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:53.061995      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:54.062637      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:55.063257      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:56.064466      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:57.064862      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:58.065706      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:16:59.068105      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:00.069423      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:01.069819      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:02.070497      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:03.070630      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:04.071461      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:05.072590      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:06.072662      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:07.074009      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:17:07.844602 13 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/20/24 15:17:07.855
  I0420 15:17:07.856160 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/20/24 15:17:07.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:17:07.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:17:07.923
  I0420 15:17:07.965952 13 preemption.go:818] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0420 15:17:07.973613 13 preemption.go:824] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  E0420 15:17:08.075453      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:17:08.140256 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-5477" for this suite. @ 04/20/24 15:17:08.153
  I0420 15:17:08.167561 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7381" for this suite. @ 04/20/24 15:17:08.176
• [60.470 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 04/20/24 15:17:08.209
  I0420 15:17:08.209864 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename sched-preemption @ 04/20/24 15:17:08.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:17:08.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:17:08.285
  I0420 15:17:08.320875 13 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0420 15:17:09.075859      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:10.076688      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:11.076894      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:12.078093      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:13.078408      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:14.078977      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:15.078997      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:16.080279      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:17.080888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:18.080988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:19.081133      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:20.082292      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:21.082547      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:22.082870      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:23.083110      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:24.083463      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:25.083582      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:26.083790      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:27.084068      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:28.085347      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:29.085516      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:30.085616      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:31.088119      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:32.089055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:33.089137      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:34.090094      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:35.090305      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:36.091368      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:37.091545      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:38.092038      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:39.093059      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:40.093398      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:41.093549      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:42.094292      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:43.094398      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:44.095237      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:45.095138      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:46.095507      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:47.096786      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:48.097075      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:49.097605      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:50.098617      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:51.098755      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:52.099076      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:53.099148      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:54.099528      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:55.100088      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:56.101106      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:57.102010      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:58.102082      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:17:59.102327      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:00.103347      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:01.103693      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:02.104092      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:03.105178      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:04.105277      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:05.105643      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:06.106374      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:07.106989      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:08.108042      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:18:08.333791 13 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/20/24 15:18:08.344
  I0420 15:18:08.418620 13 preemption.go:178] Created pod: pod0-0-sched-preemption-low-priority
  I0420 15:18:08.443742 13 preemption.go:178] Created pod: pod0-1-sched-preemption-medium-priority
  I0420 15:18:08.552919 13 preemption.go:178] Created pod: pod1-0-sched-preemption-medium-priority
  I0420 15:18:08.587755 13 preemption.go:178] Created pod: pod1-1-sched-preemption-medium-priority
  I0420 15:18:08.700818 13 preemption.go:178] Created pod: pod2-0-sched-preemption-medium-priority
  I0420 15:18:08.717977 13 preemption.go:178] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/20/24 15:18:08.718
  E0420 15:18:09.109002      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:10.109406      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 04/20/24 15:18:10.787
  E0420 15:18:11.110098      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:12.111372      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:13.112118      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:14.113062      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:18:14.990250 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8243" for this suite. @ 04/20/24 15:18:15.002
• [66.805 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2203
  STEP: Creating a kubernetes client @ 04/20/24 15:18:15.015
  I0420 15:18:15.016008 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename services @ 04/20/24 15:18:15.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:18:15.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:18:15.074
  STEP: creating service in namespace services-9866 @ 04/20/24 15:18:15.08
  STEP: creating service affinity-clusterip-transition in namespace services-9866 @ 04/20/24 15:18:15.08
  E0420 15:18:15.112624      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating replication controller affinity-clusterip-transition in namespace services-9866 @ 04/20/24 15:18:15.123
  I0420 15:18:15.146304      13 runners.go:198] Created replication controller with name: affinity-clusterip-transition, namespace: services-9866, replica count: 3
  E0420 15:18:16.113498      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:17.114004      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:18.114051      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:18:18.198624      13 runners.go:198] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0420 15:18:18.213422 13 resource.go:361] Creating new exec pod
  E0420 15:18:19.114833      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:20.115295      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:21.118188      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:18:21.246388 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9866 exec execpod-affinityvhlrx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  E0420 15:18:22.118180      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:23.119291      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:18:23.728039 13 builder.go:135] rc: 1
  I0420 15:18:23.728678 13 jig.go:916] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9866 exec execpod-affinityvhlrx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 affinity-clusterip-transition 80
  nc: connect to affinity-clusterip-transition port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0420 15:18:23.729384 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9866 exec execpod-affinityvhlrx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  E0420 15:18:24.120231      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:25.120899      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:18:26.001613 13 builder.go:135] rc: 1
  I0420 15:18:26.001888 13 jig.go:916] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9866 exec execpod-affinityvhlrx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 affinity-clusterip-transition 80
  nc: connect to affinity-clusterip-transition port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0420 15:18:26.002324 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9866 exec execpod-affinityvhlrx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  E0420 15:18:26.121458      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:27.121601      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:28.121929      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:18:28.265074 13 builder.go:135] rc: 1
  I0420 15:18:28.265295 13 jig.go:916] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9866 exec execpod-affinityvhlrx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 affinity-clusterip-transition 80
  nc: connect to affinity-clusterip-transition port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0420 15:18:28.265908 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9866 exec execpod-affinityvhlrx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  E0420 15:18:29.122663      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:30.123797      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:18:30.516878 13 builder.go:135] rc: 1
  I0420 15:18:30.517027 13 jig.go:916] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9866 exec execpod-affinityvhlrx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 affinity-clusterip-transition 80
  nc: connect to affinity-clusterip-transition port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0420 15:18:30.518065 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9866 exec execpod-affinityvhlrx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0420 15:18:30.853787 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I0420 15:18:30.854062 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0420 15:18:30.854579 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9866 exec execpod-affinityvhlrx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.41.138 80'
  I0420 15:18:31.115345 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.41.138 80\nConnection to 10.233.41.138 80 port [tcp/http] succeeded!\n"
  I0420 15:18:31.115433 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  E0420 15:18:31.124839      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:18:31.143553 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9866 exec execpod-affinityvhlrx -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.41.138:80/ ; done'
  I0420 15:18:31.656264 13 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n"
  I0420 15:18:31.656665 13 builder.go:147] stdout: "\naffinity-clusterip-transition-6zk5d\naffinity-clusterip-transition-nbc6x\naffinity-clusterip-transition-nbc6x\naffinity-clusterip-transition-tkksf\naffinity-clusterip-transition-tkksf\naffinity-clusterip-transition-nbc6x\naffinity-clusterip-transition-6zk5d\naffinity-clusterip-transition-6zk5d\naffinity-clusterip-transition-tkksf\naffinity-clusterip-transition-tkksf\naffinity-clusterip-transition-nbc6x\naffinity-clusterip-transition-tkksf\naffinity-clusterip-transition-6zk5d\naffinity-clusterip-transition-nbc6x\naffinity-clusterip-transition-tkksf\naffinity-clusterip-transition-tkksf"
  I0420 15:18:31.656818 13 service.go:242] Received response from host: affinity-clusterip-transition-6zk5d
  I0420 15:18:31.656899 13 service.go:242] Received response from host: affinity-clusterip-transition-nbc6x
  I0420 15:18:31.656921 13 service.go:242] Received response from host: affinity-clusterip-transition-nbc6x
  I0420 15:18:31.656938 13 service.go:242] Received response from host: affinity-clusterip-transition-tkksf
  I0420 15:18:31.656987 13 service.go:242] Received response from host: affinity-clusterip-transition-tkksf
  I0420 15:18:31.657004 13 service.go:242] Received response from host: affinity-clusterip-transition-nbc6x
  I0420 15:18:31.657020 13 service.go:242] Received response from host: affinity-clusterip-transition-6zk5d
  I0420 15:18:31.657037 13 service.go:242] Received response from host: affinity-clusterip-transition-6zk5d
  I0420 15:18:31.657054 13 service.go:242] Received response from host: affinity-clusterip-transition-tkksf
  I0420 15:18:31.657069 13 service.go:242] Received response from host: affinity-clusterip-transition-tkksf
  I0420 15:18:31.657084 13 service.go:242] Received response from host: affinity-clusterip-transition-nbc6x
  I0420 15:18:31.657099 13 service.go:242] Received response from host: affinity-clusterip-transition-tkksf
  I0420 15:18:31.657114 13 service.go:242] Received response from host: affinity-clusterip-transition-6zk5d
  I0420 15:18:31.657130 13 service.go:242] Received response from host: affinity-clusterip-transition-nbc6x
  I0420 15:18:31.657145 13 service.go:242] Received response from host: affinity-clusterip-transition-tkksf
  I0420 15:18:31.657160 13 service.go:242] Received response from host: affinity-clusterip-transition-tkksf
  I0420 15:18:31.679864 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-9866 exec execpod-affinityvhlrx -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.41.138:80/ ; done'
  E0420 15:18:32.125372      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:18:32.161884 13 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.138:80/\n"
  I0420 15:18:32.162001 13 builder.go:147] stdout: "\naffinity-clusterip-transition-nbc6x\naffinity-clusterip-transition-nbc6x\naffinity-clusterip-transition-nbc6x\naffinity-clusterip-transition-nbc6x\naffinity-clusterip-transition-nbc6x\naffinity-clusterip-transition-nbc6x\naffinity-clusterip-transition-nbc6x\naffinity-clusterip-transition-nbc6x\naffinity-clusterip-transition-nbc6x\naffinity-clusterip-transition-nbc6x\naffinity-clusterip-transition-nbc6x\naffinity-clusterip-transition-nbc6x\naffinity-clusterip-transition-nbc6x\naffinity-clusterip-transition-nbc6x\naffinity-clusterip-transition-nbc6x\naffinity-clusterip-transition-nbc6x"
  I0420 15:18:32.162047 13 service.go:242] Received response from host: affinity-clusterip-transition-nbc6x
  I0420 15:18:32.162093 13 service.go:242] Received response from host: affinity-clusterip-transition-nbc6x
  I0420 15:18:32.162113 13 service.go:242] Received response from host: affinity-clusterip-transition-nbc6x
  I0420 15:18:32.162129 13 service.go:242] Received response from host: affinity-clusterip-transition-nbc6x
  I0420 15:18:32.162147 13 service.go:242] Received response from host: affinity-clusterip-transition-nbc6x
  I0420 15:18:32.162342 13 service.go:242] Received response from host: affinity-clusterip-transition-nbc6x
  I0420 15:18:32.162366 13 service.go:242] Received response from host: affinity-clusterip-transition-nbc6x
  I0420 15:18:32.162382 13 service.go:242] Received response from host: affinity-clusterip-transition-nbc6x
  I0420 15:18:32.162425 13 service.go:242] Received response from host: affinity-clusterip-transition-nbc6x
  I0420 15:18:32.162459 13 service.go:242] Received response from host: affinity-clusterip-transition-nbc6x
  I0420 15:18:32.162476 13 service.go:242] Received response from host: affinity-clusterip-transition-nbc6x
  I0420 15:18:32.162492 13 service.go:242] Received response from host: affinity-clusterip-transition-nbc6x
  I0420 15:18:32.162513 13 service.go:242] Received response from host: affinity-clusterip-transition-nbc6x
  I0420 15:18:32.162529 13 service.go:242] Received response from host: affinity-clusterip-transition-nbc6x
  I0420 15:18:32.162545 13 service.go:242] Received response from host: affinity-clusterip-transition-nbc6x
  I0420 15:18:32.162560 13 service.go:242] Received response from host: affinity-clusterip-transition-nbc6x
  I0420 15:18:32.163259 13 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-9866, will wait for the garbage collector to delete the pods @ 04/20/24 15:18:32.199
  I0420 15:18:32.278476 13 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 10.77444ms
  I0420 15:18:32.379671 13 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 101.199262ms
  E0420 15:18:33.127668      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:34.127065      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:35.128193      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:18:35.639947 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9866" for this suite. @ 04/20/24 15:18:35.652
• [20.656 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 04/20/24 15:18:35.675
  I0420 15:18:35.675953 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename server-version @ 04/20/24 15:18:35.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:18:35.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:18:35.724
  STEP: Request ServerVersion @ 04/20/24 15:18:35.73
  STEP: Confirm major version @ 04/20/24 15:18:35.732
  I0420 15:18:35.732988 13 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 04/20/24 15:18:35.733
  I0420 15:18:35.733112 13 server_version.go:58] cleanMinorVersion: 30
  I0420 15:18:35.733158 13 server_version.go:62] Minor version: 30
  I0420 15:18:35.733333 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-7414" for this suite. @ 04/20/24 15:18:35.745
• [0.081 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 04/20/24 15:18:35.756
  I0420 15:18:35.756907 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 15:18:35.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:18:35.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:18:35.789
  I0420 15:18:35.795612 13 replica_set.go:191] Creating ReplicaSet my-hostname-basic-654756d5-e404-4899-a150-f193000343a0
  I0420 15:18:35.814002 13 resource.go:87] Pod name my-hostname-basic-654756d5-e404-4899-a150-f193000343a0: Found 0 pods out of 1
  E0420 15:18:36.128605      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:37.129126      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:38.129559      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:39.129661      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:40.130211      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:18:40.824151 13 resource.go:87] Pod name my-hostname-basic-654756d5-e404-4899-a150-f193000343a0: Found 1 pods out of 1
  I0420 15:18:40.824561 13 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-654756d5-e404-4899-a150-f193000343a0" is running
  I0420 15:18:40.834703 13 replica_set.go:220] Pod "my-hostname-basic-654756d5-e404-4899-a150-f193000343a0-8kk8b" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 15:18:36 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 15:18:35 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 15:18:36 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 15:18:36 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 15:18:35 +0000 UTC Reason: Message:}])
  I0420 15:18:40.834821 13 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/20/24 15:18:40.834
  E0420 15:18:41.131119      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:42.131382      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:43.131503      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:44.132286      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:45.132524      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:46.133218      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:47.133374      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:48.133713      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:49.134804      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:50.135080      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:51.135391      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:18:52.109508 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8944" for this suite. @ 04/20/24 15:18:52.131
  E0420 15:18:52.136069      13 retrywatcher.go:129] "Watch failed" err="context canceled"
• [16.391 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:850
  STEP: Creating a kubernetes client @ 04/20/24 15:18:52.148
  I0420 15:18:52.148551 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename services @ 04/20/24 15:18:52.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:18:52.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:18:52.2
  STEP: creating service multi-endpoint-test in namespace services-4162 @ 04/20/24 15:18:52.209
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4162 to expose endpoints map[] @ 04/20/24 15:18:52.239
  I0420 15:18:52.290012 13 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-4162 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4162 @ 04/20/24 15:18:52.29
  E0420 15:18:53.136263      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:54.136583      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4162 to expose endpoints map[pod1:[100]] @ 04/20/24 15:18:54.367
  I0420 15:18:54.409278 13 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-4162 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-4162 @ 04/20/24 15:18:54.409
  E0420 15:18:55.136701      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:56.137482      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4162 to expose endpoints map[pod1:[100] pod2:[101]] @ 04/20/24 15:18:56.461
  I0420 15:18:56.499117 13 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-4162 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 04/20/24 15:18:56.499
  I0420 15:18:56.499289 13 resource.go:361] Creating new exec pod
  E0420 15:18:57.137659      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:58.137961      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:18:59.138877      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:18:59.552195 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-4162 exec execpodr5dh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0420 15:18:59.961025 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I0420 15:18:59.961140 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0420 15:18:59.961798 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-4162 exec execpodr5dh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.6.82 80'
  E0420 15:19:00.140156      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:19:00.242235 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.6.82 80\nConnection to 10.233.6.82 80 port [tcp/http] succeeded!\n"
  I0420 15:19:00.242320 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0420 15:19:00.243027 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-4162 exec execpodr5dh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0420 15:19:00.500321 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I0420 15:19:00.500410 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0420 15:19:00.500816 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-4162 exec execpodr5dh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.6.82 81'
  I0420 15:19:00.765839 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.6.82 81\nConnection to 10.233.6.82 81 port [tcp/*] succeeded!\n"
  I0420 15:19:00.766029 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4162 @ 04/20/24 15:19:00.766
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4162 to expose endpoints map[pod2:[101]] @ 04/20/24 15:19:00.787
  I0420 15:19:00.833100 13 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-4162 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-4162 @ 04/20/24 15:19:00.833
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4162 to expose endpoints map[] @ 04/20/24 15:19:00.878
  E0420 15:19:01.141035      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:19:01.928994 13 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-4162 exposes endpoints map[]
  I0420 15:19:01.981703 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4162" for this suite. @ 04/20/24 15:19:01.995
• [9.866 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 04/20/24 15:19:02.015
  I0420 15:19:02.015096 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:19:02.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:19:02.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:19:02.095
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 15:19:02.1
  E0420 15:19:02.142084      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:03.143195      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:04.143975      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:05.144298      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:06.145070      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:19:06.171
  I0420 15:19:06.178963 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod downwardapi-volume-3146e2f2-9243-4071-99c9-a61f4e48f3be container client-container: <nil>
  STEP: delete the pod @ 04/20/24 15:19:06.215
  I0420 15:19:06.250795 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8003" for this suite. @ 04/20/24 15:19:06.26
• [4.263 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 04/20/24 15:19:06.278
  I0420 15:19:06.278930 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename crd-watch @ 04/20/24 15:19:06.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:19:06.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:19:06.319
  I0420 15:19:06.326104 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 15:19:07.145569      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:08.146116      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 04/20/24 15:19:09.019
  I0420 15:19:09.028437 13 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T15:19:09Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T15:19:09Z]] name:name1 resourceVersion:70177 uid:cbae3bd0-e64c-4b33-bf12-7f6359273706] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 15:19:09.146619      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:10.147303      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:11.148227      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:12.149235      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:13.149464      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:14.149987      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:15.150870      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:16.151077      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:17.151069      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:18.151350      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 04/20/24 15:19:19.029
  I0420 15:19:19.047466 13 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T15:19:19Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T15:19:19Z]] name:name2 resourceVersion:70203 uid:292910ae-ed1c-4af3-8087-42d7bdb2acf8] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 15:19:19.152060      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:20.152237      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:21.152679      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:22.152831      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:23.153205      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:24.153444      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:25.153840      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:26.154024      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:27.154824      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:28.155294      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 04/20/24 15:19:29.047
  I0420 15:19:29.064916 13 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T15:19:09Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T15:19:29Z]] name:name1 resourceVersion:70220 uid:cbae3bd0-e64c-4b33-bf12-7f6359273706] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 15:19:29.155953      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:30.156527      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:31.157549      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:32.158218      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:33.159206      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:34.159992      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:35.160149      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:36.161141      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:37.161005      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:38.161585      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 04/20/24 15:19:39.065
  I0420 15:19:39.103431 13 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T15:19:19Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T15:19:39Z]] name:name2 resourceVersion:70238 uid:292910ae-ed1c-4af3-8087-42d7bdb2acf8] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 15:19:39.162659      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:40.163348      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:41.164703      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:42.164536      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:43.165458      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:44.165112      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:45.165398      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:46.166006      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:47.166040      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:48.167007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 04/20/24 15:19:49.103
  I0420 15:19:49.124229 13 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T15:19:09Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T15:19:29Z]] name:name1 resourceVersion:70256 uid:cbae3bd0-e64c-4b33-bf12-7f6359273706] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 15:19:49.168359      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:50.168890      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:51.169546      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:52.170015      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:53.170488      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:54.171381      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:55.171622      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:56.172386      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:57.173251      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:19:58.174473      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 04/20/24 15:19:59.126
  I0420 15:19:59.163223 13 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-20T15:19:19Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-20T15:19:39Z]] name:name2 resourceVersion:70274 uid:292910ae-ed1c-4af3-8087-42d7bdb2acf8] num:map[num1:9223372036854775807 num2:1000000]]}
  E0420 15:19:59.175603      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:00.176119      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:01.176521      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:02.176498      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:03.176773      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:04.177179      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:05.177585      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:06.177896      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:07.179155      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:08.179197      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:09.179896      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:20:09.697594 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-4019" for this suite. @ 04/20/24 15:20:09.712
• [63.455 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 04/20/24 15:20:09.736
  I0420 15:20:09.736162 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename configmap @ 04/20/24 15:20:09.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:20:09.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:20:09.79
  STEP: Creating configMap with name configmap-test-volume-map-29ece09d-7b83-438e-81de-e6fbd715b35b @ 04/20/24 15:20:09.804
  STEP: Creating a pod to test consume configMaps @ 04/20/24 15:20:09.816
  E0420 15:20:10.180640      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:11.180821      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:12.181895      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:13.182934      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:20:13.87
  I0420 15:20:13.880145 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-configmaps-8f7871c8-3f7c-4020-9da7-78fbefb5fe77 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 15:20:13.903
  I0420 15:20:13.949531 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2258" for this suite. @ 04/20/24 15:20:13.965
• [4.244 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 04/20/24 15:20:13.982
  I0420 15:20:13.983347 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:20:13.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:20:14.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:20:14.036
  STEP: Setting up server cert @ 04/20/24 15:20:14.097
  E0420 15:20:14.183553      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:15.184030      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:20:15.789
  STEP: Deploying the webhook pod @ 04/20/24 15:20:15.81
  STEP: Wait for the deployment to be ready @ 04/20/24 15:20:15.843
  I0420 15:20:15.862646 13 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0420 15:20:16.184514      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:17.184999      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:20:17.896
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:20:17.951
  E0420 15:20:18.184942      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:20:18.951942 13 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0420 15:20:18.968538 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 15:20:19.185362      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 04/20/24 15:20:19.506
  STEP: Creating a custom resource that should be denied by the webhook @ 04/20/24 15:20:19.539
  E0420 15:20:20.186537      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:21.187228      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 04/20/24 15:20:21.641
  STEP: Updating the custom resource with disallowed data should be denied @ 04/20/24 15:20:21.657
  STEP: Deleting the custom resource should be denied @ 04/20/24 15:20:21.678
  STEP: Remove the offending key and value from the custom resource data @ 04/20/24 15:20:21.697
  STEP: Deleting the updated custom resource should be successful @ 04/20/24 15:20:21.718
  E0420 15:20:22.188323      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:20:22.393659 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4948" for this suite. @ 04/20/24 15:20:22.408
  STEP: Destroying namespace "webhook-markers-461" for this suite. @ 04/20/24 15:20:22.426
• [8.468 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 04/20/24 15:20:22.451
  I0420 15:20:22.451779 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 15:20:22.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:20:22.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:20:22.492
  STEP: Creating service test in namespace statefulset-9611 @ 04/20/24 15:20:22.497
  STEP: Creating stateful set ss in namespace statefulset-9611 @ 04/20/24 15:20:22.511
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9611 @ 04/20/24 15:20:22.531
  I0420 15:20:22.548082 13 wait.go:40] Found 0 stateful pods, waiting for 1
  E0420 15:20:23.188289      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:24.189016      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:25.189284      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:26.189858      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:27.190605      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:28.190253      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:29.190689      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:30.191484      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:31.192643      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:32.192625      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:20:32.545182 13 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 04/20/24 15:20:32.545
  I0420 15:20:32.554525 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=statefulset-9611 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0420 15:20:32.841008 13 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0420 15:20:32.841093 13 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0420 15:20:32.841119 13 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0420 15:20:32.847935 13 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0420 15:20:33.192384      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:34.193225      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:35.193634      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:36.194181      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:37.194469      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:38.196021      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:39.196092      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:40.196544      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:41.197544      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:42.197880      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:20:42.849593 13 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0420 15:20:42.849699 13 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0420 15:20:42.903657 13 resource.go:168] POD   NODE            PHASE    GRACE  CONDITIONS
  I0420 15:20:42.903946 13 resource.go:175] ss-0  ier3chochiph-3  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:20:24 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:20:22 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:20:32 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:20:32 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:20:22 +0000 UTC  }]
  I0420 15:20:42.903978 13 resource.go:175] ss-1                  Pending         []
  I0420 15:20:42.903993 13 resource.go:178] 
  I0420 15:20:42.904017 13 statefulset.go:2147] StatefulSet ss has not reached scale 3, at 2
  E0420 15:20:43.198918      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:20:43.920421 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 8.971977665s
  E0420 15:20:44.199822      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:20:44.940116 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 7.955493883s
  E0420 15:20:45.200095      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:20:45.949352 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 6.93555007s
  E0420 15:20:46.201418      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:20:46.957989 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 5.926728742s
  E0420 15:20:47.202052      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:20:47.973471 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 4.917395879s
  E0420 15:20:48.202559      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:20:48.987032 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 3.902577576s
  E0420 15:20:49.202904      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:20:50.001470 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 2.888300966s
  E0420 15:20:50.204331      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:20:51.011002 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 1.87445585s
  E0420 15:20:51.204509      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:20:52.025019 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 864.672136ms
  E0420 15:20:52.204643      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9611 @ 04/20/24 15:20:53.025
  I0420 15:20:53.035515 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=statefulset-9611 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0420 15:20:53.206127      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:20:53.359515 13 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0420 15:20:53.359702 13 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0420 15:20:53.359861 13 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0420 15:20:53.360569 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=statefulset-9611 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0420 15:20:53.659044 13 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0420 15:20:53.659134 13 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0420 15:20:53.659160 13 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0420 15:20:53.659422 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=statefulset-9611 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0420 15:20:53.933439 13 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0420 15:20:53.933521 13 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0420 15:20:53.933546 13 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0420 15:20:53.945005 13 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0420 15:20:54.206930      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:55.207399      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:56.208114      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:57.208486      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:58.209198      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:20:59.209812      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:00.211975      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:01.212392      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:02.213173      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:03.213421      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:21:03.944456 13 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0420 15:21:03.944903 13 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0420 15:21:03.944947 13 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 04/20/24 15:21:03.945
  I0420 15:21:03.953246 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=statefulset-9611 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0420 15:21:04.214214      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:21:04.278666 13 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0420 15:21:04.278968 13 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0420 15:21:04.278995 13 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0420 15:21:04.279330 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=statefulset-9611 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0420 15:21:04.665303 13 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0420 15:21:04.665418 13 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0420 15:21:04.665466 13 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0420 15:21:04.665907 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=statefulset-9611 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0420 15:21:05.031642 13 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0420 15:21:05.031773 13 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0420 15:21:05.031810 13 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0420 15:21:05.031844 13 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0420 15:21:05.038160 13 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 1
  E0420 15:21:05.214334      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:06.214548      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:07.214790      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:08.215438      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:09.215649      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:10.215914      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:11.216662      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:12.217286      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:13.218884      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:14.219813      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:21:15.051979 13 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0420 15:21:15.052059 13 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0420 15:21:15.052082 13 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0420 15:21:15.105570 13 resource.go:168] POD   NODE            PHASE    GRACE  CONDITIONS
  I0420 15:21:15.106174 13 resource.go:175] ss-0  ier3chochiph-3  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:20:24 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:20:22 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:21:04 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:21:04 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:20:22 +0000 UTC  }]
  I0420 15:21:15.106343 13 resource.go:175] ss-1  ier3chochiph-1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:20:45 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:20:43 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:21:04 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:21:04 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:20:42 +0000 UTC  }]
  I0420 15:21:15.106415 13 resource.go:175] ss-2  ier3chochiph-2  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:20:44 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:20:42 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:21:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:21:05 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:20:42 +0000 UTC  }]
  I0420 15:21:15.106437 13 resource.go:178] 
  I0420 15:21:15.106456 13 statefulset.go:2147] StatefulSet ss has not reached scale 0, at 3
  E0420 15:21:15.219671      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:21:16.116099 13 resource.go:168] POD   NODE            PHASE      GRACE  CONDITIONS
  I0420 15:21:16.116289 13 resource.go:175] ss-0  ier3chochiph-3  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:21:15 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:20:22 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:21:04 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:21:04 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:20:22 +0000 UTC  }]
  I0420 15:21:16.116785 13 resource.go:178] 
  I0420 15:21:16.117073 13 statefulset.go:2147] StatefulSet ss has not reached scale 0, at 1
  E0420 15:21:16.220152      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:21:17.124022 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 7.979363042s
  E0420 15:21:17.220350      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:21:18.132301 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 6.972243678s
  E0420 15:21:18.221219      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:21:19.140016 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 5.963863083s
  E0420 15:21:19.221949      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:21:20.149532 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 4.956913455s
  E0420 15:21:20.222869      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:21:21.164983 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 3.946737335s
  E0420 15:21:21.224086      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:21:22.176621 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 2.931377363s
  E0420 15:21:22.224204      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:21:23.184612 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 1.920230769s
  E0420 15:21:23.225029      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:21:24.195390 13 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 912.220029ms
  E0420 15:21:24.225599      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9611 @ 04/20/24 15:21:25.197
  I0420 15:21:25.208598 13 rest.go:150] Scaling statefulset ss to 0
  E0420 15:21:25.226269      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:21:25.240693 13 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0420 15:21:25.250649 13 statefulset.go:135] Deleting all statefulset in ns statefulset-9611
  I0420 15:21:25.260100 13 rest.go:150] Scaling statefulset ss to 0
  I0420 15:21:25.291692 13 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0420 15:21:25.300332 13 rest.go:88] Deleting statefulset ss
  I0420 15:21:25.328928 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9611" for this suite. @ 04/20/24 15:21:25.342
• [62.908 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 04/20/24 15:21:25.361
  I0420 15:21:25.362063 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 15:21:25.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:21:25.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:21:25.405
  STEP: Counting existing ResourceQuota @ 04/20/24 15:21:25.411
  E0420 15:21:26.226423      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:27.226854      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:28.227142      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:29.227452      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:30.228956      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/20/24 15:21:30.419
  STEP: Ensuring resource quota status is calculated @ 04/20/24 15:21:30.431
  E0420 15:21:31.229687      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:32.229959      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 04/20/24 15:21:32.441
  STEP: Ensuring resource quota status captures replicaset creation @ 04/20/24 15:21:32.465
  E0420 15:21:33.230021      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:34.230431      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 04/20/24 15:21:34.473
  STEP: Ensuring resource quota status released usage @ 04/20/24 15:21:34.487
  E0420 15:21:35.230471      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:36.230626      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:21:36.500543 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7184" for this suite. @ 04/20/24 15:21:36.511
• [11.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 04/20/24 15:21:36.528
  I0420 15:21:36.529040 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename dns @ 04/20/24 15:21:36.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:21:36.566
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:21:36.572
  STEP: Creating a test headless service @ 04/20/24 15:21:36.578
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7489 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7489;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7489 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7489;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7489.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7489.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7489.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7489.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7489.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7489.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7489.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7489.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7489.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7489.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7489.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7489.svc;check="$$(dig +notcp +noall +answer +search 179.52.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.52.179_udp@PTR;check="$$(dig +tcp +noall +answer +search 179.52.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.52.179_tcp@PTR;sleep 1; done
   @ 04/20/24 15:21:36.618
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7489 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7489;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7489 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7489;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7489.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7489.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7489.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7489.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7489.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7489.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7489.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7489.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7489.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7489.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7489.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7489.svc;check="$$(dig +notcp +noall +answer +search 179.52.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.52.179_udp@PTR;check="$$(dig +tcp +noall +answer +search 179.52.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.52.179_tcp@PTR;sleep 1; done
   @ 04/20/24 15:21:36.618
  STEP: creating a pod to probe DNS @ 04/20/24 15:21:36.618
  STEP: submitting the pod to kubernetes @ 04/20/24 15:21:36.619
  E0420 15:21:37.231326      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:38.232686      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/20/24 15:21:38.675
  STEP: looking for the results for each expected name from probers @ 04/20/24 15:21:38.685
  I0420 15:21:38.698277 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:38.722128 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:38.744367 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:38.753896 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:38.761874 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:38.770083 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:38.776652 13 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:38.783176 13 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:38.826365 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:38.834832 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:38.842013 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:38.847120 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:38.854377 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:38.862382 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:38.869071 13 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:38.875343 13 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:38.900149 13 dns_common.go:489] Lookups using dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7489 wheezy_tcp@dns-test-service.dns-7489 wheezy_udp@dns-test-service.dns-7489.svc wheezy_tcp@dns-test-service.dns-7489.svc wheezy_udp@_http._tcp.dns-test-service.dns-7489.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7489.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7489 jessie_tcp@dns-test-service.dns-7489 jessie_udp@dns-test-service.dns-7489.svc jessie_tcp@dns-test-service.dns-7489.svc jessie_udp@_http._tcp.dns-test-service.dns-7489.svc jessie_tcp@_http._tcp.dns-test-service.dns-7489.svc]

  I0420 15:21:38.916996 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 15:21:38.931220 13 dns_common.go:495] Pod client logs for querier: 
  I0420 15:21:38.943345 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 15:21:39.233123      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:40.233622      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:41.234309      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:42.234209      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:43.235100      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:21:43.698774 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:43.710126 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:43.718331 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:43.726495 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:43.735241 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:43.742649 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:43.750293 13 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:43.758207 13 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:43.794177 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:43.803791 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:43.811859 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:43.821895 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:43.831389 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:43.840221 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:43.851772 13 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:43.860530 13 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:43.896119 13 dns_common.go:489] Lookups using dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7489 wheezy_tcp@dns-test-service.dns-7489 wheezy_udp@dns-test-service.dns-7489.svc wheezy_tcp@dns-test-service.dns-7489.svc wheezy_udp@_http._tcp.dns-test-service.dns-7489.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7489.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7489 jessie_tcp@dns-test-service.dns-7489 jessie_udp@dns-test-service.dns-7489.svc jessie_tcp@dns-test-service.dns-7489.svc jessie_udp@_http._tcp.dns-test-service.dns-7489.svc jessie_tcp@_http._tcp.dns-test-service.dns-7489.svc]

  I0420 15:21:43.909347 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 15:21:43.924486 13 dns_common.go:495] Pod client logs for querier: 
  I0420 15:21:43.947420 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 15:21:44.235966      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:45.235918      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:46.236404      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:47.237062      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:48.238415      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:21:48.698335 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:48.704686 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:48.712886 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:48.722059 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:48.730774 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:48.737837 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:48.745918 13 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:48.753046 13 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:48.788671 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:48.797457 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:48.805306 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:48.815876 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:48.821824 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:48.827880 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:48.834220 13 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:48.839976 13 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:48.873639 13 dns_common.go:489] Lookups using dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7489 wheezy_tcp@dns-test-service.dns-7489 wheezy_udp@dns-test-service.dns-7489.svc wheezy_tcp@dns-test-service.dns-7489.svc wheezy_udp@_http._tcp.dns-test-service.dns-7489.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7489.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7489 jessie_tcp@dns-test-service.dns-7489 jessie_udp@dns-test-service.dns-7489.svc jessie_tcp@dns-test-service.dns-7489.svc jessie_udp@_http._tcp.dns-test-service.dns-7489.svc jessie_tcp@_http._tcp.dns-test-service.dns-7489.svc]

  I0420 15:21:48.890139 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 15:21:48.903559 13 dns_common.go:495] Pod client logs for querier: 
  I0420 15:21:48.922825 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 15:21:49.238942      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:50.239066      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:51.239627      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:52.240344      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:53.240434      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:21:53.696083 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:53.705354 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:53.711886 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:53.720665 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:53.731061 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:53.739412 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:53.748114 13 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:53.763918 13 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:53.806821 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:53.814481 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:53.823138 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:53.829256 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:53.836412 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:53.843989 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:53.850115 13 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:53.855606 13 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:53.886307 13 dns_common.go:489] Lookups using dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7489 wheezy_tcp@dns-test-service.dns-7489 wheezy_udp@dns-test-service.dns-7489.svc wheezy_tcp@dns-test-service.dns-7489.svc wheezy_udp@_http._tcp.dns-test-service.dns-7489.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7489.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7489 jessie_tcp@dns-test-service.dns-7489 jessie_udp@dns-test-service.dns-7489.svc jessie_tcp@dns-test-service.dns-7489.svc jessie_udp@_http._tcp.dns-test-service.dns-7489.svc jessie_tcp@_http._tcp.dns-test-service.dns-7489.svc]

  I0420 15:21:53.900666 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 15:21:53.918625 13 dns_common.go:495] Pod client logs for querier: 
  I0420 15:21:53.936330 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 15:21:54.241103      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:55.241290      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:56.242432      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:57.241806      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:21:58.242115      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:21:58.723555 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:58.733254 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:58.740997 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:58.749140 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:58.756262 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:58.763978 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:58.770636 13 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:58.777516 13 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:58.813503 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:58.822038 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:58.828761 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:58.835141 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:58.843004 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:58.848988 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:58.855807 13 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:58.863556 13 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:21:58.891959 13 dns_common.go:489] Lookups using dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7489 wheezy_tcp@dns-test-service.dns-7489 wheezy_udp@dns-test-service.dns-7489.svc wheezy_tcp@dns-test-service.dns-7489.svc wheezy_udp@_http._tcp.dns-test-service.dns-7489.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7489.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7489 jessie_tcp@dns-test-service.dns-7489 jessie_udp@dns-test-service.dns-7489.svc jessie_tcp@dns-test-service.dns-7489.svc jessie_udp@_http._tcp.dns-test-service.dns-7489.svc jessie_tcp@_http._tcp.dns-test-service.dns-7489.svc]

  I0420 15:21:58.908177 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 15:21:58.928699 13 dns_common.go:495] Pod client logs for querier: 
  I0420 15:21:58.945018 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 15:21:59.242868      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:00.244190      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:01.243906      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:02.251399      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:03.247450      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:22:03.700690 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:22:03.708945 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:22:03.718579 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:22:03.724358 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:22:03.732801 13 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:22:03.742539 13 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:22:03.750337 13 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:22:03.756081 13 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:22:03.794424 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:22:03.801118 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:22:03.808397 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:22:03.813931 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7489 from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:22:03.821160 13 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:22:03.830248 13 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:22:03.843062 13 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:22:03.849794 13 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:22:03.885229 13 dns_common.go:489] Lookups using dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-7489 wheezy_tcp@dns-test-service.dns-7489 wheezy_udp@dns-test-service.dns-7489.svc wheezy_tcp@dns-test-service.dns-7489.svc wheezy_udp@_http._tcp.dns-test-service.dns-7489.svc wheezy_tcp@_http._tcp.dns-test-service.dns-7489.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-7489 jessie_tcp@dns-test-service.dns-7489 jessie_udp@dns-test-service.dns-7489.svc jessie_tcp@dns-test-service.dns-7489.svc jessie_udp@_http._tcp.dns-test-service.dns-7489.svc jessie_tcp@_http._tcp.dns-test-service.dns-7489.svc]

  I0420 15:22:03.903145 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 15:22:03.922076 13 dns_common.go:495] Pod client logs for querier: 
  I0420 15:22:03.937438 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 15:22:04.248166      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:05.249155      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:06.250106      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:07.250307      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:08.250430      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:22:08.819140 13 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:22:08.827304 13 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7489.svc from pod dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5: the server could not find the requested resource (get pods dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5)
  I0420 15:22:08.855200 13 dns_common.go:489] Lookups using dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5 failed for: [jessie_udp@_http._tcp.dns-test-service.dns-7489.svc jessie_tcp@_http._tcp.dns-test-service.dns-7489.svc]

  I0420 15:22:08.868466 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 15:22:08.881515 13 dns_common.go:495] Pod client logs for querier: 
  I0420 15:22:08.895842 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 15:22:09.251472      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:10.252401      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:11.252541      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:12.253640      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:13.253703      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:22:13.876262 13 dns_common.go:527] DNS probes using dns-7489/dns-test-c7d5c60e-f408-4f11-aeae-307bf8c996d5 succeeded

  STEP: deleting the pod @ 04/20/24 15:22:13.878
  STEP: deleting the test service @ 04/20/24 15:22:13.977
  STEP: deleting the test headless service @ 04/20/24 15:22:14.052
  I0420 15:22:14.083282 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7489" for this suite. @ 04/20/24 15:22:14.107
• [37.597 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 04/20/24 15:22:14.126
  I0420 15:22:14.126505 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 15:22:14.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:22:14.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:22:14.173
  STEP: Counting existing ResourceQuota @ 04/20/24 15:22:14.179
  E0420 15:22:14.253976      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:15.255124      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:16.255446      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:17.255828      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:18.255998      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/20/24 15:22:19.192
  STEP: Ensuring resource quota status is calculated @ 04/20/24 15:22:19.217
  E0420 15:22:19.256378      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:20.256482      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:22:21.224110 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8287" for this suite. @ 04/20/24 15:22:21.233
• [7.118 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 04/20/24 15:22:21.244
  I0420 15:22:21.244878 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename subpath @ 04/20/24 15:22:21.247
  E0420 15:22:21.256824      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:22:21.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:22:21.283
  STEP: Setting up data @ 04/20/24 15:22:21.287
  STEP: Creating pod pod-subpath-test-projected-9lgj @ 04/20/24 15:22:21.314
  STEP: Creating a pod to test atomic-volume-subpath @ 04/20/24 15:22:21.315
  E0420 15:22:22.257221      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:23.257365      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:24.257654      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:25.258422      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:26.258681      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:27.259301      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:28.260082      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:29.260987      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:30.261136      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:31.261398      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:32.261965      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:33.263073      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:34.263668      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:35.263882      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:36.264269      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:37.264563      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:38.265251      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:39.265826      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:40.265992      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:41.266195      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:42.266634      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:43.266671      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:44.266979      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:45.267553      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:22:45.457
  I0420 15:22:45.462820 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-subpath-test-projected-9lgj container test-container-subpath-projected-9lgj: <nil>
  STEP: delete the pod @ 04/20/24 15:22:45.481
  STEP: Deleting pod pod-subpath-test-projected-9lgj @ 04/20/24 15:22:45.515
  I0420 15:22:45.515118 13 delete.go:62] Deleting pod "pod-subpath-test-projected-9lgj" in namespace "subpath-8941"
  I0420 15:22:45.519488 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8941" for this suite. @ 04/20/24 15:22:45.53
• [24.300 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 04/20/24 15:22:45.545
  I0420 15:22:45.545925 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename lease-test @ 04/20/24 15:22:45.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:22:45.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:22:45.596
  I0420 15:22:45.731921 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-374" for this suite. @ 04/20/24 15:22:45.739
• [0.211 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 04/20/24 15:22:45.757
  I0420 15:22:45.757308 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 15:22:45.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:22:45.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:22:45.795
  STEP: Creating pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568 @ 04/20/24 15:22:45.8
  E0420 15:22:46.267895      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:47.268545      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 15:22:47.829
  I0420 15:22:47.836366 13 container_probe.go:1749] Initial restart count of pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 is 0
  I0420 15:22:47.842371 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:22:48.269007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:49.269265      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:22:49.851156 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:22:50.269838      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:51.270399      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:22:51.859563 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:22:52.270859      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:53.271229      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:22:53.867701 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:22:54.272182      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:55.272772      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:22:55.875888 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:22:56.273139      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:57.273962      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:22:57.883586 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:22:58.274055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:22:59.274316      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:22:59.892462 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:00.275093      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:01.276303      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:01.908700 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:02.276459      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:03.277139      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:03.927639 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:04.278487      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:05.278693      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:05.934395 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:06.278970      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:07.279634      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:07.943564 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:08.280015      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:09.280994      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:09.950426 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:10.282040      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:11.282576      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:11.956823 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:12.283562      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:13.284688      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:13.964471 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:14.285159      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:15.286132      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:15.973389 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:16.286670      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:17.288164      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:17.981372 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:18.287783      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:19.288097      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:19.989035 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:20.289065      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:21.289591      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:21.999138 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:22.289919      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:23.290545      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:24.008939 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:24.291832      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:25.291218      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:26.018474 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:26.296797      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:27.296897      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:28.030469 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:28.294429      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:29.295899      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:30.042631 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:30.296556      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:31.297626      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:32.050181 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:32.298246      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:33.299382      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:34.061075 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:34.300100      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:35.301282      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:36.073950 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:36.301464      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:37.301473      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:38.083670 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:38.302110      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:39.302754      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:40.093496 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:40.303752      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:41.304583      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:42.103568 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:42.305660      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:43.306675      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:44.111620 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:44.306918      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:45.307936      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:46.119949 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:46.308299      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:47.309231      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:48.134946 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:48.309607      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:49.310205      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:50.143526 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:50.310862      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:51.311016      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:52.151288 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:52.312121      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:53.312496      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:54.159507 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:54.312843      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:55.313223      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:56.166429 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:56.313988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:57.314157      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:23:58.175930 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:23:58.315124      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:23:59.315648      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:00.183051 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:00.316366      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:01.316903      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:02.191607 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:02.318049      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:03.319045      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:04.201682 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:04.319859      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:05.320376      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:06.210686 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:06.321628      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:07.322269      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:08.218207 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:08.322350      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:09.322843      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:10.227284 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:10.323461      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:11.324266      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:12.235366 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:12.325491      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:13.326351      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:14.246681 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:14.327002      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:15.327206      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:16.254137 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:16.327927      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:17.328674      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:18.264608 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:18.329042      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:19.329697      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:20.272086 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:20.330138      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:21.330662      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:22.280069 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:22.331379      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:23.332403      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:24.288010 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:24.333184      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:25.333963      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:26.296819 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:26.334001      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:27.334466      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:28.304806 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:28.334979      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:29.335562      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:30.315642 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:30.336365      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:31.337151      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:32.330800 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:32.337766      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:33.338017      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:34.338367      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:34.341299 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:35.338459      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:36.339416      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:36.349779 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:37.339454      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:38.339251      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:38.362588 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:39.339550      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:40.339849      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:40.372667 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:41.340186      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:42.340170      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:42.381476 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:43.341154      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:44.344542      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:44.394472 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:45.344105      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:46.344811      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:46.402406 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:47.344915      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:48.346081      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:48.411291 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:49.346140      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:50.346334      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:50.420894 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:51.346593      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:52.347035      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:52.429213 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:53.347195      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:54.347671      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:54.437853 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:55.347810      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:56.348585      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:56.446402 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:57.349156      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:24:58.349209      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:24:58.454441 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:24:59.349795      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:00.349675      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:00.464361 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:01.350154      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:02.350410      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:02.473690 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:03.351009      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:04.351311      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:04.482578 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:05.351358      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:06.351659      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:06.493950 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:07.351911      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:08.352061      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:08.502781 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:09.352296      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:10.355253      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:10.513552 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:11.355247      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:12.355510      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:12.522322 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:13.356632      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:14.357090      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:14.535151 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:15.357070      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:16.358851      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:16.546979 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:17.358897      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:18.359878      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:18.554099 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:19.360034      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:20.360176      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:20.563134 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:21.360381      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:22.361666      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:22.571336 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:23.362482      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:24.363082      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:24.581524 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:25.363350      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:26.363457      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:26.589516 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:27.364081      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:28.364172      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:28.599907 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:29.364096      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:30.365251      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:30.608436 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:31.365781      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:32.365797      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:32.618490 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:33.365972      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:34.367244      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:34.626491 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:35.366772      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:36.367289      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:36.636871 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:37.367926      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:38.367777      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:38.645368 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:39.368340      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:40.368421      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:40.656839 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:41.368629      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:42.370611      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:42.672811 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:43.370116      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:44.370973      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:44.681124 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:45.370883      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:46.372867      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:46.716152 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:47.372531      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:48.378503      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:48.725653 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:49.379173      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:50.378777      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:50.734390 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:51.379126      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:52.379270      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:52.743992 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:53.379884      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:54.379937      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:54.752566 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:55.380139      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:56.380694      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:56.760250 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:57.381570      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:25:58.382061      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:25:58.769265 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:25:59.383066      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:00.383831      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:00.777672 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:01.384431      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:02.384379      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:02.787936 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:03.384597      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:04.385443      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:04.795106 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:05.386571      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:06.386914      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:06.805125 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:07.387947      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:08.388390      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:08.812609 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:09.388404      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:10.389346      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:10.822385 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:11.390223      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:12.390453      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:12.833912 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:13.391324      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:14.392140      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:14.842606 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:15.393041      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:16.393580      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:16.853619 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:17.394497      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:18.395524      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:18.866240 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:19.395683      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:20.396530      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:20.875655 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:21.397364      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:22.398198      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:22.885456 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:23.399037      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:24.399977      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:24.894082 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:25.401202      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:26.401373      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:26.901874 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:27.401583      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:28.402533      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:28.911278 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:29.402840      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:30.403356      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:30.921630 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:31.404234      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:32.405102      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:32.929189 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:33.405536      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:34.406175      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:34.942041 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:35.407197      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:36.407778      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:36.951653 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:37.408094      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:38.409158      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:38.963095 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:39.409282      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:40.410117      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:40.973429 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:41.410961      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:42.411040      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:42.980526 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:43.411237      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:44.411325      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:44.992331 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:45.411798      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:46.412116      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:46.999995 13 container_probe.go:1759] Get pod busybox-098dbaf9-9594-47d9-96b1-7851d7acd234 in namespace container-probe-2568
  E0420 15:26:47.412311      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:48.413748      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/20/24 15:26:49.001
  I0420 15:26:49.036240 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2568" for this suite. @ 04/20/24 15:26:49.051
• [243.306 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 04/20/24 15:26:49.066
  I0420 15:26:49.067103 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 15:26:49.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:26:49.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:26:49.119
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 04/20/24 15:26:49.125
  I0420 15:26:49.127986 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 15:26:49.413882      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:50.414476      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:51.203778 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 15:26:51.415662      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:52.416036      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:53.417029      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:54.417442      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:55.418187      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:56.419254      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:57.420259      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:26:58.421202      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:26:59.236417 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8399" for this suite. @ 04/20/24 15:26:59.257
• [10.217 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 04/20/24 15:26:59.284
  I0420 15:26:59.284534 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename crd-webhook @ 04/20/24 15:26:59.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:26:59.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:26:59.335
  STEP: Setting up server cert @ 04/20/24 15:26:59.34
  E0420 15:26:59.422034      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/20/24 15:27:00.38
  STEP: Deploying the custom resource conversion webhook pod @ 04/20/24 15:27:00.396
  E0420 15:27:00.423017      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 04/20/24 15:27:00.431
  I0420 15:27:00.461224 13 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0420 15:27:01.424075      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:02.424950      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:27:02.488
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:27:02.512
  E0420 15:27:03.425584      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:27:03.513164 13 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0420 15:27:03.529046 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 15:27:04.426260      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:05.427246      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 04/20/24 15:27:06.399
  STEP: v2 custom resource should be converted @ 04/20/24 15:27:06.412
  E0420 15:27:06.429474      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:27:07.123392 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5357" for this suite. @ 04/20/24 15:27:07.138
• [7.871 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 04/20/24 15:27:07.156
  I0420 15:27:07.156288 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 15:27:07.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:27:07.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:27:07.21
  STEP: Creating Pod @ 04/20/24 15:27:07.221
  E0420 15:27:07.429759      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:08.430356      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 04/20/24 15:27:09.264
  I0420 15:27:09.264383 13 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-4190 PodName:pod-sharedvolume-ee3a1f80-fee4-4ddd-a367-ad957dd4406a ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 15:27:09.264472 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 15:27:09.266684 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 15:27:09.266973 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/emptydir-4190/pods/pod-sharedvolume-ee3a1f80-fee4-4ddd-a367-ad957dd4406a/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I0420 15:27:09.401503 13 exec_util.go:106] Exec stderr: ""
  I0420 15:27:09.401876 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4190" for this suite. @ 04/20/24 15:27:09.415
• [2.272 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  E0420 15:27:09.430167      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a kubernetes client @ 04/20/24 15:27:09.43
  I0420 15:27:09.430902 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 15:27:09.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:27:09.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:27:09.476
  I0420 15:27:09.483420 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 15:27:10.430705      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 04/20/24 15:27:11.261
  I0420 15:27:11.262223 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-1244 --namespace=crd-publish-openapi-1244 create -f -'
  E0420 15:27:11.431374      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:27:11.682069 13 builder.go:146] stderr: ""
  I0420 15:27:11.682216 13 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4416-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0420 15:27:11.683061 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-1244 --namespace=crd-publish-openapi-1244 delete e2e-test-crd-publish-openapi-4416-crds test-foo'
  I0420 15:27:11.891745 13 builder.go:146] stderr: ""
  I0420 15:27:11.891877 13 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4416-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0420 15:27:11.892401 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-1244 --namespace=crd-publish-openapi-1244 apply -f -'
  I0420 15:27:12.182309 13 builder.go:146] stderr: ""
  I0420 15:27:12.182420 13 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4416-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0420 15:27:12.183047 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-1244 --namespace=crd-publish-openapi-1244 delete e2e-test-crd-publish-openapi-4416-crds test-foo'
  I0420 15:27:12.398083 13 builder.go:146] stderr: ""
  I0420 15:27:12.398176 13 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4416-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 04/20/24 15:27:12.398
  I0420 15:27:12.398942 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-1244 --namespace=crd-publish-openapi-1244 create -f -'
  E0420 15:27:12.432025      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:27:12.570865 13 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 04/20/24 15:27:12.571
  I0420 15:27:12.571821 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-1244 --namespace=crd-publish-openapi-1244 create -f -'
  I0420 15:27:12.767310 13 builder.go:135] rc: 1
  I0420 15:27:12.768106 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-1244 --namespace=crd-publish-openapi-1244 apply -f -'
  I0420 15:27:12.945008 13 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 04/20/24 15:27:12.945
  I0420 15:27:12.945932 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-1244 --namespace=crd-publish-openapi-1244 create -f -'
  I0420 15:27:13.109434 13 builder.go:135] rc: 1
  I0420 15:27:13.109969 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-1244 --namespace=crd-publish-openapi-1244 apply -f -'
  I0420 15:27:13.309492 13 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 04/20/24 15:27:13.309
  I0420 15:27:13.309957 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-1244 explain e2e-test-crd-publish-openapi-4416-crds'
  E0420 15:27:13.432890      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:27:13.475052 13 builder.go:146] stderr: ""
  I0420 15:27:13.475210 13 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4416-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 04/20/24 15:27:13.476
  I0420 15:27:13.476405 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-1244 explain e2e-test-crd-publish-openapi-4416-crds.metadata'
  I0420 15:27:13.633945 13 builder.go:146] stderr: ""
  I0420 15:27:13.634464 13 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4416-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0420 15:27:13.635233 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-1244 explain e2e-test-crd-publish-openapi-4416-crds.spec'
  I0420 15:27:13.816874 13 builder.go:146] stderr: ""
  I0420 15:27:13.819085 13 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4416-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0420 15:27:13.821570 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-1244 explain e2e-test-crd-publish-openapi-4416-crds.spec.bars'
  I0420 15:27:13.987683 13 builder.go:146] stderr: ""
  I0420 15:27:13.988178 13 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4416-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 04/20/24 15:27:13.989
  I0420 15:27:13.990471 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-1244 explain e2e-test-crd-publish-openapi-4416-crds.spec.bars2'
  I0420 15:27:14.150297 13 builder.go:135] rc: 1
  E0420 15:27:14.433363      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:15.434214      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:27:16.039877 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1244" for this suite. @ 04/20/24 15:27:16.065
• [6.648 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 04/20/24 15:27:16.079
  I0420 15:27:16.079997 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename volumeattachment @ 04/20/24 15:27:16.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:27:16.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:27:16.124
  STEP: Create VolumeAttachment "va-e2e-wq7bd" on node "ier3chochiph-1" @ 04/20/24 15:27:16.138
  STEP: Get VolumeAttachment "va-e2e-wq7bd" on node "ier3chochiph-1" @ 04/20/24 15:27:16.147
  STEP: Patch VolumeAttachment "va-e2e-wq7bd" on node "ier3chochiph-1" @ 04/20/24 15:27:16.153
  STEP: List VolumeAttachments with "va-e2e-wq7bd=patched" label @ 04/20/24 15:27:16.164
  STEP: Delete VolumeAttachment "va-e2e-wq7bd" on node "ier3chochiph-1" @ 04/20/24 15:27:16.169
  STEP: Confirm deletion of VolumeAttachment "va-e2e-wq7bd" on node "ier3chochiph-1" @ 04/20/24 15:27:16.181
  STEP: Create VolumeAttachment "va-e2e-xtxrw" on node "ier3chochiph-2" @ 04/20/24 15:27:16.203
  STEP: Update the VolumeAttachment "va-e2e-xtxrw" on node "ier3chochiph-2" with label "va-e2e=updated" @ 04/20/24 15:27:16.212
  STEP: Create VolumeAttachment "va-e2e-54cqx" on node "ier3chochiph-2" @ 04/20/24 15:27:16.242
  STEP: Update the VolumeAttachment "va-e2e-54cqx" on node "ier3chochiph-2" with label "va-e2e=updated" @ 04/20/24 15:27:16.251
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 04/20/24 15:27:16.267
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 04/20/24 15:27:16.291
  I0420 15:27:16.296135 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-4033" for this suite. @ 04/20/24 15:27:16.303
• [0.236 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 04/20/24 15:27:16.316
  I0420 15:27:16.316103 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename deployment @ 04/20/24 15:27:16.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:27:16.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:27:16.351
  I0420 15:27:16.357241 13 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0420 15:27:16.369565 13 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0420 15:27:16.398428 13 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  E0420 15:27:16.434381      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:17.445343      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:27:18.420270 13 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0420 15:27:18.427914 13 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  E0420 15:27:18.436011      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:27:18.455279 13 deployment.go:313] Updating deployment test-recreate-deployment
  I0420 15:27:18.455397 13 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0420 15:27:18.672370 13 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9477",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6197cce7-9bdd-4994-bb54-5878fe98d272",
      ResourceVersion: (string) (len=5) "71675",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849223636,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223636,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-66b65d9f8f\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0420 15:27:18.715148 13 deployment.go:39] New ReplicaSet "test-recreate-deployment-66b65d9f8f" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9477",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33ed0e91-cae7-48d2-a48e-1cf43f8ef9e1",
      ResourceVersion: (string) (len=5) "71673",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849223638,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "6197cce7-9bdd-4994-bb54-5878fe98d272",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 31 39 37 63 63  65 37 2d 39 62 64 64 2d  |\"6197cce7-9bdd-|
              00000120  34 39 39 34 2d 62 62 35  34 2d 35 38 37 38 66 65  |4994-bb54-5878fe|
              00000130  39 38 64 32 37 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |98d272\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0420 15:27:18.720429 13 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0420 15:27:18.721100 13 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-6b6d9cd7b6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9477",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "714725d9-6cb2-4376-b746-8adafa4778f8",
      ResourceVersion: (string) (len=5) "71663",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849223636,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "6197cce7-9bdd-4994-bb54-5878fe98d272",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 31 39 37 63 63  65 37 2d 39 62 64 64 2d  |\"6197cce7-9bdd-|
              00000120  34 39 39 34 2d 62 62 35  34 2d 35 38 37 38 66 65  |4994-bb54-5878fe|
              00000130  39 38 64 32 37 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |98d272\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0420 15:27:18.737945 13 deployment.go:67] Pod "test-recreate-deployment-66b65d9f8f-pbzgh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-66b65d9f8f-pbzgh",
      GenerateName: (string) (len=36) "test-recreate-deployment-66b65d9f8f-",
      Namespace: (string) (len=15) "deployment-9477",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "81345a51-b586-4c9e-b364-85d5d19ffd89",
      ResourceVersion: (string) (len=5) "71672",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849223638,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
          UID: (types.UID) (len=36) "33ed0e91-cae7-48d2-a48e-1cf43f8ef9e1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 33  65 64 30 65 39 31 2d 63  |d\":\"33ed0e91-c|
              00000090  61 65 37 2d 34 38 64 32  2d 61 34 38 65 2d 31 63  |ae7-48d2-a48e-1c|
              000000a0  66 34 33 66 38 65 66 39  65 31 5c 22 7d 22 3a 7b  |f43f8ef9e1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d7gs9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d7gs9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849223638,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849223638,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:27:18.743892 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9477" for this suite. @ 04/20/24 15:27:18.755
• [2.454 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 04/20/24 15:27:18.772
  I0420 15:27:18.772504 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 15:27:18.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:27:18.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:27:18.818
  I0420 15:27:18.828556 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 15:27:19.435910      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:20.436605      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/20/24 15:27:20.526
  I0420 15:27:20.526855 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-8826 --namespace=crd-publish-openapi-8826 create -f -'
  I0420 15:27:20.861111 13 builder.go:146] stderr: ""
  I0420 15:27:20.861271 13 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4409-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0420 15:27:20.861598 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-8826 --namespace=crd-publish-openapi-8826 delete e2e-test-crd-publish-openapi-4409-crds test-cr'
  I0420 15:27:21.025320 13 builder.go:146] stderr: ""
  I0420 15:27:21.025412 13 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4409-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0420 15:27:21.025923 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-8826 --namespace=crd-publish-openapi-8826 apply -f -'
  I0420 15:27:21.221229 13 builder.go:146] stderr: ""
  I0420 15:27:21.221312 13 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4409-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0420 15:27:21.222112 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-8826 --namespace=crd-publish-openapi-8826 delete e2e-test-crd-publish-openapi-4409-crds test-cr'
  I0420 15:27:21.417669 13 builder.go:146] stderr: ""
  I0420 15:27:21.417799 13 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4409-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 04/20/24 15:27:21.417
  I0420 15:27:21.418952 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=crd-publish-openapi-8826 explain e2e-test-crd-publish-openapi-4409-crds'
  E0420 15:27:21.441614      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:27:21.629267 13 builder.go:146] stderr: ""
  I0420 15:27:21.629642 13 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-4409-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0420 15:27:22.439136      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:23.441390      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:27:23.542252 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8826" for this suite. @ 04/20/24 15:27:23.56
• [4.802 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 04/20/24 15:27:23.575
  I0420 15:27:23.575954 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename runtimeclass @ 04/20/24 15:27:23.579
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:27:23.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:27:23.613
  I0420 15:27:23.679126 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8052" for this suite. @ 04/20/24 15:27:23.687
• [0.126 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 04/20/24 15:27:23.702
  I0420 15:27:23.702270 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 15:27:23.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:27:23.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:27:23.786
  STEP: Creating service test in namespace statefulset-9925 @ 04/20/24 15:27:23.792
  STEP: Creating statefulset ss in namespace statefulset-9925 @ 04/20/24 15:27:23.818
  I0420 15:27:23.850647 13 wait.go:40] Found 0 stateful pods, waiting for 1
  E0420 15:27:24.442081      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:25.442992      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:26.443227      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:27.444164      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:28.444818      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:29.445581      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:30.446023      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:31.446811      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:32.447990      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:33.448057      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:27:33.851691 13 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 04/20/24 15:27:33.866
  STEP: Getting /status @ 04/20/24 15:27:33.886
  I0420 15:27:33.896131 13 statefulset.go:1067] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 04/20/24 15:27:33.896
  I0420 15:27:33.913895 13 statefulset.go:1087] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 04/20/24 15:27:33.914
  I0420 15:27:33.920308 13 statefulset.go:1115] Observed &StatefulSet event: ADDED
  I0420 15:27:33.920416 13 statefulset.go:1108] Found Statefulset ss in namespace statefulset-9925 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0420 15:27:33.920460 13 statefulset.go:1119] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 04/20/24 15:27:33.92
  I0420 15:27:33.920517 13 statefulset.go:1123] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0420 15:27:33.933667 13 statefulset.go:1127] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 04/20/24 15:27:33.933
  I0420 15:27:33.940178 13 statefulset.go:1152] Observed &StatefulSet event: ADDED
  I0420 15:27:33.940514 13 statefulset.go:135] Deleting all statefulset in ns statefulset-9925
  I0420 15:27:33.947932 13 rest.go:150] Scaling statefulset ss to 0
  E0420 15:27:34.449034      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:35.449355      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:36.449637      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:37.449948      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:38.450874      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:39.451223      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:40.451361      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:41.451601      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:42.451675      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:43.452021      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:27:43.975926 13 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0420 15:27:43.983429 13 rest.go:88] Deleting statefulset ss
  I0420 15:27:44.019616 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9925" for this suite. @ 04/20/24 15:27:44.028
• [20.345 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 04/20/24 15:27:44.048
  I0420 15:27:44.048293 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename subjectreview @ 04/20/24 15:27:44.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:27:44.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:27:44.093
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-3126" @ 04/20/24 15:27:44.097
  I0420 15:27:44.108083 13 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-3126:e2e"
  I0420 15:27:44.108189 13 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-3126"}
  I0420 15:27:44.108214 13 subjectreviews.go:71] saUID: "5ed4e0c5-925e-4e5b-a4c4-2c3305095b2c"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-3126:e2e" @ 04/20/24 15:27:44.108
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-3126:e2e" @ 04/20/24 15:27:44.108
  I0420 15:27:44.114416 13 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-3126:e2e" api 'list' configmaps in "subjectreview-3126" namespace @ 04/20/24 15:27:44.114
  I0420 15:27:44.116880 13 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-3126:e2e" @ 04/20/24 15:27:44.116
  I0420 15:27:44.121092 13 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0420 15:27:44.121143 13 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0420 15:27:44.121273 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-3126" for this suite. @ 04/20/24 15:27:44.135
• [0.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 04/20/24 15:27:44.164
  I0420 15:27:44.164503 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename pods @ 04/20/24 15:27:44.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:27:44.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:27:44.234
  STEP: creating a Pod with a static label @ 04/20/24 15:27:44.253
  STEP: watching for Pod to be ready @ 04/20/24 15:27:44.285
  I0420 15:27:44.294746 13 pods.go:945] observed Pod pod-test in namespace pods-7641 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0420 15:27:44.294852 13 pods.go:945] observed Pod pod-test in namespace pods-7641 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:27:44 +0000 UTC  }]
  I0420 15:27:44.329942 13 pods.go:945] observed Pod pod-test in namespace pods-7641 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:27:44 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:27:44 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:27:44 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:27:44 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:27:44 +0000 UTC  }]
  E0420 15:27:44.453029      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:27:45.110155 13 pods.go:948] Found Pod pod-test in namespace pods-7641 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:27:45 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:27:44 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:27:45 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:27:45 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-20 15:27:44 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 04/20/24 15:27:45.121
  STEP: getting the Pod and ensuring that it's patched @ 04/20/24 15:27:45.138
  STEP: replacing the Pod's status Ready condition to False @ 04/20/24 15:27:45.144
  STEP: check the Pod again to ensure its Ready conditions are False @ 04/20/24 15:27:45.166
  STEP: deleting the Pod via a Collection with a LabelSelector @ 04/20/24 15:27:45.166
  STEP: watching for the Pod to be deleted @ 04/20/24 15:27:45.183
  I0420 15:27:45.186288 13 pods.go:1058] observed event type MODIFIED
  E0420 15:27:45.453617      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:46.454526      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:27:47.133340 13 pods.go:1058] observed event type MODIFIED
  I0420 15:27:47.239492 13 pods.go:1058] observed event type MODIFIED
  E0420 15:27:47.455313      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:27:48.140475 13 pods.go:1058] observed event type MODIFIED
  I0420 15:27:48.227446 13 pods.go:1058] observed event type MODIFIED
  I0420 15:27:48.240414 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7641" for this suite. @ 04/20/24 15:27:48.249
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2240
  STEP: Creating a kubernetes client @ 04/20/24 15:27:48.271
  I0420 15:27:48.271766 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename services @ 04/20/24 15:27:48.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:27:48.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:27:48.315
  STEP: creating service in namespace services-3313 @ 04/20/24 15:27:48.321
  STEP: creating service affinity-nodeport-transition in namespace services-3313 @ 04/20/24 15:27:48.321
  STEP: creating replication controller affinity-nodeport-transition in namespace services-3313 @ 04/20/24 15:27:48.351
  I0420 15:27:48.375675      13 runners.go:198] Created replication controller with name: affinity-nodeport-transition, namespace: services-3313, replica count: 3
  E0420 15:27:48.456247      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:49.456596      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:50.457459      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:27:51.427327      13 runners.go:198] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0420 15:27:51.448999 13 resource.go:361] Creating new exec pod
  E0420 15:27:51.457437      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:52.458450      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:53.458354      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:54.458521      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:27:54.487987 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-3313 exec execpod-affinitymjr74 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0420 15:27:54.865851 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I0420 15:27:54.865975 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0420 15:27:54.866385 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-3313 exec execpod-affinitymjr74 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.54.150 80'
  I0420 15:27:55.175950 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.54.150 80\nConnection to 10.233.54.150 80 port [tcp/http] succeeded!\n"
  I0420 15:27:55.176049 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0420 15:27:55.176487 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-3313 exec execpod-affinitymjr74 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.188 30202'
  I0420 15:27:55.433223 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.188 30202\nConnection to 192.168.121.188 30202 port [tcp/*] succeeded!\n"
  I0420 15:27:55.433317 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0420 15:27:55.433767 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-3313 exec execpod-affinitymjr74 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.103 30202'
  E0420 15:27:55.459052      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:27:55.667029 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.103 30202\nConnection to 192.168.121.103 30202 port [tcp/*] succeeded!\n"
  I0420 15:27:55.667128 13 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0420 15:27:55.687546 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-3313 exec execpod-affinitymjr74 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.80:30202/ ; done'
  I0420 15:27:56.173672 13 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n"
  I0420 15:27:56.173829 13 builder.go:147] stdout: "\naffinity-nodeport-transition-r4r4n\naffinity-nodeport-transition-pxxpk\naffinity-nodeport-transition-r4r4n\naffinity-nodeport-transition-r4r4n\naffinity-nodeport-transition-r4r4n\naffinity-nodeport-transition-pxxpk\naffinity-nodeport-transition-gkdpr\naffinity-nodeport-transition-r4r4n\naffinity-nodeport-transition-pxxpk\naffinity-nodeport-transition-gkdpr\naffinity-nodeport-transition-r4r4n\naffinity-nodeport-transition-gkdpr\naffinity-nodeport-transition-r4r4n\naffinity-nodeport-transition-gkdpr\naffinity-nodeport-transition-pxxpk\naffinity-nodeport-transition-r4r4n"
  I0420 15:27:56.173876 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.173898 13 service.go:242] Received response from host: affinity-nodeport-transition-pxxpk
  I0420 15:27:56.173973 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.174014 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.174053 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.174094 13 service.go:242] Received response from host: affinity-nodeport-transition-pxxpk
  I0420 15:27:56.174112 13 service.go:242] Received response from host: affinity-nodeport-transition-gkdpr
  I0420 15:27:56.174128 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.174164 13 service.go:242] Received response from host: affinity-nodeport-transition-pxxpk
  I0420 15:27:56.174187 13 service.go:242] Received response from host: affinity-nodeport-transition-gkdpr
  I0420 15:27:56.174203 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.174219 13 service.go:242] Received response from host: affinity-nodeport-transition-gkdpr
  I0420 15:27:56.174235 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.174252 13 service.go:242] Received response from host: affinity-nodeport-transition-gkdpr
  I0420 15:27:56.174267 13 service.go:242] Received response from host: affinity-nodeport-transition-pxxpk
  I0420 15:27:56.174307 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.227925 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-3313 exec execpod-affinitymjr74 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.80:30202/ ; done'
  E0420 15:27:56.460059      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:27:56.654759 13 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.80:30202/\n"
  I0420 15:27:56.654907 13 builder.go:147] stdout: "\naffinity-nodeport-transition-r4r4n\naffinity-nodeport-transition-r4r4n\naffinity-nodeport-transition-r4r4n\naffinity-nodeport-transition-r4r4n\naffinity-nodeport-transition-r4r4n\naffinity-nodeport-transition-r4r4n\naffinity-nodeport-transition-r4r4n\naffinity-nodeport-transition-r4r4n\naffinity-nodeport-transition-r4r4n\naffinity-nodeport-transition-r4r4n\naffinity-nodeport-transition-r4r4n\naffinity-nodeport-transition-r4r4n\naffinity-nodeport-transition-r4r4n\naffinity-nodeport-transition-r4r4n\naffinity-nodeport-transition-r4r4n\naffinity-nodeport-transition-r4r4n"
  I0420 15:27:56.654958 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.654983 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.655000 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.655017 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.655033 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.655049 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.655065 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.655080 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.655137 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.655155 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.655170 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.655199 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.655217 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.655232 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.655248 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.655264 13 service.go:242] Received response from host: affinity-nodeport-transition-r4r4n
  I0420 15:27:56.655396 13 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-3313, will wait for the garbage collector to delete the pods @ 04/20/24 15:27:56.68
  I0420 15:27:56.756835 13 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 16.807155ms
  I0420 15:27:56.857586 13 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.73743ms
  E0420 15:27:57.460178      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:58.461240      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:27:59.461640      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:27:59.710356 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3313" for this suite. @ 04/20/24 15:27:59.719
• [11.465 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 04/20/24 15:27:59.737
  I0420 15:27:59.737339 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/20/24 15:27:59.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:27:59.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:27:59.781
  I0420 15:27:59.786330 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 15:28:00.462406      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:01.463104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:02.463256      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:03.463570      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:04.463861      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:05.464096      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:28:06.326973 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8042" for this suite. @ 04/20/24 15:28:06.336
• [6.615 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 04/20/24 15:28:06.358
  I0420 15:28:06.358608 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename secrets @ 04/20/24 15:28:06.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:28:06.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:28:06.419
  E0420 15:28:06.464018      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating secret with name secret-test-d0b4bb8f-4c74-47ae-afd4-3d7411bf7a44 @ 04/20/24 15:28:06.482
  STEP: Creating a pod to test consume secrets @ 04/20/24 15:28:06.494
  E0420 15:28:07.464302      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:08.465551      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:09.465756      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:10.466426      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:28:10.568
  I0420 15:28:10.577704 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-secrets-dbc758fb-8456-4b8c-abeb-ade0b1a9e938 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 15:28:10.614
  I0420 15:28:10.648008 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2988" for this suite. @ 04/20/24 15:28:10.662
  STEP: Destroying namespace "secret-namespace-3858" for this suite. @ 04/20/24 15:28:10.672
• [4.371 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:766
  STEP: Creating a kubernetes client @ 04/20/24 15:28:10.73
  I0420 15:28:10.730945 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:28:10.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:28:10.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:28:10.773
  STEP: Setting up server cert @ 04/20/24 15:28:10.82
  E0420 15:28:11.467468      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:28:11.49
  STEP: Deploying the webhook pod @ 04/20/24 15:28:11.507
  STEP: Wait for the deployment to be ready @ 04/20/24 15:28:11.534
  I0420 15:28:11.554741 13 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0420 15:28:12.467803      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:13.468796      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:28:13.579
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:28:13.613
  E0420 15:28:14.469589      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:28:14.614075 13 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 04/20/24 15:28:14.626
  STEP: verifying the mutating webhook match conditions @ 04/20/24 15:28:14.666
  STEP: updating the mutating webhook match conditions @ 04/20/24 15:28:14.674
  STEP: verifying the mutating webhook match conditions @ 04/20/24 15:28:14.738
  I0420 15:28:14.869671 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8349" for this suite. @ 04/20/24 15:28:14.877
  STEP: Destroying namespace "webhook-markers-9547" for this suite. @ 04/20/24 15:28:14.892
• [4.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 04/20/24 15:28:14.92
  I0420 15:28:14.920305 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename cronjob @ 04/20/24 15:28:14.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:28:14.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:28:14.974
  STEP: Creating a cronjob @ 04/20/24 15:28:14.98
  STEP: Ensuring more than one job is running at a time @ 04/20/24 15:28:14.99
  E0420 15:28:15.470791      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:16.471306      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:17.472693      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:18.474135      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:19.474977      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:20.475687      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:21.476148      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:22.476459      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:23.476635      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:24.477198      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:25.478276      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:26.479033      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:27.479642      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:28.479985      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:29.480474      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:30.480831      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:31.482066      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:32.482987      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:33.483493      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:34.483975      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:35.484871      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:36.485888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:37.486051      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:38.486664      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:39.487392      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:40.488141      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:41.488334      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:42.488571      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:43.489109      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:44.490422      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:45.491696      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:46.491399      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:47.492461      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:48.493055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:49.493489      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:50.494180      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:51.494430      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:52.495710      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:53.496796      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:54.497339      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:55.505805      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:56.498364      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:57.498381      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:58.498666      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:28:59.500090      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:00.500633      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:01.501962      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:02.501862      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:03.503232      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:04.504066      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:05.503980      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:06.504142      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:07.504429      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:08.505274      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:09.505465      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:10.506111      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:11.506739      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:12.507194      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:13.507546      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:14.509430      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:15.508946      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:16.509776      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:17.509931      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:18.511190      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:19.512269      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:20.512478      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:21.513383      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:22.513594      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:23.513859      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:24.515451      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:25.515351      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:26.515610      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:27.516027      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:28.516360      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:29.516990      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:30.517228      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:31.517477      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:32.517662      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:33.518171      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:34.518116      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:35.519239      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:36.519401      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:37.520405      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:38.521384      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:39.521587      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:40.522106      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:41.523239      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:42.524077      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:43.524895      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:44.525626      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:45.525836      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:46.526102      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:47.526873      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:48.527502      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:49.528103      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:50.529239      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:51.529521      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:52.530135      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:53.530854      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:54.531656      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:55.532083      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:56.532701      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:57.533618      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:58.534387      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:29:59.534862      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:00.535226      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 04/20/24 15:30:01.001
  STEP: Removing cronjob @ 04/20/24 15:30:01.01
  I0420 15:30:01.029707 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1409" for this suite. @ 04/20/24 15:30:01.042
• [106.137 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 04/20/24 15:30:01.06
  I0420 15:30:01.060781 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename containers @ 04/20/24 15:30:01.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:30:01.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:30:01.169
  E0420 15:30:01.535615      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:02.536066      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:30:03.266681 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3725" for this suite. @ 04/20/24 15:30:03.278
• [2.237 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 04/20/24 15:30:03.296
  I0420 15:30:03.296454 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 15:30:03.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:30:03.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:30:03.344
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/20/24 15:30:03.35
  E0420 15:30:03.536812      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:04.537443      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:05.538605      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:06.538616      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:30:07.408
  I0420 15:30:07.413763 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-4ab99297-97ec-45a5-b470-8d534d2193c2 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 15:30:07.426
  I0420 15:30:07.452587 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2535" for this suite. @ 04/20/24 15:30:07.461
• [4.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:697
  STEP: Creating a kubernetes client @ 04/20/24 15:30:07.472
  I0420 15:30:07.472525 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename job @ 04/20/24 15:30:07.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:30:07.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:30:07.514
  STEP: Creating a job @ 04/20/24 15:30:07.519
  STEP: Ensuring active pods == parallelism @ 04/20/24 15:30:07.529
  E0420 15:30:07.539055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:08.540346      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:09.540870      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 04/20/24 15:30:09.542
  I0420 15:30:10.072528 13 pod_client.go:141] Successfully updated pod "adopt-release-5r4km"
  STEP: Checking that the Job readopts the Pod @ 04/20/24 15:30:10.072
  E0420 15:30:10.540805      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:11.540962      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 04/20/24 15:30:12.09
  E0420 15:30:12.541612      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:30:12.617013 13 pod_client.go:141] Successfully updated pod "adopt-release-5r4km"
  STEP: Checking that the Job releases the Pod @ 04/20/24 15:30:12.617
  E0420 15:30:13.542523      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:14.543331      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:30:14.633246 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8447" for this suite. @ 04/20/24 15:30:14.644
• [7.183 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 04/20/24 15:30:14.655
  I0420 15:30:14.655351 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/20/24 15:30:14.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:30:14.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:30:14.736
  STEP: create the container to handle the HTTPGet hook request. @ 04/20/24 15:30:14.759
  E0420 15:30:15.543130      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:16.543624      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/20/24 15:30:16.802
  E0420 15:30:17.543931      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:18.544213      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 04/20/24 15:30:18.836
  STEP: delete the pod with lifecycle hook @ 04/20/24 15:30:18.852
  E0420 15:30:19.544905      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:20.544979      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:30:20.883445 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1584" for this suite. @ 04/20/24 15:30:20.893
• [6.250 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 04/20/24 15:30:20.906
  I0420 15:30:20.906604 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/20/24 15:30:20.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:30:20.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:30:20.958
  I0420 15:30:20.967431 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 15:30:21.545920      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:22.546941      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:23.547446      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:30:24.271488 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1909" for this suite. @ 04/20/24 15:30:24.283
• [3.396 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 04/20/24 15:30:24.302
  I0420 15:30:24.302793 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 15:30:24.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:30:24.359
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:30:24.364
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 15:30:24.376
  E0420 15:30:24.548003      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:25.548789      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:26.549826      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:27.550384      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:30:28.452
  I0420 15:30:28.462284 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod downwardapi-volume-a3020ad3-2165-442a-8c73-379b5ddadc2a container client-container: <nil>
  STEP: delete the pod @ 04/20/24 15:30:28.485
  I0420 15:30:28.527554 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2537" for this suite. @ 04/20/24 15:30:28.537
  E0420 15:30:28.551425      13 retrywatcher.go:129] "Watch failed" err="context canceled"
• [4.250 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 04/20/24 15:30:28.553
  I0420 15:30:28.553311 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename kubelet-test @ 04/20/24 15:30:28.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:30:28.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:30:28.623
  I0420 15:30:28.698354 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5599" for this suite. @ 04/20/24 15:30:28.726
• [0.196 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 04/20/24 15:30:28.75
  I0420 15:30:28.750317 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 15:30:28.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:30:28.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:30:28.864
  I0420 15:30:28.872868 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-6048 create -f -'
  I0420 15:30:29.313558 13 builder.go:146] stderr: ""
  I0420 15:30:29.313647 13 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0420 15:30:29.314367 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-6048 create -f -'
  E0420 15:30:29.558460      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:30:29.729166 13 builder.go:146] stderr: ""
  I0420 15:30:29.729340 13 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/20/24 15:30:29.73
  E0420 15:30:30.552661      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:30:30.741628 13 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0420 15:30:30.741758 13 framework.go:733] Found 0 / 1
  E0420 15:30:31.553520      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:30:31.740223 13 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0420 15:30:31.740313 13 framework.go:733] Found 1 / 1
  I0420 15:30:31.740373 13 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0420 15:30:31.747106 13 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0420 15:30:31.747191 13 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0420 15:30:31.747472 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-6048 describe pod agnhost-primary-s5wq8'
  I0420 15:30:31.952333 13 builder.go:146] stderr: ""
  I0420 15:30:31.952925 13 builder.go:147] stdout: "Name:             agnhost-primary-s5wq8\nNamespace:        kubectl-6048\nPriority:         0\nService Account:  default\nNode:             ier3chochiph-3/192.168.121.103\nStart Time:       Sat, 20 Apr 2024 15:30:29 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.233.66.7\nIPs:\n  IP:           10.233.66.7\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   cri-o://2f7056de7e63b5488cf5adeccfa374ef8cdc95d756d32607c94bba37b23cabad\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sat, 20 Apr 2024 15:30:30 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-56ctz (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-56ctz:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-6048/agnhost-primary-s5wq8 to ier3chochiph-3\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I0420 15:30:31.953319 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-6048 describe rc agnhost-primary'
  I0420 15:30:32.214236 13 builder.go:146] stderr: ""
  I0420 15:30:32.216083 13 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-6048\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-s5wq8\n"
  I0420 15:30:32.218465 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-6048 describe service agnhost-primary'
  I0420 15:30:32.408287 13 builder.go:146] stderr: ""
  I0420 15:30:32.408381 13 builder.go:147] stdout: "Name:              agnhost-primary\nNamespace:         kubectl-6048\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.233.37.79\nIPs:               10.233.37.79\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.233.66.7:6379\nSession Affinity:  None\nEvents:            <none>\n"
  I0420 15:30:32.426369 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-6048 describe node ier3chochiph-1'
  E0420 15:30:32.554188      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:30:32.646943 13 builder.go:146] stderr: ""
  I0420 15:30:32.647690 13 builder.go:147] stdout: "Name:               ier3chochiph-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ier3chochiph-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"aa:5a:74:43:c2:03\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 192.168.121.80\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/crio/crio.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sat, 20 Apr 2024 09:14:00 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ier3chochiph-1\n  AcquireTime:     <unset>\n  RenewTime:       Sat, 20 Apr 2024 15:30:28 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sat, 20 Apr 2024 14:11:35 +0000   Sat, 20 Apr 2024 14:11:35 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Sat, 20 Apr 2024 15:26:18 +0000   Sat, 20 Apr 2024 13:53:00 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sat, 20 Apr 2024 15:26:18 +0000   Sat, 20 Apr 2024 13:53:00 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sat, 20 Apr 2024 15:26:18 +0000   Sat, 20 Apr 2024 13:53:00 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sat, 20 Apr 2024 15:26:18 +0000   Sat, 20 Apr 2024 14:04:31 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.121.80\n  Hostname:    ier3chochiph-1\nCapacity:\n  cpu:                    2\n  ephemeral-storage:      115008636Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 8132676Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    1600m\n  ephemeral-storage:      111880401014\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 3283012Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                 b7f98f2deb844ed88b795de148bab9c5\n  System UUID:                b7f98f2d-eb84-4ed8-8b79-5de148bab9c5\n  Boot ID:                    ec94b19b-c7f1-4683-bb21-38bfb1a2cd8c\n  Kernel Version:             6.8.0-28-generic\n  OS Image:                   Ubuntu Noble Numbat (development branch)\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  cri-o://1.30.0\n  Kubelet Version:            v1.30.0\n  Kube-Proxy Version:         v1.30.0\nPodCIDR:                      10.233.64.0/24\nPodCIDRs:                     10.233.64.0/24\nNon-terminated Pods:          (8 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-7db6d8ff4d-9bjg9                                   100m (6%)     0 (0%)      70Mi (2%)        170Mi (5%)     79m\n  kube-system                 kube-addon-manager-ier3chochiph-1                          5m (0%)       0 (0%)      50Mi (1%)        0 (0%)         77m\n  kube-system                 kube-apiserver-ier3chochiph-1                              250m (15%)    0 (0%)      0 (0%)           0 (0%)         77m\n  kube-system                 kube-controller-manager-ier3chochiph-1                     200m (12%)    0 (0%)      0 (0%)           0 (0%)         77m\n  kube-system                 kube-flannel-ds-mzt2f                                      100m (6%)     0 (0%)      50Mi (1%)        0 (0%)         79m\n  kube-system                 kube-proxy-lkdx8                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         79m\n  kube-system                 kube-scheduler-ier3chochiph-1                              100m (6%)     0 (0%)      0 (0%)           0 (0%)         77m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-a313837afcd448ea-mhmwj    0 (0%)        0 (0%)      0 (0%)           0 (0%)         78m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests    Limits\n  --------               --------    ------\n  cpu                    755m (47%)  0 (0%)\n  memory                 170Mi (5%)  170Mi (5%)\n  ephemeral-storage      0 (0%)      0 (0%)\n  hugepages-1Gi          0 (0%)      0 (0%)\n  hugepages-2Mi          0 (0%)      0 (0%)\n  scheduling.k8s.io/foo  0           0\nEvents:                  <none>\n"
  I0420 15:30:32.648413 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-6048 describe namespace kubectl-6048'
  I0420 15:30:32.892291 13 builder.go:146] stderr: ""
  I0420 15:30:32.893390 13 builder.go:147] stdout: "Name:         kubectl-6048\nLabels:       e2e-framework=kubectl\n              e2e-run=9a36eee0-7f1f-4334-ad28-c2cfc42afe95\n              kubernetes.io/metadata.name=kubectl-6048\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0420 15:30:32.895812 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6048" for this suite. @ 04/20/24 15:30:32.913
• [4.180 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 04/20/24 15:30:32.931
  I0420 15:30:32.931391 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 15:30:32.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:30:32.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:30:32.989
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/20/24 15:30:32.994
  E0420 15:30:33.554153      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:34.556317      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:35.556797      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:36.557321      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:30:37.047
  I0420 15:30:37.056141 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-6f4f2f63-3e1a-484d-a51d-4572ab1f3dd0 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 15:30:37.08
  I0420 15:30:37.125664 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8155" for this suite. @ 04/20/24 15:30:37.142
• [4.228 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 04/20/24 15:30:37.159
  I0420 15:30:37.159900 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/20/24 15:30:37.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:30:37.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:30:37.2
  STEP: Creating two CSIDrivers @ 04/20/24 15:30:37.205
  STEP: Getting "inline-driver-33ef969b-e175-4e8c-8fbf-f32a9fde2868" & "inline-driver-d45720a7-f87c-403a-84d0-bc5a6d854a64" @ 04/20/24 15:30:37.237
  STEP: Patching the CSIDriver "inline-driver-d45720a7-f87c-403a-84d0-bc5a6d854a64" @ 04/20/24 15:30:37.249
  STEP: Updating the CSIDriver "inline-driver-d45720a7-f87c-403a-84d0-bc5a6d854a64" @ 04/20/24 15:30:37.26
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-796" @ 04/20/24 15:30:37.278
  STEP: Deleting CSIDriver "inline-driver-33ef969b-e175-4e8c-8fbf-f32a9fde2868" @ 04/20/24 15:30:37.286
  STEP: Confirm deletion of CSIDriver "inline-driver-33ef969b-e175-4e8c-8fbf-f32a9fde2868" @ 04/20/24 15:30:37.299
  STEP: Deleting CSIDriver "inline-driver-d45720a7-f87c-403a-84d0-bc5a6d854a64" via DeleteCollection @ 04/20/24 15:30:37.307
  STEP: Confirm deletion of CSIDriver "inline-driver-d45720a7-f87c-403a-84d0-bc5a6d854a64" @ 04/20/24 15:30:37.326
  I0420 15:30:37.333950 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-796" for this suite. @ 04/20/24 15:30:37.344
• [0.202 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 04/20/24 15:30:37.362
  I0420 15:30:37.362146 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename daemonsets @ 04/20/24 15:30:37.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:30:37.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:30:37.409
  STEP: Creating simple DaemonSet "daemon-set" @ 04/20/24 15:30:37.455
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 15:30:37.467
  I0420 15:30:37.484338 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0420 15:30:37.484427 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  E0420 15:30:37.558828      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:30:38.496943 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0420 15:30:38.497034 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  E0420 15:30:38.559851      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:30:39.496028 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0420 15:30:39.496614 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  E0420 15:30:39.560567      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:30:40.484080 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0420 15:30:40.484166 13 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 04/20/24 15:30:40.489
  STEP: DeleteCollection of the DaemonSets @ 04/20/24 15:30:40.495
  STEP: Verify that ReplicaSets have been deleted @ 04/20/24 15:30:40.511
  I0420 15:30:40.552205 13 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"72884"},"items":null}

  E0420 15:30:40.560686      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:30:40.563942 13 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"72884"},"items":[{"metadata":{"name":"daemon-set-2f4xg","generateName":"daemon-set-","namespace":"daemonsets-8103","uid":"582d724b-1fcc-471c-a949-0561ac77f9e9","resourceVersion":"72884","creationTimestamp":"2024-04-20T15:30:37Z","deletionTimestamp":"2024-04-20T15:31:10Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"f542929e-2ff9-4af7-ab59-b2458d0eb5bd","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-20T15:30:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f542929e-2ff9-4af7-ab59-b2458d0eb5bd\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-20T15:30:39Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.66.9\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-f8wbd","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-f8wbd","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ier3chochiph-3","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ier3chochiph-3"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:30:39Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:30:37Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:30:39Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:30:39Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:30:37Z"}],"hostIP":"192.168.121.103","hostIPs":[{"ip":"192.168.121.103"}],"podIP":"10.233.66.9","podIPs":[{"ip":"10.233.66.9"}],"startTime":"2024-04-20T15:30:37Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-20T15:30:38Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://3b9058b645f2bc9c1978af430626381d705db715236ac573613110645bbd84ad","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-7wq2p","generateName":"daemon-set-","namespace":"daemonsets-8103","uid":"ffb62a68-a309-47b9-872f-e3ed4b79a870","resourceVersion":"72881","creationTimestamp":"2024-04-20T15:30:37Z","deletionTimestamp":"2024-04-20T15:31:10Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"f542929e-2ff9-4af7-ab59-b2458d0eb5bd","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-20T15:30:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f542929e-2ff9-4af7-ab59-b2458d0eb5bd\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-20T15:30:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.64.236\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-fdlb4","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-fdlb4","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ier3chochiph-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ier3chochiph-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:30:40Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:30:37Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:30:40Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:30:40Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:30:37Z"}],"hostIP":"192.168.121.80","hostIPs":[{"ip":"192.168.121.80"}],"podIP":"10.233.64.236","podIPs":[{"ip":"10.233.64.236"}],"startTime":"2024-04-20T15:30:37Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-20T15:30:39Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://0bfa2078016d3af8f2cc4496bdfb2f0d5a39abf461946bd21afbe2ecca2a9958","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-cgjkr","generateName":"daemon-set-","namespace":"daemonsets-8103","uid":"8411a006-3440-40fa-bf4e-0b59ecc050ef","resourceVersion":"72882","creationTimestamp":"2024-04-20T15:30:37Z","deletionTimestamp":"2024-04-20T15:31:10Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"f542929e-2ff9-4af7-ab59-b2458d0eb5bd","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-20T15:30:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f542929e-2ff9-4af7-ab59-b2458d0eb5bd\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-20T15:30:39Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.65.221\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-nl4dt","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-nl4dt","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ier3chochiph-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ier3chochiph-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:30:39Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:30:37Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:30:39Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:30:39Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-20T15:30:37Z"}],"hostIP":"192.168.121.188","hostIPs":[{"ip":"192.168.121.188"}],"podIP":"10.233.65.221","podIPs":[{"ip":"10.233.65.221"}],"startTime":"2024-04-20T15:30:37Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-20T15:30:38Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://ee4e9f014e94267e38976b9d9868b7ae8518615c8da06ab7a74de3d1eb676e3c","started":true}],"qosClass":"BestEffort"}}]}

  I0420 15:30:40.590773 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8103" for this suite. @ 04/20/24 15:30:40.597
• [3.246 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 04/20/24 15:30:40.608
  I0420 15:30:40.608142 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 15:30:40.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:30:40.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:30:40.643
  STEP: Creating namespace "e2e-ns-mvk5q" @ 04/20/24 15:30:40.648
  I0420 15:30:40.669260 13 namespace.go:411] Namespace "e2e-ns-mvk5q-8141" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-mvk5q-8141" @ 04/20/24 15:30:40.669
  I0420 15:30:40.683866 13 namespace.go:434] Namespace "e2e-ns-mvk5q-8141" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-mvk5q-8141" @ 04/20/24 15:30:40.683
  I0420 15:30:40.699878 13 namespace.go:463] Namespace "e2e-ns-mvk5q-8141" has []v1.FinalizerName{"kubernetes"}
  I0420 15:30:40.700125 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4344" for this suite. @ 04/20/24 15:30:40.708
  STEP: Destroying namespace "e2e-ns-mvk5q-8141" for this suite. @ 04/20/24 15:30:40.719
• [0.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 04/20/24 15:30:40.742
  I0420 15:30:40.742078 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 15:30:40.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:30:40.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:30:40.777
  I0420 15:30:40.782483 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  W0420 15:30:40.789436      13 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc005391df0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0420 15:30:41.561908      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:42.562099      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0420 15:30:43.553787      13 warnings.go:70] unknown field "alpha"
  W0420 15:30:43.553869      13 warnings.go:70] unknown field "beta"
  W0420 15:30:43.553882      13 warnings.go:70] unknown field "delta"
  W0420 15:30:43.553892      13 warnings.go:70] unknown field "epsilon"
  W0420 15:30:43.553902      13 warnings.go:70] unknown field "gamma"
  E0420 15:30:43.563019      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:30:44.148780 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8917" for this suite. @ 04/20/24 15:30:44.158
• [3.433 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 04/20/24 15:30:44.174
  I0420 15:30:44.174589 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename security-context-test @ 04/20/24 15:30:44.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:30:44.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:30:44.226
  E0420 15:30:44.563363      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:45.563517      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:46.564634      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:47.565089      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:30:48.327413 13 security_context.go:538] Got logs for pod "busybox-privileged-false-cb47a3da-8100-400e-b793-df03fe2b59eb": "ip: RTNETLINK answers: Operation not permitted\n"
  I0420 15:30:48.327928 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1730" for this suite. @ 04/20/24 15:30:48.337
• [4.178 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 04/20/24 15:30:48.352
  I0420 15:30:48.352897 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/20/24 15:30:48.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:30:48.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:30:48.406
  STEP: Creating 50 configmaps @ 04/20/24 15:30:48.422
  E0420 15:30:48.565944      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 04/20/24 15:30:48.88
  I0420 15:30:48.906916 13 resource.go:87] Pod name wrapped-volume-race-0c391f82-b60a-4dd3-9e56-05c9a23c7b28: Found 0 pods out of 5
  E0420 15:30:49.565943      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:50.566514      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:51.567381      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:52.567988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:53.568063      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:30:53.933139 13 resource.go:87] Pod name wrapped-volume-race-0c391f82-b60a-4dd3-9e56-05c9a23c7b28: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/20/24 15:30:53.933
  STEP: Creating RC which spawns configmap-volume pods @ 04/20/24 15:30:54.002
  I0420 15:30:54.041147 13 resource.go:87] Pod name wrapped-volume-race-0d92241c-f9e6-463d-8954-33876106693b: Found 0 pods out of 5
  E0420 15:30:54.568961      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:55.569544      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:56.570165      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:57.570341      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:30:58.570432      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:30:59.065467 13 resource.go:87] Pod name wrapped-volume-race-0d92241c-f9e6-463d-8954-33876106693b: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/20/24 15:30:59.065
  STEP: Creating RC which spawns configmap-volume pods @ 04/20/24 15:30:59.133
  I0420 15:30:59.185416 13 resource.go:87] Pod name wrapped-volume-race-984b2f67-176a-4ff9-9db6-e1b16b69f7e9: Found 0 pods out of 5
  E0420 15:30:59.571810      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:00.572657      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:01.573614      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:02.574154      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:03.574963      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:31:04.211619 13 resource.go:87] Pod name wrapped-volume-race-984b2f67-176a-4ff9-9db6-e1b16b69f7e9: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/20/24 15:31:04.211
  STEP: deleting ReplicationController wrapped-volume-race-984b2f67-176a-4ff9-9db6-e1b16b69f7e9 in namespace emptydir-wrapper-6636, will wait for the garbage collector to delete the pods @ 04/20/24 15:31:04.282
  I0420 15:31:04.362212 13 resources.go:139] Deleting ReplicationController wrapped-volume-race-984b2f67-176a-4ff9-9db6-e1b16b69f7e9 took: 16.987035ms
  I0420 15:31:04.463573 13 resources.go:163] Terminating ReplicationController wrapped-volume-race-984b2f67-176a-4ff9-9db6-e1b16b69f7e9 pods took: 101.357094ms
  E0420 15:31:04.575816      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:05.576685      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-0d92241c-f9e6-463d-8954-33876106693b in namespace emptydir-wrapper-6636, will wait for the garbage collector to delete the pods @ 04/20/24 15:31:06.065
  I0420 15:31:06.138507 13 resources.go:139] Deleting ReplicationController wrapped-volume-race-0d92241c-f9e6-463d-8954-33876106693b took: 14.0076ms
  I0420 15:31:06.239173 13 resources.go:163] Terminating ReplicationController wrapped-volume-race-0d92241c-f9e6-463d-8954-33876106693b pods took: 100.661931ms
  E0420 15:31:06.577031      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:07.577499      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:08.578257      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-0c391f82-b60a-4dd3-9e56-05c9a23c7b28 in namespace emptydir-wrapper-6636, will wait for the garbage collector to delete the pods @ 04/20/24 15:31:08.639
  I0420 15:31:08.711740 13 resources.go:139] Deleting ReplicationController wrapped-volume-race-0c391f82-b60a-4dd3-9e56-05c9a23c7b28 took: 12.220512ms
  I0420 15:31:08.812169 13 resources.go:163] Terminating ReplicationController wrapped-volume-race-0c391f82-b60a-4dd3-9e56-05c9a23c7b28 pods took: 100.425965ms
  E0420 15:31:09.579456      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:10.580619      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 04/20/24 15:31:10.713
  I0420 15:31:11.556586 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-6636" for this suite. @ 04/20/24 15:31:11.566
• [23.225 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 04/20/24 15:31:11.579
  I0420 15:31:11.579524 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 15:31:11.580903      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/20/24 15:31:11.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:31:11.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:31:11.618
  I0420 15:31:11.623866 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 15:31:12.581133      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:31:12.665404 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3650" for this suite. @ 04/20/24 15:31:12.677
• [1.110 seconds]
------------------------------
S
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 04/20/24 15:31:12.689
  I0420 15:31:12.689953 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename ingressclass @ 04/20/24 15:31:12.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:31:12.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:31:12.734
  STEP: getting /apis @ 04/20/24 15:31:12.739
  STEP: getting /apis/networking.k8s.io @ 04/20/24 15:31:12.748
  STEP: getting /apis/networking.k8s.iov1 @ 04/20/24 15:31:12.751
  STEP: creating @ 04/20/24 15:31:12.753
  STEP: getting @ 04/20/24 15:31:12.805
  STEP: listing @ 04/20/24 15:31:12.817
  STEP: watching @ 04/20/24 15:31:12.825
  I0420 15:31:12.825401 13 ingressclass.go:348] starting watch
  STEP: patching @ 04/20/24 15:31:12.827
  STEP: updating @ 04/20/24 15:31:12.838
  I0420 15:31:12.852331 13 ingressclass.go:364] waiting for watch events with expected annotations
  I0420 15:31:12.852417 13 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 04/20/24 15:31:12.852
  STEP: deleting a collection @ 04/20/24 15:31:12.89
  I0420 15:31:12.940284 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-8969" for this suite. @ 04/20/24 15:31:12.958
• [0.287 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:601
  STEP: Creating a kubernetes client @ 04/20/24 15:31:12.976
  I0420 15:31:12.976931 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename job @ 04/20/24 15:31:12.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:31:13.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:31:13.011
  STEP: Creating a job @ 04/20/24 15:31:13.017
  STEP: Ensuring job reaches completions @ 04/20/24 15:31:13.027
  E0420 15:31:13.582129      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:14.583525      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:15.583304      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:16.583452      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:17.583609      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:18.584109      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:19.585931      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:20.586054      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:21.586434      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:22.588777      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:31:23.038674 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1858" for this suite. @ 04/20/24 15:31:23.045
• [10.082 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 04/20/24 15:31:23.06
  I0420 15:31:23.060372 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename pods @ 04/20/24 15:31:23.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:31:23.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:31:23.114
  STEP: creating pod @ 04/20/24 15:31:23.121
  E0420 15:31:23.588089      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:24.588504      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:31:25.169827 13 pods.go:83] Pod pod-hostip-9595218e-884f-45ef-835b-0fe0507de4a1 has hostIP: 192.168.121.103
  I0420 15:31:25.170054 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2577" for this suite. @ 04/20/24 15:31:25.179
• [2.136 seconds]
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 04/20/24 15:31:25.196
  I0420 15:31:25.196926 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename pods @ 04/20/24 15:31:25.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:31:25.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:31:25.24
  STEP: Create set of pods @ 04/20/24 15:31:25.245
  I0420 15:31:25.261125 13 pods.go:871] created test-pod-1
  I0420 15:31:25.283798 13 pods.go:871] created test-pod-2
  I0420 15:31:25.319461 13 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 04/20/24 15:31:25.319
  E0420 15:31:25.588785      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:26.589783      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 04/20/24 15:31:27.425
  I0420 15:31:27.434257 13 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0420 15:31:27.590512      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:31:28.435228 13 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0420 15:31:28.591079      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:31:29.435352 13 pods.go:1140] Pod quantity 1 is different from expected quantity 0
  E0420 15:31:29.591221      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:31:30.438231 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9775" for this suite. @ 04/20/24 15:31:30.449
• [5.267 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 04/20/24 15:31:30.464
  I0420 15:31:30.464535 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename watch @ 04/20/24 15:31:30.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:31:30.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:31:30.518
  STEP: getting a starting resourceVersion @ 04/20/24 15:31:30.534
  STEP: starting a background goroutine to produce watch events @ 04/20/24 15:31:30.549
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 04/20/24 15:31:30.55
  E0420 15:31:30.593041      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:31.593090      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:32.593542      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:31:33.282293 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9651" for this suite. @ 04/20/24 15:31:33.332
• [2.922 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 04/20/24 15:31:33.387
  I0420 15:31:33.387249 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 15:31:33.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:31:33.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:31:33.427
  STEP: Counting existing ResourceQuota @ 04/20/24 15:31:33.432
  E0420 15:31:33.594224      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:34.594895      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:35.595567      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:36.596118      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:37.596402      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/20/24 15:31:38.441
  STEP: Ensuring resource quota status is calculated @ 04/20/24 15:31:38.456
  E0420 15:31:38.596846      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:39.597655      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 04/20/24 15:31:40.465
  STEP: Ensuring ResourceQuota status captures the pod usage @ 04/20/24 15:31:40.504
  E0420 15:31:40.598320      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:41.599301      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 04/20/24 15:31:42.515
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 04/20/24 15:31:42.521
  STEP: Ensuring a pod cannot update its resource requirements @ 04/20/24 15:31:42.527
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 04/20/24 15:31:42.536
  E0420 15:31:42.599650      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:43.600411      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/20/24 15:31:44.545
  STEP: Ensuring resource quota status released the pod usage @ 04/20/24 15:31:44.574
  E0420 15:31:44.601053      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:45.601512      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:31:46.598467 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0420 15:31:46.602131      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "resourcequota-4625" for this suite. @ 04/20/24 15:31:46.607
• [13.234 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 04/20/24 15:31:46.622
  I0420 15:31:46.622092 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename podtemplate @ 04/20/24 15:31:46.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:31:46.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:31:46.656
  I0420 15:31:46.778770 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-513" for this suite. @ 04/20/24 15:31:46.791
• [0.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 04/20/24 15:31:46.805
  I0420 15:31:46.805593 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 15:31:46.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:31:46.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:31:46.846
  STEP: Creating service test in namespace statefulset-4729 @ 04/20/24 15:31:46.851
  STEP: Looking for a node to schedule stateful set and pod @ 04/20/24 15:31:46.864
  STEP: Creating pod with conflicting port in namespace statefulset-4729 @ 04/20/24 15:31:46.877
  STEP: Waiting until pod test-pod will start running in namespace statefulset-4729 @ 04/20/24 15:31:46.897
  E0420 15:31:47.603093      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:48.604051      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-4729 @ 04/20/24 15:31:48.915
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-4729 @ 04/20/24 15:31:48.928
  I0420 15:31:48.953196 13 statefulset.go:866] Observed stateful pod in namespace: statefulset-4729, name: ss-0, uid: bc437c52-e72d-4c80-aac7-684daea15984, status phase: Pending. Waiting for statefulset controller to delete.
  I0420 15:31:48.985282 13 statefulset.go:866] Observed stateful pod in namespace: statefulset-4729, name: ss-0, uid: bc437c52-e72d-4c80-aac7-684daea15984, status phase: Failed. Waiting for statefulset controller to delete.
  I0420 15:31:49.003132 13 statefulset.go:866] Observed stateful pod in namespace: statefulset-4729, name: ss-0, uid: bc437c52-e72d-4c80-aac7-684daea15984, status phase: Failed. Waiting for statefulset controller to delete.
  I0420 15:31:49.014503 13 statefulset.go:860] Observed delete event for stateful pod ss-0 in namespace statefulset-4729
  STEP: Removing pod with conflicting port in namespace statefulset-4729 @ 04/20/24 15:31:49.014
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-4729 and will be in running state @ 04/20/24 15:31:49.041
  E0420 15:31:49.605041      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:50.605251      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:31:51.064012 13 statefulset.go:135] Deleting all statefulset in ns statefulset-4729
  I0420 15:31:51.071922 13 rest.go:150] Scaling statefulset ss to 0
  E0420 15:31:51.606237      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:52.606780      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:53.607606      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:54.607645      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:55.608233      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:56.608848      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:57.609520      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:58.609567      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:31:59.609909      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:00.610381      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:32:01.123454 13 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0420 15:32:01.129419 13 rest.go:88] Deleting statefulset ss
  I0420 15:32:01.156104 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4729" for this suite. @ 04/20/24 15:32:01.172
• [14.379 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 04/20/24 15:32:01.185
  I0420 15:32:01.185674 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename events @ 04/20/24 15:32:01.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:32:01.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:32:01.229
  STEP: Create set of events @ 04/20/24 15:32:01.235
  I0420 15:32:01.246810 13 core_events.go:198] created test-event-1
  I0420 15:32:01.256123 13 core_events.go:198] created test-event-2
  I0420 15:32:01.264093 13 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 04/20/24 15:32:01.264
  STEP: delete collection of events @ 04/20/24 15:32:01.27
  I0420 15:32:01.270873 13 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/20/24 15:32:01.31
  I0420 15:32:01.310570 13 core_events.go:230] requesting list of events to confirm quantity
  I0420 15:32:01.316648 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7880" for this suite. @ 04/20/24 15:32:01.323
• [0.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 04/20/24 15:32:01.333
  I0420 15:32:01.333978 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:32:01.336
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:32:01.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:32:01.374
  STEP: Setting up server cert @ 04/20/24 15:32:01.415
  E0420 15:32:01.611540      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:32:02.607
  E0420 15:32:02.612229      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook pod @ 04/20/24 15:32:02.634
  STEP: Wait for the deployment to be ready @ 04/20/24 15:32:02.684
  I0420 15:32:02.782249 13 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0420 15:32:03.613418      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:04.618016      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:32:04.807
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:32:04.833
  E0420 15:32:05.614877      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:32:05.833550 13 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/20/24 15:32:05.852
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/20/24 15:32:05.888
  STEP: Creating a dummy validating-webhook-configuration object @ 04/20/24 15:32:05.922
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 04/20/24 15:32:05.947
  STEP: Creating a dummy mutating-webhook-configuration object @ 04/20/24 15:32:05.962
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 04/20/24 15:32:05.98
  I0420 15:32:06.171650 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9063" for this suite. @ 04/20/24 15:32:06.192
  STEP: Destroying namespace "webhook-markers-4328" for this suite. @ 04/20/24 15:32:06.222
• [4.914 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 04/20/24 15:32:06.249
  I0420 15:32:06.249346 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:32:06.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:32:06.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:32:06.308
  STEP: Creating configMap with name projected-configmap-test-volume-04cb85d2-29ef-4b6f-92fb-13349c8f9a4f @ 04/20/24 15:32:06.315
  STEP: Creating a pod to test consume configMaps @ 04/20/24 15:32:06.327
  E0420 15:32:06.615057      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:07.615636      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:08.615492      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:09.615876      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:32:10.381
  I0420 15:32:10.389537 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-projected-configmaps-6e36f658-540d-445d-94d4-bb5ac0362018 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 15:32:10.404
  I0420 15:32:10.428407 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8903" for this suite. @ 04/20/24 15:32:10.437
• [4.199 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 04/20/24 15:32:10.451
  I0420 15:32:10.451140 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 15:32:10.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:32:10.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:32:10.484
  STEP: Updating Namespace "namespaces-4843" @ 04/20/24 15:32:10.49
  I0420 15:32:10.505232 13 namespace.go:389] Namespace "namespaces-4843" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"9a36eee0-7f1f-4334-ad28-c2cfc42afe95", "kubernetes.io/metadata.name":"namespaces-4843", "namespaces-4843":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0420 15:32:10.505418 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4843" for this suite. @ 04/20/24 15:32:10.513
• [0.075 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1537
  STEP: Creating a kubernetes client @ 04/20/24 15:32:10.525
  I0420 15:32:10.525871 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename services @ 04/20/24 15:32:10.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:32:10.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:32:10.557
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-2283 @ 04/20/24 15:32:10.562
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/20/24 15:32:10.588
  STEP: creating service externalsvc in namespace services-2283 @ 04/20/24 15:32:10.588
  E0420 15:32:10.617105      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating replication controller externalsvc in namespace services-2283 @ 04/20/24 15:32:10.618
  I0420 15:32:10.639007      13 runners.go:198] Created replication controller with name: externalsvc, namespace: services-2283, replica count: 2
  E0420 15:32:11.618580      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:12.618612      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:13.618783      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:32:13.692391      13 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 04/20/24 15:32:13.7
  I0420 15:32:13.733029 13 resource.go:361] Creating new exec pod
  E0420 15:32:14.619170      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:15.619852      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:32:15.771351 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-2283 exec execpodcw9m7 -- /bin/sh -x -c nslookup nodeport-service.services-2283.svc.cluster.local'
  I0420 15:32:16.290026 13 builder.go:146] stderr: "+ nslookup nodeport-service.services-2283.svc.cluster.local\n"
  I0420 15:32:16.290168 13 builder.go:147] stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nnodeport-service.services-2283.svc.cluster.local\tcanonical name = externalsvc.services-2283.svc.cluster.local.\nName:\texternalsvc.services-2283.svc.cluster.local\nAddress: 10.233.37.110\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-2283, will wait for the garbage collector to delete the pods @ 04/20/24 15:32:16.29
  I0420 15:32:16.366606 13 resources.go:139] Deleting ReplicationController externalsvc took: 15.002015ms
  I0420 15:32:16.466953 13 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.334282ms
  E0420 15:32:16.620831      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:17.621244      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:18.622252      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:19.623163      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:32:19.843328 13 service.go:1548] Cleaning up the NodePort to ExternalName test service
  I0420 15:32:19.899928 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2283" for this suite. @ 04/20/24 15:32:19.923
• [9.455 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 04/20/24 15:32:19.981
  I0420 15:32:19.981352 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 15:32:19.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:32:20.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:32:20.033
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 15:32:20.039
  E0420 15:32:20.624232      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:21.624503      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:22.625293      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:23.625680      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:32:24.085
  I0420 15:32:24.093500 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod downwardapi-volume-0f3aca52-ff5b-4dac-9f40-fbb334ee476a container client-container: <nil>
  STEP: delete the pod @ 04/20/24 15:32:24.105
  I0420 15:32:24.145906 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9316" for this suite. @ 04/20/24 15:32:24.154
• [4.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 04/20/24 15:32:24.175
  I0420 15:32:24.175539 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename pods @ 04/20/24 15:32:24.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:32:24.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:32:24.251
  E0420 15:32:24.626876      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:25.627568      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:26.628799      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:27.628882      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:28.630065      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:29.630227      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:32:30.407
  I0420 15:32:30.426006 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod client-envvars-94ef75d7-5882-45a7-a357-82fc66cbd727 container env3cont: <nil>
  STEP: delete the pod @ 04/20/24 15:32:30.462
  I0420 15:32:30.492739 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8547" for this suite. @ 04/20/24 15:32:30.507
• [6.344 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 04/20/24 15:32:30.522
  I0420 15:32:30.522465 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename configmap @ 04/20/24 15:32:30.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:32:30.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:32:30.553
  STEP: Creating configMap with name configmap-test-volume-map-b7fdbc3c-44f7-4f13-9b53-a86deb259638 @ 04/20/24 15:32:30.558
  STEP: Creating a pod to test consume configMaps @ 04/20/24 15:32:30.565
  E0420 15:32:30.631199      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:31.632073      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:32.632753      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:33.632971      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:32:34.603
  I0420 15:32:34.608274 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-configmaps-378ba05b-e9c4-4985-920d-71193315a407 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 15:32:34.621
  E0420 15:32:34.633334      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:32:34.660561 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8504" for this suite. @ 04/20/24 15:32:34.669
• [4.160 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 04/20/24 15:32:34.683
  I0420 15:32:34.683976 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:32:34.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:32:34.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:32:34.746
  STEP: Creating configMap with name projected-configmap-test-volume-c90845e4-bb6f-4ba4-a549-211c7402f548 @ 04/20/24 15:32:34.751
  STEP: Creating a pod to test consume configMaps @ 04/20/24 15:32:34.765
  E0420 15:32:35.633517      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:36.634229      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:37.634662      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:38.635372      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:32:38.806
  I0420 15:32:38.813616 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-projected-configmaps-82a8bb75-599d-4c08-ba1b-591e6167a622 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 15:32:38.827
  I0420 15:32:38.858222 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5855" for this suite. @ 04/20/24 15:32:38.867
• [4.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 04/20/24 15:32:38.881
  I0420 15:32:38.881290 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 15:32:38.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:32:38.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:32:38.931
  STEP: Creating service test in namespace statefulset-2205 @ 04/20/24 15:32:38.942
  STEP: Creating statefulset ss in namespace statefulset-2205 @ 04/20/24 15:32:38.954
  I0420 15:32:38.984967 13 wait.go:40] Found 0 stateful pods, waiting for 1
  E0420 15:32:39.635665      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:40.635971      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:41.636954      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:42.637162      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:43.637355      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:44.637875      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:45.638102      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:46.638104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:47.638914      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:48.638976      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:32:48.983951 13 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0420 15:32:49.639140      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:50.640076      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:51.640516      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:52.640772      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:53.641016      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:54.642922      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:55.643426      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:56.643594      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:57.643829      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:32:58.644246      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:32:58.982530 13 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 04/20/24 15:32:58.997
  STEP: updating a scale subresource @ 04/20/24 15:32:59.005
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/20/24 15:32:59.016
  STEP: Patch a scale subresource @ 04/20/24 15:32:59.036
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/20/24 15:32:59.058
  I0420 15:32:59.087743 13 statefulset.go:135] Deleting all statefulset in ns statefulset-2205
  I0420 15:32:59.125577 13 rest.go:150] Scaling statefulset ss to 0
  E0420 15:32:59.645216      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:00.645437      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:01.645525      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:02.646020      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:03.646571      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:04.646930      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:05.647071      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:06.647440      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:07.648238      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:08.649140      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:33:09.198146 13 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0420 15:33:09.203645 13 rest.go:88] Deleting statefulset ss
  I0420 15:33:09.227990 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2205" for this suite. @ 04/20/24 15:33:09.237
• [30.371 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 04/20/24 15:33:09.255
  I0420 15:33:09.255656 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename field-validation @ 04/20/24 15:33:09.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:33:09.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:33:09.301
  STEP: apply creating a deployment @ 04/20/24 15:33:09.306
  I0420 15:33:09.333618 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6310" for this suite. @ 04/20/24 15:33:09.343
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 04/20/24 15:33:09.354
  I0420 15:33:09.354778 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 15:33:09.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:33:09.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:33:09.396
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 04/20/24 15:33:09.401
  E0420 15:33:09.649961      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:10.650416      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:33:11.436
  I0420 15:33:11.445298 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-7156510f-50b1-4e73-8ddb-4bb655212185 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 15:33:11.472
  I0420 15:33:11.514309 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7658" for this suite. @ 04/20/24 15:33:11.527
• [2.193 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 04/20/24 15:33:11.548
  I0420 15:33:11.548311 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename secrets @ 04/20/24 15:33:11.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:33:11.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:33:11.595
  STEP: creating a secret @ 04/20/24 15:33:11.601
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 04/20/24 15:33:11.61
  STEP: patching the secret @ 04/20/24 15:33:11.618
  STEP: deleting the secret using a LabelSelector @ 04/20/24 15:33:11.635
  E0420 15:33:11.650673      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 04/20/24 15:33:11.65
  I0420 15:33:11.657474 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2180" for this suite. @ 04/20/24 15:33:11.668
• [0.131 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 04/20/24 15:33:11.679
  I0420 15:33:11.679787 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/20/24 15:33:11.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:33:11.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:33:11.711
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 04/20/24 15:33:11.716
  I0420 15:33:11.717483 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 15:33:12.651380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:33:13.641070 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 15:33:13.651944      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:14.651782      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:15.652140      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:16.652244      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:17.652417      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:18.652963      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:19.653383      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:20.653804      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:33:21.059238 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3987" for this suite. @ 04/20/24 15:33:21.075
• [9.408 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 04/20/24 15:33:21.088
  I0420 15:33:21.088195 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 15:33:21.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:33:21.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:33:21.119
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 04/20/24 15:33:21.124
  I0420 15:33:21.139238 13 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0420 15:33:21.654292      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:22.654850      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:23.656020      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:24.656051      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:25.656533      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:33:26.147830 13 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 15:33:26.147
  STEP: getting scale subresource @ 04/20/24 15:33:26.147
  STEP: updating a scale subresource @ 04/20/24 15:33:26.155
  STEP: verifying the replicaset Spec.Replicas was modified @ 04/20/24 15:33:26.166
  STEP: Patch a scale subresource @ 04/20/24 15:33:26.173
  I0420 15:33:26.200314 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1629" for this suite. @ 04/20/24 15:33:26.221
• [5.177 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 04/20/24 15:33:26.267
  I0420 15:33:26.267670 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 15:33:26.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:33:26.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:33:26.314
  STEP: Creating a pod to test substitution in container's command @ 04/20/24 15:33:26.321
  E0420 15:33:26.656996      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:27.657460      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:28.657667      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:29.657877      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:33:30.376
  I0420 15:33:30.382893 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod var-expansion-fb7bcfa0-054d-41ef-a371-22591690966b container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 15:33:30.397
  I0420 15:33:30.423317 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2874" for this suite. @ 04/20/24 15:33:30.433
• [4.176 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 04/20/24 15:33:30.443
  I0420 15:33:30.443820 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 15:33:30.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:33:30.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:33:30.485
  STEP: Read namespace status @ 04/20/24 15:33:30.495
  I0420 15:33:30.510973 13 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 04/20/24 15:33:30.512
  I0420 15:33:30.535015 13 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 04/20/24 15:33:30.535
  I0420 15:33:30.561804 13 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0420 15:33:30.562108 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1553" for this suite. @ 04/20/24 15:33:30.579
• [0.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 04/20/24 15:33:30.605
  I0420 15:33:30.606041 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename controllerrevisions @ 04/20/24 15:33:30.609
  E0420 15:33:30.657988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:33:30.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:33:30.665
  STEP: Creating DaemonSet "e2e-wtsrn-daemon-set" @ 04/20/24 15:33:30.753
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/20/24 15:33:30.762
  I0420 15:33:30.778303 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-wtsrn-daemon-set: 0
  I0420 15:33:30.778383 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  E0420 15:33:31.659823      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:33:31.791844 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-wtsrn-daemon-set: 1
  I0420 15:33:31.791940 13 fixtures.go:130] Node ier3chochiph-1 is running 0 daemon pod, expected 1
  E0420 15:33:32.660058      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:33:32.780544 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-wtsrn-daemon-set: 3
  I0420 15:33:32.780636 13 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-wtsrn-daemon-set
  STEP: Confirm DaemonSet "e2e-wtsrn-daemon-set" successfully created with "daemonset-name=e2e-wtsrn-daemon-set" label @ 04/20/24 15:33:32.787
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-wtsrn-daemon-set" @ 04/20/24 15:33:32.811
  I0420 15:33:32.825471 13 controller_revision.go:162] Located ControllerRevision: "e2e-wtsrn-daemon-set-67db86665f"
  STEP: Patching ControllerRevision "e2e-wtsrn-daemon-set-67db86665f" @ 04/20/24 15:33:32.832
  I0420 15:33:32.849609 13 controller_revision.go:173] e2e-wtsrn-daemon-set-67db86665f has been patched
  STEP: Create a new ControllerRevision @ 04/20/24 15:33:32.849
  I0420 15:33:32.871293 13 controller_revision.go:191] Created ControllerRevision: e2e-wtsrn-daemon-set-76469459c7
  STEP: Confirm that there are two ControllerRevisions @ 04/20/24 15:33:32.871
  I0420 15:33:32.871476 13 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0420 15:33:32.878817 13 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-wtsrn-daemon-set-67db86665f" @ 04/20/24 15:33:32.878
  STEP: Confirm that there is only one ControllerRevision @ 04/20/24 15:33:32.898
  I0420 15:33:32.898881 13 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0420 15:33:32.908909 13 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-wtsrn-daemon-set-76469459c7" @ 04/20/24 15:33:32.915
  I0420 15:33:32.948755 13 controller_revision.go:220] e2e-wtsrn-daemon-set-76469459c7 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 04/20/24 15:33:32.948
  W0420 15:33:32.975434      13 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 04/20/24 15:33:32.975
  I0420 15:33:32.975699 13 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E0420 15:33:33.660831      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:33:33.976842 13 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0420 15:33:33.987523 13 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-wtsrn-daemon-set-76469459c7=updated" @ 04/20/24 15:33:33.987
  STEP: Confirm that there is only one ControllerRevision @ 04/20/24 15:33:34.037
  I0420 15:33:34.037806 13 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0420 15:33:34.049134 13 controller_revision.go:265] Found 1 ControllerRevisions
  I0420 15:33:34.063993 13 controller_revision.go:246] ControllerRevision "e2e-wtsrn-daemon-set-6567646b6d" has revision 3
  STEP: Deleting DaemonSet "e2e-wtsrn-daemon-set" @ 04/20/24 15:33:34.073
  STEP: deleting DaemonSet.extensions e2e-wtsrn-daemon-set in namespace controllerrevisions-856, will wait for the garbage collector to delete the pods @ 04/20/24 15:33:34.074
  I0420 15:33:34.164166 13 resources.go:139] Deleting DaemonSet.extensions e2e-wtsrn-daemon-set took: 24.297921ms
  I0420 15:33:34.365304 13 resources.go:163] Terminating DaemonSet.extensions e2e-wtsrn-daemon-set pods took: 201.110707ms
  E0420 15:33:34.661309      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:35.662360      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:33:36.175933 13 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-wtsrn-daemon-set: 0
  I0420 15:33:36.176018 13 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-wtsrn-daemon-set
  I0420 15:33:36.192453 13 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"74866"},"items":null}

  I0420 15:33:36.203675 13 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"74866"},"items":null}

  I0420 15:33:36.245461 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-856" for this suite. @ 04/20/24 15:33:36.267
• [5.698 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 04/20/24 15:33:36.304
  I0420 15:33:36.305025 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 15:33:36.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:33:36.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:33:36.345
  STEP: Creating pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170 @ 04/20/24 15:33:36.349
  E0420 15:33:36.662932      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:37.663520      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 15:33:38.377
  I0420 15:33:38.383143 13 container_probe.go:1749] Initial restart count of pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 is 0
  I0420 15:33:38.392235 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:33:38.664654      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:39.665222      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:33:40.398590 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:33:40.666182      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:41.666645      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:33:42.404941 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:33:42.667358      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:43.667652      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:33:44.413019 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:33:44.668373      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:45.669070      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:33:46.422584 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:33:46.670097      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:47.671061      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:33:48.429826 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:33:48.671562      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:49.672295      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:33:50.438093 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:33:50.672614      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:51.673391      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:33:52.447133 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:33:52.674476      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:53.675545      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:33:54.454053 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:33:54.676340      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:55.677081      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:33:56.462422 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:33:56.677836      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:57.678450      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:33:58.472607 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:33:58.679328      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:33:59.679444      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:00.480429 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:00.679504      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:01.679947      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:02.489846 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:02.680092      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:03.681179      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:04.502511 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:04.681887      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:05.682351      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:06.511991 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:06.682465      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:07.682779      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:08.520698 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:08.683689      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:09.684227      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:10.532350 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:10.684629      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:11.685569      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:12.539590 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:12.686301      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:13.688181      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:14.552882 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:14.687979      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:15.688701      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:16.560491 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:16.688898      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:17.689951      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:18.568768 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:18.690014      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:19.690280      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:20.576369 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:20.690416      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:21.691566      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:22.590865 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:22.691837      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:23.692345      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:24.600586 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:24.692957      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:25.693160      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:26.611469 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:26.693397      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:27.694404      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:28.623409 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:28.694529      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:29.694905      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:30.630455 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:30.695656      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:31.696871      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:32.639136 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:32.697869      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:33.699494      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:34.655172 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:34.699321      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:35.699452      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:36.663366 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:36.700804      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:37.701105      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:38.671836 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:38.701865      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:39.701998      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:40.679616 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:40.702458      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:41.703125      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:42.703684      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:42.703917 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:43.704202      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:44.704321      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:44.711968 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:45.704978      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:46.705891      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:46.743033 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:47.706425      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:48.707324      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:48.752159 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:49.707414      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:50.707660      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:50.763083 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:51.707760      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:52.708858      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:52.773344 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:53.709263      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:54.709206      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:54.781842 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:55.709826      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:56.710016      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:56.790487 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:57.710840      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:34:58.711197      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:34:58.804285 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:34:59.711556      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:00.711802      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:00.812196 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:01.712935      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:02.713782      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:02.820889 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:03.714099      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:04.714095      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:04.829516 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:05.714320      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:06.715103      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:06.837464 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:07.715772      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:08.715968      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:08.848230 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:09.716111      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:10.717160      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:10.856017 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:11.717864      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:12.718014      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:12.865142 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:13.718266      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:14.718373      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:14.873188 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:15.718583      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:16.719129      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:16.882296 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:17.720037      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:18.720482      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:18.892759 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:19.720770      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:20.721510      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:20.901145 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:21.721622      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:22.721608      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:22.917179 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:23.721876      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:24.722901      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:24.925337 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:25.723575      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:26.723998      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:26.938796 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:27.725035      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:28.725470      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:28.947271 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:29.726239      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:30.727230      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:30.956214 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:31.727401      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:32.728561      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:32.965762 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:33.729164      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:34.729440      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:34.978535 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:35.730060      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:36.729965      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:36.987214 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:37.730903      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:38.731788      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:38.999066 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:39.732483      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:40.732479      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:41.007399 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:41.732651      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:42.733433      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:43.016555 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:43.733501      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:44.734061      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:45.026556 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:45.733955      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:46.734290      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:47.039262 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:47.734499      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:48.734881      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:49.047043 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:49.735136      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:50.735860      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:51.058502 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:51.736022      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:52.736060      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:53.065658 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:53.737319      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:54.737216      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:55.076219 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:55.737692      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:56.738221      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:57.086473 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:57.739157      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:35:58.740122      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:35:59.096238 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:35:59.740948      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:00.741100      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:01.105813 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:01.741667      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:02.742204      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:03.116374 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:03.745582      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:04.744188      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:05.125291 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:05.745340      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:06.745418      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:07.137448 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:07.746834      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:08.747089      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:09.149342 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:09.747433      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:10.748294      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:11.158421 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:11.749133      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:12.750512      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:13.169416 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:13.751077      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:14.751758      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:15.180267 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:15.751843      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:16.752064      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:17.189111 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:17.753306      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:18.753464      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:19.200791 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:19.753698      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:20.754374      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:21.209951 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:21.754410      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:22.754999      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:23.218566 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:23.755132      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:24.755312      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:25.226698 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:25.756392      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:26.756503      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:27.240055 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:27.757189      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:28.757797      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:29.246790 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:29.757918      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:30.759058      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:31.255287 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:31.759196      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:32.759643      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:33.263764 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:33.759575      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:34.760368      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:35.272642 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:35.761169      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:36.762042      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:37.282305 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:37.762929      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:38.763455      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:39.294243 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:39.763674      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:40.763956      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:41.304421 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:41.764863      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:42.765876      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:43.314231 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:43.766660      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:44.767348      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:45.322046 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:45.768086      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:46.768894      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:47.329477 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:47.769645      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:48.770342      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:49.339328 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:49.770925      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:50.771112      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:51.346565 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:51.771372      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:52.772232      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:53.354313 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:53.772456      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:54.772810      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:55.363798 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:55.773007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:56.773630      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:57.373031 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:57.774517      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:36:58.775097      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:36:59.383403 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:36:59.775300      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:00.776065      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:37:01.393795 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:37:01.776277      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:02.777477      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:37:03.405392 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:37:03.778561      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:04.779274      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:37:05.414260 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:37:05.780430      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:06.781108      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:37:07.423281 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:37:07.781994      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:08.782159      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:37:09.435131 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:37:09.782817      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:10.783304      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:37:11.442136 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:37:11.783895      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:12.785042      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:37:13.451239 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:37:13.785832      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:14.786467      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:37:15.460257 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:37:15.786815      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:16.787005      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:37:17.471015 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:37:17.787858      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:18.788023      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:37:19.479703 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:37:19.788587      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:20.789450      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:37:21.488324 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:37:21.790292      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:22.790943      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:37:23.494941 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:37:23.791079      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:24.792100      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:37:25.503829 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:37:25.797480      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:26.796509      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:37:27.512592 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:37:27.797134      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:28.799906      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:37:29.523442 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:37:29.799275      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:30.800176      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:37:31.534310 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:37:31.800349      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:32.800570      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:37:33.541226 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:37:33.801582      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:34.802770      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:37:35.550089 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:37:35.803615      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:36.804076      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:37:37.556489 13 container_probe.go:1759] Get pod test-webserver-cefa3738-7bd5-48c4-96cb-95daebbfcbe3 in namespace container-probe-6170
  E0420 15:37:37.804965      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:38.805672      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/20/24 15:37:39.561
  I0420 15:37:39.600259 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6170" for this suite. @ 04/20/24 15:37:39.62
• [243.330 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 04/20/24 15:37:39.636
  I0420 15:37:39.636808 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 15:37:39.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:37:39.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:37:39.682
  STEP: Creating ReplicationController "e2e-rc-7vdj6" @ 04/20/24 15:37:39.688
  I0420 15:37:39.701227 13 rc.go:792] Get Replication Controller "e2e-rc-7vdj6" to confirm replicas
  E0420 15:37:39.806171      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:37:40.701485 13 rc.go:792] Get Replication Controller "e2e-rc-7vdj6" to confirm replicas
  I0420 15:37:40.708118 13 rc.go:801] Found 1 replicas for "e2e-rc-7vdj6" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-7vdj6" @ 04/20/24 15:37:40.708
  STEP: Updating a scale subresource @ 04/20/24 15:37:40.715
  STEP: Verifying replicas where modified for replication controller "e2e-rc-7vdj6" @ 04/20/24 15:37:40.731
  I0420 15:37:40.731664 13 rc.go:792] Get Replication Controller "e2e-rc-7vdj6" to confirm replicas
  E0420 15:37:40.807127      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:37:41.732372 13 rc.go:792] Get Replication Controller "e2e-rc-7vdj6" to confirm replicas
  I0420 15:37:41.741048 13 rc.go:801] Found 2 replicas for "e2e-rc-7vdj6" replication controller
  I0420 15:37:41.741333 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1649" for this suite. @ 04/20/24 15:37:41.75
• [2.128 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 04/20/24 15:37:41.764
  I0420 15:37:41.764396 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:37:41.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:37:41.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:37:41.799
  E0420 15:37:41.807952      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating projection with secret that has name projected-secret-test-map-6d801868-e396-463a-a7c9-6d474e91f7bf @ 04/20/24 15:37:41.842
  STEP: Creating a pod to test consume secrets @ 04/20/24 15:37:41.85
  E0420 15:37:42.809650      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:43.811140      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:44.811442      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:45.811979      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:37:45.898
  I0420 15:37:45.904568 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-projected-secrets-e4d86a3c-b33b-41fe-8c70-235863b4c721 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 15:37:45.939
  I0420 15:37:45.968109 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-632" for this suite. @ 04/20/24 15:37:45.974
• [4.224 seconds]
------------------------------
S
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 04/20/24 15:37:45.989
  I0420 15:37:45.989503 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename cronjob @ 04/20/24 15:37:45.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:37:46.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:37:46.028
  STEP: Creating a ForbidConcurrent cronjob @ 04/20/24 15:37:46.033
  STEP: Ensuring a job is scheduled @ 04/20/24 15:37:46.045
  E0420 15:37:46.812307      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:47.813359      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:48.814610      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:49.814758      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:50.815229      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:51.815939      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:52.815925      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:53.816122      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:54.817165      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:55.817630      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:56.817870      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:57.817848      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:58.817951      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:37:59.818185      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:00.819340      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:01.819965      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 04/20/24 15:38:02.055
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/20/24 15:38:02.062
  STEP: Ensuring no more jobs are scheduled @ 04/20/24 15:38:02.07
  STEP: Removing cronjob @ 04/20/24 15:38:02.085
  I0420 15:38:02.101967 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-898" for this suite. @ 04/20/24 15:38:02.115
• [16.147 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 04/20/24 15:38:02.141
  I0420 15:38:02.141498 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 15:38:02.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:38:02.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:38:02.193
  STEP: Creating pod liveness-f71ce4af-9e20-4fa8-9870-cdcbdf10d29c in namespace container-probe-2935 @ 04/20/24 15:38:02.2
  E0420 15:38:02.821182      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:03.820971      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 15:38:04.237
  I0420 15:38:04.243362 13 container_probe.go:1749] Initial restart count of pod liveness-f71ce4af-9e20-4fa8-9870-cdcbdf10d29c is 0
  I0420 15:38:04.268809 13 container_probe.go:1759] Get pod liveness-f71ce4af-9e20-4fa8-9870-cdcbdf10d29c in namespace container-probe-2935
  E0420 15:38:04.821197      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:05.821408      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:38:06.276466 13 container_probe.go:1759] Get pod liveness-f71ce4af-9e20-4fa8-9870-cdcbdf10d29c in namespace container-probe-2935
  E0420 15:38:06.821620      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:07.822048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:38:08.285503 13 container_probe.go:1759] Get pod liveness-f71ce4af-9e20-4fa8-9870-cdcbdf10d29c in namespace container-probe-2935
  E0420 15:38:08.823581      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:09.824130      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:38:10.292568 13 container_probe.go:1759] Get pod liveness-f71ce4af-9e20-4fa8-9870-cdcbdf10d29c in namespace container-probe-2935
  E0420 15:38:10.824242      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:11.824449      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:38:12.301307 13 container_probe.go:1759] Get pod liveness-f71ce4af-9e20-4fa8-9870-cdcbdf10d29c in namespace container-probe-2935
  E0420 15:38:12.824908      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:13.825068      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:38:14.309270 13 container_probe.go:1759] Get pod liveness-f71ce4af-9e20-4fa8-9870-cdcbdf10d29c in namespace container-probe-2935
  E0420 15:38:14.825813      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:15.827072      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:38:16.318661 13 container_probe.go:1759] Get pod liveness-f71ce4af-9e20-4fa8-9870-cdcbdf10d29c in namespace container-probe-2935
  E0420 15:38:16.827220      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:17.828334      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:38:18.327117 13 container_probe.go:1759] Get pod liveness-f71ce4af-9e20-4fa8-9870-cdcbdf10d29c in namespace container-probe-2935
  E0420 15:38:18.828528      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:19.828642      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:38:20.336200 13 container_probe.go:1759] Get pod liveness-f71ce4af-9e20-4fa8-9870-cdcbdf10d29c in namespace container-probe-2935
  E0420 15:38:20.829897      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:21.830902      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:38:22.344131 13 container_probe.go:1759] Get pod liveness-f71ce4af-9e20-4fa8-9870-cdcbdf10d29c in namespace container-probe-2935
  E0420 15:38:22.831858      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:23.832159      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:38:24.353700 13 container_probe.go:1759] Get pod liveness-f71ce4af-9e20-4fa8-9870-cdcbdf10d29c in namespace container-probe-2935
  E0420 15:38:24.832380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:25.833414      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:38:26.370775 13 container_probe.go:1759] Get pod liveness-f71ce4af-9e20-4fa8-9870-cdcbdf10d29c in namespace container-probe-2935
  I0420 15:38:26.372010 13 container_probe.go:1763] Restart count of pod container-probe-2935/liveness-f71ce4af-9e20-4fa8-9870-cdcbdf10d29c is now 1 (22.128508709s elapsed)
  STEP: deleting the pod @ 04/20/24 15:38:26.372
  I0420 15:38:26.407648 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2935" for this suite. @ 04/20/24 15:38:26.429
• [24.316 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 04/20/24 15:38:26.459
  I0420 15:38:26.459346 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/20/24 15:38:26.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:38:26.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:38:26.508
  STEP: create the container to handle the HTTPGet hook request. @ 04/20/24 15:38:26.527
  E0420 15:38:26.834185      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:27.835007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/20/24 15:38:28.567
  E0420 15:38:28.835946      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:29.836757      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 04/20/24 15:38:30.601
  STEP: delete the pod with lifecycle hook @ 04/20/24 15:38:30.639
  E0420 15:38:30.837234      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:31.837445      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:32.837524      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:33.838086      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:38:34.723448 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8043" for this suite. @ 04/20/24 15:38:34.733
• [8.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 04/20/24 15:38:34.752
  I0420 15:38:34.752385 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/20/24 15:38:34.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:38:34.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:38:34.793
  STEP: fetching the /apis discovery document @ 04/20/24 15:38:34.798
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 04/20/24 15:38:34.801
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 04/20/24 15:38:34.801
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 04/20/24 15:38:34.801
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 04/20/24 15:38:34.803
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 04/20/24 15:38:34.803
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 04/20/24 15:38:34.805
  I0420 15:38:34.805680 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2975" for this suite. @ 04/20/24 15:38:34.814
• [0.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 04/20/24 15:38:34.834
  I0420 15:38:34.834462 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  E0420 15:38:34.838762      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename container-runtime @ 04/20/24 15:38:34.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:38:34.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:38:34.879
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 04/20/24 15:38:34.916
  E0420 15:38:35.839029      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:36.839475      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:37.840062      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:38.840218      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:39.840640      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:40.841838      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:41.841684      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:42.841967      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:43.842105      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:44.842284      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:45.843309      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:46.844886      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:47.845177      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:48.846005      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:49.846297      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 04/20/24 15:38:50.07
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 04/20/24 15:38:50.081
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 04/20/24 15:38:50.095
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 04/20/24 15:38:50.095
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 04/20/24 15:38:50.137
  E0420 15:38:50.847254      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:51.847442      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:52.847873      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 04/20/24 15:38:53.173
  E0420 15:38:53.848065      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 04/20/24 15:38:54.197
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 04/20/24 15:38:54.212
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 04/20/24 15:38:54.212
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 04/20/24 15:38:54.258
  E0420 15:38:54.848305      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 04/20/24 15:38:55.274
  E0420 15:38:55.849428      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:56.850097      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 04/20/24 15:38:57.3
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 04/20/24 15:38:57.311
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 04/20/24 15:38:57.311
  I0420 15:38:57.361002 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-40" for this suite. @ 04/20/24 15:38:57.372
• [22.551 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 04/20/24 15:38:57.413
  I0420 15:38:57.413752 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:38:57.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:38:57.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:38:57.452
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 15:38:57.457
  E0420 15:38:57.851816      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:58.852080      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:38:59.853094      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:00.855489      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:39:01.512
  I0420 15:39:01.518494 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod downwardapi-volume-b1571331-0c23-49e3-bf0e-905c42230e8a container client-container: <nil>
  STEP: delete the pod @ 04/20/24 15:39:01.537
  I0420 15:39:01.563334 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8717" for this suite. @ 04/20/24 15:39:01.573
• [4.172 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 04/20/24 15:39:01.586
  I0420 15:39:01.586471 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename gc @ 04/20/24 15:39:01.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:39:01.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:39:01.625
  STEP: create the rc @ 04/20/24 15:39:01.641
  W0420 15:39:01.656703      13 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0420 15:39:01.853956      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:02.854277      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:03.855020      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:04.856592      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:05.857525      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:06.857415      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 04/20/24 15:39:07.772
  E0420 15:39:07.858099      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for the rc to be deleted @ 04/20/24 15:39:07.921
  E0420 15:39:08.860129      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:09.860630      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:10.863538      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:11.862049      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:12.863619      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 04/20/24 15:39:12.95
  E0420 15:39:13.863409      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:14.864585      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:15.864524      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:16.865034      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:17.865889      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:18.866062      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:19.867226      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:20.867358      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:21.868172      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:22.868095      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:23.869177      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:24.869335      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:25.869833      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:26.870012      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:27.870880      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:28.871034      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:29.871250      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:30.872116      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:31.873102      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:32.874164      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:33.874292      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:34.874501      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:35.874886      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:36.875519      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:37.876471      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:38.876930      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:39.877157      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:40.877464      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:41.877666      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:42.878525      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/20/24 15:39:42.995
  I0420 15:39:43.225425 13 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0420 15:39:43.225652 13 delete.go:95] Deleting pod "simpletest.rc-28zf8" in namespace "gc-2231"
  I0420 15:39:43.256289 13 delete.go:95] Deleting pod "simpletest.rc-2jjmw" in namespace "gc-2231"
  I0420 15:39:43.289134 13 delete.go:95] Deleting pod "simpletest.rc-2qx8v" in namespace "gc-2231"
  I0420 15:39:43.325042 13 delete.go:95] Deleting pod "simpletest.rc-48dch" in namespace "gc-2231"
  I0420 15:39:43.358499 13 delete.go:95] Deleting pod "simpletest.rc-49wmd" in namespace "gc-2231"
  I0420 15:39:43.407210 13 delete.go:95] Deleting pod "simpletest.rc-4bln8" in namespace "gc-2231"
  I0420 15:39:43.466218 13 delete.go:95] Deleting pod "simpletest.rc-4mmjh" in namespace "gc-2231"
  I0420 15:39:43.521277 13 delete.go:95] Deleting pod "simpletest.rc-4wpcc" in namespace "gc-2231"
  I0420 15:39:43.603422 13 delete.go:95] Deleting pod "simpletest.rc-5jkfg" in namespace "gc-2231"
  I0420 15:39:43.663606 13 delete.go:95] Deleting pod "simpletest.rc-6bwzm" in namespace "gc-2231"
  I0420 15:39:43.764337 13 delete.go:95] Deleting pod "simpletest.rc-6prpn" in namespace "gc-2231"
  E0420 15:39:43.879683      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:39:43.903118 13 delete.go:95] Deleting pod "simpletest.rc-6qj7h" in namespace "gc-2231"
  I0420 15:39:43.974408 13 delete.go:95] Deleting pod "simpletest.rc-6vffk" in namespace "gc-2231"
  I0420 15:39:44.028201 13 delete.go:95] Deleting pod "simpletest.rc-6vkh9" in namespace "gc-2231"
  I0420 15:39:44.093519 13 delete.go:95] Deleting pod "simpletest.rc-76fw4" in namespace "gc-2231"
  I0420 15:39:44.145477 13 delete.go:95] Deleting pod "simpletest.rc-7gwcn" in namespace "gc-2231"
  I0420 15:39:44.199499 13 delete.go:95] Deleting pod "simpletest.rc-7ht95" in namespace "gc-2231"
  I0420 15:39:44.357118 13 delete.go:95] Deleting pod "simpletest.rc-7mngp" in namespace "gc-2231"
  I0420 15:39:44.509534 13 delete.go:95] Deleting pod "simpletest.rc-7vrqs" in namespace "gc-2231"
  I0420 15:39:44.653384 13 delete.go:95] Deleting pod "simpletest.rc-82vlr" in namespace "gc-2231"
  I0420 15:39:44.716078 13 delete.go:95] Deleting pod "simpletest.rc-89clr" in namespace "gc-2231"
  I0420 15:39:44.768167 13 delete.go:95] Deleting pod "simpletest.rc-8l9gq" in namespace "gc-2231"
  I0420 15:39:44.843849 13 delete.go:95] Deleting pod "simpletest.rc-99c7s" in namespace "gc-2231"
  E0420 15:39:44.880350      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:39:44.907568 13 delete.go:95] Deleting pod "simpletest.rc-9gb5b" in namespace "gc-2231"
  I0420 15:39:44.973827 13 delete.go:95] Deleting pod "simpletest.rc-9k9qw" in namespace "gc-2231"
  I0420 15:39:45.048876 13 delete.go:95] Deleting pod "simpletest.rc-9v7tr" in namespace "gc-2231"
  I0420 15:39:45.133264 13 delete.go:95] Deleting pod "simpletest.rc-9z8p2" in namespace "gc-2231"
  I0420 15:39:45.242008 13 delete.go:95] Deleting pod "simpletest.rc-b7zj5" in namespace "gc-2231"
  I0420 15:39:45.287011 13 delete.go:95] Deleting pod "simpletest.rc-bvchw" in namespace "gc-2231"
  I0420 15:39:45.351104 13 delete.go:95] Deleting pod "simpletest.rc-d49p2" in namespace "gc-2231"
  I0420 15:39:45.431837 13 delete.go:95] Deleting pod "simpletest.rc-db7mn" in namespace "gc-2231"
  I0420 15:39:45.520070 13 delete.go:95] Deleting pod "simpletest.rc-dd4nk" in namespace "gc-2231"
  I0420 15:39:45.647923 13 delete.go:95] Deleting pod "simpletest.rc-dtpcz" in namespace "gc-2231"
  I0420 15:39:45.782943 13 delete.go:95] Deleting pod "simpletest.rc-ffp4g" in namespace "gc-2231"
  E0420 15:39:45.880188      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:39:45.948969 13 delete.go:95] Deleting pod "simpletest.rc-ffxmz" in namespace "gc-2231"
  I0420 15:39:46.019847 13 delete.go:95] Deleting pod "simpletest.rc-fgnvf" in namespace "gc-2231"
  I0420 15:39:46.151540 13 delete.go:95] Deleting pod "simpletest.rc-fpszj" in namespace "gc-2231"
  I0420 15:39:46.243235 13 delete.go:95] Deleting pod "simpletest.rc-frrst" in namespace "gc-2231"
  I0420 15:39:46.305455 13 delete.go:95] Deleting pod "simpletest.rc-fvmcl" in namespace "gc-2231"
  I0420 15:39:46.417841 13 delete.go:95] Deleting pod "simpletest.rc-g7hsv" in namespace "gc-2231"
  I0420 15:39:46.518957 13 delete.go:95] Deleting pod "simpletest.rc-g9hh6" in namespace "gc-2231"
  I0420 15:39:46.577555 13 delete.go:95] Deleting pod "simpletest.rc-gkfww" in namespace "gc-2231"
  I0420 15:39:46.702127 13 delete.go:95] Deleting pod "simpletest.rc-gmmx7" in namespace "gc-2231"
  I0420 15:39:46.813193 13 delete.go:95] Deleting pod "simpletest.rc-h598h" in namespace "gc-2231"
  E0420 15:39:46.881129      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:39:46.971653 13 delete.go:95] Deleting pod "simpletest.rc-h8s9b" in namespace "gc-2231"
  I0420 15:39:47.057916 13 delete.go:95] Deleting pod "simpletest.rc-hlqnl" in namespace "gc-2231"
  I0420 15:39:47.149060 13 delete.go:95] Deleting pod "simpletest.rc-jf29g" in namespace "gc-2231"
  I0420 15:39:47.217861 13 delete.go:95] Deleting pod "simpletest.rc-jmdr7" in namespace "gc-2231"
  I0420 15:39:47.329244 13 delete.go:95] Deleting pod "simpletest.rc-kmmfk" in namespace "gc-2231"
  I0420 15:39:47.446060 13 delete.go:95] Deleting pod "simpletest.rc-krqmz" in namespace "gc-2231"
  I0420 15:39:47.639524 13 delete.go:95] Deleting pod "simpletest.rc-l77d7" in namespace "gc-2231"
  E0420 15:39:47.881409      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:39:47.923244 13 delete.go:95] Deleting pod "simpletest.rc-ljx7q" in namespace "gc-2231"
  I0420 15:39:48.018101 13 delete.go:95] Deleting pod "simpletest.rc-lv4x4" in namespace "gc-2231"
  I0420 15:39:48.088537 13 delete.go:95] Deleting pod "simpletest.rc-mhcf6" in namespace "gc-2231"
  I0420 15:39:48.134132 13 delete.go:95] Deleting pod "simpletest.rc-mj8jn" in namespace "gc-2231"
  I0420 15:39:48.180653 13 delete.go:95] Deleting pod "simpletest.rc-mp6wp" in namespace "gc-2231"
  I0420 15:39:48.325064 13 delete.go:95] Deleting pod "simpletest.rc-mpsxg" in namespace "gc-2231"
  I0420 15:39:48.403491 13 delete.go:95] Deleting pod "simpletest.rc-mt628" in namespace "gc-2231"
  I0420 15:39:48.503117 13 delete.go:95] Deleting pod "simpletest.rc-n726d" in namespace "gc-2231"
  I0420 15:39:48.609907 13 delete.go:95] Deleting pod "simpletest.rc-n9dgd" in namespace "gc-2231"
  I0420 15:39:48.719886 13 delete.go:95] Deleting pod "simpletest.rc-nc8xp" in namespace "gc-2231"
  I0420 15:39:48.848573 13 delete.go:95] Deleting pod "simpletest.rc-nmt9c" in namespace "gc-2231"
  E0420 15:39:48.881877      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:39:48.927839 13 delete.go:95] Deleting pod "simpletest.rc-pw55n" in namespace "gc-2231"
  I0420 15:39:48.991404 13 delete.go:95] Deleting pod "simpletest.rc-q5t7b" in namespace "gc-2231"
  I0420 15:39:49.037061 13 delete.go:95] Deleting pod "simpletest.rc-q77qg" in namespace "gc-2231"
  I0420 15:39:49.081125 13 delete.go:95] Deleting pod "simpletest.rc-qxxvt" in namespace "gc-2231"
  I0420 15:39:49.142549 13 delete.go:95] Deleting pod "simpletest.rc-qzs8n" in namespace "gc-2231"
  I0420 15:39:49.235994 13 delete.go:95] Deleting pod "simpletest.rc-r4gm8" in namespace "gc-2231"
  I0420 15:39:49.342851 13 delete.go:95] Deleting pod "simpletest.rc-r7z8d" in namespace "gc-2231"
  I0420 15:39:49.431896 13 delete.go:95] Deleting pod "simpletest.rc-rhzxr" in namespace "gc-2231"
  I0420 15:39:49.575626 13 delete.go:95] Deleting pod "simpletest.rc-rkp8s" in namespace "gc-2231"
  I0420 15:39:49.693106 13 delete.go:95] Deleting pod "simpletest.rc-rljj6" in namespace "gc-2231"
  E0420 15:39:49.882228      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:39:49.966243 13 delete.go:95] Deleting pod "simpletest.rc-rlkl9" in namespace "gc-2231"
  I0420 15:39:50.007476 13 delete.go:95] Deleting pod "simpletest.rc-rmpvq" in namespace "gc-2231"
  I0420 15:39:50.066110 13 delete.go:95] Deleting pod "simpletest.rc-rptjs" in namespace "gc-2231"
  I0420 15:39:50.142271 13 delete.go:95] Deleting pod "simpletest.rc-shxq2" in namespace "gc-2231"
  I0420 15:39:50.206139 13 delete.go:95] Deleting pod "simpletest.rc-sjcsc" in namespace "gc-2231"
  I0420 15:39:50.257837 13 delete.go:95] Deleting pod "simpletest.rc-sm5ws" in namespace "gc-2231"
  I0420 15:39:50.346312 13 delete.go:95] Deleting pod "simpletest.rc-sq4kw" in namespace "gc-2231"
  I0420 15:39:50.399097 13 delete.go:95] Deleting pod "simpletest.rc-swx29" in namespace "gc-2231"
  I0420 15:39:50.475155 13 delete.go:95] Deleting pod "simpletest.rc-vd65x" in namespace "gc-2231"
  I0420 15:39:50.567522 13 delete.go:95] Deleting pod "simpletest.rc-vhqxm" in namespace "gc-2231"
  I0420 15:39:50.642380 13 delete.go:95] Deleting pod "simpletest.rc-vmpdm" in namespace "gc-2231"
  I0420 15:39:50.719683 13 delete.go:95] Deleting pod "simpletest.rc-vt7df" in namespace "gc-2231"
  E0420 15:39:50.884174      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:39:50.895080 13 delete.go:95] Deleting pod "simpletest.rc-w594b" in namespace "gc-2231"
  I0420 15:39:50.974496 13 delete.go:95] Deleting pod "simpletest.rc-w89lt" in namespace "gc-2231"
  I0420 15:39:51.027655 13 delete.go:95] Deleting pod "simpletest.rc-wfx5w" in namespace "gc-2231"
  I0420 15:39:51.071578 13 delete.go:95] Deleting pod "simpletest.rc-wvdzg" in namespace "gc-2231"
  I0420 15:39:51.126126 13 delete.go:95] Deleting pod "simpletest.rc-xdt4d" in namespace "gc-2231"
  I0420 15:39:51.237846 13 delete.go:95] Deleting pod "simpletest.rc-xk4sz" in namespace "gc-2231"
  I0420 15:39:51.321666 13 delete.go:95] Deleting pod "simpletest.rc-xklxt" in namespace "gc-2231"
  I0420 15:39:51.437833 13 delete.go:95] Deleting pod "simpletest.rc-xpblz" in namespace "gc-2231"
  I0420 15:39:51.511190 13 delete.go:95] Deleting pod "simpletest.rc-xzbvj" in namespace "gc-2231"
  I0420 15:39:51.623385 13 delete.go:95] Deleting pod "simpletest.rc-zb4mh" in namespace "gc-2231"
  I0420 15:39:51.764464 13 delete.go:95] Deleting pod "simpletest.rc-zg4pk" in namespace "gc-2231"
  I0420 15:39:51.854323 13 delete.go:95] Deleting pod "simpletest.rc-zhrv7" in namespace "gc-2231"
  E0420 15:39:51.883231      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:39:51.942478 13 delete.go:95] Deleting pod "simpletest.rc-zkqr6" in namespace "gc-2231"
  I0420 15:39:52.019540 13 delete.go:95] Deleting pod "simpletest.rc-zn99q" in namespace "gc-2231"
  I0420 15:39:52.108573 13 delete.go:95] Deleting pod "simpletest.rc-zpptp" in namespace "gc-2231"
  I0420 15:39:52.165503 13 delete.go:95] Deleting pod "simpletest.rc-zscxh" in namespace "gc-2231"
  I0420 15:39:52.236839 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2231" for this suite. @ 04/20/24 15:39:52.257
• [50.712 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:668
  STEP: Creating a kubernetes client @ 04/20/24 15:39:52.3
  I0420 15:39:52.301991 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename job @ 04/20/24 15:39:52.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:39:52.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:39:52.442
  STEP: Creating a job @ 04/20/24 15:39:52.462
  STEP: Ensuring active pods == parallelism @ 04/20/24 15:39:52.522
  E0420 15:39:52.885075      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:53.884692      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 04/20/24 15:39:54.541
  STEP: deleting Job.batch foo in namespace job-9833, will wait for the garbage collector to delete the pods @ 04/20/24 15:39:54.541
  I0420 15:39:54.638521 13 resources.go:139] Deleting Job.batch foo took: 15.632475ms
  I0420 15:39:54.839490 13 resources.go:163] Terminating Job.batch foo pods took: 200.981808ms
  E0420 15:39:54.885897      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:55.886009      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 04/20/24 15:39:56.54
  I0420 15:39:56.549875 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9833" for this suite. @ 04/20/24 15:39:56.566
• [4.281 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 04/20/24 15:39:56.583
  I0420 15:39:56.583505 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 15:39:56.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:39:56.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:39:56.626
  STEP: Creating a ResourceQuota @ 04/20/24 15:39:56.633
  STEP: Getting a ResourceQuota @ 04/20/24 15:39:56.648
  STEP: Listing all ResourceQuotas with LabelSelector @ 04/20/24 15:39:56.654
  STEP: Patching the ResourceQuota @ 04/20/24 15:39:56.663
  STEP: Deleting a Collection of ResourceQuotas @ 04/20/24 15:39:56.677
  STEP: Verifying the deleted ResourceQuota @ 04/20/24 15:39:56.691
  I0420 15:39:56.698514 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1993" for this suite. @ 04/20/24 15:39:56.707
• [0.137 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1459
  STEP: Creating a kubernetes client @ 04/20/24 15:39:56.72
  I0420 15:39:56.721017 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename services @ 04/20/24 15:39:56.726
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:39:56.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:39:56.758
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-614 @ 04/20/24 15:39:56.766
  STEP: changing the ExternalName service to type=NodePort @ 04/20/24 15:39:56.78
  STEP: creating replication controller externalname-service in namespace services-614 @ 04/20/24 15:39:56.821
  I0420 15:39:56.844616      13 runners.go:198] Created replication controller with name: externalname-service, namespace: services-614, replica count: 2
  E0420 15:39:56.886548      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:57.887370      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:58.887005      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:39:59.888391      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:39:59.897808      13 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0420 15:39:59.897899 13 resource.go:361] Creating new exec pod
  E0420 15:40:00.889500      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:01.889761      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:02.890277      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:40:02.962637 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-614 exec execpod5cbn6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0420 15:40:03.355028 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0420 15:40:03.355134 13 builder.go:147] stdout: ""
  E0420 15:40:03.890536      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:40:03.963354 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-614 exec execpod5cbn6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0420 15:40:04.343082 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0420 15:40:04.343223 13 builder.go:147] stdout: "externalname-service-l4r2z"
  I0420 15:40:04.344158 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-614 exec execpod5cbn6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.41.197 80'
  I0420 15:40:04.666864 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.41.197 80\nConnection to 10.233.41.197 80 port [tcp/http] succeeded!\n"
  I0420 15:40:04.667043 13 builder.go:147] stdout: "externalname-service-l4r2z"
  I0420 15:40:04.667940 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-614 exec execpod5cbn6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.103 31915'
  E0420 15:40:04.892476      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:40:04.898113 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.103 31915\nConnection to 192.168.121.103 31915 port [tcp/*] succeeded!\n"
  I0420 15:40:04.898209 13 builder.go:147] stdout: ""
  I0420 15:40:05.668663 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-614 exec execpod5cbn6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.103 31915'
  E0420 15:40:05.892892      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:40:05.948327 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.103 31915\nConnection to 192.168.121.103 31915 port [tcp/*] succeeded!\n"
  I0420 15:40:05.948457 13 builder.go:147] stdout: ""
  I0420 15:40:06.669493 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-614 exec execpod5cbn6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.103 31915'
  E0420 15:40:06.894326      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:40:06.937918 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.103 31915\nConnection to 192.168.121.103 31915 port [tcp/*] succeeded!\n"
  I0420 15:40:06.938010 13 builder.go:147] stdout: ""
  I0420 15:40:07.668981 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-614 exec execpod5cbn6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.103 31915'
  E0420 15:40:07.894963      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:40:07.998353 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.103 31915\nConnection to 192.168.121.103 31915 port [tcp/*] succeeded!\n"
  I0420 15:40:07.998469 13 builder.go:147] stdout: "externalname-service-l4r2z"
  I0420 15:40:07.999240 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-614 exec execpod5cbn6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.188 31915'
  I0420 15:40:08.286170 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.188 31915\nConnection to 192.168.121.188 31915 port [tcp/*] succeeded!\n"
  I0420 15:40:08.286512 13 builder.go:147] stdout: ""
  E0420 15:40:08.896181      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:40:09.000088 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-614 exec execpod5cbn6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.188 31915'
  I0420 15:40:09.306474 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.188 31915\nConnection to 192.168.121.188 31915 port [tcp/*] succeeded!\n"
  I0420 15:40:09.306560 13 builder.go:147] stdout: ""
  E0420 15:40:09.896412      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:40:09.999582 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-614 exec execpod5cbn6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.188 31915'
  I0420 15:40:10.314668 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.188 31915\nConnection to 192.168.121.188 31915 port [tcp/*] succeeded!\n"
  I0420 15:40:10.314910 13 builder.go:147] stdout: ""
  E0420 15:40:10.896684      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:40:10.999865 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=services-614 exec execpod5cbn6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.188 31915'
  I0420 15:40:11.286511 13 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.188 31915\nConnection to 192.168.121.188 31915 port [tcp/*] succeeded!\n"
  I0420 15:40:11.286641 13 builder.go:147] stdout: "externalname-service-xmpqw"
  I0420 15:40:11.287597 13 service.go:1468] Cleaning up the ExternalName to NodePort test service
  I0420 15:40:11.343841 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-614" for this suite. @ 04/20/24 15:40:11.363
• [14.656 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 04/20/24 15:40:11.377
  I0420 15:40:11.377229 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:40:11.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:40:11.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:40:11.432
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 15:40:11.437
  E0420 15:40:11.896857      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:12.898334      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:13.898466      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:14.899208      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:40:15.483
  I0420 15:40:15.498688 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod downwardapi-volume-3295a676-64c7-45fd-a154-6a217cf465a1 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 15:40:15.519
  I0420 15:40:15.561847 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5257" for this suite. @ 04/20/24 15:40:15.577
• [4.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 04/20/24 15:40:15.604
  I0420 15:40:15.604625 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename events @ 04/20/24 15:40:15.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:40:15.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:40:15.657
  STEP: creating a test event @ 04/20/24 15:40:15.663
  STEP: listing all events in all namespaces @ 04/20/24 15:40:15.682
  STEP: patching the test event @ 04/20/24 15:40:15.696
  STEP: fetching the test event @ 04/20/24 15:40:15.711
  STEP: updating the test event @ 04/20/24 15:40:15.718
  STEP: getting the test event @ 04/20/24 15:40:15.738
  STEP: deleting the test event @ 04/20/24 15:40:15.747
  STEP: listing all events in all namespaces @ 04/20/24 15:40:15.763
  I0420 15:40:15.778227 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1003" for this suite. @ 04/20/24 15:40:15.786
• [0.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 04/20/24 15:40:15.801
  I0420 15:40:15.802058 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:40:15.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:40:15.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:40:15.835
  STEP: Creating configMap with name projected-configmap-test-volume-map-50141eee-55e8-4401-97ad-ef4b09515c71 @ 04/20/24 15:40:15.84
  STEP: Creating a pod to test consume configMaps @ 04/20/24 15:40:15.847
  E0420 15:40:15.902918      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:16.900510      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:17.901498      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:18.901969      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:40:19.89
  I0420 15:40:19.897602 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-projected-configmaps-e0be361b-6140-4564-ae28-f4606a33ced7 container agnhost-container: <nil>
  E0420 15:40:19.902229      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 04/20/24 15:40:19.914
  I0420 15:40:19.951433 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4352" for this suite. @ 04/20/24 15:40:19.962
• [4.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 04/20/24 15:40:19.977
  I0420 15:40:19.977575 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename security-context @ 04/20/24 15:40:19.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:40:20.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:40:20.015
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/20/24 15:40:20.023
  E0420 15:40:20.903264      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:21.903514      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:22.904149      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:23.905106      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:40:24.076
  I0420 15:40:24.083959 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod security-context-f6fc74e6-3b10-446e-a3c6-9faf4bc37516 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 15:40:24.098
  I0420 15:40:24.130912 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8042" for this suite. @ 04/20/24 15:40:24.141
• [4.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 04/20/24 15:40:24.153
  I0420 15:40:24.153542 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:40:24.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:40:24.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:40:24.193
  STEP: Creating secret with name s-test-opt-del-e186709b-c167-413e-a5ba-6a402757cc3f @ 04/20/24 15:40:24.209
  STEP: Creating secret with name s-test-opt-upd-c054240a-5ff5-495a-a011-72dcc6373068 @ 04/20/24 15:40:24.22
  STEP: Creating the pod @ 04/20/24 15:40:24.231
  E0420 15:40:24.905845      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:25.906651      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-e186709b-c167-413e-a5ba-6a402757cc3f @ 04/20/24 15:40:26.407
  STEP: Updating secret s-test-opt-upd-c054240a-5ff5-495a-a011-72dcc6373068 @ 04/20/24 15:40:26.424
  STEP: Creating secret with name s-test-opt-create-be2ba9e7-2def-42b7-9de0-2c74636abb46 @ 04/20/24 15:40:26.434
  STEP: waiting to observe update in volume @ 04/20/24 15:40:26.443
  E0420 15:40:26.907056      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:27.907944      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:28.908694      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:29.909681      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:30.909972      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:31.910863      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:32.911314      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:33.911680      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:34.912499      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:35.913130      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:36.913805      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:37.913921      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:38.915046      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:39.915485      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:40.915888      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:41.915948      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:42.916823      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:43.917097      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:44.917448      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:45.917669      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:46.917994      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:47.918967      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:48.919287      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:49.919453      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:50.920375      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:51.920657      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:52.920972      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:53.921036      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:54.922341      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:55.923364      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:56.924038      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:57.924329      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:58.925078      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:40:59.925068      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:00.925324      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:01.926138      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:02.927066      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:03.927160      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:04.927697      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:05.928298      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:06.928588      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:07.928972      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:08.929186      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:09.929990      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:10.930144      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:11.930151      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:12.931104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:13.932088      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:14.933065      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:15.933705      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:16.934031      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:17.934612      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:18.934987      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:19.934877      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:20.935298      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:21.935590      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:22.936092      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:23.937110      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:24.936639      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:25.937771      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:26.938115      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:27.938924      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:28.939551      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:29.940563      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:30.941238      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:31.941692      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:32.942926      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:33.943648      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:34.944450      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:41:35.336505 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-641" for this suite. @ 04/20/24 15:41:35.361
• [71.237 seconds]
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 04/20/24 15:41:35.39
  I0420 15:41:35.390896 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename var-expansion @ 04/20/24 15:41:35.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:41:35.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:41:35.484
  STEP: creating the pod @ 04/20/24 15:41:35.49
  STEP: waiting for pod running @ 04/20/24 15:41:35.519
  E0420 15:41:35.946038      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:36.945773      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 04/20/24 15:41:37.541
  I0420 15:41:37.557560 13 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-1239 PodName:var-expansion-71635068-d8fd-4c7b-bb7d-830047b6d92a ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 15:41:37.557659 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 15:41:37.560302 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 15:41:37.560572 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-1239/pods/var-expansion-71635068-d8fd-4c7b-bb7d-830047b6d92a/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 04/20/24 15:41:37.735
  I0420 15:41:37.745944 13 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-1239 PodName:var-expansion-71635068-d8fd-4c7b-bb7d-830047b6d92a ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 15:41:37.746024 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 15:41:37.748997 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 15:41:37.749138 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-1239/pods/var-expansion-71635068-d8fd-4c7b-bb7d-830047b6d92a/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 04/20/24 15:41:37.897
  E0420 15:41:37.946113      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:41:38.423913 13 pod_client.go:141] Successfully updated pod "var-expansion-71635068-d8fd-4c7b-bb7d-830047b6d92a"
  STEP: waiting for annotated pod running @ 04/20/24 15:41:38.424
  STEP: deleting the pod gracefully @ 04/20/24 15:41:38.432
  I0420 15:41:38.432826 13 delete.go:62] Deleting pod "var-expansion-71635068-d8fd-4c7b-bb7d-830047b6d92a" in namespace "var-expansion-1239"
  I0420 15:41:38.446998 13 delete.go:70] Wait up to 5m0s for pod "var-expansion-71635068-d8fd-4c7b-bb7d-830047b6d92a" to be fully deleted
  E0420 15:41:38.946681      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:39.947016      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:40.948164      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:41.948322      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:42.948916      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:43.949395      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:44.950420      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:45.950646      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:46.950986      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:47.956395      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:48.952921      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:49.953319      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:50.953523      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:51.954104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:52.954998      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:53.955860      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:54.955977      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:55.956257      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:56.957206      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:57.965286      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:58.960420      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:41:59.961099      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:00.962445      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:01.962563      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:02.963769      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:03.964488      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:04.964601      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:05.965031      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:06.966408      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:07.967304      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:08.967482      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:09.967586      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:42:10.653065 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1239" for this suite. @ 04/20/24 15:42:10.675
• [35.309 seconds]
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 04/20/24 15:42:10.702
  I0420 15:42:10.703108 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename deployment @ 04/20/24 15:42:10.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:42:10.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:42:10.796
  I0420 15:42:10.802436 13 deployment.go:1196] Creating deployment "webserver-deployment"
  I0420 15:42:10.814061 13 deployment.go:1200] Waiting for observed generation 1
  E0420 15:42:10.968139      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:11.972443      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:42:12.832166 13 deployment.go:1205] Waiting for all required pods to come up
  I0420 15:42:12.845301 13 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 04/20/24 15:42:12.845
  E0420 15:42:12.970240      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:13.970828      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:42:14.876488 13 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0420 15:42:14.897407 13 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0420 15:42:14.923400 13 deployment.go:313] Updating deployment webserver-deployment
  I0420 15:42:14.923556 13 deployment.go:1224] Waiting for observed generation 2
  E0420 15:42:14.971537      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:15.972421      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:42:16.950383 13 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0420 15:42:16.964298 13 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  E0420 15:42:16.973643      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:42:16.975603 13 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0420 15:42:17.007400 13 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0420 15:42:17.007659 13 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0420 15:42:17.017358 13 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0420 15:42:17.034164 13 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0420 15:42:17.034275 13 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0420 15:42:17.055481 13 deployment.go:313] Updating deployment webserver-deployment
  I0420 15:42:17.055644 13 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0420 15:42:17.070657 13 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0420 15:42:17.086641 13 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0420 15:42:17.158925 13 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cc1baa79-3d35-4c7a-9fd8-bef6b6e82597",
      ResourceVersion: (string) (len=5) "78363",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224530,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-67c89d485c\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0420 15:42:17.255605 13 deployment.go:39] New ReplicaSet "webserver-deployment-67c89d485c" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-67c89d485c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3836989b-030c-49fc-a9a8-702f63827225",
      ResourceVersion: (string) (len=5) "78356",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224534,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "cc1baa79-3d35-4c7a-9fd8-bef6b6e82597",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 63 31 62 61 61  37 39 2d 33 64 33 35 2d  |\"cc1baa79-3d35-|
              00000120  34 63 37 61 2d 39 66 64  38 2d 62 65 66 36 62 36  |4c7a-9fd8-bef6b6|
              00000130  65 38 32 35 39 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e82597\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0420 15:42:17.267328 13 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I0420 15:42:17.273631 13 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "568c8556-8e50-4659-b9a7-7144ec44cf87",
      ResourceVersion: (string) (len=5) "78353",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224530,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "cc1baa79-3d35-4c7a-9fd8-bef6b6e82597",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 63 31 62 61 61  37 39 2d 33 64 33 35 2d  |\"cc1baa79-3d35-|
              00000120  34 63 37 61 2d 39 66 64  38 2d 62 65 66 36 62 36  |4c7a-9fd8-bef6b6|
              00000130  65 38 32 35 39 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e82597\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0420 15:42:17.395616 13 deployment.go:67] Pod "webserver-deployment-67c89d485c-46zlj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-46zlj",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "304c9f22-1158-4abe-919e-fa3ccf69ab6c",
      ResourceVersion: (string) (len=5) "78329",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224535,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "3836989b-030c-49fc-a9a8-702f63827225",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  33 36 39 38 39 62 2d 30  |d\":\"3836989b-0|
              00000090  33 30 63 2d 34 39 66 63  2d 61 39 61 38 2d 37 30  |30c-49fc-a9a8-70|
              000000a0  32 66 36 33 38 32 37 32  32 35 5c 22 7d 22 3a 7b  |2f63827225\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-22b46",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-22b46",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224535,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.407671 13 deployment.go:67] Pod "webserver-deployment-67c89d485c-4t2fn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-4t2fn",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "006b8a4c-c7d5-4238-bfb7-12fc69b2024f",
      ResourceVersion: (string) (len=5) "78382",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "3836989b-030c-49fc-a9a8-702f63827225",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  33 36 39 38 39 62 2d 30  |d\":\"3836989b-0|
              00000090  33 30 63 2d 34 39 66 63  2d 61 39 61 38 2d 37 30  |30c-49fc-a9a8-70|
              000000a0  32 66 36 33 38 32 37 32  32 35 5c 22 7d 22 3a 7b  |2f63827225\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gc9vl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gc9vl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.413201 13 deployment.go:67] Pod "webserver-deployment-67c89d485c-8hj45" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-8hj45",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a001248b-a6ef-4ae3-81b3-efe981880e66",
      ResourceVersion: (string) (len=5) "78377",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "3836989b-030c-49fc-a9a8-702f63827225",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  33 36 39 38 39 62 2d 30  |d\":\"3836989b-0|
              00000090  33 30 63 2d 34 39 66 63  2d 61 39 61 38 2d 37 30  |30c-49fc-a9a8-70|
              000000a0  32 66 36 33 38 32 37 32  32 35 5c 22 7d 22 3a 7b  |2f63827225\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-27zdw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-27zdw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.422429 13 deployment.go:67] Pod "webserver-deployment-67c89d485c-8snrd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-8snrd",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b0a66d30-a8aa-4999-b9ee-ca239a9f30be",
      ResourceVersion: (string) (len=5) "78296",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224534,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "3836989b-030c-49fc-a9a8-702f63827225",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224534,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  33 36 39 38 39 62 2d 30  |d\":\"3836989b-0|
              00000090  33 30 63 2d 34 39 66 63  2d 61 39 61 38 2d 37 30  |30c-49fc-a9a8-70|
              000000a0  32 66 36 33 38 32 37 32  32 35 5c 22 7d 22 3a 7b  |2f63827225\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rfppr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rfppr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224534,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224534,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224534,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224534,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224534,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.445769 13 deployment.go:67] Pod "webserver-deployment-67c89d485c-9sxwf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-9sxwf",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e8ec12a6-8861-4788-a9c7-688f2a55c0b3",
      ResourceVersion: (string) (len=5) "78381",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "3836989b-030c-49fc-a9a8-702f63827225",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  33 36 39 38 39 62 2d 30  |d\":\"3836989b-0|
              00000090  33 30 63 2d 34 39 66 63  2d 61 39 61 38 2d 37 30  |30c-49fc-a9a8-70|
              000000a0  32 66 36 33 38 32 37 32  32 35 5c 22 7d 22 3a 7b  |2f63827225\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gplgd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gplgd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.457383 13 deployment.go:67] Pod "webserver-deployment-67c89d485c-m4jnv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-m4jnv",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f1e9b17-e110-4472-a001-5876ba7194bf",
      ResourceVersion: (string) (len=5) "78309",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224535,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "3836989b-030c-49fc-a9a8-702f63827225",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  33 36 39 38 39 62 2d 30  |d\":\"3836989b-0|
              00000090  33 30 63 2d 34 39 66 63  2d 61 39 61 38 2d 37 30  |30c-49fc-a9a8-70|
              000000a0  32 66 36 33 38 32 37 32  32 35 5c 22 7d 22 3a 7b  |2f63827225\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hxpwh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hxpwh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.80",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.80"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224535,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.480932 13 deployment.go:67] Pod "webserver-deployment-67c89d485c-ndh2n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-ndh2n",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "074d04f6-bb18-4ed2-9b8c-46e2b507645a",
      ResourceVersion: (string) (len=5) "78370",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "3836989b-030c-49fc-a9a8-702f63827225",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  33 36 39 38 39 62 2d 30  |d\":\"3836989b-0|
              00000090  33 30 63 2d 34 39 66 63  2d 61 39 61 38 2d 37 30  |30c-49fc-a9a8-70|
              000000a0  32 66 36 33 38 32 37 32  32 35 5c 22 7d 22 3a 7b  |2f63827225\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dp5dp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dp5dp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.188",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.188"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.498247 13 deployment.go:67] Pod "webserver-deployment-67c89d485c-p7h4z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-p7h4z",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c69d4f32-6abd-4330-9010-4331ee82e608",
      ResourceVersion: (string) (len=5) "78385",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "3836989b-030c-49fc-a9a8-702f63827225",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  33 36 39 38 39 62 2d 30  |d\":\"3836989b-0|
              00000090  33 30 63 2d 34 39 66 63  2d 61 39 61 38 2d 37 30  |30c-49fc-a9a8-70|
              000000a0  32 66 36 33 38 32 37 32  32 35 5c 22 7d 22 3a 7b  |2f63827225\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mzz5g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mzz5g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.504618 13 deployment.go:67] Pod "webserver-deployment-67c89d485c-w9mww" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-w9mww",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a430cb51-0c2c-4255-9e1f-6ef21d83db90",
      ResourceVersion: (string) (len=5) "78330",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224535,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "3836989b-030c-49fc-a9a8-702f63827225",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  33 36 39 38 39 62 2d 30  |d\":\"3836989b-0|
              00000090  33 30 63 2d 34 39 66 63  2d 61 39 61 38 2d 37 30  |30c-49fc-a9a8-70|
              000000a0  32 66 36 33 38 32 37 32  32 35 5c 22 7d 22 3a 7b  |2f63827225\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-72nwx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-72nwx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.80",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.80"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224535,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.515516 13 deployment.go:67] Pod "webserver-deployment-67c89d485c-wgdp5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-wgdp5",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d400650-b75a-4265-b814-88fa85c8e884",
      ResourceVersion: (string) (len=5) "78304",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224535,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "3836989b-030c-49fc-a9a8-702f63827225",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  33 36 39 38 39 62 2d 30  |d\":\"3836989b-0|
              00000090  33 30 63 2d 34 39 66 63  2d 61 39 61 38 2d 37 30  |30c-49fc-a9a8-70|
              000000a0  32 66 36 33 38 32 37 32  32 35 5c 22 7d 22 3a 7b  |2f63827225\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fvqpk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fvqpk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224535,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.188",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.188"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224535,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.523160 13 deployment.go:67] Pod "webserver-deployment-67c89d485c-x8k5w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-x8k5w",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a9d1b476-dcfc-4d38-90cf-d2f8985c1224",
      ResourceVersion: (string) (len=5) "78384",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "3836989b-030c-49fc-a9a8-702f63827225",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  33 36 39 38 39 62 2d 30  |d\":\"3836989b-0|
              00000090  33 30 63 2d 34 39 66 63  2d 61 39 61 38 2d 37 30  |30c-49fc-a9a8-70|
              000000a0  32 66 36 33 38 32 37 32  32 35 5c 22 7d 22 3a 7b  |2f63827225\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pcdq2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pcdq2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.526435 13 deployment.go:67] Pod "webserver-deployment-67c89d485c-z8l6k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-z8l6k",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e0f59afa-f9df-4861-9199-2e70793a2e38",
      ResourceVersion: (string) (len=5) "78380",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "3836989b-030c-49fc-a9a8-702f63827225",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 38  33 36 39 38 39 62 2d 30  |d\":\"3836989b-0|
              00000090  33 30 63 2d 34 39 66 63  2d 61 39 61 38 2d 37 30  |30c-49fc-a9a8-70|
              000000a0  32 66 36 33 38 32 37 32  32 35 5c 22 7d 22 3a 7b  |2f63827225\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zlc9s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zlc9s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.529701 13 deployment.go:67] Pod "webserver-deployment-77db57d8df-7dh4l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-7dh4l",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "57836295-5631-4798-9d27-3da19749ebfd",
      ResourceVersion: (string) (len=5) "78390",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "568c8556-8e50-4659-b9a7-7144ec44cf87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  38 63 38 35 35 36 2d 38  |d\":\"568c8556-8|
              00000090  65 35 30 2d 34 36 35 39  2d 62 39 61 37 2d 37 31  |e50-4659-b9a7-71|
              000000a0  34 34 65 63 34 34 63 66  38 37 5c 22 7d 22 3a 7b  |44ec44cf87\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cqjjh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cqjjh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.535932 13 deployment.go:67] Pod "webserver-deployment-77db57d8df-7p2jk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-7p2jk",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "927e671a-d3ba-4475-93f1-872718f55ca1",
      ResourceVersion: (string) (len=5) "78255",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224530,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "568c8556-8e50-4659-b9a7-7144ec44cf87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  38 63 38 35 35 36 2d 38  |d\":\"568c8556-8|
              00000090  65 35 30 2d 34 36 35 39  2d 62 39 61 37 2d 37 31  |e50-4659-b9a7-71|
              000000a0  34 34 65 63 34 34 63 66  38 37 5c 22 7d 22 3a 7b  |44ec44cf87\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  31 32 5c 22 7d 22 3a 7b  |.233.65.12\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dbr4l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dbr4l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.188",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.188"
        }
      },
      PodIP: (string) (len=12) "10.233.65.12",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.12"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224530,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849224531,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://6e4cdd13742d3694899c7112db948d3b0703a417df436eb32d2aeff9cefdfd7f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.543088 13 deployment.go:67] Pod "webserver-deployment-77db57d8df-88s4d" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-88s4d",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "58b62f66-ee2b-46af-953c-b7d46f5344b7",
      ResourceVersion: (string) (len=5) "78271",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224530,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "568c8556-8e50-4659-b9a7-7144ec44cf87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  38 63 38 35 35 36 2d 38  |d\":\"568c8556-8|
              00000090  65 35 30 2d 34 36 35 39  2d 62 39 61 37 2d 37 31  |e50-4659-b9a7-71|
              000000a0  34 34 65 63 34 34 63 66  38 37 5c 22 7d 22 3a 7b  |44ec44cf87\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  32 39 5c 22 7d 22 3a 7b  |.233.64.29\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8mlbk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8mlbk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.80",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.80"
        }
      },
      PodIP: (string) (len=12) "10.233.64.29",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.29"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224530,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849224532,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://44b665decb0e119bd92eb7018b1db820fe3af9579e2e5abcdf65c2d50ec2b2a1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.551749 13 deployment.go:67] Pod "webserver-deployment-77db57d8df-927nc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-927nc",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cbf7461b-75ad-4435-b510-cca0855e8c57",
      ResourceVersion: (string) (len=5) "78374",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "568c8556-8e50-4659-b9a7-7144ec44cf87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  38 63 38 35 35 36 2d 38  |d\":\"568c8556-8|
              00000090  65 35 30 2d 34 36 35 39  2d 62 39 61 37 2d 37 31  |e50-4659-b9a7-71|
              000000a0  34 34 65 63 34 34 63 66  38 37 5c 22 7d 22 3a 7b  |44ec44cf87\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mc8rf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mc8rf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.554996 13 deployment.go:67] Pod "webserver-deployment-77db57d8df-94vc5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-94vc5",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "22ed1627-3bb3-4ccf-99f4-a4c9e87d8974",
      ResourceVersion: (string) (len=5) "78389",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "568c8556-8e50-4659-b9a7-7144ec44cf87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  38 63 38 35 35 36 2d 38  |d\":\"568c8556-8|
              00000090  65 35 30 2d 34 36 35 39  2d 62 39 61 37 2d 37 31  |e50-4659-b9a7-71|
              000000a0  34 34 65 63 34 34 63 66  38 37 5c 22 7d 22 3a 7b  |44ec44cf87\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5n8hz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5n8hz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.562388 13 deployment.go:67] Pod "webserver-deployment-77db57d8df-b6glh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-b6glh",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "df6f8a53-51bc-47d5-b9ba-b2f4592d86eb",
      ResourceVersion: (string) (len=5) "78386",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "568c8556-8e50-4659-b9a7-7144ec44cf87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  38 63 38 35 35 36 2d 38  |d\":\"568c8556-8|
              00000090  65 35 30 2d 34 36 35 39  2d 62 39 61 37 2d 37 31  |e50-4659-b9a7-71|
              000000a0  34 34 65 63 34 34 63 66  38 37 5c 22 7d 22 3a 7b  |44ec44cf87\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r47dl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r47dl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.572239 13 deployment.go:67] Pod "webserver-deployment-77db57d8df-bmpxw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-bmpxw",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ceccfb8c-03ef-4997-9736-11283c4a03d1",
      ResourceVersion: (string) (len=5) "78387",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "568c8556-8e50-4659-b9a7-7144ec44cf87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  38 63 38 35 35 36 2d 38  |d\":\"568c8556-8|
              00000090  65 35 30 2d 34 36 35 39  2d 62 39 61 37 2d 37 31  |e50-4659-b9a7-71|
              000000a0  34 34 65 63 34 34 63 66  38 37 5c 22 7d 22 3a 7b  |44ec44cf87\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-chtv5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-chtv5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.578872 13 deployment.go:67] Pod "webserver-deployment-77db57d8df-cc969" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-cc969",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "86a40461-328d-4d0c-b731-1380133dacd5",
      ResourceVersion: (string) (len=5) "78257",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224530,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "568c8556-8e50-4659-b9a7-7144ec44cf87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  38 63 38 35 35 36 2d 38  |d\":\"568c8556-8|
              00000090  65 35 30 2d 34 36 35 39  2d 62 39 61 37 2d 37 31  |e50-4659-b9a7-71|
              000000a0  34 34 65 63 34 34 63 66  38 37 5c 22 7d 22 3a 7b  |44ec44cf87\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  31 34 5c 22 7d 22 3a 7b  |.233.65.14\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sm5vj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sm5vj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.188",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.188"
        }
      },
      PodIP: (string) (len=12) "10.233.65.14",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.14"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224531,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849224532,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://3ae6d8df97e4951deac03a1d59d2cb27e48e0a106ccdd02531523a17f50e65a4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.586585 13 deployment.go:67] Pod "webserver-deployment-77db57d8df-g8mlr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-g8mlr",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0fe6311e-b56c-4d39-873e-e9d9bdf2bcea",
      ResourceVersion: (string) (len=5) "78238",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224530,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "568c8556-8e50-4659-b9a7-7144ec44cf87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  38 63 38 35 35 36 2d 38  |d\":\"568c8556-8|
              00000090  65 35 30 2d 34 36 35 39  2d 62 39 61 37 2d 37 31  |e50-4659-b9a7-71|
              000000a0  34 34 65 63 34 34 63 66  38 37 5c 22 7d 22 3a 7b  |44ec44cf87\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  39 31 5c 22 7d 22 3a 7b  |.233.66.91\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n7dn5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n7dn5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.103"
        }
      },
      PodIP: (string) (len=12) "10.233.66.91",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.91"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224530,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849224531,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://9fd4051c69b1dc820c3642f8c860f945b45e94fdc02be3f3826504738f79fc04",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.592825 13 deployment.go:67] Pod "webserver-deployment-77db57d8df-gj7cf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-gj7cf",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "051e18ae-ecc2-4706-ab5a-45454b0d83f7",
      ResourceVersion: (string) (len=5) "78248",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224531,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "568c8556-8e50-4659-b9a7-7144ec44cf87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  38 63 38 35 35 36 2d 38  |d\":\"568c8556-8|
              00000090  65 35 30 2d 34 36 35 39  2d 62 39 61 37 2d 37 31  |e50-4659-b9a7-71|
              000000a0  34 34 65 63 34 34 63 66  38 37 5c 22 7d 22 3a 7b  |44ec44cf87\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  32 38 5c 22 7d 22 3a 7b  |.233.64.28\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g5mnr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g5mnr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.80",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.80"
        }
      },
      PodIP: (string) (len=12) "10.233.64.28",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.28"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224531,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849224532,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://fcd3438b661de24a07b6c05c4e077507df3f7f6e48a1c178fbf39eee37f3886f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.599377 13 deployment.go:67] Pod "webserver-deployment-77db57d8df-gsv8z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-gsv8z",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a451f849-4347-47d2-9ee0-ce07f526b5db",
      ResourceVersion: (string) (len=5) "78361",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "568c8556-8e50-4659-b9a7-7144ec44cf87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  38 63 38 35 35 36 2d 38  |d\":\"568c8556-8|
              00000090  65 35 30 2d 34 36 35 39  2d 62 39 61 37 2d 37 31  |e50-4659-b9a7-71|
              000000a0  34 34 65 63 34 34 63 66  38 37 5c 22 7d 22 3a 7b  |44ec44cf87\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xbgzx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xbgzx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.103"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.605647 13 deployment.go:67] Pod "webserver-deployment-77db57d8df-h4dj5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-h4dj5",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "01bade17-757e-486f-9e45-d331043f8f9d",
      ResourceVersion: (string) (len=5) "78371",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "568c8556-8e50-4659-b9a7-7144ec44cf87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  38 63 38 35 35 36 2d 38  |d\":\"568c8556-8|
              00000090  65 35 30 2d 34 36 35 39  2d 62 39 61 37 2d 37 31  |e50-4659-b9a7-71|
              000000a0  34 34 65 63 34 34 63 66  38 37 5c 22 7d 22 3a 7b  |44ec44cf87\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b4ldp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b4ldp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.611190 13 deployment.go:67] Pod "webserver-deployment-77db57d8df-qcx44" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-qcx44",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b017701-33f9-42ef-881f-1721ca7eb672",
      ResourceVersion: (string) (len=5) "78259",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224531,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "568c8556-8e50-4659-b9a7-7144ec44cf87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  38 63 38 35 35 36 2d 38  |d\":\"568c8556-8|
              00000090  65 35 30 2d 34 36 35 39  2d 62 39 61 37 2d 37 31  |e50-4659-b9a7-71|
              000000a0  34 34 65 63 34 34 63 66  38 37 5c 22 7d 22 3a 7b  |44ec44cf87\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 35 2e  31 33 5c 22 7d 22 3a 7b  |.233.65.13\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lnqkn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lnqkn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.188",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.188"
        }
      },
      PodIP: (string) (len=12) "10.233.65.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224531,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849224532,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://2ae20d12ca31fe95e57a5d8cf0e7b2b21c8703b2e540b711cbe340777041ff5d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.617461 13 deployment.go:67] Pod "webserver-deployment-77db57d8df-rzfb4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-rzfb4",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71eff2e6-139c-4cc1-8153-6f7fa81fad4a",
      ResourceVersion: (string) (len=5) "78273",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224530,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "568c8556-8e50-4659-b9a7-7144ec44cf87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  38 63 38 35 35 36 2d 38  |d\":\"568c8556-8|
              00000090  65 35 30 2d 34 36 35 39  2d 62 39 61 37 2d 37 31  |e50-4659-b9a7-71|
              000000a0  34 34 65 63 34 34 63 66  38 37 5c 22 7d 22 3a 7b  |44ec44cf87\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 34 2e  33 30 5c 22 7d 22 3a 7b  |.233.64.30\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nxnn9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nxnn9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224533,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.80",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.121.80"
        }
      },
      PodIP: (string) (len=12) "10.233.64.30",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.30"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224531,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849224532,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://d7f4d60dae815f09d68e2f431b086dc8e33807f7745253d6107a5a3f4b42e458",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.624505 13 deployment.go:67] Pod "webserver-deployment-77db57d8df-tqknk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-tqknk",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "701f750a-a8ef-4dd5-a5bf-40dd45d458c6",
      ResourceVersion: (string) (len=5) "78242",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224530,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "568c8556-8e50-4659-b9a7-7144ec44cf87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  38 63 38 35 35 36 2d 38  |d\":\"568c8556-8|
              00000090  65 35 30 2d 34 36 35 39  2d 62 39 61 37 2d 37 31  |e50-4659-b9a7-71|
              000000a0  34 34 65 63 34 34 63 66  38 37 5c 22 7d 22 3a 7b  |44ec44cf87\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 36 36 2e  39 32 5c 22 7d 22 3a 7b  |.233.66.92\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jfsbh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jfsbh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "ier3chochiph-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224530,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224532,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224531,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.103",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.121.103"
        }
      },
      PodIP: (string) (len=12) "10.233.66.92",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.92"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224530,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849224532,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://f1fcfc9cf3ce61744cbe77c43ace9d5c19577f21940ffc86dd66a9ebbb20c08f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.642802 13 deployment.go:67] Pod "webserver-deployment-77db57d8df-vtnkp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-vtnkp",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f0b2870b-84c2-40d0-9a45-ac5cca9ca535",
      ResourceVersion: (string) (len=5) "78388",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "568c8556-8e50-4659-b9a7-7144ec44cf87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  38 63 38 35 35 36 2d 38  |d\":\"568c8556-8|
              00000090  65 35 30 2d 34 36 35 39  2d 62 39 61 37 2d 37 31  |e50-4659-b9a7-71|
              000000a0  34 34 65 63 34 34 63 66  38 37 5c 22 7d 22 3a 7b  |44ec44cf87\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5hj82",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5hj82",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.648852 13 deployment.go:67] Pod "webserver-deployment-77db57d8df-w4kn4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-w4kn4",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d7f1d41b-fdb7-4ec1-a573-38497e8bcf4f",
      ResourceVersion: (string) (len=5) "78372",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "568c8556-8e50-4659-b9a7-7144ec44cf87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  38 63 38 35 35 36 2d 38  |d\":\"568c8556-8|
              00000090  65 35 30 2d 34 36 35 39  2d 62 39 61 37 2d 37 31  |e50-4659-b9a7-71|
              000000a0  34 34 65 63 34 34 63 66  38 37 5c 22 7d 22 3a 7b  |44ec44cf87\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9w7zr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9w7zr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.660374 13 deployment.go:67] Pod "webserver-deployment-77db57d8df-xfjft" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-xfjft",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ba3b2b84-0c1b-4ac2-b10d-12ef19cc5fb1",
      ResourceVersion: (string) (len=5) "78373",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "568c8556-8e50-4659-b9a7-7144ec44cf87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  38 63 38 35 35 36 2d 38  |d\":\"568c8556-8|
              00000090  65 35 30 2d 34 36 35 39  2d 62 39 61 37 2d 37 31  |e50-4659-b9a7-71|
              000000a0  34 34 65 63 34 34 63 66  38 37 5c 22 7d 22 3a 7b  |44ec44cf87\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9kqhq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9kqhq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.668535 13 deployment.go:67] Pod "webserver-deployment-77db57d8df-z8z7n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-z8z7n",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "519e0f62-5a3c-4390-b307-eb2c7031fbc1",
      ResourceVersion: (string) (len=5) "78391",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "568c8556-8e50-4659-b9a7-7144ec44cf87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  38 63 38 35 35 36 2d 38  |d\":\"568c8556-8|
              00000090  65 35 30 2d 34 36 35 39  2d 62 39 61 37 2d 37 31  |e50-4659-b9a7-71|
              000000a0  34 34 65 63 34 34 63 66  38 37 5c 22 7d 22 3a 7b  |44ec44cf87\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6br7z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6br7z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.675975 13 deployment.go:67] Pod "webserver-deployment-77db57d8df-zrcgz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-zrcgz",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5612",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "55714d7b-903e-4425-ae83-e889804334e1",
      ResourceVersion: (string) (len=5) "78392",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849224537,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "568c8556-8e50-4659-b9a7-7144ec44cf87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849224537,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 36  38 63 38 35 35 36 2d 38  |d\":\"568c8556-8|
              00000090  65 35 30 2d 34 36 35 39  2d 62 39 61 37 2d 37 31  |e50-4659-b9a7-71|
              000000a0  34 34 65 63 34 34 63 66  38 37 5c 22 7d 22 3a 7b  |44ec44cf87\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qvhlq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qvhlq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0420 15:42:17.680044 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5612" for this suite. @ 04/20/24 15:42:17.745
• [7.109 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 04/20/24 15:42:17.82
  I0420 15:42:17.820776 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 15:42:17.84
  E0420 15:42:17.974549      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:42:17.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:42:17.989
  STEP: Creating pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381 @ 04/20/24 15:42:17.997
  E0420 15:42:18.975186      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:19.975334      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:20.976079      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:21.977264      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 15:42:22.09
  I0420 15:42:22.099961 13 container_probe.go:1749] Initial restart count of pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 is 0
  I0420 15:42:22.109812 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:42:22.978327      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:23.978796      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:42:24.142496 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:42:24.979268      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:25.979506      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:42:26.153049 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:42:26.980116      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:27.981251      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:42:28.167287 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:42:28.981136      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:29.981697      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:42:30.178467 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:42:30.982061      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:31.982366      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:42:32.198668 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:42:32.983327      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:33.984547      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:42:34.206151 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:42:34.984990      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:35.985979      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:42:36.220974 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:42:36.986275      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:37.986433      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:42:38.229553 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:42:38.987256      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:39.987130      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:42:40.241176 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:42:40.988198      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:41.988558      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:42:42.252014 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:42:42.989335      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:43.989280      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:42:44.289361 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:42:44.990016      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:45.990912      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:42:46.298302 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:42:46.991030      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:47.991325      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:42:48.307426 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:42:48.991651      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:49.992574      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:42:50.317334 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:42:50.993519      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:51.993851      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:42:52.326300 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:42:52.994272      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:53.995082      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:42:54.334071 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:42:54.995060      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:55.996227      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:42:56.347582 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:42:56.997281      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:57.998033      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:42:58.359137 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:42:58.998204      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:42:59.998872      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:43:00.369337 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:43:00.999065      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:02.000031      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:43:02.380635 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:43:03.000292      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:04.001455      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:43:04.391580 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:43:05.001991      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:06.002212      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:43:06.399382 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:43:07.003168      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:08.004378      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:43:08.410046 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:43:09.004596      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:10.005780      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:43:10.418648 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:43:11.005762      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:12.005826      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:43:12.429527 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:43:13.006079      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:14.006643      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:43:14.436948 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:43:15.007593      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:16.008147      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:43:16.449382 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:43:17.008945      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:18.010017      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:43:18.458215 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:43:19.010113      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:20.011565      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:43:20.468758 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:43:21.011852      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:22.012113      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:43:22.478337 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:43:23.012074      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:24.012300      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:43:24.486701 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:43:25.013620      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:26.014290      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:43:26.496031 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:43:27.015403      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:28.016181      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:43:28.504311 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:43:29.016622      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:30.017193      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:43:30.513606 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:43:31.018094      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:32.018351      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:43:32.524261 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  E0420 15:43:33.018893      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:34.019601      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:43:34.536898 13 container_probe.go:1759] Get pod test-grpc-38fa526c-6391-4880-a544-4daa27054812 in namespace container-probe-2381
  I0420 15:43:34.537464 13 container_probe.go:1763] Restart count of pod container-probe-2381/test-grpc-38fa526c-6391-4880-a544-4daa27054812 is now 1 (1m12.437402925s elapsed)
  STEP: deleting the pod @ 04/20/24 15:43:34.538
  I0420 15:43:34.569535 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2381" for this suite. @ 04/20/24 15:43:34.586
• [76.779 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 04/20/24 15:43:34.6
  I0420 15:43:34.600623 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:43:34.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:43:34.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:43:34.645
  STEP: Setting up server cert @ 04/20/24 15:43:34.7
  E0420 15:43:35.020308      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:43:35.98
  STEP: Deploying the webhook pod @ 04/20/24 15:43:35.997
  E0420 15:43:36.021093      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 04/20/24 15:43:36.029
  I0420 15:43:36.049106 13 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 15:43:37.021270      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:38.022475      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:43:38.073
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:43:38.1
  E0420 15:43:39.036153      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:43:39.101883 13 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 04/20/24 15:43:39.129
  STEP: Creating a custom resource definition that should be denied by the webhook @ 04/20/24 15:43:39.165
  I0420 15:43:39.165796 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 15:43:39.358189 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5504" for this suite. @ 04/20/24 15:43:39.383
  STEP: Destroying namespace "webhook-markers-8588" for this suite. @ 04/20/24 15:43:39.401
• [4.820 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 04/20/24 15:43:39.421
  I0420 15:43:39.421151 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 15:43:39.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:43:39.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:43:39.461
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/20/24 15:43:39.466
  E0420 15:43:40.025341      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:41.025017      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:42.025294      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:43.026355      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:43:43.512
  I0420 15:43:43.521458 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-65cacb65-19f7-46b7-8efc-e6e1efa521fc container test-container: <nil>
  STEP: delete the pod @ 04/20/24 15:43:43.557
  I0420 15:43:43.584069 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6004" for this suite. @ 04/20/24 15:43:43.592
• [4.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 04/20/24 15:43:43.609
  I0420 15:43:43.609776 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 15:43:43.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:43:43.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:43:43.649
  STEP: Creating the pod @ 04/20/24 15:43:43.655
  E0420 15:43:44.028133      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:45.028257      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:46.028468      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:43:46.237748 13 pod_client.go:141] Successfully updated pod "labelsupdateac37e125-8b04-4d70-b0cc-9ee21e1e484b"
  E0420 15:43:47.028876      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:48.029085      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:49.029444      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:50.029675      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:43:50.290357 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8661" for this suite. @ 04/20/24 15:43:50.302
• [6.707 seconds]
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 04/20/24 15:43:50.316
  I0420 15:43:50.316893 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 15:43:50.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:43:50.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:43:50.351
  I0420 15:43:50.362449 13 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-2913"
  I0420 15:43:50.375948 13 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-2913"
  STEP: waiting for a new root ca configmap created @ 04/20/24 15:43:50.877
  I0420 15:43:50.883865 13 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-2913"
  I0420 15:43:50.901302 13 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-2913"
  E0420 15:43:51.030129      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 04/20/24 15:43:51.401
  I0420 15:43:51.407882 13 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-2913"
  I0420 15:43:51.408111 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2913" for this suite. @ 04/20/24 15:43:51.42
• [1.120 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 04/20/24 15:43:51.442
  I0420 15:43:51.442151 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 15:43:51.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:43:51.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:43:51.555
  I0420 15:43:51.563069 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-4399 version'
  I0420 15:43:51.780571 13 builder.go:146] stderr: ""
  I0420 15:43:51.780676 13 builder.go:147] stdout: "Client Version: v1.30.0\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.30.0\n"
  I0420 15:43:51.781427 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4399" for this suite. @ 04/20/24 15:43:51.793
• [0.371 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 04/20/24 15:43:51.813
  I0420 15:43:51.813546 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:43:51.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:43:51.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:43:51.855
  STEP: Setting up server cert @ 04/20/24 15:43:51.894
  E0420 15:43:52.030271      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:43:52.668
  STEP: Deploying the webhook pod @ 04/20/24 15:43:52.683
  STEP: Wait for the deployment to be ready @ 04/20/24 15:43:52.712
  I0420 15:43:52.742396 13 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 15:43:53.031112      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:54.031471      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:43:54.767
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:43:54.792
  E0420 15:43:55.032922      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:43:55.793504 13 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 04/20/24 15:43:55.813
  I0420 15:43:55.929784 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-671" for this suite. @ 04/20/24 15:43:55.945
  STEP: Destroying namespace "webhook-markers-4980" for this suite. @ 04/20/24 15:43:55.975
• [4.174 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 04/20/24 15:43:55.987
  I0420 15:43:55.988027 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename runtimeclass @ 04/20/24 15:43:55.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:43:56.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:43:56.021
  E0420 15:43:56.033663      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting RuntimeClass runtimeclass-6551-delete-me @ 04/20/24 15:43:56.034
  STEP: Waiting for the RuntimeClass to disappear @ 04/20/24 15:43:56.044
  I0420 15:43:56.061886 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6551" for this suite. @ 04/20/24 15:43:56.074
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 04/20/24 15:43:56.086
  I0420 15:43:56.086425 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename secrets @ 04/20/24 15:43:56.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:43:56.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:43:56.124
  STEP: Creating secret with name secret-test-78edb085-1cdd-4bb1-aab2-ad69aca81435 @ 04/20/24 15:43:56.129
  STEP: Creating a pod to test consume secrets @ 04/20/24 15:43:56.137
  E0420 15:43:57.034181      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:58.035461      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:43:59.035417      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:00.035802      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:44:00.2
  I0420 15:44:00.220086 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-secrets-5b2baa0a-50c3-4ea6-8f42-e6da699ac2c0 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 15:44:00.239
  I0420 15:44:00.305400 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7317" for this suite. @ 04/20/24 15:44:00.317
• [4.242 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 04/20/24 15:44:00.329
  I0420 15:44:00.329205 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename dns @ 04/20/24 15:44:00.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:44:00.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:44:00.371
  STEP: Creating a test externalName service @ 04/20/24 15:44:00.376
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7225.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-7225.svc.cluster.local; sleep 1; done
   @ 04/20/24 15:44:00.39
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7225.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7225.svc.cluster.local; sleep 1; done
   @ 04/20/24 15:44:00.39
  STEP: creating a pod to probe DNS @ 04/20/24 15:44:00.39
  STEP: submitting the pod to kubernetes @ 04/20/24 15:44:00.39
  E0420 15:44:01.036397      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:02.036806      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/20/24 15:44:02.432
  STEP: looking for the results for each expected name from probers @ 04/20/24 15:44:02.444
  I0420 15:44:02.487607 13 dns_common.go:552] DNS probes using dns-test-fd846a19-ea25-4963-bdef-eaab6f4274e8 succeeded

  STEP: changing the externalName to bar.example.com @ 04/20/24 15:44:02.487
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7225.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-7225.svc.cluster.local; sleep 1; done
   @ 04/20/24 15:44:02.518
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7225.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7225.svc.cluster.local; sleep 1; done
   @ 04/20/24 15:44:02.518
  STEP: creating a second pod to probe DNS @ 04/20/24 15:44:02.518
  STEP: submitting the pod to kubernetes @ 04/20/24 15:44:02.519
  E0420 15:44:03.037228      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:04.037612      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/20/24 15:44:04.553
  STEP: looking for the results for each expected name from probers @ 04/20/24 15:44:04.56
  I0420 15:44:04.573995 13 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-7225.svc.cluster.local from pod  dns-7225/dns-test-8b0d1256-04a1-405a-b0eb-ea38b698794b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0420 15:44:04.582001 13 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-7225.svc.cluster.local from pod  dns-7225/dns-test-8b0d1256-04a1-405a-b0eb-ea38b698794b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0420 15:44:04.582151 13 dns_common.go:489] Lookups using dns-7225/dns-test-8b0d1256-04a1-405a-b0eb-ea38b698794b failed for: [wheezy_udp@dns-test-service-3.dns-7225.svc.cluster.local jessie_udp@dns-test-service-3.dns-7225.svc.cluster.local]

  I0420 15:44:04.601358 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 15:44:04.620757 13 dns_common.go:495] Pod client logs for querier: 
  I0420 15:44:04.640394 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 15:44:05.038386      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:06.038660      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:07.039894      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:08.040449      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:09.041048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:44:09.576441 13 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-7225.svc.cluster.local from pod  dns-7225/dns-test-8b0d1256-04a1-405a-b0eb-ea38b698794b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0420 15:44:09.585244 13 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-7225.svc.cluster.local from pod  dns-7225/dns-test-8b0d1256-04a1-405a-b0eb-ea38b698794b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0420 15:44:09.585327 13 dns_common.go:489] Lookups using dns-7225/dns-test-8b0d1256-04a1-405a-b0eb-ea38b698794b failed for: [wheezy_udp@dns-test-service-3.dns-7225.svc.cluster.local jessie_udp@dns-test-service-3.dns-7225.svc.cluster.local]

  I0420 15:44:09.597378 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 15:44:09.608231 13 dns_common.go:495] Pod client logs for querier: 
  I0420 15:44:09.619803 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 15:44:10.042138      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:11.043060      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:12.042936      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:13.043631      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:14.044052      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:44:14.574353 13 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-7225.svc.cluster.local from pod  dns-7225/dns-test-8b0d1256-04a1-405a-b0eb-ea38b698794b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0420 15:44:14.585051 13 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-7225.svc.cluster.local from pod  dns-7225/dns-test-8b0d1256-04a1-405a-b0eb-ea38b698794b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0420 15:44:14.585447 13 dns_common.go:489] Lookups using dns-7225/dns-test-8b0d1256-04a1-405a-b0eb-ea38b698794b failed for: [wheezy_udp@dns-test-service-3.dns-7225.svc.cluster.local jessie_udp@dns-test-service-3.dns-7225.svc.cluster.local]

  I0420 15:44:14.600274 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 15:44:14.617623 13 dns_common.go:495] Pod client logs for querier: 
  I0420 15:44:14.637522 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 15:44:15.044244      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:16.045410      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:17.046450      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:18.046925      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:19.047077      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:44:19.576605 13 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-7225.svc.cluster.local from pod  dns-7225/dns-test-8b0d1256-04a1-405a-b0eb-ea38b698794b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0420 15:44:19.589516 13 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-7225.svc.cluster.local from pod  dns-7225/dns-test-8b0d1256-04a1-405a-b0eb-ea38b698794b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0420 15:44:19.589692 13 dns_common.go:489] Lookups using dns-7225/dns-test-8b0d1256-04a1-405a-b0eb-ea38b698794b failed for: [wheezy_udp@dns-test-service-3.dns-7225.svc.cluster.local jessie_udp@dns-test-service-3.dns-7225.svc.cluster.local]

  I0420 15:44:19.610022 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 15:44:19.626587 13 dns_common.go:495] Pod client logs for querier: 
  I0420 15:44:19.643812 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 15:44:20.047629      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:21.048508      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:22.048714      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:23.048958      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:24.049202      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:44:24.571615 13 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-7225.svc.cluster.local from pod  dns-7225/dns-test-8b0d1256-04a1-405a-b0eb-ea38b698794b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0420 15:44:24.580755 13 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-7225.svc.cluster.local from pod  dns-7225/dns-test-8b0d1256-04a1-405a-b0eb-ea38b698794b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0420 15:44:24.580841 13 dns_common.go:489] Lookups using dns-7225/dns-test-8b0d1256-04a1-405a-b0eb-ea38b698794b failed for: [wheezy_udp@dns-test-service-3.dns-7225.svc.cluster.local jessie_udp@dns-test-service-3.dns-7225.svc.cluster.local]

  I0420 15:44:24.595628 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 15:44:24.613999 13 dns_common.go:495] Pod client logs for querier: 
  I0420 15:44:24.629293 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 15:44:25.050189      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:26.051080      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:27.051231      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:28.052364      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:29.052547      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:44:29.580038 13 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-7225.svc.cluster.local from pod  dns-7225/dns-test-8b0d1256-04a1-405a-b0eb-ea38b698794b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0420 15:44:29.592358 13 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-7225.svc.cluster.local from pod  dns-7225/dns-test-8b0d1256-04a1-405a-b0eb-ea38b698794b contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0420 15:44:29.592486 13 dns_common.go:489] Lookups using dns-7225/dns-test-8b0d1256-04a1-405a-b0eb-ea38b698794b failed for: [wheezy_udp@dns-test-service-3.dns-7225.svc.cluster.local jessie_udp@dns-test-service-3.dns-7225.svc.cluster.local]

  I0420 15:44:29.610312 13 dns_common.go:495] Pod client logs for webserver: 
  I0420 15:44:29.625533 13 dns_common.go:495] Pod client logs for querier: 
  I0420 15:44:29.646420 13 dns_common.go:495] Pod client logs for jessie-querier: 
  E0420 15:44:30.053169      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:31.054145      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:32.054353      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:33.055124      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:34.055966      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:44:34.578779 13 dns_common.go:552] DNS probes using dns-test-8b0d1256-04a1-405a-b0eb-ea38b698794b succeeded

  STEP: changing the service to type=ClusterIP @ 04/20/24 15:44:34.578
  W0420 15:44:34.611765      13 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7225.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-7225.svc.cluster.local; sleep 1; done
   @ 04/20/24 15:44:34.612
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7225.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-7225.svc.cluster.local; sleep 1; done
   @ 04/20/24 15:44:34.612
  STEP: creating a third pod to probe DNS @ 04/20/24 15:44:34.612
  STEP: submitting the pod to kubernetes @ 04/20/24 15:44:34.622
  E0420 15:44:35.056571      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:36.057816      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/20/24 15:44:36.685
  STEP: looking for the results for each expected name from probers @ 04/20/24 15:44:36.693
  I0420 15:44:36.718225 13 dns_common.go:552] DNS probes using dns-test-ab13a4ac-93b5-4a2d-8e8f-0ac7eddbc63e succeeded

  STEP: deleting the pod @ 04/20/24 15:44:36.718
  STEP: deleting the pod @ 04/20/24 15:44:36.749
  STEP: deleting the pod @ 04/20/24 15:44:36.778
  STEP: deleting the test externalName service @ 04/20/24 15:44:36.795
  I0420 15:44:36.839478 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7225" for this suite. @ 04/20/24 15:44:36.865
• [36.555 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 04/20/24 15:44:36.885
  I0420 15:44:36.885407 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename watch @ 04/20/24 15:44:36.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:44:36.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:44:36.947
  STEP: creating a watch on configmaps @ 04/20/24 15:44:36.957
  STEP: creating a new configmap @ 04/20/24 15:44:36.96
  STEP: modifying the configmap once @ 04/20/24 15:44:36.972
  STEP: closing the watch once it receives two notifications @ 04/20/24 15:44:36.988
  I0420 15:44:36.988853 13 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2450  67c440a8-dbdc-462a-8a1c-d91dce4b2eb4 79302 0 2024-04-20 15:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-20 15:44:37 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0420 15:44:36.989167 13 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2450  67c440a8-dbdc-462a-8a1c-d91dce4b2eb4 79304 0 2024-04-20 15:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-20 15:44:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 04/20/24 15:44:36.989
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 04/20/24 15:44:37.003
  STEP: deleting the configmap @ 04/20/24 15:44:37.005
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 04/20/24 15:44:37.017
  I0420 15:44:37.018028 13 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2450  67c440a8-dbdc-462a-8a1c-d91dce4b2eb4 79305 0 2024-04-20 15:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-20 15:44:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0420 15:44:37.018261 13 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2450  67c440a8-dbdc-462a-8a1c-d91dce4b2eb4 79306 0 2024-04-20 15:44:37 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-20 15:44:37 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0420 15:44:37.019149 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2450" for this suite. @ 04/20/24 15:44:37.028
• [0.154 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 04/20/24 15:44:37.039
  I0420 15:44:37.040197 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 15:44:37.044
  E0420 15:44:37.058387      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:44:37.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:44:37.082
  E0420 15:44:38.058800      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:39.059048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:40.060334      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:41.062075      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:42.062183      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:43.062328      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:44.062666      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:45.063206      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:46.063459      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:47.064350      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:48.064560      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:49.065108      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:50.065864      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:51.067029      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:52.066463      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:53.067155      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:54.068191      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:55.068474      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:56.068626      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:57.069182      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:58.069457      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:44:59.069568      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:44:59.224909 13 container_probe.go:92] Container started at 2024-04-20 15:44:37 +0000 UTC, pod became ready at 2024-04-20 15:44:57 +0000 UTC
  I0420 15:44:59.225271 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3563" for this suite. @ 04/20/24 15:44:59.234
• [22.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 04/20/24 15:44:59.255
  I0420 15:44:59.255874 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename svcaccounts @ 04/20/24 15:44:59.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:44:59.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:44:59.296
  STEP: Creating a pod to test service account token:  @ 04/20/24 15:44:59.301
  E0420 15:45:00.069678      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:01.070149      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:02.070584      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:03.070647      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:45:03.346
  I0420 15:45:03.355236 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod test-pod-1d0b0aa3-2eb1-4ff2-b141-bb8e225d6746 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 15:45:03.375
  I0420 15:45:03.411217 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4755" for this suite. @ 04/20/24 15:45:03.42
• [4.177 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 04/20/24 15:45:03.433
  I0420 15:45:03.434048 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 15:45:03.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:03.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:03.486
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/20/24 15:45:03.492
  I0420 15:45:03.493077 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-6661 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0420 15:45:03.678914 13 builder.go:146] stderr: ""
  I0420 15:45:03.680863 13 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/20/24 15:45:03.68
  I0420 15:45:03.692217 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-6661 delete pods e2e-test-httpd-pod'
  E0420 15:45:04.071053      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:05.071193      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:45:05.946929 13 builder.go:146] stderr: ""
  I0420 15:45:05.947022 13 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0420 15:45:05.947352 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6661" for this suite. @ 04/20/24 15:45:05.969
• [2.554 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 04/20/24 15:45:05.991
  I0420 15:45:05.991428 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename configmap @ 04/20/24 15:45:05.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:06.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:06.045
  STEP: Creating configMap with name configmap-test-volume-map-7aff6787-572f-4f7e-b885-e3ff797174aa @ 04/20/24 15:45:06.053
  STEP: Creating a pod to test consume configMaps @ 04/20/24 15:45:06.063
  E0420 15:45:06.071792      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:07.072978      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:08.073878      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:09.074067      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:10.074347      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:45:10.119
  I0420 15:45:10.127088 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-configmaps-82131065-e054-4e8e-aae0-714069b2c1a9 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 15:45:10.146
  I0420 15:45:10.196692 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5372" for this suite. @ 04/20/24 15:45:10.213
• [4.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 04/20/24 15:45:10.242
  I0420 15:45:10.243053 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:45:10.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:10.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:10.313
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 15:45:10.318
  E0420 15:45:11.075601      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:12.076471      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:13.077024      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:14.077632      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:45:14.386
  I0420 15:45:14.395512 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod downwardapi-volume-fee0f149-c1df-4a45-a1f5-e5a8da0650a9 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 15:45:14.41
  I0420 15:45:14.439385 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5736" for this suite. @ 04/20/24 15:45:14.449
• [4.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 04/20/24 15:45:14.467
  I0420 15:45:14.467779 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/20/24 15:45:14.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:14.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:14.514
  STEP: creating a target pod @ 04/20/24 15:45:14.52
  E0420 15:45:15.077737      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:16.078779      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 04/20/24 15:45:16.562
  E0420 15:45:17.079837      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:18.082703      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 04/20/24 15:45:18.602
  I0420 15:45:18.604381 13 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4539 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 15:45:18.604484 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 15:45:18.607918 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 15:45:18.608177 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-4539/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0420 15:45:18.745285 13 exec_util.go:106] Exec stderr: ""
  I0420 15:45:18.791045 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4539" for this suite. @ 04/20/24 15:45:18.799
• [4.343 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 04/20/24 15:45:18.814
  I0420 15:45:18.815008 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename tables @ 04/20/24 15:45:18.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:18.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:18.852
  I0420 15:45:18.863411 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-6122" for this suite. @ 04/20/24 15:45:18.873
• [0.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 04/20/24 15:45:18.888
  I0420 15:45:18.888208 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 15:45:18.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:18.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:18.924
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 04/20/24 15:45:18.93
  E0420 15:45:19.080263      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:20.081300      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replicaset with a matching selector is created @ 04/20/24 15:45:20.967
  STEP: Then the orphan pod is adopted @ 04/20/24 15:45:20.978
  E0420 15:45:21.082135      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 04/20/24 15:45:21.998
  I0420 15:45:22.006899 13 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/20/24 15:45:22.028
  E0420 15:45:22.095337      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:45:23.051594 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6027" for this suite. @ 04/20/24 15:45:23.063
• [4.187 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 04/20/24 15:45:23.076
  I0420 15:45:23.076603 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 15:45:23.082
  E0420 15:45:23.095546      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:23.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:23.131
  STEP: Creating the pod @ 04/20/24 15:45:23.137
  E0420 15:45:24.096380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:25.096559      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:45:25.728979 13 pod_client.go:141] Successfully updated pod "annotationupdate9c0da69d-75cd-4c27-bf7a-9623180deab5"
  E0420 15:45:26.096883      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:27.097126      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:45:27.761071 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3701" for this suite. @ 04/20/24 15:45:27.773
• [4.709 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 04/20/24 15:45:27.786
  I0420 15:45:27.786832 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename container-runtime @ 04/20/24 15:45:27.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:27.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:27.826
  STEP: create the container @ 04/20/24 15:45:27.832
  W0420 15:45:27.851931      13 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/20/24 15:45:27.852
  E0420 15:45:28.097794      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:29.098527      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:30.099518      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/20/24 15:45:30.895
  STEP: the container should be terminated @ 04/20/24 15:45:30.902
  STEP: the termination message should be set @ 04/20/24 15:45:30.903
  I0420 15:45:30.903259 13 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 04/20/24 15:45:30.903
  I0420 15:45:30.935274 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8942" for this suite. @ 04/20/24 15:45:30.946
• [3.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 04/20/24 15:45:30.96
  I0420 15:45:30.960914 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename proxy @ 04/20/24 15:45:30.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:30.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:31.003
  I0420 15:45:31.009329 13 proxy.go:293] Creating pod...
  E0420 15:45:31.100594      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:32.101018      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:45:33.061814 13 proxy.go:317] Creating service...
  I0420 15:45:33.097179 13 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7316/pods/agnhost/proxy/some/path/with/DELETE
  E0420 15:45:33.102436      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:45:33.140321 13 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0420 15:45:33.140428 13 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7316/pods/agnhost/proxy/some/path/with/GET
  I0420 15:45:33.157662 13 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0420 15:45:33.159317 13 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7316/pods/agnhost/proxy/some/path/with/HEAD
  I0420 15:45:33.170435 13 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0420 15:45:33.170508 13 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7316/pods/agnhost/proxy/some/path/with/OPTIONS
  I0420 15:45:33.185475 13 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0420 15:45:33.185566 13 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7316/pods/agnhost/proxy/some/path/with/PATCH
  I0420 15:45:33.203205 13 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0420 15:45:33.203299 13 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7316/pods/agnhost/proxy/some/path/with/POST
  I0420 15:45:33.210747 13 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0420 15:45:33.210947 13 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7316/pods/agnhost/proxy/some/path/with/PUT
  I0420 15:45:33.219038 13 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0420 15:45:33.219142 13 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7316/services/test-service/proxy/some/path/with/DELETE
  I0420 15:45:33.233598 13 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0420 15:45:33.233690 13 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7316/services/test-service/proxy/some/path/with/GET
  I0420 15:45:33.251865 13 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0420 15:45:33.251963 13 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7316/services/test-service/proxy/some/path/with/HEAD
  I0420 15:45:33.263039 13 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0420 15:45:33.263611 13 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7316/services/test-service/proxy/some/path/with/OPTIONS
  I0420 15:45:33.276622 13 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0420 15:45:33.276740 13 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7316/services/test-service/proxy/some/path/with/PATCH
  I0420 15:45:33.287284 13 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0420 15:45:33.287454 13 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7316/services/test-service/proxy/some/path/with/POST
  I0420 15:45:33.302830 13 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0420 15:45:33.303294 13 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7316/services/test-service/proxy/some/path/with/PUT
  I0420 15:45:33.313290 13 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0420 15:45:33.314135 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7316" for this suite. @ 04/20/24 15:45:33.325
• [2.383 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 04/20/24 15:45:33.344
  I0420 15:45:33.344563 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename dns @ 04/20/24 15:45:33.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:33.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:33.378
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/20/24 15:45:33.384
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/20/24 15:45:33.384
  STEP: creating a pod to probe DNS @ 04/20/24 15:45:33.384
  STEP: submitting the pod to kubernetes @ 04/20/24 15:45:33.384
  E0420 15:45:34.103599      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:35.104099      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/20/24 15:45:35.42
  STEP: looking for the results for each expected name from probers @ 04/20/24 15:45:35.427
  I0420 15:45:35.468796 13 dns_common.go:527] DNS probes using dns-1368/dns-test-350020b8-c38a-4acd-bc8b-8ceb24959cc4 succeeded

  STEP: deleting the pod @ 04/20/24 15:45:35.469
  I0420 15:45:35.497808 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1368" for this suite. @ 04/20/24 15:45:35.509
• [2.179 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:833
  STEP: Creating a kubernetes client @ 04/20/24 15:45:35.523
  I0420 15:45:35.523666 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename job @ 04/20/24 15:45:35.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:35.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:35.568
  STEP: Creating a job @ 04/20/24 15:45:35.575
  STEP: Ensure pods equal to parallelism count is attached to the job @ 04/20/24 15:45:35.586
  E0420 15:45:36.104420      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:37.105279      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 04/20/24 15:45:37.596
  STEP: updating /status @ 04/20/24 15:45:37.611
  STEP: get /status @ 04/20/24 15:45:37.629
  I0420 15:45:37.637012 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9828" for this suite. @ 04/20/24 15:45:37.646
• [2.136 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 04/20/24 15:45:37.66
  I0420 15:45:37.660614 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:45:37.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:37.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:37.699
  STEP: Creating configMap with name projected-configmap-test-volume-map-30370521-76c8-4523-b0fc-63874313e655 @ 04/20/24 15:45:37.704
  STEP: Creating a pod to test consume configMaps @ 04/20/24 15:45:37.713
  E0420 15:45:38.105856      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:39.106204      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:40.106346      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:41.106695      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:45:41.76
  I0420 15:45:41.767297 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-projected-configmaps-21a7d223-dd91-4061-abeb-0e8e3ec5a681 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 15:45:41.783
  I0420 15:45:41.813340 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9601" for this suite. @ 04/20/24 15:45:41.825
• [4.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1048
  STEP: Creating a kubernetes client @ 04/20/24 15:45:41.847
  I0420 15:45:41.847114 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 15:45:41.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:41.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:41.882
  STEP: create deployment with httpd image @ 04/20/24 15:45:41.887
  I0420 15:45:41.888488 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-5033 create -f -'
  E0420 15:45:42.107896      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:45:42.138415 13 builder.go:146] stderr: ""
  I0420 15:45:42.138823 13 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 04/20/24 15:45:42.138
  I0420 15:45:42.139296 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-5033 diff -f -'
  I0420 15:45:42.533161 13 builder.go:135] rc: 1
  I0420 15:45:42.534790 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-5033 delete -f -'
  I0420 15:45:42.794302 13 builder.go:146] stderr: ""
  I0420 15:45:42.794411 13 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0420 15:45:42.794697 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5033" for this suite. @ 04/20/24 15:45:42.824
• [0.997 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 04/20/24 15:45:42.844
  I0420 15:45:42.844598 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:45:42.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:42.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:42.899
  STEP: Creating the pod @ 04/20/24 15:45:42.939
  E0420 15:45:43.109988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:44.109072      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:45.110274      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:45:45.538629 13 pod_client.go:141] Successfully updated pod "labelsupdatedf262350-8d8f-4199-8c52-41120953f6ee"
  E0420 15:45:46.110282      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:47.111329      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:45:47.568006 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3311" for this suite. @ 04/20/24 15:45:47.578
• [4.745 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 04/20/24 15:45:47.591
  I0420 15:45:47.591250 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 15:45:47.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:47.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:47.626
  STEP: Creating configMap with name projected-configmap-test-volume-001aa463-cac0-4a9e-9059-18684ab3ab29 @ 04/20/24 15:45:47.63
  STEP: Creating a pod to test consume configMaps @ 04/20/24 15:45:47.638
  E0420 15:45:48.111627      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:49.112961      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:50.112836      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:51.113974      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:45:51.682
  I0420 15:45:51.689009 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-projected-configmaps-558e3869-83c5-42ab-9c61-72ccc1477c68 container agnhost-container: <nil>
  STEP: delete the pod @ 04/20/24 15:45:51.702
  I0420 15:45:51.741113 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7411" for this suite. @ 04/20/24 15:45:51.755
• [4.183 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 04/20/24 15:45:51.774
  I0420 15:45:51.774510 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 15:45:51.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:51.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:51.811
  STEP: Creating a pod to test downward api env vars @ 04/20/24 15:45:51.816
  E0420 15:45:52.113814      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:53.114969      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:54.115590      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:55.116433      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:45:55.867
  I0420 15:45:55.874597 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod downward-api-5a27781a-09cf-4c6f-aeab-a6851f0991ba container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 15:45:55.892
  I0420 15:45:55.929498 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7548" for this suite. @ 04/20/24 15:45:55.943
• [4.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 04/20/24 15:45:55.963
  I0420 15:45:55.963362 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename container-probe @ 04/20/24 15:45:55.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:45:56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:45:56.011
  STEP: Creating pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194 @ 04/20/24 15:45:56.017
  E0420 15:45:56.117394      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:57.118487      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/20/24 15:45:58.052
  I0420 15:45:58.060618 13 container_probe.go:1749] Initial restart count of pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a is 0
  I0420 15:45:58.070493 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:45:58.119236      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:45:59.119981      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:00.077502 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:00.120619      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:01.121694      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:02.088773 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:02.122448      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:03.123192      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:04.098765 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:04.123692      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:05.124479      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:06.109826 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:06.125555      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:07.125800      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:08.125498 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:08.125918      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:09.126444      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:10.127140      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:10.138388 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:11.127063      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:12.128464      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:12.153098 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:13.129522      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:14.138281      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:14.162874 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:15.135216      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:16.135372      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:16.171614 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:17.135924      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:18.137339      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:18.186021 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:19.136946      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:20.137800      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:20.201841 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:21.137916      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:22.138951      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:22.210128 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:23.139256      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:24.139648      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:24.223645 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:25.140329      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:26.140484      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:26.235517 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:27.140512      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:28.141310      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:28.271189 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:29.141806      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:30.142394      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:30.284889 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:31.142347      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:32.143387      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:32.295390 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:33.144121      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:34.144374      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:34.305201 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:35.144474      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:36.145349      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:36.314536 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:37.145511      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:38.146684      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:38.324962 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:39.147016      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:40.147199      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:40.334239 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:41.147990      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:42.148338      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:42.343113 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:43.149007      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:44.149167      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:44.350127 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:45.149460      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:46.150072      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:46.365477 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:47.150224      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:48.150611      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:48.378591 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:49.150704      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:50.151473      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:50.392645 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:51.151906      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:52.153069      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:52.400849 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:53.154170      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:54.154571      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:54.416083 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:55.154652      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:56.154930      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:56.423679 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:57.155258      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:46:58.156586      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:46:58.432900 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:46:59.157000      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:00.157096      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:00.443120 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:01.158374      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:02.158544      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:02.458226 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:03.159317      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:04.159653      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:04.469879 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:05.159765      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:06.160164      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:06.481570 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:07.161290      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:08.162412      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:08.491953 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:09.162981      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:10.163808      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:10.501256 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:11.164411      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:12.164303      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:12.508131 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:13.164931      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:14.165595      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:14.518131 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:15.165638      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:16.165923      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:16.527095 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:17.167197      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:18.167186      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:18.536188 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:19.167478      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:20.169103      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:20.544516 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:21.169117      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:22.175109      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:22.553103 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:23.176204      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:24.176127      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:24.566487 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:25.177109      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:26.176885      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:26.573100 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:27.176947      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:28.177884      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:28.581779 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:29.178120      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:30.178611      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:30.589248 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:31.179000      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:32.180137      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:32.599290 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:33.181054      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:34.181696      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:34.607532 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:35.182218      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:36.182854      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:36.615911 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:37.183977      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:38.184199      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:38.626697 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:39.185189      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:40.185577      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:40.634870 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:41.185764      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:42.186020      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:42.640889 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:43.187019      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:44.187349      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:44.648517 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:45.187903      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:46.188197      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:46.668076 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:47.189037      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:48.189106      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:48.676155 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:49.189642      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:50.190087      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:50.695326 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:51.190928      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:52.191159      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:52.703994 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:53.191337      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:54.191915      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:54.727516 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:55.192924      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:56.193446      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:56.740594 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:57.193504      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:47:58.194508      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:47:58.754955 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:47:59.195172      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:00.195491      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:00.778018 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:01.196526      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:02.196948      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:02.797119 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:03.197648      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:04.198011      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:04.805814 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:05.198200      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:06.199191      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:06.813459 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:07.200400      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:08.200227      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:08.829188 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:09.200602      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:10.201695      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:10.840352 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:11.201653      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:12.202478      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:12.853234 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:13.202482      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:14.203309      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:14.863032 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:15.204265      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:16.204587      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:16.873842 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:17.205047      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:18.205487      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:18.885497 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:19.206394      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:20.207574      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:20.899202 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:21.209863      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:22.209220      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:22.910597 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:23.209773      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:24.210039      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:24.920469 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:25.210373      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:26.211313      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:26.931783 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:27.212248      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:28.213208      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:28.945019 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:29.214258      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:30.215107      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:30.957147 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:31.215619      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:32.215906      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:32.970004 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:33.216369      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:34.217204      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:34.978173 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:35.217436      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:36.223673      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:36.995413 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:37.219495      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:38.220388      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:39.004458 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:39.221230      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:40.221139      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:41.015980 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:41.222219      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:42.223368      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:43.037203 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:43.223518      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:44.224253      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:45.048171 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:45.225445      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:46.226343      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:47.055856 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:47.227175      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:48.228196      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:49.067192 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:49.228551      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:50.229391      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:51.078767 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:51.230028      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:52.230394      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:53.091425 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:53.231104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:54.231084      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:55.098429 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:55.232015      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:56.232095      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:57.108319 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:57.232814      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:48:58.233002      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:48:59.116740 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:48:59.233200      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:00.233423      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:01.127549 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:01.234009      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:02.234418      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:03.137211 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:03.234333      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:04.234630      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:05.148959 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:05.235103      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:06.236081      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:07.158319 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:07.236600      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:08.237267      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:09.171898 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:09.237914      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:10.238666      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:11.177695 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:11.238850      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:12.239453      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:13.189414 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:13.239470      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:14.240561      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:15.196406 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:15.240502      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:16.241759      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:17.210163 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:17.241920      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:18.242298      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:19.219138 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:19.242927      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:20.243054      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:21.236881 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:21.243878      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:22.244329      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:23.244487      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:23.251409 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:24.245170      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:25.245451      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:25.264082 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:26.246193      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:27.246532      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:27.272120 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:28.247587      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:29.247643      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:29.287801 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:30.248200      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:31.248456      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:31.297542 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:32.249090      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:33.250537      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:33.309179 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:34.250552      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:35.251679      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:35.324175 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:36.251959      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:37.252146      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:37.336840 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:38.252113      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:39.253911      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:39.350002 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:40.253356      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:41.253586      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:41.361420 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:42.254146      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:43.254353      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:43.376556 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:44.254645      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:45.255572      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:45.388884 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:46.255839      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:47.256386      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:47.401687 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:48.256402      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:49.256862      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:49.414913 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:50.257599      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:51.258173      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:51.423960 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:52.258546      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:53.259907      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:53.433133 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:54.259959      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:55.260060      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:55.441339 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:56.260361      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:57.260505      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:49:57.450649 13 container_probe.go:1759] Get pod test-grpc-e00e0fd7-b6c6-45af-b1b2-ab5aaf08794a in namespace container-probe-1194
  E0420 15:49:58.260862      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:49:59.261484      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 04/20/24 15:49:59.452
  I0420 15:49:59.476022 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1194" for this suite. @ 04/20/24 15:49:59.49
• [243.549 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 04/20/24 15:49:59.517
  I0420 15:49:59.517478 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/20/24 15:49:59.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:49:59.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:49:59.564
  I0420 15:49:59.570529 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 15:50:00.177458 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6832" for this suite. @ 04/20/24 15:50:00.199
• [0.715 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 04/20/24 15:50:00.233
  I0420 15:50:00.233992 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename ingress @ 04/20/24 15:50:00.237
  E0420 15:50:00.261854      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:50:00.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:50:00.325
  STEP: getting /apis @ 04/20/24 15:50:00.33
  STEP: getting /apis/networking.k8s.io @ 04/20/24 15:50:00.34
  STEP: getting /apis/networking.k8s.iov1 @ 04/20/24 15:50:00.341
  STEP: creating @ 04/20/24 15:50:00.344
  STEP: getting @ 04/20/24 15:50:00.391
  STEP: listing @ 04/20/24 15:50:00.398
  STEP: watching @ 04/20/24 15:50:00.402
  I0420 15:50:00.402785 13 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 04/20/24 15:50:00.405
  STEP: cluster-wide watching @ 04/20/24 15:50:00.41
  I0420 15:50:00.410918 13 ingress.go:198] starting watch
  STEP: patching @ 04/20/24 15:50:00.412
  STEP: updating @ 04/20/24 15:50:00.423
  I0420 15:50:00.435440 13 ingress.go:221] waiting for watch events with expected annotations
  I0420 15:50:00.435576 13 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 04/20/24 15:50:00.435
  STEP: updating /status @ 04/20/24 15:50:00.444
  STEP: get /status @ 04/20/24 15:50:00.456
  STEP: deleting @ 04/20/24 15:50:00.464
  STEP: deleting a collection @ 04/20/24 15:50:00.486
  I0420 15:50:00.515954 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-957" for this suite. @ 04/20/24 15:50:00.526
• [0.307 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 04/20/24 15:50:00.547
  I0420 15:50:00.548554 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename limitrange @ 04/20/24 15:50:00.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:50:00.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:50:00.585
  STEP: Creating LimitRange "e2e-limitrange-7wcm2" in namespace "limitrange-2324" @ 04/20/24 15:50:00.591
  STEP: Creating another limitRange in another namespace @ 04/20/24 15:50:00.602
  I0420 15:50:00.628163 13 limit_range.go:299] Namespace "e2e-limitrange-7wcm2-908" created
  I0420 15:50:00.629254 13 limit_range.go:300] Creating LimitRange "e2e-limitrange-7wcm2" in namespace "e2e-limitrange-7wcm2-908"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-7wcm2" @ 04/20/24 15:50:00.645
  I0420 15:50:00.650305 13 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-7wcm2" in "limitrange-2324" namespace @ 04/20/24 15:50:00.65
  I0420 15:50:00.667255 13 limit_range.go:335] LimitRange "e2e-limitrange-7wcm2" has been patched
  STEP: Delete LimitRange "e2e-limitrange-7wcm2" by Collection with labelSelector: "e2e-limitrange-7wcm2=patched" @ 04/20/24 15:50:00.668
  STEP: Confirm that the limitRange "e2e-limitrange-7wcm2" has been deleted @ 04/20/24 15:50:00.689
  I0420 15:50:00.689476 13 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0420 15:50:00.698490 13 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-7wcm2=patched"
  I0420 15:50:00.698573 13 limit_range.go:344] LimitRange "e2e-limitrange-7wcm2" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-7wcm2" @ 04/20/24 15:50:00.698
  I0420 15:50:00.710381 13 limit_range.go:350] Found 1 limitRange
  I0420 15:50:00.711556 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2324" for this suite. @ 04/20/24 15:50:00.722
  STEP: Destroying namespace "e2e-limitrange-7wcm2-908" for this suite. @ 04/20/24 15:50:00.736
• [0.201 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 04/20/24 15:50:00.748
  I0420 15:50:00.748957 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename subpath @ 04/20/24 15:50:00.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:50:00.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:50:00.796
  STEP: Setting up data @ 04/20/24 15:50:00.803
  STEP: Creating pod pod-subpath-test-secret-7rvz @ 04/20/24 15:50:00.822
  STEP: Creating a pod to test atomic-volume-subpath @ 04/20/24 15:50:00.823
  E0420 15:50:01.262141      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:02.262963      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:03.263234      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:04.263767      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:05.264810      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:06.266205      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:07.266280      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:08.266450      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:09.266848      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:10.267272      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:11.268067      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:12.268172      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:13.268556      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:14.268895      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:15.269809      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:16.270418      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:17.271300      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:18.271864      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:19.272309      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:20.273285      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:21.274331      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:22.275511      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:23.276521      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:24.276644      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:50:24.986
  I0420 15:50:24.996962 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-subpath-test-secret-7rvz container test-container-subpath-secret-7rvz: <nil>
  STEP: delete the pod @ 04/20/24 15:50:25.053
  STEP: Deleting pod pod-subpath-test-secret-7rvz @ 04/20/24 15:50:25.1
  I0420 15:50:25.101015 13 delete.go:62] Deleting pod "pod-subpath-test-secret-7rvz" in namespace "subpath-7040"
  I0420 15:50:25.108829 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7040" for this suite. @ 04/20/24 15:50:25.127
• [24.398 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 04/20/24 15:50:25.148
  I0420 15:50:25.148435 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename endpointslice @ 04/20/24 15:50:25.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:50:25.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:50:25.196
  E0420 15:50:25.277757      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:26.278114      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:27.278429      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 04/20/24 15:50:27.387
  STEP: referencing matching pods with named port @ 04/20/24 15:50:27.409
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 04/20/24 15:50:27.427
  STEP: recreating EndpointSlices after they've been deleted @ 04/20/24 15:50:27.443
  I0420 15:50:27.486801 13 endpointslice.go:938] EndpointSlice for Service endpointslice-9806/example-named-port not found
  E0420 15:50:28.279216      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:29.280004      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:50:29.510523 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9806" for this suite. @ 04/20/24 15:50:29.537
• [4.406 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 04/20/24 15:50:29.554
  I0420 15:50:29.555032 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename cronjob @ 04/20/24 15:50:29.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:50:29.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:50:29.605
  STEP: Creating a suspended cronjob @ 04/20/24 15:50:29.61
  STEP: Ensuring no jobs are scheduled @ 04/20/24 15:50:29.622
  E0420 15:50:30.280531      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:31.280966      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:32.281151      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:33.281419      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:34.282162      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:35.282496      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:36.282701      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:37.283628      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:38.284396      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:39.284676      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:40.285880      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:41.286198      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:42.287115      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:43.287547      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:44.287840      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:45.288443      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:46.288837      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:47.289556      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:48.289552      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:49.289945      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:50.290175      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:51.290804      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:52.290756      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:53.292000      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:54.292865      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:55.293318      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:56.294164      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:57.294468      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:58.294882      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:50:59.295494      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:00.295823      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:01.296560      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:02.297276      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:03.298347      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:04.299417      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:05.299629      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:06.300165      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:07.300689      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:08.301544      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:09.302134      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:10.302327      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:11.302684      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:12.303544      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:13.304472      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:14.305470      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:15.306866      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:16.307320      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:17.308051      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:18.309142      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:19.308906      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:20.309791      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:21.310518      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:22.310977      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:23.311029      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:24.311306      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:25.312147      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:26.312327      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:27.312677      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:28.313604      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:29.314452      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:30.315818      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:31.315796      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:32.316885      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:33.317344      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:34.318602      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:35.318644      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:36.319005      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:37.319402      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:38.319891      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:39.320104      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:40.320292      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:41.321121      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:42.321872      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:43.322882      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:44.322967      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:45.323136      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:46.323858      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:47.324471      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:48.324936      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:49.325846      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:50.325832      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:51.326076      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:52.326703      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:53.327100      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:54.327255      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:55.327363      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:56.328264      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:57.329064      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:58.329959      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:51:59.332034      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:00.331416      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:01.332229      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:02.333041      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:03.334017      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:04.334486      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:05.336051      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:06.335374      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:07.336507      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:08.337291      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:09.337970      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:10.338660      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:11.339637      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:12.340186      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:13.340504      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:14.340822      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:15.341482      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:16.341777      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:17.342144      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:18.342992      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:19.343548      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:20.343515      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:21.344387      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:22.345515      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:23.346466      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:24.346937      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:25.347316      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:26.348093      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:27.348585      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:28.349600      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:29.350166      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:30.351014      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:31.351973      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:32.352080      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:33.353549      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:34.354465      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:35.354697      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:36.355138      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:37.356416      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:38.356825      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:39.357040      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:40.357793      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:41.357892      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:42.358294      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:43.358779      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:44.359359      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:45.359580      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:46.360135      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:47.361406      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:48.361621      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:49.361570      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:50.362363      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:51.362945      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:52.363498      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:53.364252      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:54.364923      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:55.365091      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:56.365820      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:57.366363      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:58.368598      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:52:59.367788      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:00.368281      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:01.368209      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:02.369447      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:03.369679      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:04.369860      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:05.370587      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:06.371255      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:07.373889      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:08.374635      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:09.375060      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:10.375833      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:11.376169      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:12.376491      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:13.376471      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:14.377504      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:15.377569      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:16.378075      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:17.378442      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:18.379236      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:19.380065      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:20.380510      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:21.380797      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:22.381208      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:23.382168      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:24.386660      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:25.383398      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:26.383396      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:27.384420      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:28.385805      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:29.386079      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:30.386451      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:31.387314      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:32.388561      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:33.388584      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:34.389526      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:35.390509      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:36.390963      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:37.391258      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:38.392011      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:39.392013      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:40.392678      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:41.393653      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:42.393979      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:43.394490      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:44.395695      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:45.395962      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:46.396881      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:47.397457      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:48.397597      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:49.398210      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:50.398350      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:51.398694      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:52.399271      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:53.400290      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:54.400482      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:55.401231      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:56.402339      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:57.402395      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:58.402540      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:53:59.402901      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:00.403783      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:01.404117      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:02.405558      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:03.405704      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:04.406893      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:05.407369      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:06.408209      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:07.408386      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:08.409519      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:09.410247      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:10.410031      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:11.410400      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:12.410786      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:13.411479      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:14.412168      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:15.412402      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:16.412635      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:17.413522      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:18.413803      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:19.414008      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:20.415127      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:21.415320      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:22.416102      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:23.416472      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:24.417021      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:25.417580      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:26.418045      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:27.418279      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:28.418473      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:29.418477      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:30.426349      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:31.424700      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:32.426070      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:33.427039      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:34.426825      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:35.427179      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:36.427911      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:37.427966      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:38.428399      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:39.428613      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:40.429522      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:41.432457      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:42.430427      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:43.431235      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:44.437603      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:45.431859      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:46.432880      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:47.432401      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:48.433634      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:49.433783      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:50.435963      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:51.435037      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:52.434869      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:53.435331      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:54.435673      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:55.436455      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:56.437315      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:57.437682      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:58.438131      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:54:59.439321      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:00.439639      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:01.439903      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:02.440150      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:03.440469      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:04.441378      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:05.441453      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:06.442423      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:07.443380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:08.443549      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:09.443935      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:10.444285      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:11.444609      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:12.444678      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:13.446002      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:14.446956      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:15.447813      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:16.447003      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:17.447419      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:18.447567      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:19.448366      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:20.448970      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:21.449163      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:22.449940      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:23.451004      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:24.451785      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:25.454325      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:26.455099      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:27.454926      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:28.455541      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:29.456101      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 04/20/24 15:55:29.622
  STEP: Removing cronjob @ 04/20/24 15:55:29.63
  I0420 15:55:29.642356 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4183" for this suite. @ 04/20/24 15:55:29.654
• [300.112 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 04/20/24 15:55:29.667
  I0420 15:55:29.667538 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename secrets @ 04/20/24 15:55:29.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:55:29.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:55:29.754
  STEP: Creating secret with name secret-test-1213c473-cb50-45d4-94d1-c5b35538523b @ 04/20/24 15:55:29.761
  STEP: Creating a pod to test consume secrets @ 04/20/24 15:55:29.777
  E0420 15:55:30.457125      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:31.458248      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:32.458580      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:33.459775      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:55:33.828
  I0420 15:55:33.837099 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-secrets-164da8e6-d900-405b-bd7c-a38705ccda85 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/20/24 15:55:33.872
  I0420 15:55:33.901839 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-903" for this suite. @ 04/20/24 15:55:33.91
• [4.256 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 04/20/24 15:55:33.924
  I0420 15:55:33.924815 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 04/20/24 15:55:33.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:55:33.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:55:33.978
  STEP: Setting up the test @ 04/20/24 15:55:33.983
  STEP: Creating hostNetwork=false pod @ 04/20/24 15:55:33.983
  E0420 15:55:34.459752      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:35.460282      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 04/20/24 15:55:36.036
  E0420 15:55:36.461161      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:37.462048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 04/20/24 15:55:38.102
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 04/20/24 15:55:38.102
  I0420 15:55:38.102400 13 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-182 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 15:55:38.102481 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 15:55:38.104147 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 15:55:38.104363 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-182/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0420 15:55:38.225553 13 exec_util.go:106] Exec stderr: ""
  I0420 15:55:38.225676 13 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-182 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 15:55:38.225746 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 15:55:38.227354 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 15:55:38.227561 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-182/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0420 15:55:38.318354 13 exec_util.go:106] Exec stderr: ""
  I0420 15:55:38.318473 13 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-182 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 15:55:38.318505 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 15:55:38.320703 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 15:55:38.320861 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-182/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0420 15:55:38.441302 13 exec_util.go:106] Exec stderr: ""
  I0420 15:55:38.441404 13 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-182 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 15:55:38.441427 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 15:55:38.443438 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 15:55:38.443574 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-182/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  E0420 15:55:38.462558      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:55:38.541960 13 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 04/20/24 15:55:38.542
  I0420 15:55:38.542272 13 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-182 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 15:55:38.542297 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 15:55:38.544201 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 15:55:38.544436 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-182/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0420 15:55:38.675488 13 exec_util.go:106] Exec stderr: ""
  I0420 15:55:38.675588 13 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-182 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 15:55:38.675635 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 15:55:38.678093 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 15:55:38.678230 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-182/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0420 15:55:38.826240 13 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 04/20/24 15:55:38.826
  I0420 15:55:38.826542 13 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-182 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 15:55:38.826567 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 15:55:38.829692 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 15:55:38.830208 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-182/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0420 15:55:38.949107 13 exec_util.go:106] Exec stderr: ""
  I0420 15:55:38.949373 13 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-182 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 15:55:38.949399 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 15:55:38.953542 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 15:55:38.954306 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-182/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0420 15:55:39.080285 13 exec_util.go:106] Exec stderr: ""
  I0420 15:55:39.080612 13 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-182 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 15:55:39.080643 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 15:55:39.084002 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 15:55:39.084119 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-182/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0420 15:55:39.190826 13 exec_util.go:106] Exec stderr: ""
  I0420 15:55:39.191001 13 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-182 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 15:55:39.191057 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 15:55:39.192955 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 15:55:39.193066 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-182/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0420 15:55:39.283380 13 exec_util.go:106] Exec stderr: ""
  I0420 15:55:39.283601 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-182" for this suite. @ 04/20/24 15:55:39.297
• [5.390 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 04/20/24 15:55:39.315
  I0420 15:55:39.315849 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename prestop @ 04/20/24 15:55:39.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:55:39.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:55:39.365
  STEP: Creating server pod server in namespace prestop-7610 @ 04/20/24 15:55:39.37
  STEP: Waiting for pods to come up. @ 04/20/24 15:55:39.402
  E0420 15:55:39.463770      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:40.464214      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-7610 @ 04/20/24 15:55:41.435
  E0420 15:55:41.464961      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:42.465421      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:43.465376      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:44.467325      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:45.467120      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:46.467699      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:47.467594      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 04/20/24 15:55:47.484
  E0420 15:55:48.468048      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:49.468382      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:50.469081      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:51.469253      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:52.469572      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:55:52.512488 13 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 04/20/24 15:55:52.513
  I0420 15:55:52.538512 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-7610" for this suite. @ 04/20/24 15:55:52.553
• [13.264 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 04/20/24 15:55:52.58
  I0420 15:55:52.580109 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename pods @ 04/20/24 15:55:52.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:55:52.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:55:52.619
  STEP: creating the pod @ 04/20/24 15:55:52.628
  STEP: submitting the pod to kubernetes @ 04/20/24 15:55:52.629
  STEP: verifying QOS class is set on the pod @ 04/20/24 15:55:52.647
  I0420 15:55:52.658454 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3617" for this suite. @ 04/20/24 15:55:52.676
• [0.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 04/20/24 15:55:52.695
  I0420 15:55:52.695252 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename configmap @ 04/20/24 15:55:52.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:55:52.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:55:52.741
  I0420 15:55:52.816320 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-437" for this suite. @ 04/20/24 15:55:52.825
• [0.142 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 04/20/24 15:55:52.837
  I0420 15:55:52.837981 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename statefulset @ 04/20/24 15:55:52.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:55:52.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:55:52.868
  STEP: Creating service test in namespace statefulset-6889 @ 04/20/24 15:55:52.873
  I0420 15:55:52.912896 13 wait.go:40] Found 0 stateful pods, waiting for 1
  E0420 15:55:53.470152      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:54.470589      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:55.471478      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:56.471876      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:57.472820      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:58.473691      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:55:59.474120      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:00.474102      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:01.474691      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:02.474422      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:56:02.913528 13 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 04/20/24 15:56:02.926
  W0420 15:56:02.941553      13 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  I0420 15:56:02.961993 13 wait.go:40] Found 1 stateful pods, waiting for 2
  E0420 15:56:03.475434      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:04.476191      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:05.476813      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:06.477446      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:07.477619      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:08.477804      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:09.479014      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:10.479785      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:11.480181      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:12.480566      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:56:12.966661 13 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0420 15:56:12.966844 13 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 04/20/24 15:56:12.996
  STEP: Delete all of the StatefulSets @ 04/20/24 15:56:13.005
  STEP: Verify that StatefulSets have been deleted @ 04/20/24 15:56:13.035
  I0420 15:56:13.042847 13 statefulset.go:135] Deleting all statefulset in ns statefulset-6889
  I0420 15:56:13.078616 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6889" for this suite. @ 04/20/24 15:56:13.108
• [20.323 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 04/20/24 15:56:13.162
  I0420 15:56:13.162245 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename security-context-test @ 04/20/24 15:56:13.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:56:13.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:56:13.216
  E0420 15:56:13.481212      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:14.481380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:15.483098      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:16.483876      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:56:17.286701 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8577" for this suite. @ 04/20/24 15:56:17.303
• [4.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 04/20/24 15:56:17.326
  I0420 15:56:17.327098 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename pod-network-test @ 04/20/24 15:56:17.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:56:17.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:56:17.382
  STEP: Performing setup for networking test in namespace pod-network-test-6822 @ 04/20/24 15:56:17.39
  STEP: creating a selector @ 04/20/24 15:56:17.39
  STEP: Creating the service pods in kubernetes @ 04/20/24 15:56:17.39
  I0420 15:56:17.390985 13 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0420 15:56:17.484682      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:18.486020      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:19.486654      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:20.486600      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:21.487035      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:22.487318      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:23.487626      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:24.487866      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:25.488579      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:26.489165      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:27.501960      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:28.489626      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:29.490384      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:30.490208      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:31.490389      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:32.490815      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:33.491866      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:34.492042      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:35.492573      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:36.493333      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:37.494451      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:38.494664      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:39.494549      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:40.495082      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:41.495934      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:42.496271      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:43.496814      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:44.497081      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:45.498134      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:46.498262      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:47.498948      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:48.499249      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:49.500110      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/20/24 15:56:49.727
  E0420 15:56:50.500086      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:51.500489      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:56:51.831330 13 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0420 15:56:51.831558 13 utils.go:472] Going to poll 10.233.64.38 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0420 15:56:51.840858 13 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.64.38:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6822 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 15:56:51.840981 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 15:56:51.845582 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 15:56:51.845983 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6822/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.64.38%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0420 15:56:52.037996 13 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I0420 15:56:52.038106 13 utils.go:472] Going to poll 10.233.65.22 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0420 15:56:52.044154 13 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.65.22:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6822 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 15:56:52.044222 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 15:56:52.046006 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 15:56:52.046133 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6822/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.65.22%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0420 15:56:52.169926 13 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I0420 15:56:52.170154 13 utils.go:472] Going to poll 10.233.66.141 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0420 15:56:52.178224 13 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.66.141:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6822 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0420 15:56:52.178286 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  I0420 15:56:52.180278 13 exec_util.go:62] ExecWithOptions: Clientset creation
  I0420 15:56:52.180748 13 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6822/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.66.141%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0420 15:56:52.290349 13 utils.go:489] Found all 1 expected endpoints: [netserver-2]
  I0420 15:56:52.290960 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6822" for this suite. @ 04/20/24 15:56:52.301
• [34.985 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 04/20/24 15:56:52.312
  I0420 15:56:52.312696 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename kubectl @ 04/20/24 15:56:52.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:56:52.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:56:52.345
  STEP: validating cluster-info @ 04/20/24 15:56:52.35
  I0420 15:56:52.351263 13 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3551796329 --namespace=kubectl-4577 cluster-info'
  E0420 15:56:52.501156      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:56:52.563646 13 builder.go:146] stderr: ""
  I0420 15:56:52.563778 13 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.233.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0420 15:56:52.564212 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4577" for this suite. @ 04/20/24 15:56:52.575
• [0.274 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 04/20/24 15:56:52.586
  I0420 15:56:52.586855 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 15:56:52.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:56:52.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:56:52.625
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 15:56:52.63
  E0420 15:56:53.501445      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:54.502242      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:55.502586      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:56.503066      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 15:56:56.679
  I0420 15:56:56.686644 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod downwardapi-volume-d7edd4ef-dba4-43d0-bcd6-aef919d26bf3 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 15:56:56.702
  I0420 15:56:56.728630 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8731" for this suite. @ 04/20/24 15:56:56.742
• [4.173 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 04/20/24 15:56:56.76
  I0420 15:56:56.760906 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename watch @ 04/20/24 15:56:56.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:56:56.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:56:56.809
  STEP: creating a watch on configmaps with a certain label @ 04/20/24 15:56:56.815
  STEP: creating a new configmap @ 04/20/24 15:56:56.818
  STEP: modifying the configmap once @ 04/20/24 15:56:56.835
  STEP: changing the label value of the configmap @ 04/20/24 15:56:56.852
  STEP: Expecting to observe a delete notification for the watched object @ 04/20/24 15:56:56.864
  I0420 15:56:56.865465 13 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5653  2418e7d6-be17-4b6a-a196-7625f3f000d1 81730 0 2024-04-20 15:56:56 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 15:56:56 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0420 15:56:56.865996 13 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5653  2418e7d6-be17-4b6a-a196-7625f3f000d1 81731 0 2024-04-20 15:56:56 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 15:56:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0420 15:56:56.866239 13 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5653  2418e7d6-be17-4b6a-a196-7625f3f000d1 81732 0 2024-04-20 15:56:56 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 15:56:56 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 04/20/24 15:56:56.866
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 04/20/24 15:56:56.88
  E0420 15:56:57.504144      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:58.506624      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:56:59.505103      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:00.505429      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:01.506461      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:02.506691      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:03.507278      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:04.507507      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:05.508281      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:06.508208      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 04/20/24 15:57:06.881
  STEP: modifying the configmap a third time @ 04/20/24 15:57:06.903
  STEP: deleting the configmap @ 04/20/24 15:57:06.925
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 04/20/24 15:57:06.949
  I0420 15:57:06.949475 13 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5653  2418e7d6-be17-4b6a-a196-7625f3f000d1 81809 0 2024-04-20 15:56:56 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 15:57:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0420 15:57:06.949844 13 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5653  2418e7d6-be17-4b6a-a196-7625f3f000d1 81810 0 2024-04-20 15:56:56 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 15:57:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0420 15:57:06.951316 13 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5653  2418e7d6-be17-4b6a-a196-7625f3f000d1 81811 0 2024-04-20 15:56:56 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-20 15:57:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0420 15:57:06.951582 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5653" for this suite. @ 04/20/24 15:57:06.963
• [10.218 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 04/20/24 15:57:06.978
  I0420 15:57:06.979028 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename pods @ 04/20/24 15:57:06.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:57:07.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:57:07.023
  STEP: creating the pod @ 04/20/24 15:57:07.027
  STEP: submitting the pod to kubernetes @ 04/20/24 15:57:07.028
  W0420 15:57:07.046461      13 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0420 15:57:07.509003      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:08.510217      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 04/20/24 15:57:09.07
  STEP: updating the pod @ 04/20/24 15:57:09.077
  E0420 15:57:09.510907      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:57:09.611267 13 pod_client.go:141] Successfully updated pod "pod-update-activedeadlineseconds-5324e78b-9c1e-4b03-b963-7a17c13c2032"
  E0420 15:57:10.511290      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:11.512376      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:12.512685      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:13.512854      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:57:13.648022 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4333" for this suite. @ 04/20/24 15:57:13.663
• [6.704 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 04/20/24 15:57:13.683
  I0420 15:57:13.683197 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename endpointslice @ 04/20/24 15:57:13.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:57:13.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:57:13.729
  I0420 15:57:13.762838 13 endpointslice.go:1045] Endpoints addresses: [192.168.121.188 192.168.121.80] , ports: [6443]
  I0420 15:57:13.763657 13 endpointslice.go:1075] EndpointSlices addresses: [192.168.121.188 192.168.121.80] , ports: [6443]
  I0420 15:57:13.763954 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7613" for this suite. @ 04/20/24 15:57:13.774
• [0.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 04/20/24 15:57:13.792
  I0420 15:57:13.792690 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename container-runtime @ 04/20/24 15:57:13.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:57:13.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:57:13.834
  STEP: create the container @ 04/20/24 15:57:13.838
  W0420 15:57:13.852623      13 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 04/20/24 15:57:13.855
  E0420 15:57:14.513613      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:15.515377      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:16.515092      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/20/24 15:57:16.891
  STEP: the container should be terminated @ 04/20/24 15:57:16.899
  STEP: the termination message should be set @ 04/20/24 15:57:16.899
  I0420 15:57:16.899502 13 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/20/24 15:57:16.899
  I0420 15:57:16.949897 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-182" for this suite. @ 04/20/24 15:57:16.964
• [3.184 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 04/20/24 15:57:16.977
  I0420 15:57:16.977290 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:57:16.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:57:17.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:57:17.013
  STEP: Setting up server cert @ 04/20/24 15:57:17.066
  E0420 15:57:17.515520      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:18.516974      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:57:18.79
  STEP: Deploying the webhook pod @ 04/20/24 15:57:18.808
  STEP: Wait for the deployment to be ready @ 04/20/24 15:57:18.837
  I0420 15:57:18.867094 13 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0420 15:57:19.517841      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:20.519071      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:57:20.899
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:57:20.925
  E0420 15:57:21.519312      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:57:21.926447 13 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/20/24 15:57:21.951
  STEP: create a pod that should be denied by the webhook @ 04/20/24 15:57:22.008
  STEP: create a pod that causes the webhook to hang @ 04/20/24 15:57:22.042
  E0420 15:57:22.520321      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:23.520647      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:24.520822      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:25.525233      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:26.525309      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:27.525946      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:28.527129      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:29.527815      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:30.527988      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:31.528952      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 04/20/24 15:57:32.06
  STEP: create a configmap that should be admitted by the webhook @ 04/20/24 15:57:32.088
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/20/24 15:57:32.115
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/20/24 15:57:32.145
  STEP: create a namespace that bypass the webhook @ 04/20/24 15:57:32.159
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 04/20/24 15:57:32.199
  I0420 15:57:32.362668 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3037" for this suite. @ 04/20/24 15:57:32.387
  STEP: Destroying namespace "webhook-markers-7030" for this suite. @ 04/20/24 15:57:32.406
  STEP: Destroying namespace "exempted-namespace-7442" for this suite. @ 04/20/24 15:57:32.423
• [15.457 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 04/20/24 15:57:32.434
  I0420 15:57:32.435065 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename replicaset @ 04/20/24 15:57:32.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:57:32.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:57:32.482
  STEP: Create a Replicaset @ 04/20/24 15:57:32.494
  STEP: Verify that the required pods have come up. @ 04/20/24 15:57:32.504
  I0420 15:57:32.510056 13 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0420 15:57:32.529406      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:33.530555      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:34.530453      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:35.531112      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:36.531400      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:57:37.521601 13 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/20/24 15:57:37.523
  STEP: Getting /status @ 04/20/24 15:57:37.525
  E0420 15:57:37.532137      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:57:37.540056 13 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 04/20/24 15:57:37.54
  I0420 15:57:37.573293 13 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 04/20/24 15:57:37.573
  I0420 15:57:37.581437 13 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0420 15:57:37.581739 13 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0420 15:57:37.581968 13 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0420 15:57:37.582335 13 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0420 15:57:37.582424 13 replica_set.go:682] Found replicaset test-rs in namespace replicaset-6356 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0420 15:57:37.582465 13 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 04/20/24 15:57:37.582
  I0420 15:57:37.582539 13 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0420 15:57:37.597422 13 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 04/20/24 15:57:37.597
  I0420 15:57:37.605147 13 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0420 15:57:37.605386 13 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0420 15:57:37.605645 13 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0420 15:57:37.606482 13 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0420 15:57:37.607592 13 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-6356 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0420 15:57:37.608175 13 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0420 15:57:37.608279 13 replica_set.go:718] Found replicaset test-rs in namespace replicaset-6356 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0420 15:57:37.608320 13 replica_set.go:729] Replicaset test-rs has a patched status
  I0420 15:57:37.609204 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6356" for this suite. @ 04/20/24 15:57:37.619
• [5.203 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 04/20/24 15:57:37.639
  I0420 15:57:37.639181 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename aggregator @ 04/20/24 15:57:37.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:57:37.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:57:37.685
  I0420 15:57:37.691737 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Registering the sample API server. @ 04/20/24 15:57:37.694
  I0420 15:57:38.326941 13 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0420 15:57:38.405230 13 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E0420 15:57:38.533472      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:39.534023      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:57:40.517948 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:57:40.534774      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:41.535544      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:57:42.535958 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:57:42.536488      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:43.537168      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:57:44.535389 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:57:44.538462      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:45.543220      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:57:46.529878 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:57:46.540115      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:47.540646      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:57:48.529990 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:57:48.541474      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:49.542061      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:57:50.527240 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:57:50.543423      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:51.543817      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:57:52.526588 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:57:52.544390      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:53.545220      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:57:54.527752 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:57:54.546191      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:55.546945      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:57:56.527397 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:57:56.547071      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:57.547900      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:57:58.528352 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:57:58.547858      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:57:59.548009      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:58:00.532165 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:58:00.548864      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:01.550064      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:58:02.526877 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:58:02.551015      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:03.551220      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:58:04.525834 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:58:04.552006      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:05.552680      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:58:06.532246 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:58:06.553938      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:07.554332      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:58:08.532487 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 57, 38, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:58:08.555254      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:09.556604      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:10.556915      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:58:10.696029 13 aggregator.go:749] Waited 145.581013ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 04/20/24 15:58:10.821
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 04/20/24 15:58:10.829
  STEP: List APIServices @ 04/20/24 15:58:10.845
  I0420 15:58:10.864206 13 aggregator.go:550] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 04/20/24 15:58:10.864
  I0420 15:58:10.894832 13 aggregator.go:575] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 04/20/24 15:58:10.894
  I0420 15:58:10.913000 13 aggregator.go:601] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.April, 20, 15, 58, 10, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 04/20/24 15:58:10.913
  I0420 15:58:10.919568 13 aggregator.go:619] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-04-20 15:58:10 +0000 UTC Passed all checks passed}
  I0420 15:58:10.919671 13 aggregator.go:615] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0420 15:58:10.919747 13 aggregator.go:625] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 04/20/24 15:58:10.919
  I0420 15:58:10.943081 13 aggregator.go:641] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-2044526847" @ 04/20/24 15:58:10.943
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 04/20/24 15:58:10.967
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 04/20/24 15:58:10.981
  STEP: Patch APIService Status @ 04/20/24 15:58:10.987
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 04/20/24 15:58:10.998
  I0420 15:58:11.006827 13 aggregator.go:719] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-04-20 15:58:10 +0000 UTC Passed all checks passed}
  I0420 15:58:11.006917 13 aggregator.go:719] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0420 15:58:11.006984 13 aggregator.go:715] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0420 15:58:11.007020 13 aggregator.go:725] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 04/20/24 15:58:11.007
  STEP: Confirm that the generated APIService has been deleted @ 04/20/24 15:58:11.028
  I0420 15:58:11.028421 13 aggregator.go:786] Requesting list of APIServices to confirm quantity
  I0420 15:58:11.037379 13 aggregator.go:796] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0420 15:58:11.037437 13 aggregator.go:738] APIService v1alpha1.wardle.example.com has been deleted.
  I0420 15:58:11.336294 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-2938" for this suite. @ 04/20/24 15:58:11.345
• [33.723 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 04/20/24 15:58:11.363
  I0420 15:58:11.364065 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename namespaces @ 04/20/24 15:58:11.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:58:11.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:58:11.415
  STEP: Creating a test namespace @ 04/20/24 15:58:11.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:58:11.45
  STEP: Creating a pod in the namespace @ 04/20/24 15:58:11.454
  STEP: Waiting for the pod to have running status @ 04/20/24 15:58:11.47
  E0420 15:58:11.557322      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:12.558260      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 04/20/24 15:58:13.49
  STEP: Waiting for the namespace to be removed. @ 04/20/24 15:58:13.509
  E0420 15:58:13.559098      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:14.559666      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:15.560440      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:16.560964      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:17.561107      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:18.561954      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:19.562651      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:20.564206      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:21.565315      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:22.566161      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:23.567439      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 04/20/24 15:58:24.518
  STEP: Verifying there are no pods in the namespace @ 04/20/24 15:58:24.542
  I0420 15:58:24.548316 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7051" for this suite. @ 04/20/24 15:58:24.557
  E0420 15:58:24.568773      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "nsdeletetest-3439" for this suite. @ 04/20/24 15:58:24.573
  I0420 15:58:24.579641 13 framework.go:370] Namespace nsdeletetest-3439 was already deleted
  STEP: Destroying namespace "nsdeletetest-7862" for this suite. @ 04/20/24 15:58:24.579
• [13.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 04/20/24 15:58:24.599
  I0420 15:58:24.599329 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename pods @ 04/20/24 15:58:24.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:58:24.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:58:24.639
  STEP: creating the pod @ 04/20/24 15:58:24.645
  STEP: setting up watch @ 04/20/24 15:58:24.646
  STEP: submitting the pod to kubernetes @ 04/20/24 15:58:24.754
  STEP: verifying the pod is in kubernetes @ 04/20/24 15:58:24.776
  STEP: verifying pod creation was observed @ 04/20/24 15:58:24.787
  E0420 15:58:25.569023      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:26.569057      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 04/20/24 15:58:26.835
  STEP: verifying pod deletion was observed @ 04/20/24 15:58:26.857
  I0420 15:58:27.545993 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-236" for this suite. @ 04/20/24 15:58:27.559
  E0420 15:58:27.569103      13 retrywatcher.go:129] "Watch failed" err="context canceled"
• [2.974 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 04/20/24 15:58:27.576
  I0420 15:58:27.576161 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename disruption @ 04/20/24 15:58:27.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:58:27.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:58:27.624
  STEP: creating the pdb @ 04/20/24 15:58:27.631
  STEP: Waiting for the pdb to be processed @ 04/20/24 15:58:27.644
  E0420 15:58:28.569500      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:29.570893      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 04/20/24 15:58:29.653
  STEP: Waiting for the pdb to be processed @ 04/20/24 15:58:29.682
  E0420 15:58:30.571533      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:31.572419      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 04/20/24 15:58:31.69
  STEP: Waiting for the pdb to be processed @ 04/20/24 15:58:31.714
  E0420 15:58:32.572653      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:33.573096      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 04/20/24 15:58:33.745
  I0420 15:58:33.755288 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5964" for this suite. @ 04/20/24 15:58:33.772
• [6.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 04/20/24 15:58:33.797
  I0420 15:58:33.797991 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:58:33.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:58:33.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:58:33.903
  STEP: Setting up server cert @ 04/20/24 15:58:33.956
  E0420 15:58:34.574195      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:58:34.882
  STEP: Deploying the webhook pod @ 04/20/24 15:58:34.903
  STEP: Wait for the deployment to be ready @ 04/20/24 15:58:34.933
  I0420 15:58:34.961907 13 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0420 15:58:35.575042      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:36.575817      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:58:36.982319 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 58, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 58, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 58, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 58, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:58:37.576262      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:38.576519      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:58:38.990924 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 58, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 58, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 58, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 58, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:58:39.576811      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:40.577102      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:58:40.992422 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 58, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 58, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 58, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 58, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:58:41.577287      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:42.577902      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:58:42.992066 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 58, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 58, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 58, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 58, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:58:43.578079      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:44.579023      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:58:44.993528 13 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 20, 15, 58, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 58, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 20, 15, 58, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 20, 15, 58, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0420 15:58:45.579331      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:46.579699      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:58:46.993
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:58:47.027
  E0420 15:58:47.580250      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:58:48.028430 13 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 04/20/24 15:58:48.044
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 04/20/24 15:58:48.047
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 04/20/24 15:58:48.047
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 04/20/24 15:58:48.047
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 04/20/24 15:58:48.049
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/20/24 15:58:48.05
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/20/24 15:58:48.052
  I0420 15:58:48.136900 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5136" for this suite. @ 04/20/24 15:58:48.148
  STEP: Destroying namespace "webhook-markers-7329" for this suite. @ 04/20/24 15:58:48.181
• [14.409 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 04/20/24 15:58:48.217
  I0420 15:58:48.217540 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename webhook @ 04/20/24 15:58:48.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:58:48.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:58:48.277
  STEP: Setting up server cert @ 04/20/24 15:58:48.321
  E0420 15:58:48.580535      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/20/24 15:58:49.339
  STEP: Deploying the webhook pod @ 04/20/24 15:58:49.352
  STEP: Wait for the deployment to be ready @ 04/20/24 15:58:49.372
  I0420 15:58:49.384010 13 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0420 15:58:49.581943      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:50.582795      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/20/24 15:58:51.425
  STEP: Verifying the service has paired with the endpoint @ 04/20/24 15:58:51.458
  E0420 15:58:51.583446      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:58:52.460025 13 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 04/20/24 15:58:52.486
  STEP: create a configmap that should be updated by the webhook @ 04/20/24 15:58:52.563
  E0420 15:58:52.583834      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:58:52.733984 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1765" for this suite. @ 04/20/24 15:58:52.752
  STEP: Destroying namespace "webhook-markers-3371" for this suite. @ 04/20/24 15:58:52.765
• [4.559 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 04/20/24 15:58:52.777
  I0420 15:58:52.777684 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename sched-preemption @ 04/20/24 15:58:52.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:58:52.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:58:52.818
  I0420 15:58:52.855242 13 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0420 15:58:53.584427      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:54.584538      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:55.585060      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:56.585222      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:57.585673      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:58.586496      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:58:59.586658      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:00.586630      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:01.587774      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:02.588753      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:03.588920      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:04.589551      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:05.589710      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:06.589960      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:07.590459      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:08.591803      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:09.591251      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:10.592046      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:11.592249      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:12.594217      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:13.594278      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:14.594994      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:15.595292      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:16.596344      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:17.596662      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:18.597016      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:19.597504      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:20.598457      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:21.598833      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:22.599174      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:23.599498      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:24.600272      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:25.601262      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:26.602036      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:27.603123      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:28.603266      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:29.603232      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:30.603621      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:31.604372      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:32.604582      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:33.604992      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:34.605183      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:35.605549      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:36.606353      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:37.607419      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:38.609132      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:39.609538      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:40.610529      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:41.611449      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:42.611947      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:43.612160      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:44.612539      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:45.612795      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:46.613548      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:47.614033      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:48.614802      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:49.615403      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:50.616058      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:51.617005      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:52.618117      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 15:59:52.876557 13 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/20/24 15:59:52.888
  I0420 15:59:52.889057 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/20/24 15:59:52.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 15:59:52.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 15:59:52.972
  STEP: Finding an available node @ 04/20/24 15:59:52.979
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/20/24 15:59:52.98
  E0420 15:59:53.618775      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:54.619003      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/20/24 15:59:55.029
  I0420 15:59:55.068902 13 preemption.go:583] found a healthy node: ier3chochiph-3
  E0420 15:59:55.620143      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:56.620300      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:57.621196      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:58.621593      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 15:59:59.622380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:00.623524      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 16:00:01.285697 13 preemption.go:706] pods created so far: [1 1 1]
  I0420 16:00:01.285938 13 preemption.go:707] length of pods created so far: 3
  E0420 16:00:01.624406      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:02.625145      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 16:00:03.312814 13 preemption.go:724] pods created so far: [2 2 1]
  E0420 16:00:03.626361      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:04.626902      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:05.627247      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:06.627882      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:07.628209      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:08.628558      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:09.629141      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 16:00:10.555695 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9899" for this suite. @ 04/20/24 16:00:10.565
  I0420 16:00:10.580588 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6505" for this suite. @ 04/20/24 16:00:10.591
• [77.827 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 04/20/24 16:00:10.605
  I0420 16:00:10.605315 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 16:00:10.608
  E0420 16:00:10.630187      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:00:10.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:00:10.638
  STEP: Creating a pod to test downward api env vars @ 04/20/24 16:00:10.643
  E0420 16:00:11.630185      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:12.630576      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:13.631919      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:14.631967      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 16:00:14.689
  I0420 16:00:14.696856 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod downward-api-14f4ac8e-9576-4e42-b9ef-719469c0a4f2 container dapi-container: <nil>
  STEP: delete the pod @ 04/20/24 16:00:14.787
  I0420 16:00:14.820051 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2854" for this suite. @ 04/20/24 16:00:14.83
• [4.240 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 04/20/24 16:00:14.847
  I0420 16:00:14.847600 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename resourcequota @ 04/20/24 16:00:14.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:00:14.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:00:14.887
  STEP: Creating a ResourceQuota @ 04/20/24 16:00:14.894
  STEP: Getting a ResourceQuota @ 04/20/24 16:00:14.912
  STEP: Updating a ResourceQuota @ 04/20/24 16:00:14.921
  STEP: Verifying a ResourceQuota was modified @ 04/20/24 16:00:14.95
  STEP: Deleting a ResourceQuota @ 04/20/24 16:00:14.961
  STEP: Verifying the deleted ResourceQuota @ 04/20/24 16:00:14.983
  I0420 16:00:14.989373 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1594" for this suite. @ 04/20/24 16:00:14.997
• [0.164 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 04/20/24 16:00:15.012
  I0420 16:00:15.012197 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename certificates @ 04/20/24 16:00:15.015
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:00:15.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:00:15.097
  E0420 16:00:15.632200      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 04/20/24 16:00:16.61
  STEP: getting /apis/certificates.k8s.io @ 04/20/24 16:00:16.629
  E0420 16:00:16.633390      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis/certificates.k8s.io/v1 @ 04/20/24 16:00:16.635
  STEP: creating @ 04/20/24 16:00:16.638
  STEP: getting @ 04/20/24 16:00:16.699
  STEP: listing @ 04/20/24 16:00:16.71
  STEP: watching @ 04/20/24 16:00:16.72
  I0420 16:00:16.720256 13 certificates.go:316] starting watch
  STEP: patching @ 04/20/24 16:00:16.723
  STEP: updating @ 04/20/24 16:00:16.738
  I0420 16:00:16.753383 13 certificates.go:332] waiting for watch events with expected annotations
  I0420 16:00:16.753583 13 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 04/20/24 16:00:16.754
  STEP: patching /approval @ 04/20/24 16:00:16.768
  STEP: updating /approval @ 04/20/24 16:00:16.794
  STEP: getting /status @ 04/20/24 16:00:16.819
  STEP: patching /status @ 04/20/24 16:00:16.826
  STEP: updating /status @ 04/20/24 16:00:16.85
  STEP: deleting @ 04/20/24 16:00:16.876
  STEP: deleting a collection @ 04/20/24 16:00:16.913
  I0420 16:00:16.969189 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-1525" for this suite. @ 04/20/24 16:00:16.981
• [2.008 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 04/20/24 16:00:17.025
  I0420 16:00:17.025835 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 16:00:17.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:00:17.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:00:17.075
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/20/24 16:00:17.091
  E0420 16:00:17.633934      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:18.634055      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:19.634287      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:20.635043      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 16:00:21.139
  I0420 16:00:21.148998 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-9196abe3-f802-4dfa-907d-17799b3ec7d5 container test-container: <nil>
  STEP: delete the pod @ 04/20/24 16:00:21.169
  I0420 16:00:21.213266 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5635" for this suite. @ 04/20/24 16:00:21.235
• [4.226 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 04/20/24 16:00:21.252
  I0420 16:00:21.252451 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename replication-controller @ 04/20/24 16:00:21.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:00:21.299
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:00:21.304
  STEP: Creating replication controller my-hostname-basic-fcf83b32-6912-4e29-8d24-e5f08c737334 @ 04/20/24 16:00:21.313
  I0420 16:00:21.327946 13 resource.go:87] Pod name my-hostname-basic-fcf83b32-6912-4e29-8d24-e5f08c737334: Found 0 pods out of 1
  E0420 16:00:21.636047      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:22.636156      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:23.636556      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:24.637046      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:25.637364      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 16:00:26.340243 13 resource.go:87] Pod name my-hostname-basic-fcf83b32-6912-4e29-8d24-e5f08c737334: Found 1 pods out of 1
  I0420 16:00:26.340340 13 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-fcf83b32-6912-4e29-8d24-e5f08c737334" are running
  I0420 16:00:26.348098 13 rc.go:523] Pod "my-hostname-basic-fcf83b32-6912-4e29-8d24-e5f08c737334-6x9hn" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 16:00:22 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 16:00:21 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 16:00:22 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 16:00:22 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-20 16:00:21 +0000 UTC Reason: Message:}])
  I0420 16:00:26.348173 13 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/20/24 16:00:26.348
  I0420 16:00:26.382046 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-488" for this suite. @ 04/20/24 16:00:26.391
• [5.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 04/20/24 16:00:26.413
  I0420 16:00:26.413902 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename emptydir @ 04/20/24 16:00:26.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:00:26.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:00:26.461
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/20/24 16:00:26.467
  E0420 16:00:26.638131      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:27.638643      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:28.639163      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:29.641012      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 16:00:30.515
  I0420 16:00:30.522260 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod pod-f89a75dd-804a-4424-8171-8f9733cb600a container test-container: <nil>
  STEP: delete the pod @ 04/20/24 16:00:30.536
  I0420 16:00:30.570803 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-711" for this suite. @ 04/20/24 16:00:30.579
• [4.182 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 04/20/24 16:00:30.595
  I0420 16:00:30.595193 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename downward-api @ 04/20/24 16:00:30.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:00:30.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:00:30.634
  STEP: Creating a pod to test downward API volume plugin @ 04/20/24 16:00:30.639
  E0420 16:00:30.640541      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:31.641499      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:32.642360      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:33.642941      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:34.643231      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/20/24 16:00:34.681
  I0420 16:00:34.691574 13 output.go:196] Trying to get logs from node ier3chochiph-3 pod downwardapi-volume-c9509e3b-de84-4eb8-9b38-5b62f865e3f8 container client-container: <nil>
  STEP: delete the pod @ 04/20/24 16:00:34.716
  I0420 16:00:34.774436 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3204" for this suite. @ 04/20/24 16:00:34.782
• [4.198 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 04/20/24 16:00:34.793
  I0420 16:00:34.794037 13 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3551796329
  STEP: Building a namespace api object, basename projected @ 04/20/24 16:00:34.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/20/24 16:00:34.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/20/24 16:00:34.829
  STEP: Creating configMap with name cm-test-opt-del-cecad544-79c3-45e0-8a02-33a69676f4f2 @ 04/20/24 16:00:34.843
  STEP: Creating configMap with name cm-test-opt-upd-a903f999-252f-4d22-bc4c-8bb512663255 @ 04/20/24 16:00:34.851
  STEP: Creating the pod @ 04/20/24 16:00:34.859
  E0420 16:00:35.644155      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:36.645265      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-cecad544-79c3-45e0-8a02-33a69676f4f2 @ 04/20/24 16:00:36.977
  STEP: Updating configmap cm-test-opt-upd-a903f999-252f-4d22-bc4c-8bb512663255 @ 04/20/24 16:00:36.992
  STEP: Creating configMap with name cm-test-opt-create-84556543-4d96-4c5f-956e-233f18f7f173 @ 04/20/24 16:00:37.004
  STEP: waiting to observe update in volume @ 04/20/24 16:00:37.023
  E0420 16:00:37.646313      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:38.646586      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:39.646982      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:40.647153      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:41.648299      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:42.648566      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:43.648894      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:44.649889      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:45.650533      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:46.650998      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:47.651293      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:48.651628      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:49.652196      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:50.653231      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:51.654042      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:52.654288      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:53.656043      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:54.655812      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:55.656883      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:56.657605      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:57.657842      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:58.658380      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:00:59.659346      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:00.660150      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:01.660525      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:02.660686      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:03.661218      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:04.662154      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:05.662853      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:06.663348      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:07.664402      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:08.665851      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:09.666270      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:10.666546      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:11.667088      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:12.667137      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:13.667521      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:14.667807      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:15.668224      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:16.668595      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:17.669478      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:18.670453      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:19.671078      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:20.672224      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:21.673572      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:22.673971      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:23.674332      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:24.675385      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:25.675969      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:26.676329      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:27.676959      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:28.677335      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:29.677495      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:30.678314      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:31.678588      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:32.678833      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:33.679971      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:34.680020      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:35.681360      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:36.681706      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:37.682422      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:38.683280      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:39.684329      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:40.685458      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:41.685559      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:42.686483      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:43.686597      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:44.686920      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:45.687133      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:46.687667      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0420 16:01:47.687996      13 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0420 16:01:48.043922 13 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6272" for this suite. @ 04/20/24 16:01:48.06
• [73.290 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0420 16:01:48.087151 13 suites.go:34] Running AfterSuite actions on node 1
  I0420 16:01:48.087346 13 util.go:614] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.001 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.151 seconds]
------------------------------

Ran 402 of 7197 Specs in 6545.055 seconds
SUCCESS! -- 402 Passed | 0 Failed | 0 Pending | 6795 Skipped
PASS

Ginkgo ran 1 suite in 1h49m6.898791676s
Test Suite Passed
