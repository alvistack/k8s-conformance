  I0419 15:39:36.540056      14 e2e.go:117] Starting e2e run "ecc91bd4-ae45-4a02-ad75-06b46a186390" on Ginkgo node 1
  Apr 19 15:39:36.605: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1713541176 - will randomize all specs

Will run 380 of 7389 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:77
  Apr 19 15:39:36.906: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 15:39:36.911: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Apr 19 15:39:36.980: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Apr 19 15:39:36.992: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-flannel-ds' (0 seconds elapsed)
  Apr 19 15:39:36.993: INFO: 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  Apr 19 15:39:36.994: INFO: e2e test version: v1.28.9
  Apr 19 15:39:37.008: INFO: kube-apiserver version: v1.28.9
  Apr 19 15:39:37.009: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 15:39:37.021: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.115 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 04/19/24 15:39:37.464
  Apr 19 15:39:37.465: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename events @ 04/19/24 15:39:37.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:39:37.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:39:37.494
  STEP: creating a test event @ 04/19/24 15:39:37.496
  STEP: listing all events in all namespaces @ 04/19/24 15:39:37.502
  STEP: patching the test event @ 04/19/24 15:39:37.517
  STEP: fetching the test event @ 04/19/24 15:39:37.526
  STEP: updating the test event @ 04/19/24 15:39:37.53
  STEP: getting the test event @ 04/19/24 15:39:37.541
  STEP: deleting the test event @ 04/19/24 15:39:37.546
  STEP: listing all events in all namespaces @ 04/19/24 15:39:37.556
  Apr 19 15:39:37.569: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9853" for this suite. @ 04/19/24 15:39:37.576
â€¢ [0.121 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 04/19/24 15:39:37.586
  Apr 19 15:39:37.586: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename daemonsets @ 04/19/24 15:39:37.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:39:37.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:39:37.616
  STEP: Creating simple DaemonSet "daemon-set" @ 04/19/24 15:39:37.65
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/19/24 15:39:37.657
  Apr 19 15:39:37.672: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 15:39:37.672: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  Apr 19 15:39:38.686: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 15:39:38.686: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  Apr 19 15:39:39.688: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 15:39:39.688: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  Apr 19 15:39:40.684: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 15:39:40.684: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  Apr 19 15:39:41.695: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 15:39:41.695: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  Apr 19 15:39:42.691: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 15:39:42.691: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  Apr 19 15:39:43.689: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 15:39:43.689: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  Apr 19 15:39:44.685: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 15:39:44.685: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  Apr 19 15:39:45.694: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 15:39:45.694: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  Apr 19 15:39:46.683: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 15:39:46.683: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  Apr 19 15:39:47.686: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 15:39:47.686: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  Apr 19 15:39:48.694: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 15:39:48.694: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  Apr 19 15:39:49.686: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 15:39:49.686: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  Apr 19 15:39:50.690: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 19 15:39:50.690: INFO: Node eixo7oojiese-2 is running 0 daemon pod, expected 1
  Apr 19 15:39:51.684: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 19 15:39:51.684: INFO: Node eixo7oojiese-2 is running 0 daemon pod, expected 1
  Apr 19 15:39:52.692: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 19 15:39:52.693: INFO: Node eixo7oojiese-3 is running 0 daemon pod, expected 1
  Apr 19 15:39:53.695: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 19 15:39:53.695: INFO: Node eixo7oojiese-3 is running 0 daemon pod, expected 1
  Apr 19 15:39:54.691: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 19 15:39:54.691: INFO: Node eixo7oojiese-3 is running 0 daemon pod, expected 1
  Apr 19 15:39:55.684: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 19 15:39:55.684: INFO: Node eixo7oojiese-3 is running 0 daemon pod, expected 1
  Apr 19 15:39:56.694: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 19 15:39:56.694: INFO: Node eixo7oojiese-3 is running 0 daemon pod, expected 1
  Apr 19 15:39:57.688: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 19 15:39:57.688: INFO: Node eixo7oojiese-3 is running 0 daemon pod, expected 1
  Apr 19 15:39:58.688: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 19 15:39:58.688: INFO: Node eixo7oojiese-3 is running 0 daemon pod, expected 1
  Apr 19 15:39:59.698: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 19 15:39:59.699: INFO: Node eixo7oojiese-3 is running 0 daemon pod, expected 1
  Apr 19 15:40:00.701: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 19 15:40:00.701: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 04/19/24 15:40:00.714
  STEP: DeleteCollection of the DaemonSets @ 04/19/24 15:40:00.727
  STEP: Verify that ReplicaSets have been deleted @ 04/19/24 15:40:00.753
  Apr 19 15:40:00.797: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"2426"},"items":null}

  Apr 19 15:40:00.810: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"2427"},"items":[{"metadata":{"name":"daemon-set-4bcmj","generateName":"daemon-set-","namespace":"daemonsets-6213","uid":"d68d1239-6fa8-4a0d-ba38-d2af84e9cc04","resourceVersion":"2376","creationTimestamp":"2024-04-19T15:39:37Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a08eb78d-c2b2-4326-a63b-6612fd91b974","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-19T15:39:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a08eb78d-c2b2-4326-a63b-6612fd91b974\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-19T15:39:50Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.64.2\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-8v87w","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-8v87w","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"eixo7oojiese-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["eixo7oojiese-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-19T15:39:37Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-19T15:39:50Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-19T15:39:50Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-19T15:39:37Z"}],"hostIP":"192.168.121.83","podIP":"10.233.64.2","podIPs":[{"ip":"10.233.64.2"}],"startTime":"2024-04-19T15:39:37Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-19T15:39:49Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://947c1def4d3f88c94ee8bd77abe15c8af6e00c572f9459576dbe6966b08fd7e8","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-dx5d6","generateName":"daemon-set-","namespace":"daemonsets-6213","uid":"0179ceb0-1a71-4a06-8d48-22cec890aa7e","resourceVersion":"2390","creationTimestamp":"2024-04-19T15:39:37Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a08eb78d-c2b2-4326-a63b-6612fd91b974","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-19T15:39:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a08eb78d-c2b2-4326-a63b-6612fd91b974\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-19T15:39:52Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.65.2\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-p7cdp","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-p7cdp","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"eixo7oojiese-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["eixo7oojiese-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-19T15:39:37Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-19T15:39:51Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-19T15:39:51Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-19T15:39:37Z"}],"hostIP":"192.168.121.127","podIP":"10.233.65.2","podIPs":[{"ip":"10.233.65.2"}],"startTime":"2024-04-19T15:39:37Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-19T15:39:51Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://5a8a83b118c2f9ee875a1757e708ddb21e4bc9972970b53f966bff5a5ca2985f","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-gw2gn","generateName":"daemon-set-","namespace":"daemonsets-6213","uid":"113f11cc-44f3-4275-8bd5-4955406a6121","resourceVersion":"2427","creationTimestamp":"2024-04-19T15:39:37Z","deletionTimestamp":"2024-04-19T15:40:30Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a08eb78d-c2b2-4326-a63b-6612fd91b974","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-04-19T15:39:37Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a08eb78d-c2b2-4326-a63b-6612fd91b974\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-04-19T15:40:00Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.66.8\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-wn2hc","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-wn2hc","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"eixo7oojiese-3","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["eixo7oojiese-3"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-19T15:39:37Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-19T15:40:00Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-19T15:40:00Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-04-19T15:39:37Z"}],"hostIP":"192.168.121.129","podIP":"10.233.66.8","podIPs":[{"ip":"10.233.66.8"}],"startTime":"2024-04-19T15:39:37Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-04-19T15:39:59Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://b6df6c3f3975ab1b7cdde18a8116ed8a609da4c9a3ec6c92d199926ada6453e4","started":true}],"qosClass":"BestEffort"}}]}

  Apr 19 15:40:00.895: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6213" for this suite. @ 04/19/24 15:40:00.905
â€¢ [23.330 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 04/19/24 15:40:00.919
  Apr 19 15:40:00.919: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename services @ 04/19/24 15:40:00.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:40:00.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:40:00.953
  STEP: creating a Service @ 04/19/24 15:40:00.965
  STEP: watching for the Service to be added @ 04/19/24 15:40:01.02
  Apr 19 15:40:01.023: INFO: Found Service test-service-xgjl6 in namespace services-1996 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Apr 19 15:40:01.023: INFO: Service test-service-xgjl6 created
  STEP: Getting /status @ 04/19/24 15:40:01.023
  Apr 19 15:40:01.031: INFO: Service test-service-xgjl6 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 04/19/24 15:40:01.031
  STEP: watching for the Service to be patched @ 04/19/24 15:40:01.048
  Apr 19 15:40:01.053: INFO: observed Service test-service-xgjl6 in namespace services-1996 with annotations: map[] & LoadBalancer: {[]}
  Apr 19 15:40:01.055: INFO: Found Service test-service-xgjl6 in namespace services-1996 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Apr 19 15:40:01.055: INFO: Service test-service-xgjl6 has service status patched
  STEP: updating the ServiceStatus @ 04/19/24 15:40:01.055
  Apr 19 15:40:01.079: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 04/19/24 15:40:01.079
  Apr 19 15:40:01.095: INFO: Observed Service test-service-xgjl6 in namespace services-1996 with annotations: map[] & Conditions: {[]}
  Apr 19 15:40:01.096: INFO: Observed event: &Service{ObjectMeta:{test-service-xgjl6  services-1996  6859dc45-115a-4243-a3cb-86fb05a6a0d5 2439 0 2024-04-19 15:40:00 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-04-19 15:40:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-04-19 15:40:01 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.233.42.36,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.233.42.36],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Apr 19 15:40:01.101: INFO: Found Service test-service-xgjl6 in namespace services-1996 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 19 15:40:01.101: INFO: Service test-service-xgjl6 has service status updated
  STEP: patching the service @ 04/19/24 15:40:01.101
  STEP: watching for the Service to be patched @ 04/19/24 15:40:01.123
  Apr 19 15:40:01.126: INFO: observed Service test-service-xgjl6 in namespace services-1996 with labels: map[test-service-static:true]
  Apr 19 15:40:01.126: INFO: observed Service test-service-xgjl6 in namespace services-1996 with labels: map[test-service-static:true]
  Apr 19 15:40:01.126: INFO: observed Service test-service-xgjl6 in namespace services-1996 with labels: map[test-service-static:true]
  Apr 19 15:40:01.126: INFO: Found Service test-service-xgjl6 in namespace services-1996 with labels: map[test-service:patched test-service-static:true]
  Apr 19 15:40:01.126: INFO: Service test-service-xgjl6 patched
  STEP: deleting the service @ 04/19/24 15:40:01.126
  STEP: watching for the Service to be deleted @ 04/19/24 15:40:01.177
  Apr 19 15:40:01.179: INFO: Observed event: ADDED
  Apr 19 15:40:01.180: INFO: Observed event: MODIFIED
  Apr 19 15:40:01.181: INFO: Observed event: MODIFIED
  Apr 19 15:40:01.181: INFO: Observed event: MODIFIED
  Apr 19 15:40:01.182: INFO: Found Service test-service-xgjl6 in namespace services-1996 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Apr 19 15:40:01.182: INFO: Service test-service-xgjl6 deleted
  Apr 19 15:40:01.184: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1996" for this suite. @ 04/19/24 15:40:01.193
â€¢ [0.311 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 04/19/24 15:40:01.233
  Apr 19 15:40:01.234: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename downward-api @ 04/19/24 15:40:01.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:40:01.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:40:01.281
  STEP: Creating a pod to test downward API volume plugin @ 04/19/24 15:40:01.314
  STEP: Saw pod success @ 04/19/24 15:40:13.429
  Apr 19 15:40:13.436: INFO: Trying to get logs from node eixo7oojiese-3 pod downwardapi-volume-58e73b25-46e7-4ebf-9823-a490599d2122 container client-container: <nil>
  STEP: delete the pod @ 04/19/24 15:40:13.481
  Apr 19 15:40:13.514: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3840" for this suite. @ 04/19/24 15:40:13.529
â€¢ [12.313 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 04/19/24 15:40:13.55
  Apr 19 15:40:13.550: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename container-probe @ 04/19/24 15:40:13.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:40:13.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:40:13.605
  STEP: Creating pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291 @ 04/19/24 15:40:13.61
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/19/24 15:40:15.655
  Apr 19 15:40:15.666: INFO: Initial restart count of pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 is 0
  Apr 19 15:40:15.678: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:40:17.688: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:40:19.700: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:40:21.710: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:40:23.724: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:40:25.735: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:40:27.746: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:40:29.763: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:40:31.774: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:40:33.792: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:40:35.801: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:40:37.817: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:40:39.827: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:40:41.839: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:40:43.847: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:40:45.861: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:40:47.873: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:40:49.886: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:40:51.898: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:40:53.909: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:40:55.924: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:40:57.935: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:40:59.954: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:41:01.964: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:41:03.983: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:41:05.997: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:41:08.035: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:41:10.050: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:41:12.067: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:41:14.075: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:41:16.082: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:41:18.095: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:41:20.107: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:41:22.118: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:41:24.127: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:41:26.139: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:41:28.148: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:41:30.160: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:41:32.169: INFO: Get pod test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 in namespace container-probe-291
  Apr 19 15:41:32.169: INFO: Restart count of pod container-probe-291/test-grpc-a83233d4-b002-45fd-9e6a-c185cb17c484 is now 1 (1m16.503191448s elapsed)
  Apr 19 15:41:32.170: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/19/24 15:41:32.181
  STEP: Destroying namespace "container-probe-291" for this suite. @ 04/19/24 15:41:32.215
â€¢ [78.681 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 04/19/24 15:41:32.234
  Apr 19 15:41:32.235: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/19/24 15:41:32.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:41:32.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:41:32.298
  Apr 19 15:41:32.308: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/19/24 15:41:34.607
  Apr 19 15:41:34.608: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-2839 --namespace=crd-publish-openapi-2839 create -f -'
  Apr 19 15:41:35.932: INFO: stderr: ""
  Apr 19 15:41:35.932: INFO: stdout: "e2e-test-crd-publish-openapi-1693-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Apr 19 15:41:35.933: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-2839 --namespace=crd-publish-openapi-2839 delete e2e-test-crd-publish-openapi-1693-crds test-cr'
  Apr 19 15:41:36.153: INFO: stderr: ""
  Apr 19 15:41:36.153: INFO: stdout: "e2e-test-crd-publish-openapi-1693-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Apr 19 15:41:36.154: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-2839 --namespace=crd-publish-openapi-2839 apply -f -'
  Apr 19 15:41:36.571: INFO: stderr: ""
  Apr 19 15:41:36.572: INFO: stdout: "e2e-test-crd-publish-openapi-1693-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Apr 19 15:41:36.572: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-2839 --namespace=crd-publish-openapi-2839 delete e2e-test-crd-publish-openapi-1693-crds test-cr'
  Apr 19 15:41:36.782: INFO: stderr: ""
  Apr 19 15:41:36.782: INFO: stdout: "e2e-test-crd-publish-openapi-1693-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/19/24 15:41:36.782
  Apr 19 15:41:36.783: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-2839 explain e2e-test-crd-publish-openapi-1693-crds'
  Apr 19 15:41:37.156: INFO: stderr: ""
  Apr 19 15:41:37.156: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-1693-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Apr 19 15:41:38.951: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2839" for this suite. @ 04/19/24 15:41:38.972
â€¢ [6.760 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 04/19/24 15:41:39.003
  Apr 19 15:41:39.004: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename hostport @ 04/19/24 15:41:39.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:41:39.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:41:39.063
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 04/19/24 15:41:39.084
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.121.83 on the node which pod1 resides and expect scheduled @ 04/19/24 15:41:49.186
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.121.83 but use UDP protocol on the node which pod2 resides @ 04/19/24 15:41:51.236
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 04/19/24 15:41:55.311
  Apr 19 15:41:55.311: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.121.83 http://127.0.0.1:54323/hostname] Namespace:hostport-6956 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 15:41:55.312: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 15:41:55.317: INFO: ExecWithOptions: Clientset creation
  Apr 19 15:41:55.317: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-6956/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.121.83+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.83, port: 54323 @ 04/19/24 15:41:55.528
  Apr 19 15:41:55.529: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.121.83:54323/hostname] Namespace:hostport-6956 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 15:41:55.529: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 15:41:55.534: INFO: ExecWithOptions: Clientset creation
  Apr 19 15:41:55.534: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-6956/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.121.83%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.121.83, port: 54323 UDP @ 04/19/24 15:41:55.663
  Apr 19 15:41:55.664: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.121.83 54323] Namespace:hostport-6956 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 15:41:55.665: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 15:41:55.669: INFO: ExecWithOptions: Clientset creation
  Apr 19 15:41:55.670: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-6956/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.121.83+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Apr 19 15:42:00.767: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-6956" for this suite. @ 04/19/24 15:42:00.781
â€¢ [21.800 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 04/19/24 15:42:00.807
  Apr 19 15:42:00.807: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename kubectl @ 04/19/24 15:42:00.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:42:00.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:42:00.868
  STEP: create deployment with httpd image @ 04/19/24 15:42:00.878
  Apr 19 15:42:00.879: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-5618 create -f -'
  Apr 19 15:42:01.514: INFO: stderr: ""
  Apr 19 15:42:01.514: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 04/19/24 15:42:01.514
  Apr 19 15:42:01.515: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-5618 diff -f -'
  Apr 19 15:42:01.909: INFO: rc: 1
  Apr 19 15:42:01.909: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-5618 delete -f -'
  Apr 19 15:42:02.146: INFO: stderr: ""
  Apr 19 15:42:02.146: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Apr 19 15:42:02.146: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5618" for this suite. @ 04/19/24 15:42:02.155
â€¢ [1.364 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 04/19/24 15:42:02.172
  Apr 19 15:42:02.172: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename field-validation @ 04/19/24 15:42:02.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:42:02.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:42:02.221
  Apr 19 15:42:02.229: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 15:42:05.530: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7493" for this suite. @ 04/19/24 15:42:05.588
â€¢ [3.441 seconds]
------------------------------
SSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 04/19/24 15:42:05.617
  Apr 19 15:42:05.617: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename ingressclass @ 04/19/24 15:42:05.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:42:05.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:42:05.68
  STEP: getting /apis @ 04/19/24 15:42:05.686
  STEP: getting /apis/networking.k8s.io @ 04/19/24 15:42:05.698
  STEP: getting /apis/networking.k8s.iov1 @ 04/19/24 15:42:05.701
  STEP: creating @ 04/19/24 15:42:05.704
  STEP: getting @ 04/19/24 15:42:05.746
  STEP: listing @ 04/19/24 15:42:05.753
  STEP: watching @ 04/19/24 15:42:05.761
  Apr 19 15:42:05.761: INFO: starting watch
  STEP: patching @ 04/19/24 15:42:05.763
  STEP: updating @ 04/19/24 15:42:05.776
  Apr 19 15:42:05.785: INFO: waiting for watch events with expected annotations
  Apr 19 15:42:05.785: INFO: saw patched and updated annotations
  STEP: deleting @ 04/19/24 15:42:05.786
  STEP: deleting a collection @ 04/19/24 15:42:05.823
  Apr 19 15:42:05.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-3709" for this suite. @ 04/19/24 15:42:05.866
â€¢ [0.270 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 04/19/24 15:42:05.89
  Apr 19 15:42:05.890: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename subpath @ 04/19/24 15:42:05.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:42:05.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:42:05.922
  STEP: Setting up data @ 04/19/24 15:42:05.928
  STEP: Creating pod pod-subpath-test-configmap-tkjj @ 04/19/24 15:42:05.945
  STEP: Creating a pod to test atomic-volume-subpath @ 04/19/24 15:42:05.946
  STEP: Saw pod success @ 04/19/24 15:42:30.221
  Apr 19 15:42:30.235: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-subpath-test-configmap-tkjj container test-container-subpath-configmap-tkjj: <nil>
  STEP: delete the pod @ 04/19/24 15:42:30.284
  STEP: Deleting pod pod-subpath-test-configmap-tkjj @ 04/19/24 15:42:30.331
  Apr 19 15:42:30.331: INFO: Deleting pod "pod-subpath-test-configmap-tkjj" in namespace "subpath-2633"
  Apr 19 15:42:30.337: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2633" for this suite. @ 04/19/24 15:42:30.347
â€¢ [24.475 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 04/19/24 15:42:30.369
  Apr 19 15:42:30.369: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename init-container @ 04/19/24 15:42:30.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:42:30.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:42:30.417
  STEP: creating the pod @ 04/19/24 15:42:30.425
  Apr 19 15:42:30.425: INFO: PodSpec: initContainers in spec.initContainers
  Apr 19 15:42:35.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9520" for this suite. @ 04/19/24 15:42:35.818
â€¢ [5.460 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 04/19/24 15:42:35.832
  Apr 19 15:42:35.832: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename services @ 04/19/24 15:42:35.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:42:35.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:42:35.871
  STEP: creating service in namespace services-2367 @ 04/19/24 15:42:35.877
  STEP: creating service affinity-clusterip-transition in namespace services-2367 @ 04/19/24 15:42:35.877
  STEP: creating replication controller affinity-clusterip-transition in namespace services-2367 @ 04/19/24 15:42:35.901
  I0419 15:42:35.917345      14 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-2367, replica count: 3
  I0419 15:42:38.970368      14 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0419 15:42:41.971666      14 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0419 15:42:44.974721      14 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0419 15:42:47.975142      14 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0419 15:42:50.976666      14 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 19 15:42:50.993: INFO: Creating new exec pod
  Apr 19 15:42:54.045: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-2367 exec execpod-affinitynr8vq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Apr 19 15:42:54.471: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Apr 19 15:42:54.471: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 19 15:42:54.472: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-2367 exec execpod-affinitynr8vq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.44.135 80'
  Apr 19 15:42:54.778: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.44.135 80\nConnection to 10.233.44.135 80 port [tcp/http] succeeded!\n"
  Apr 19 15:42:54.778: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 19 15:42:54.804: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-2367 exec execpod-affinitynr8vq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.44.135:80/ ; done'
  Apr 19 15:42:55.351: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n"
  Apr 19 15:42:55.352: INFO: stdout: "\naffinity-clusterip-transition-gn85b\naffinity-clusterip-transition-gn85b\naffinity-clusterip-transition-zhssd\naffinity-clusterip-transition-5lxvw\naffinity-clusterip-transition-zhssd\naffinity-clusterip-transition-gn85b\naffinity-clusterip-transition-zhssd\naffinity-clusterip-transition-5lxvw\naffinity-clusterip-transition-gn85b\naffinity-clusterip-transition-5lxvw\naffinity-clusterip-transition-zhssd\naffinity-clusterip-transition-gn85b\naffinity-clusterip-transition-zhssd\naffinity-clusterip-transition-gn85b\naffinity-clusterip-transition-zhssd\naffinity-clusterip-transition-5lxvw"
  Apr 19 15:42:55.352: INFO: Received response from host: affinity-clusterip-transition-gn85b
  Apr 19 15:42:55.352: INFO: Received response from host: affinity-clusterip-transition-gn85b
  Apr 19 15:42:55.352: INFO: Received response from host: affinity-clusterip-transition-zhssd
  Apr 19 15:42:55.352: INFO: Received response from host: affinity-clusterip-transition-5lxvw
  Apr 19 15:42:55.352: INFO: Received response from host: affinity-clusterip-transition-zhssd
  Apr 19 15:42:55.352: INFO: Received response from host: affinity-clusterip-transition-gn85b
  Apr 19 15:42:55.352: INFO: Received response from host: affinity-clusterip-transition-zhssd
  Apr 19 15:42:55.352: INFO: Received response from host: affinity-clusterip-transition-5lxvw
  Apr 19 15:42:55.352: INFO: Received response from host: affinity-clusterip-transition-gn85b
  Apr 19 15:42:55.352: INFO: Received response from host: affinity-clusterip-transition-5lxvw
  Apr 19 15:42:55.352: INFO: Received response from host: affinity-clusterip-transition-zhssd
  Apr 19 15:42:55.352: INFO: Received response from host: affinity-clusterip-transition-gn85b
  Apr 19 15:42:55.352: INFO: Received response from host: affinity-clusterip-transition-zhssd
  Apr 19 15:42:55.352: INFO: Received response from host: affinity-clusterip-transition-gn85b
  Apr 19 15:42:55.352: INFO: Received response from host: affinity-clusterip-transition-zhssd
  Apr 19 15:42:55.352: INFO: Received response from host: affinity-clusterip-transition-5lxvw
  Apr 19 15:42:55.374: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-2367 exec execpod-affinitynr8vq -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.44.135:80/ ; done'
  Apr 19 15:42:55.818: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.44.135:80/\n"
  Apr 19 15:42:55.818: INFO: stdout: "\naffinity-clusterip-transition-zhssd\naffinity-clusterip-transition-zhssd\naffinity-clusterip-transition-zhssd\naffinity-clusterip-transition-zhssd\naffinity-clusterip-transition-zhssd\naffinity-clusterip-transition-zhssd\naffinity-clusterip-transition-zhssd\naffinity-clusterip-transition-zhssd\naffinity-clusterip-transition-zhssd\naffinity-clusterip-transition-zhssd\naffinity-clusterip-transition-zhssd\naffinity-clusterip-transition-zhssd\naffinity-clusterip-transition-zhssd\naffinity-clusterip-transition-zhssd\naffinity-clusterip-transition-zhssd\naffinity-clusterip-transition-zhssd"
  Apr 19 15:42:55.818: INFO: Received response from host: affinity-clusterip-transition-zhssd
  Apr 19 15:42:55.818: INFO: Received response from host: affinity-clusterip-transition-zhssd
  Apr 19 15:42:55.818: INFO: Received response from host: affinity-clusterip-transition-zhssd
  Apr 19 15:42:55.818: INFO: Received response from host: affinity-clusterip-transition-zhssd
  Apr 19 15:42:55.818: INFO: Received response from host: affinity-clusterip-transition-zhssd
  Apr 19 15:42:55.818: INFO: Received response from host: affinity-clusterip-transition-zhssd
  Apr 19 15:42:55.818: INFO: Received response from host: affinity-clusterip-transition-zhssd
  Apr 19 15:42:55.818: INFO: Received response from host: affinity-clusterip-transition-zhssd
  Apr 19 15:42:55.818: INFO: Received response from host: affinity-clusterip-transition-zhssd
  Apr 19 15:42:55.818: INFO: Received response from host: affinity-clusterip-transition-zhssd
  Apr 19 15:42:55.818: INFO: Received response from host: affinity-clusterip-transition-zhssd
  Apr 19 15:42:55.818: INFO: Received response from host: affinity-clusterip-transition-zhssd
  Apr 19 15:42:55.818: INFO: Received response from host: affinity-clusterip-transition-zhssd
  Apr 19 15:42:55.818: INFO: Received response from host: affinity-clusterip-transition-zhssd
  Apr 19 15:42:55.818: INFO: Received response from host: affinity-clusterip-transition-zhssd
  Apr 19 15:42:55.818: INFO: Received response from host: affinity-clusterip-transition-zhssd
  Apr 19 15:42:55.818: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 19 15:42:55.831: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-2367, will wait for the garbage collector to delete the pods @ 04/19/24 15:42:55.883
  Apr 19 15:42:55.967: INFO: Deleting ReplicationController affinity-clusterip-transition took: 27.865143ms
  Apr 19 15:42:56.069: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 102.220492ms
  STEP: Destroying namespace "services-2367" for this suite. @ 04/19/24 15:42:59.131
â€¢ [23.314 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 04/19/24 15:42:59.152
  Apr 19 15:42:59.152: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 15:42:59.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:42:59.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:42:59.189
  STEP: Creating a pod to test downward API volume plugin @ 04/19/24 15:42:59.198
  STEP: Saw pod success @ 04/19/24 15:43:03.271
  Apr 19 15:43:03.279: INFO: Trying to get logs from node eixo7oojiese-3 pod downwardapi-volume-4b1739b7-c247-428f-902d-79f2f400543f container client-container: <nil>
  STEP: delete the pod @ 04/19/24 15:43:03.298
  Apr 19 15:43:03.334: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7267" for this suite. @ 04/19/24 15:43:03.344
â€¢ [4.208 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 04/19/24 15:43:03.363
  Apr 19 15:43:03.363: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename webhook @ 04/19/24 15:43:03.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:43:03.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:43:03.411
  STEP: Setting up server cert @ 04/19/24 15:43:03.467
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/19/24 15:43:04.113
  STEP: Deploying the webhook pod @ 04/19/24 15:43:04.137
  STEP: Wait for the deployment to be ready @ 04/19/24 15:43:04.175
  Apr 19 15:43:04.200: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/19/24 15:43:06.23
  STEP: Verifying the service has paired with the endpoint @ 04/19/24 15:43:06.263
  Apr 19 15:43:07.264: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/19/24 15:43:07.282
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 04/19/24 15:43:07.339
  STEP: Creating a dummy validating-webhook-configuration object @ 04/19/24 15:43:07.372
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 04/19/24 15:43:07.395
  STEP: Creating a dummy mutating-webhook-configuration object @ 04/19/24 15:43:07.41
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 04/19/24 15:43:07.431
  Apr 19 15:43:07.445: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5110" for this suite. @ 04/19/24 15:43:07.55
  STEP: Destroying namespace "webhook-markers-327" for this suite. @ 04/19/24 15:43:07.561
â€¢ [4.207 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 04/19/24 15:43:07.57
  Apr 19 15:43:07.570: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 15:43:07.574
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:43:07.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:43:07.61
  STEP: Creating projection with secret that has name projected-secret-test-map-6fe7767f-bd18-4f10-ab92-d6b6cb0b6315 @ 04/19/24 15:43:07.615
  STEP: Creating a pod to test consume secrets @ 04/19/24 15:43:07.623
  STEP: Saw pod success @ 04/19/24 15:43:11.677
  Apr 19 15:43:11.686: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-projected-secrets-f7317ae0-1d48-4d59-a1b5-10e180c98a26 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/19/24 15:43:11.702
  Apr 19 15:43:11.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3554" for this suite. @ 04/19/24 15:43:11.756
â€¢ [4.203 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 04/19/24 15:43:11.775
  Apr 19 15:43:11.775: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename kubectl @ 04/19/24 15:43:11.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:43:11.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:43:11.835
  Apr 19 15:43:11.842: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-9788 version'
  Apr 19 15:43:12.070: INFO: stderr: ""
  Apr 19 15:43:12.070: INFO: stdout: "Client Version: v1.28.9\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.9\n"
  Apr 19 15:43:12.071: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9788" for this suite. @ 04/19/24 15:43:12.081
â€¢ [0.321 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 04/19/24 15:43:12.1
  Apr 19 15:43:12.100: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename kubectl @ 04/19/24 15:43:12.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:43:12.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:43:12.141
  STEP: starting the proxy server @ 04/19/24 15:43:12.146
  Apr 19 15:43:12.147: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-9155 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 04/19/24 15:43:12.256
  Apr 19 15:43:12.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9155" for this suite. @ 04/19/24 15:43:12.291
â€¢ [0.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 04/19/24 15:43:12.323
  Apr 19 15:43:12.323: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename services @ 04/19/24 15:43:12.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:43:12.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:43:12.368
  STEP: creating a collection of services @ 04/19/24 15:43:12.373
  Apr 19 15:43:12.373: INFO: Creating e2e-svc-a-g52zr
  Apr 19 15:43:12.396: INFO: Creating e2e-svc-b-kcf58
  Apr 19 15:43:12.420: INFO: Creating e2e-svc-c-52prg
  STEP: deleting service collection @ 04/19/24 15:43:12.453
  Apr 19 15:43:12.517: INFO: Collection of services has been deleted
  Apr 19 15:43:12.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4045" for this suite. @ 04/19/24 15:43:12.525
â€¢ [0.213 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 04/19/24 15:43:12.539
  Apr 19 15:43:12.539: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename pods @ 04/19/24 15:43:12.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:43:12.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:43:12.586
  STEP: Saw pod success @ 04/19/24 15:43:18.753
  Apr 19 15:43:18.763: INFO: Trying to get logs from node eixo7oojiese-3 pod client-envvars-7352410b-0a5c-4565-a91d-008679b529bc container env3cont: <nil>
  STEP: delete the pod @ 04/19/24 15:43:18.791
  Apr 19 15:43:18.833: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3761" for this suite. @ 04/19/24 15:43:18.85
â€¢ [6.325 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 04/19/24 15:43:18.87
  Apr 19 15:43:18.870: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename discovery @ 04/19/24 15:43:18.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:43:18.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:43:18.917
  STEP: Setting up server cert @ 04/19/24 15:43:18.926
  Apr 19 15:43:19.487: INFO: Checking APIGroup: apiregistration.k8s.io
  Apr 19 15:43:19.489: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Apr 19 15:43:19.489: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Apr 19 15:43:19.489: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Apr 19 15:43:19.489: INFO: Checking APIGroup: apps
  Apr 19 15:43:19.491: INFO: PreferredVersion.GroupVersion: apps/v1
  Apr 19 15:43:19.491: INFO: Versions found [{apps/v1 v1}]
  Apr 19 15:43:19.491: INFO: apps/v1 matches apps/v1
  Apr 19 15:43:19.491: INFO: Checking APIGroup: events.k8s.io
  Apr 19 15:43:19.494: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Apr 19 15:43:19.495: INFO: Versions found [{events.k8s.io/v1 v1}]
  Apr 19 15:43:19.495: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Apr 19 15:43:19.496: INFO: Checking APIGroup: authentication.k8s.io
  Apr 19 15:43:19.500: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Apr 19 15:43:19.500: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Apr 19 15:43:19.501: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Apr 19 15:43:19.501: INFO: Checking APIGroup: authorization.k8s.io
  Apr 19 15:43:19.503: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Apr 19 15:43:19.503: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Apr 19 15:43:19.503: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Apr 19 15:43:19.503: INFO: Checking APIGroup: autoscaling
  Apr 19 15:43:19.505: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Apr 19 15:43:19.505: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Apr 19 15:43:19.505: INFO: autoscaling/v2 matches autoscaling/v2
  Apr 19 15:43:19.505: INFO: Checking APIGroup: batch
  Apr 19 15:43:19.507: INFO: PreferredVersion.GroupVersion: batch/v1
  Apr 19 15:43:19.507: INFO: Versions found [{batch/v1 v1}]
  Apr 19 15:43:19.508: INFO: batch/v1 matches batch/v1
  Apr 19 15:43:19.508: INFO: Checking APIGroup: certificates.k8s.io
  Apr 19 15:43:19.509: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Apr 19 15:43:19.510: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Apr 19 15:43:19.510: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Apr 19 15:43:19.510: INFO: Checking APIGroup: networking.k8s.io
  Apr 19 15:43:19.512: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Apr 19 15:43:19.513: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Apr 19 15:43:19.514: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Apr 19 15:43:19.514: INFO: Checking APIGroup: policy
  Apr 19 15:43:19.516: INFO: PreferredVersion.GroupVersion: policy/v1
  Apr 19 15:43:19.516: INFO: Versions found [{policy/v1 v1}]
  Apr 19 15:43:19.516: INFO: policy/v1 matches policy/v1
  Apr 19 15:43:19.517: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Apr 19 15:43:19.519: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Apr 19 15:43:19.520: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Apr 19 15:43:19.521: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Apr 19 15:43:19.521: INFO: Checking APIGroup: storage.k8s.io
  Apr 19 15:43:19.525: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Apr 19 15:43:19.525: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Apr 19 15:43:19.525: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Apr 19 15:43:19.525: INFO: Checking APIGroup: admissionregistration.k8s.io
  Apr 19 15:43:19.528: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Apr 19 15:43:19.528: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Apr 19 15:43:19.528: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Apr 19 15:43:19.528: INFO: Checking APIGroup: apiextensions.k8s.io
  Apr 19 15:43:19.530: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Apr 19 15:43:19.532: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Apr 19 15:43:19.532: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Apr 19 15:43:19.533: INFO: Checking APIGroup: scheduling.k8s.io
  Apr 19 15:43:19.537: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Apr 19 15:43:19.537: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Apr 19 15:43:19.538: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Apr 19 15:43:19.538: INFO: Checking APIGroup: coordination.k8s.io
  Apr 19 15:43:19.540: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Apr 19 15:43:19.542: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Apr 19 15:43:19.542: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Apr 19 15:43:19.542: INFO: Checking APIGroup: node.k8s.io
  Apr 19 15:43:19.545: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Apr 19 15:43:19.545: INFO: Versions found [{node.k8s.io/v1 v1}]
  Apr 19 15:43:19.545: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Apr 19 15:43:19.545: INFO: Checking APIGroup: discovery.k8s.io
  Apr 19 15:43:19.548: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Apr 19 15:43:19.548: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Apr 19 15:43:19.548: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Apr 19 15:43:19.548: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Apr 19 15:43:19.551: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Apr 19 15:43:19.551: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Apr 19 15:43:19.551: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Apr 19 15:43:19.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7824" for this suite. @ 04/19/24 15:43:19.564
â€¢ [0.707 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 04/19/24 15:43:19.578
  Apr 19 15:43:19.578: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename security-context-test @ 04/19/24 15:43:19.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:43:19.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:43:19.627
  Apr 19 15:43:23.679: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6668" for this suite. @ 04/19/24 15:43:23.701
â€¢ [4.143 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 04/19/24 15:43:23.722
  Apr 19 15:43:23.722: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename kubectl @ 04/19/24 15:43:23.727
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:43:23.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:43:23.779
  STEP: validating api versions @ 04/19/24 15:43:23.788
  Apr 19 15:43:23.788: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-9348 api-versions'
  Apr 19 15:43:23.985: INFO: stderr: ""
  Apr 19 15:43:23.985: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Apr 19 15:43:23.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9348" for this suite. @ 04/19/24 15:43:23.996
â€¢ [0.307 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 04/19/24 15:43:24.03
  Apr 19 15:43:24.030: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename downward-api @ 04/19/24 15:43:24.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:43:24.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:43:24.092
  STEP: Creating the pod @ 04/19/24 15:43:24.096
  Apr 19 15:43:26.689: INFO: Successfully updated pod "labelsupdate4cd6563e-3ac7-4d9c-812e-bef537b360cf"
  Apr 19 15:43:30.752: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4620" for this suite. @ 04/19/24 15:43:30.763
â€¢ [6.749 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 04/19/24 15:43:30.79
  Apr 19 15:43:30.790: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename job @ 04/19/24 15:43:30.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:43:30.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:43:30.836
  STEP: Creating a job @ 04/19/24 15:43:30.842
  STEP: Ensure pods equal to parallelism count is attached to the job @ 04/19/24 15:43:30.859
  STEP: patching /status @ 04/19/24 15:43:36.871
  STEP: updating /status @ 04/19/24 15:43:36.889
  STEP: get /status @ 04/19/24 15:43:36.91
  Apr 19 15:43:36.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4962" for this suite. @ 04/19/24 15:43:36.93
â€¢ [6.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 04/19/24 15:43:36.947
  Apr 19 15:43:36.947: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename podtemplate @ 04/19/24 15:43:36.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:43:36.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:43:36.987
  STEP: Create set of pod templates @ 04/19/24 15:43:36.993
  Apr 19 15:43:37.010: INFO: created test-podtemplate-1
  Apr 19 15:43:37.018: INFO: created test-podtemplate-2
  Apr 19 15:43:37.032: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 04/19/24 15:43:37.032
  STEP: delete collection of pod templates @ 04/19/24 15:43:37.037
  Apr 19 15:43:37.037: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 04/19/24 15:43:37.076
  Apr 19 15:43:37.077: INFO: requesting list of pod templates to confirm quantity
  Apr 19 15:43:37.082: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1786" for this suite. @ 04/19/24 15:43:37.089
â€¢ [0.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 04/19/24 15:43:37.11
  Apr 19 15:43:37.110: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename configmap @ 04/19/24 15:43:37.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:43:37.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:43:37.143
  STEP: Creating configMap with name configmap-test-upd-ac362087-eb17-4334-b8c1-1f05e890ebe5 @ 04/19/24 15:43:37.154
  STEP: Creating the pod @ 04/19/24 15:43:37.162
  STEP: Updating configmap configmap-test-upd-ac362087-eb17-4334-b8c1-1f05e890ebe5 @ 04/19/24 15:43:39.224
  STEP: waiting to observe update in volume @ 04/19/24 15:43:39.232
  Apr 19 15:44:44.044: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4522" for this suite. @ 04/19/24 15:44:44.067
â€¢ [66.970 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 04/19/24 15:44:44.081
  Apr 19 15:44:44.081: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 15:44:44.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:44:44.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:44:44.135
  STEP: Creating the pod @ 04/19/24 15:44:44.14
  Apr 19 15:44:46.731: INFO: Successfully updated pod "labelsupdateab2f4709-d51c-47f6-974c-11e82703e24d"
  Apr 19 15:44:48.775: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4788" for this suite. @ 04/19/24 15:44:48.793
â€¢ [4.733 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 04/19/24 15:44:48.815
  Apr 19 15:44:48.815: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename svcaccounts @ 04/19/24 15:44:48.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:44:48.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:44:48.86
  Apr 19 15:44:48.896: INFO: created pod
  STEP: Saw pod success @ 04/19/24 15:44:52.934
  Apr 19 15:45:22.936: INFO: polling logs
  Apr 19 15:45:23.005: INFO: Pod logs: 
  I0419 15:44:49.824970       1 log.go:245] OK: Got token
  I0419 15:44:49.826691       1 log.go:245] validating with in-cluster discovery
  I0419 15:44:49.827928       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0419 15:44:49.828050       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-9112:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000c1e90), NotBefore:(*jwt.NumericDate)(0xc0000c1f78), IssuedAt:(*jwt.NumericDate)(0xc0000c1ea0), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9112", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"04e7a743-e32d-4474-8dda-c68e312d9860"}}}
  I0419 15:44:49.854735       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0419 15:44:49.866001       1 log.go:245] OK: Validated signature on JWT
  I0419 15:44:49.866194       1 log.go:245] OK: Got valid claims from token!
  I0419 15:44:49.866294       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-9112:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0001fd9a0), NotBefore:(*jwt.NumericDate)(0xc0001fd9c8), IssuedAt:(*jwt.NumericDate)(0xc0001fd9a8), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9112", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"04e7a743-e32d-4474-8dda-c68e312d9860"}}}

  Apr 19 15:45:23.011: INFO: completed pod
  Apr 19 15:45:23.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9112" for this suite. @ 04/19/24 15:45:23.045
â€¢ [34.247 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 04/19/24 15:45:23.071
  Apr 19 15:45:23.072: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename dns @ 04/19/24 15:45:23.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:45:23.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:45:23.138
  STEP: Creating a test headless service @ 04/19/24 15:45:23.147
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6790 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6790;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6790 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6790;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6790.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-6790.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6790.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-6790.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6790.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-6790.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6790.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-6790.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6790.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-6790.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6790.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-6790.svc;check="$$(dig +notcp +noall +answer +search 217.41.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.41.217_udp@PTR;check="$$(dig +tcp +noall +answer +search 217.41.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.41.217_tcp@PTR;sleep 1; done
   @ 04/19/24 15:45:23.223
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6790 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6790;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6790 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6790;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-6790.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-6790.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-6790.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-6790.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-6790.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-6790.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-6790.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-6790.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-6790.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-6790.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-6790.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-6790.svc;check="$$(dig +notcp +noall +answer +search 217.41.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.41.217_udp@PTR;check="$$(dig +tcp +noall +answer +search 217.41.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.41.217_tcp@PTR;sleep 1; done
   @ 04/19/24 15:45:23.223
  STEP: creating a pod to probe DNS @ 04/19/24 15:45:23.223
  STEP: submitting the pod to kubernetes @ 04/19/24 15:45:23.224
  STEP: retrieving the pod @ 04/19/24 15:45:43.368
  STEP: looking for the results for each expected name from probers @ 04/19/24 15:45:43.376
  Apr 19 15:45:43.398: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:43.409: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:43.424: INFO: Unable to read wheezy_udp@dns-test-service.dns-6790 from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:43.442: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6790 from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:43.454: INFO: Unable to read wheezy_udp@dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:43.463: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:43.476: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:43.485: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:43.559: INFO: Unable to read jessie_udp@dns-test-service from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:43.569: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:43.590: INFO: Unable to read jessie_udp@dns-test-service.dns-6790 from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:43.602: INFO: Unable to read jessie_tcp@dns-test-service.dns-6790 from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:43.615: INFO: Unable to read jessie_udp@dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:43.628: INFO: Unable to read jessie_tcp@dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:43.641: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:43.654: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:43.665: INFO: Unable to read jessie_udp@_http._tcp.test-service-2.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:43.675: INFO: Unable to read jessie_tcp@_http._tcp.test-service-2.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:43.695: INFO: Lookups using dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6790 wheezy_tcp@dns-test-service.dns-6790 wheezy_udp@dns-test-service.dns-6790.svc wheezy_tcp@dns-test-service.dns-6790.svc wheezy_udp@_http._tcp.dns-test-service.dns-6790.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6790.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6790 jessie_tcp@dns-test-service.dns-6790 jessie_udp@dns-test-service.dns-6790.svc jessie_tcp@dns-test-service.dns-6790.svc jessie_udp@_http._tcp.dns-test-service.dns-6790.svc jessie_tcp@_http._tcp.dns-test-service.dns-6790.svc jessie_udp@_http._tcp.test-service-2.dns-6790.svc jessie_tcp@_http._tcp.test-service-2.dns-6790.svc]

  Apr 19 15:45:43.726: INFO: Pod client logs for webserver: 
  Apr 19 15:45:43.746: INFO: Pod client logs for querier: 
  Apr 19 15:45:43.765: INFO: Pod client logs for jessie-querier: 
  Apr 19 15:45:48.781: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:48.794: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:48.807: INFO: Unable to read wheezy_udp@dns-test-service.dns-6790 from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:48.819: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6790 from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:48.831: INFO: Unable to read wheezy_udp@dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:48.839: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:48.851: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:48.861: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:48.919: INFO: Unable to read jessie_udp@dns-test-service from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:48.928: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:48.937: INFO: Unable to read jessie_udp@dns-test-service.dns-6790 from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:48.950: INFO: Unable to read jessie_tcp@dns-test-service.dns-6790 from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:48.958: INFO: Unable to read jessie_udp@dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:48.965: INFO: Unable to read jessie_tcp@dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:48.972: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:48.979: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:49.012: INFO: Lookups using dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6790 wheezy_tcp@dns-test-service.dns-6790 wheezy_udp@dns-test-service.dns-6790.svc wheezy_tcp@dns-test-service.dns-6790.svc wheezy_udp@_http._tcp.dns-test-service.dns-6790.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6790.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6790 jessie_tcp@dns-test-service.dns-6790 jessie_udp@dns-test-service.dns-6790.svc jessie_tcp@dns-test-service.dns-6790.svc jessie_udp@_http._tcp.dns-test-service.dns-6790.svc jessie_tcp@_http._tcp.dns-test-service.dns-6790.svc]

  Apr 19 15:45:49.032: INFO: Pod client logs for webserver: 
  Apr 19 15:45:49.050: INFO: Pod client logs for querier: 
  Apr 19 15:45:49.066: INFO: Pod client logs for jessie-querier: 
  Apr 19 15:45:53.778: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:53.790: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:53.803: INFO: Unable to read wheezy_udp@dns-test-service.dns-6790 from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:53.814: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6790 from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:53.825: INFO: Unable to read wheezy_udp@dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:53.834: INFO: Unable to read wheezy_tcp@dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:53.847: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:53.855: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:53.889: INFO: Unable to read jessie_udp@dns-test-service from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:53.896: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:53.903: INFO: Unable to read jessie_udp@dns-test-service.dns-6790 from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:53.910: INFO: Unable to read jessie_tcp@dns-test-service.dns-6790 from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:53.918: INFO: Unable to read jessie_udp@dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:53.925: INFO: Unable to read jessie_tcp@dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:53.933: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:53.943: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-6790.svc from pod dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32: the server could not find the requested resource (get pods dns-test-2329bedf-fa43-4017-947b-2119617afb32)
  Apr 19 15:45:53.971: INFO: Lookups using dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-6790 wheezy_tcp@dns-test-service.dns-6790 wheezy_udp@dns-test-service.dns-6790.svc wheezy_tcp@dns-test-service.dns-6790.svc wheezy_udp@_http._tcp.dns-test-service.dns-6790.svc wheezy_tcp@_http._tcp.dns-test-service.dns-6790.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-6790 jessie_tcp@dns-test-service.dns-6790 jessie_udp@dns-test-service.dns-6790.svc jessie_tcp@dns-test-service.dns-6790.svc jessie_udp@_http._tcp.dns-test-service.dns-6790.svc jessie_tcp@_http._tcp.dns-test-service.dns-6790.svc]

  Apr 19 15:45:53.989: INFO: Pod client logs for webserver: 
  Apr 19 15:45:54.015: INFO: Pod client logs for querier: 
  Apr 19 15:45:54.028: INFO: Pod client logs for jessie-querier: 
  Apr 19 15:45:59.001: INFO: DNS probes using dns-6790/dns-test-2329bedf-fa43-4017-947b-2119617afb32 succeeded

  Apr 19 15:45:59.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/19/24 15:45:59.011
  STEP: deleting the test service @ 04/19/24 15:45:59.104
  STEP: deleting the test headless service @ 04/19/24 15:45:59.179
  STEP: Destroying namespace "dns-6790" for this suite. @ 04/19/24 15:45:59.221
â€¢ [36.182 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 04/19/24 15:45:59.254
  Apr 19 15:45:59.254: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename downward-api @ 04/19/24 15:45:59.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:45:59.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:45:59.325
  STEP: Creating a pod to test downward api env vars @ 04/19/24 15:45:59.331
  STEP: Saw pod success @ 04/19/24 15:46:03.385
  Apr 19 15:46:03.396: INFO: Trying to get logs from node eixo7oojiese-3 pod downward-api-1971e9b3-617d-45d1-9034-dd2da4e6d40d container dapi-container: <nil>
  STEP: delete the pod @ 04/19/24 15:46:03.423
  Apr 19 15:46:03.464: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9955" for this suite. @ 04/19/24 15:46:03.475
â€¢ [4.241 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 04/19/24 15:46:03.496
  Apr 19 15:46:03.496: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename var-expansion @ 04/19/24 15:46:03.501
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:46:03.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:46:03.55
  STEP: Creating a pod to test substitution in container's command @ 04/19/24 15:46:03.558
  STEP: Saw pod success @ 04/19/24 15:46:07.624
  Apr 19 15:46:07.636: INFO: Trying to get logs from node eixo7oojiese-3 pod var-expansion-601fe09b-e6ae-4752-8e45-d0ebb6890cb5 container dapi-container: <nil>
  STEP: delete the pod @ 04/19/24 15:46:07.655
  Apr 19 15:46:07.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1805" for this suite. @ 04/19/24 15:46:07.711
â€¢ [4.235 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 04/19/24 15:46:07.736
  Apr 19 15:46:07.736: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename kubectl @ 04/19/24 15:46:07.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:46:07.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:46:07.787
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/19/24 15:46:07.795
  Apr 19 15:46:07.798: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-1035 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Apr 19 15:46:08.063: INFO: stderr: ""
  Apr 19 15:46:08.063: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/19/24 15:46:08.063
  Apr 19 15:46:08.073: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-1035 delete pods e2e-test-httpd-pod'
  Apr 19 15:46:09.410: INFO: stderr: ""
  Apr 19 15:46:09.410: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 19 15:46:09.410: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1035" for this suite. @ 04/19/24 15:46:09.421
â€¢ [1.696 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 04/19/24 15:46:09.432
  Apr 19 15:46:09.432: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename pods @ 04/19/24 15:46:09.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:46:09.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:46:09.474
  STEP: creating the pod @ 04/19/24 15:46:09.479
  STEP: submitting the pod to kubernetes @ 04/19/24 15:46:09.479
  STEP: verifying the pod is in kubernetes @ 04/19/24 15:46:11.522
  STEP: updating the pod @ 04/19/24 15:46:11.533
  Apr 19 15:46:12.075: INFO: Successfully updated pod "pod-update-b60c68c5-becc-4e11-8efb-597ad263eb2e"
  STEP: verifying the updated pod is in kubernetes @ 04/19/24 15:46:12.085
  Apr 19 15:46:12.093: INFO: Pod update OK
  Apr 19 15:46:12.093: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3967" for this suite. @ 04/19/24 15:46:12.121
â€¢ [2.720 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 04/19/24 15:46:12.156
  Apr 19 15:46:12.156: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename svcaccounts @ 04/19/24 15:46:12.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:46:12.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:46:12.221
  STEP: Creating a pod to test service account token:  @ 04/19/24 15:46:12.231
  STEP: Saw pod success @ 04/19/24 15:46:16.284
  Apr 19 15:46:16.294: INFO: Trying to get logs from node eixo7oojiese-3 pod test-pod-ccfdb9d2-71e0-4935-acc1-dc627a114f46 container agnhost-container: <nil>
  STEP: delete the pod @ 04/19/24 15:46:16.313
  Apr 19 15:46:16.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4057" for this suite. @ 04/19/24 15:46:16.377
â€¢ [4.236 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 04/19/24 15:46:16.395
  Apr 19 15:46:16.395: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/19/24 15:46:16.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:46:16.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:46:16.439
  Apr 19 15:46:18.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 04/19/24 15:46:18.525
  STEP: Cleaning up the configmap @ 04/19/24 15:46:18.538
  STEP: Cleaning up the pod @ 04/19/24 15:46:18.566
  STEP: Destroying namespace "emptydir-wrapper-5836" for this suite. @ 04/19/24 15:46:18.598
â€¢ [2.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 04/19/24 15:46:18.614
  Apr 19 15:46:18.614: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/19/24 15:46:18.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:46:18.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:46:18.65
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 04/19/24 15:46:18.657
  Apr 19 15:46:18.658: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 15:46:20.333: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 15:46:27.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2769" for this suite. @ 04/19/24 15:46:27.563
â€¢ [8.963 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 04/19/24 15:46:27.582
  Apr 19 15:46:27.582: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename sched-pred @ 04/19/24 15:46:27.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:46:27.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:46:27.625
  Apr 19 15:46:27.629: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 19 15:46:27.651: INFO: Waiting for terminating namespaces to be deleted...
  Apr 19 15:46:27.658: INFO: 
  Logging pods the apiserver thinks is on node eixo7oojiese-1 before test
  Apr 19 15:46:27.677: INFO: kube-addon-manager-eixo7oojiese-1 from kube-system started at 2024-04-19 15:38:19 +0000 UTC (1 container statuses recorded)
  Apr 19 15:46:27.677: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Apr 19 15:46:27.678: INFO: kube-apiserver-eixo7oojiese-1 from kube-system started at 2024-04-19 15:38:19 +0000 UTC (1 container statuses recorded)
  Apr 19 15:46:27.678: INFO: 	Container kube-apiserver ready: true, restart count 1
  Apr 19 15:46:27.679: INFO: kube-controller-manager-eixo7oojiese-1 from kube-system started at 2024-04-19 15:38:19 +0000 UTC (1 container statuses recorded)
  Apr 19 15:46:27.679: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Apr 19 15:46:27.680: INFO: kube-flannel-ds-w6gb8 from kube-system started at 2024-04-19 15:31:52 +0000 UTC (1 container statuses recorded)
  Apr 19 15:46:27.680: INFO: 	Container kube-flannel ready: true, restart count 1
  Apr 19 15:46:27.681: INFO: kube-proxy-2xwhq from kube-system started at 2024-04-19 15:26:10 +0000 UTC (1 container statuses recorded)
  Apr 19 15:46:27.681: INFO: 	Container kube-proxy ready: true, restart count 1
  Apr 19 15:46:27.681: INFO: kube-scheduler-eixo7oojiese-1 from kube-system started at 2024-04-19 15:38:19 +0000 UTC (1 container statuses recorded)
  Apr 19 15:46:27.682: INFO: 	Container kube-scheduler ready: true, restart count 1
  Apr 19 15:46:27.682: INFO: sonobuoy-systemd-logs-daemon-set-b366af8c5db04861-m7ssp from sonobuoy started at 2024-04-19 15:39:22 +0000 UTC (2 container statuses recorded)
  Apr 19 15:46:27.683: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 19 15:46:27.684: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 19 15:46:27.684: INFO: 
  Logging pods the apiserver thinks is on node eixo7oojiese-2 before test
  Apr 19 15:46:27.703: INFO: kube-addon-manager-eixo7oojiese-2 from kube-system started at 2024-04-19 15:33:54 +0000 UTC (1 container statuses recorded)
  Apr 19 15:46:27.704: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Apr 19 15:46:27.704: INFO: kube-apiserver-eixo7oojiese-2 from kube-system started at 2024-04-19 15:33:54 +0000 UTC (1 container statuses recorded)
  Apr 19 15:46:27.704: INFO: 	Container kube-apiserver ready: true, restart count 1
  Apr 19 15:46:27.704: INFO: kube-controller-manager-eixo7oojiese-2 from kube-system started at 2024-04-19 15:33:54 +0000 UTC (1 container statuses recorded)
  Apr 19 15:46:27.704: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Apr 19 15:46:27.704: INFO: kube-flannel-ds-pcsbj from kube-system started at 2024-04-19 15:31:52 +0000 UTC (1 container statuses recorded)
  Apr 19 15:46:27.704: INFO: 	Container kube-flannel ready: true, restart count 1
  Apr 19 15:46:27.704: INFO: kube-proxy-g7s86 from kube-system started at 2024-04-19 15:26:58 +0000 UTC (1 container statuses recorded)
  Apr 19 15:46:27.704: INFO: 	Container kube-proxy ready: true, restart count 1
  Apr 19 15:46:27.704: INFO: kube-scheduler-eixo7oojiese-2 from kube-system started at 2024-04-19 15:33:54 +0000 UTC (1 container statuses recorded)
  Apr 19 15:46:27.704: INFO: 	Container kube-scheduler ready: true, restart count 1
  Apr 19 15:46:27.704: INFO: sonobuoy-systemd-logs-daemon-set-b366af8c5db04861-wh5lb from sonobuoy started at 2024-04-19 15:39:22 +0000 UTC (2 container statuses recorded)
  Apr 19 15:46:27.704: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 19 15:46:27.704: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 19 15:46:27.704: INFO: 
  Logging pods the apiserver thinks is on node eixo7oojiese-3 before test
  Apr 19 15:46:27.718: INFO: coredns-5dd5756b68-7mmjp from kube-system started at 2024-04-19 15:32:08 +0000 UTC (1 container statuses recorded)
  Apr 19 15:46:27.718: INFO: 	Container coredns ready: true, restart count 1
  Apr 19 15:46:27.718: INFO: coredns-5dd5756b68-jq8sx from kube-system started at 2024-04-19 15:32:08 +0000 UTC (1 container statuses recorded)
  Apr 19 15:46:27.718: INFO: 	Container coredns ready: true, restart count 1
  Apr 19 15:46:27.718: INFO: kube-flannel-ds-kbpfs from kube-system started at 2024-04-19 15:31:52 +0000 UTC (1 container statuses recorded)
  Apr 19 15:46:27.718: INFO: 	Container kube-flannel ready: true, restart count 1
  Apr 19 15:46:27.718: INFO: kube-proxy-bf9lq from kube-system started at 2024-04-19 15:27:22 +0000 UTC (1 container statuses recorded)
  Apr 19 15:46:27.718: INFO: 	Container kube-proxy ready: true, restart count 1
  Apr 19 15:46:27.718: INFO: sonobuoy from sonobuoy started at 2024-04-19 15:39:14 +0000 UTC (1 container statuses recorded)
  Apr 19 15:46:27.718: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 19 15:46:27.718: INFO: sonobuoy-e2e-job-589bb66d96224712 from sonobuoy started at 2024-04-19 15:39:22 +0000 UTC (2 container statuses recorded)
  Apr 19 15:46:27.718: INFO: 	Container e2e ready: true, restart count 0
  Apr 19 15:46:27.718: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 19 15:46:27.718: INFO: sonobuoy-systemd-logs-daemon-set-b366af8c5db04861-j649g from sonobuoy started at 2024-04-19 15:39:22 +0000 UTC (2 container statuses recorded)
  Apr 19 15:46:27.718: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 19 15:46:27.718: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/19/24 15:46:27.719
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/19/24 15:46:29.775
  STEP: Trying to apply a random label on the found node. @ 04/19/24 15:46:29.819
  STEP: verifying the node has the label kubernetes.io/e2e-d1b60fff-d3f7-48aa-aab1-c2727ced3ad3 42 @ 04/19/24 15:46:29.937
  STEP: Trying to relaunch the pod, now with labels. @ 04/19/24 15:46:29.945
  STEP: removing the label kubernetes.io/e2e-d1b60fff-d3f7-48aa-aab1-c2727ced3ad3 off the node eixo7oojiese-3 @ 04/19/24 15:46:31.991
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-d1b60fff-d3f7-48aa-aab1-c2727ced3ad3 @ 04/19/24 15:46:32.064
  Apr 19 15:46:32.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-930" for this suite. @ 04/19/24 15:46:32.091
â€¢ [4.540 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 04/19/24 15:46:32.145
  Apr 19 15:46:32.146: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 15:46:32.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:46:32.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:46:32.196
  STEP: Creating configMap with name projected-configmap-test-volume-fe4afc96-02ed-4291-9549-75347122a177 @ 04/19/24 15:46:32.211
  STEP: Creating a pod to test consume configMaps @ 04/19/24 15:46:32.222
  STEP: Saw pod success @ 04/19/24 15:46:36.292
  Apr 19 15:46:36.302: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-projected-configmaps-bbe3a729-2483-40e2-8916-2ce79022066c container agnhost-container: <nil>
  STEP: delete the pod @ 04/19/24 15:46:36.358
  Apr 19 15:46:36.397: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-155" for this suite. @ 04/19/24 15:46:36.408
â€¢ [4.282 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 04/19/24 15:46:36.447
  Apr 19 15:46:36.447: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 15:46:36.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:46:36.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:46:36.49
  STEP: Creating configMap with name projected-configmap-test-volume-939659c5-cdb8-4ce8-b695-20c4bfdb8d9e @ 04/19/24 15:46:36.496
  STEP: Creating a pod to test consume configMaps @ 04/19/24 15:46:36.508
  STEP: Saw pod success @ 04/19/24 15:46:40.563
  Apr 19 15:46:40.573: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-projected-configmaps-e7013a3f-9f9d-4f0d-87f3-6d3406f35dab container agnhost-container: <nil>
  STEP: delete the pod @ 04/19/24 15:46:40.595
  Apr 19 15:46:40.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8455" for this suite. @ 04/19/24 15:46:40.654
â€¢ [4.224 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 04/19/24 15:46:40.685
  Apr 19 15:46:40.686: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 15:46:40.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:46:40.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:46:40.736
  STEP: Creating the pod @ 04/19/24 15:46:40.744
  Apr 19 15:46:43.360: INFO: Successfully updated pod "annotationupdatedd420c81-abfe-4f0e-b62b-da4676d12bda"
  Apr 19 15:46:45.407: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9952" for this suite. @ 04/19/24 15:46:45.421
â€¢ [4.757 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 04/19/24 15:46:45.444
  Apr 19 15:46:45.444: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename webhook @ 04/19/24 15:46:45.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:46:45.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:46:45.499
  STEP: Setting up server cert @ 04/19/24 15:46:45.562
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/19/24 15:46:46.503
  STEP: Deploying the webhook pod @ 04/19/24 15:46:46.527
  STEP: Wait for the deployment to be ready @ 04/19/24 15:46:46.564
  Apr 19 15:46:46.586: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/19/24 15:46:48.61
  STEP: Verifying the service has paired with the endpoint @ 04/19/24 15:46:48.637
  Apr 19 15:46:49.638: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 04/19/24 15:46:49.655
  STEP: Creating a custom resource definition that should be denied by the webhook @ 04/19/24 15:46:49.754
  Apr 19 15:46:49.755: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 15:46:49.784: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6803" for this suite. @ 04/19/24 15:46:49.899
  STEP: Destroying namespace "webhook-markers-4203" for this suite. @ 04/19/24 15:46:49.91
â€¢ [4.480 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 04/19/24 15:46:49.926
  Apr 19 15:46:49.926: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename replicaset @ 04/19/24 15:46:49.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:46:49.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:46:49.958
  Apr 19 15:46:49.962: INFO: Creating ReplicaSet my-hostname-basic-84ae225c-a2e2-46e6-9669-32894684e5a1
  Apr 19 15:46:49.985: INFO: Pod name my-hostname-basic-84ae225c-a2e2-46e6-9669-32894684e5a1: Found 0 pods out of 1
  Apr 19 15:46:54.999: INFO: Pod name my-hostname-basic-84ae225c-a2e2-46e6-9669-32894684e5a1: Found 1 pods out of 1
  Apr 19 15:46:55.000: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-84ae225c-a2e2-46e6-9669-32894684e5a1" is running
  Apr 19 15:46:55.009: INFO: Pod "my-hostname-basic-84ae225c-a2e2-46e6-9669-32894684e5a1-l5qps" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-19 15:46:50 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-19 15:46:50 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-19 15:46:50 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-19 15:46:49 +0000 UTC Reason: Message:}])
  Apr 19 15:46:55.009: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/19/24 15:46:55.01
  Apr 19 15:46:55.041: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2788" for this suite. @ 04/19/24 15:46:55.057
â€¢ [5.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 04/19/24 15:46:55.076
  Apr 19 15:46:55.076: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename kubectl @ 04/19/24 15:46:55.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:46:55.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:46:55.125
  STEP: creating all guestbook components @ 04/19/24 15:46:55.131
  Apr 19 15:46:55.131: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Apr 19 15:46:55.140: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-1798 create -f -'
  Apr 19 15:46:56.499: INFO: stderr: ""
  Apr 19 15:46:56.499: INFO: stdout: "service/agnhost-replica created\n"
  Apr 19 15:46:56.500: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Apr 19 15:46:56.500: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-1798 create -f -'
  Apr 19 15:46:56.996: INFO: stderr: ""
  Apr 19 15:46:56.996: INFO: stdout: "service/agnhost-primary created\n"
  Apr 19 15:46:56.996: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Apr 19 15:46:56.997: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-1798 create -f -'
  Apr 19 15:46:57.495: INFO: stderr: ""
  Apr 19 15:46:57.495: INFO: stdout: "service/frontend created\n"
  Apr 19 15:46:57.495: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Apr 19 15:46:57.496: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-1798 create -f -'
  Apr 19 15:46:57.932: INFO: stderr: ""
  Apr 19 15:46:57.932: INFO: stdout: "deployment.apps/frontend created\n"
  Apr 19 15:46:57.933: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Apr 19 15:46:57.933: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-1798 create -f -'
  Apr 19 15:46:58.432: INFO: stderr: ""
  Apr 19 15:46:58.432: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Apr 19 15:46:58.432: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Apr 19 15:46:58.445: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-1798 create -f -'
  Apr 19 15:46:59.155: INFO: stderr: ""
  Apr 19 15:46:59.155: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 04/19/24 15:46:59.155
  Apr 19 15:46:59.156: INFO: Waiting for all frontend pods to be Running.
  Apr 19 15:47:04.207: INFO: Waiting for frontend to serve content.
  Apr 19 15:47:04.249: INFO: Trying to add a new entry to the guestbook.
  Apr 19 15:47:04.297: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 04/19/24 15:47:04.318
  Apr 19 15:47:04.319: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-1798 delete --grace-period=0 --force -f -'
  Apr 19 15:47:04.543: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 19 15:47:04.543: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 04/19/24 15:47:04.544
  Apr 19 15:47:04.545: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-1798 delete --grace-period=0 --force -f -'
  Apr 19 15:47:04.713: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 19 15:47:04.713: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/19/24 15:47:04.714
  Apr 19 15:47:04.714: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-1798 delete --grace-period=0 --force -f -'
  Apr 19 15:47:04.903: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 19 15:47:04.903: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/19/24 15:47:04.903
  Apr 19 15:47:04.903: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-1798 delete --grace-period=0 --force -f -'
  Apr 19 15:47:05.095: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 19 15:47:05.095: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 04/19/24 15:47:05.096
  Apr 19 15:47:05.096: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-1798 delete --grace-period=0 --force -f -'
  Apr 19 15:47:05.342: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 19 15:47:05.342: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 04/19/24 15:47:05.342
  Apr 19 15:47:05.346: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-1798 delete --grace-period=0 --force -f -'
  Apr 19 15:47:05.576: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 19 15:47:05.576: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Apr 19 15:47:05.576: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1798" for this suite. @ 04/19/24 15:47:05.592
â€¢ [10.560 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 04/19/24 15:47:05.637
  Apr 19 15:47:05.637: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename svcaccounts @ 04/19/24 15:47:05.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:47:05.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:47:05.761
  STEP: creating a ServiceAccount @ 04/19/24 15:47:05.766
  STEP: watching for the ServiceAccount to be added @ 04/19/24 15:47:05.815
  STEP: patching the ServiceAccount @ 04/19/24 15:47:05.818
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 04/19/24 15:47:05.835
  STEP: deleting the ServiceAccount @ 04/19/24 15:47:05.851
  Apr 19 15:47:05.910: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8213" for this suite. @ 04/19/24 15:47:05.917
â€¢ [0.292 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 04/19/24 15:47:05.93
  Apr 19 15:47:05.930: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename configmap @ 04/19/24 15:47:05.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:47:05.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:47:05.964
  STEP: Creating configMap configmap-6440/configmap-test-39b972f4-604b-46f2-9afc-2dd62c88c6db @ 04/19/24 15:47:05.973
  STEP: Creating a pod to test consume configMaps @ 04/19/24 15:47:05.995
  STEP: Saw pod success @ 04/19/24 15:47:10.082
  Apr 19 15:47:10.091: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-configmaps-226eab14-b1a6-4f56-91c0-485024cbd226 container env-test: <nil>
  STEP: delete the pod @ 04/19/24 15:47:10.114
  Apr 19 15:47:10.167: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6440" for this suite. @ 04/19/24 15:47:10.185
â€¢ [4.267 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 04/19/24 15:47:10.2
  Apr 19 15:47:10.200: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename services @ 04/19/24 15:47:10.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:47:10.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:47:10.25
  STEP: creating service in namespace services-6388 @ 04/19/24 15:47:10.255
  STEP: creating service affinity-nodeport-transition in namespace services-6388 @ 04/19/24 15:47:10.255
  STEP: creating replication controller affinity-nodeport-transition in namespace services-6388 @ 04/19/24 15:47:10.284
  I0419 15:47:10.301502      14 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-6388, replica count: 3
  I0419 15:47:13.353482      14 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 19 15:47:13.393: INFO: Creating new exec pod
  Apr 19 15:47:16.448: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-6388 exec execpod-affinity9crjp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Apr 19 15:47:16.844: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Apr 19 15:47:16.845: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 19 15:47:16.845: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-6388 exec execpod-affinity9crjp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.41.0 80'
  Apr 19 15:47:17.104: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.41.0 80\nConnection to 10.233.41.0 80 port [tcp/http] succeeded!\n"
  Apr 19 15:47:17.104: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 19 15:47:17.105: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-6388 exec execpod-affinity9crjp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.129 31596'
  Apr 19 15:47:17.454: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.129 31596\nConnection to 192.168.121.129 31596 port [tcp/*] succeeded!\n"
  Apr 19 15:47:17.454: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 19 15:47:17.455: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-6388 exec execpod-affinity9crjp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.83 31596'
  Apr 19 15:47:17.780: INFO: stderr: "+ nc -v -t -w 2 192.168.121.83 31596\n+ echo hostName\nConnection to 192.168.121.83 31596 port [tcp/*] succeeded!\n"
  Apr 19 15:47:17.780: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 19 15:47:17.812: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-6388 exec execpod-affinity9crjp -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.83:31596/ ; done'
  Apr 19 15:47:18.318: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n"
  Apr 19 15:47:18.319: INFO: stdout: "\naffinity-nodeport-transition-mhkps\naffinity-nodeport-transition-jxp5n\naffinity-nodeport-transition-rvqc9\naffinity-nodeport-transition-mhkps\naffinity-nodeport-transition-rvqc9\naffinity-nodeport-transition-jxp5n\naffinity-nodeport-transition-rvqc9\naffinity-nodeport-transition-jxp5n\naffinity-nodeport-transition-rvqc9\naffinity-nodeport-transition-rvqc9\naffinity-nodeport-transition-jxp5n\naffinity-nodeport-transition-jxp5n\naffinity-nodeport-transition-jxp5n\naffinity-nodeport-transition-mhkps\naffinity-nodeport-transition-jxp5n\naffinity-nodeport-transition-rvqc9"
  Apr 19 15:47:18.319: INFO: Received response from host: affinity-nodeport-transition-mhkps
  Apr 19 15:47:18.319: INFO: Received response from host: affinity-nodeport-transition-jxp5n
  Apr 19 15:47:18.319: INFO: Received response from host: affinity-nodeport-transition-rvqc9
  Apr 19 15:47:18.319: INFO: Received response from host: affinity-nodeport-transition-mhkps
  Apr 19 15:47:18.319: INFO: Received response from host: affinity-nodeport-transition-rvqc9
  Apr 19 15:47:18.319: INFO: Received response from host: affinity-nodeport-transition-jxp5n
  Apr 19 15:47:18.319: INFO: Received response from host: affinity-nodeport-transition-rvqc9
  Apr 19 15:47:18.319: INFO: Received response from host: affinity-nodeport-transition-jxp5n
  Apr 19 15:47:18.319: INFO: Received response from host: affinity-nodeport-transition-rvqc9
  Apr 19 15:47:18.319: INFO: Received response from host: affinity-nodeport-transition-rvqc9
  Apr 19 15:47:18.319: INFO: Received response from host: affinity-nodeport-transition-jxp5n
  Apr 19 15:47:18.319: INFO: Received response from host: affinity-nodeport-transition-jxp5n
  Apr 19 15:47:18.319: INFO: Received response from host: affinity-nodeport-transition-jxp5n
  Apr 19 15:47:18.319: INFO: Received response from host: affinity-nodeport-transition-mhkps
  Apr 19 15:47:18.319: INFO: Received response from host: affinity-nodeport-transition-jxp5n
  Apr 19 15:47:18.319: INFO: Received response from host: affinity-nodeport-transition-rvqc9
  Apr 19 15:47:18.352: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-6388 exec execpod-affinity9crjp -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.83:31596/ ; done'
  Apr 19 15:47:18.868: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:31596/\n"
  Apr 19 15:47:18.868: INFO: stdout: "\naffinity-nodeport-transition-jxp5n\naffinity-nodeport-transition-jxp5n\naffinity-nodeport-transition-jxp5n\naffinity-nodeport-transition-jxp5n\naffinity-nodeport-transition-jxp5n\naffinity-nodeport-transition-jxp5n\naffinity-nodeport-transition-jxp5n\naffinity-nodeport-transition-jxp5n\naffinity-nodeport-transition-jxp5n\naffinity-nodeport-transition-jxp5n\naffinity-nodeport-transition-jxp5n\naffinity-nodeport-transition-jxp5n\naffinity-nodeport-transition-jxp5n\naffinity-nodeport-transition-jxp5n\naffinity-nodeport-transition-jxp5n\naffinity-nodeport-transition-jxp5n"
  Apr 19 15:47:18.868: INFO: Received response from host: affinity-nodeport-transition-jxp5n
  Apr 19 15:47:18.868: INFO: Received response from host: affinity-nodeport-transition-jxp5n
  Apr 19 15:47:18.868: INFO: Received response from host: affinity-nodeport-transition-jxp5n
  Apr 19 15:47:18.868: INFO: Received response from host: affinity-nodeport-transition-jxp5n
  Apr 19 15:47:18.868: INFO: Received response from host: affinity-nodeport-transition-jxp5n
  Apr 19 15:47:18.868: INFO: Received response from host: affinity-nodeport-transition-jxp5n
  Apr 19 15:47:18.868: INFO: Received response from host: affinity-nodeport-transition-jxp5n
  Apr 19 15:47:18.869: INFO: Received response from host: affinity-nodeport-transition-jxp5n
  Apr 19 15:47:18.869: INFO: Received response from host: affinity-nodeport-transition-jxp5n
  Apr 19 15:47:18.869: INFO: Received response from host: affinity-nodeport-transition-jxp5n
  Apr 19 15:47:18.869: INFO: Received response from host: affinity-nodeport-transition-jxp5n
  Apr 19 15:47:18.869: INFO: Received response from host: affinity-nodeport-transition-jxp5n
  Apr 19 15:47:18.869: INFO: Received response from host: affinity-nodeport-transition-jxp5n
  Apr 19 15:47:18.869: INFO: Received response from host: affinity-nodeport-transition-jxp5n
  Apr 19 15:47:18.869: INFO: Received response from host: affinity-nodeport-transition-jxp5n
  Apr 19 15:47:18.869: INFO: Received response from host: affinity-nodeport-transition-jxp5n
  Apr 19 15:47:18.869: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 19 15:47:18.878: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-6388, will wait for the garbage collector to delete the pods @ 04/19/24 15:47:18.91
  Apr 19 15:47:18.990: INFO: Deleting ReplicationController affinity-nodeport-transition took: 14.820935ms
  Apr 19 15:47:19.092: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 102.200696ms
  STEP: Destroying namespace "services-6388" for this suite. @ 04/19/24 15:47:22.339
â€¢ [12.149 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 04/19/24 15:47:22.35
  Apr 19 15:47:22.350: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename emptydir @ 04/19/24 15:47:22.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:47:22.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:47:22.38
  STEP: Creating Pod @ 04/19/24 15:47:22.383
  STEP: Reading file content from the nginx-container @ 04/19/24 15:47:24.424
  Apr 19 15:47:24.425: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-4987 PodName:pod-sharedvolume-20e4da0d-9648-4ca3-869c-581ddc06f7f2 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 15:47:24.426: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 15:47:24.430: INFO: ExecWithOptions: Clientset creation
  Apr 19 15:47:24.431: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/emptydir-4987/pods/pod-sharedvolume-20e4da0d-9648-4ca3-869c-581ddc06f7f2/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Apr 19 15:47:24.591: INFO: Exec stderr: ""
  Apr 19 15:47:24.592: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4987" for this suite. @ 04/19/24 15:47:24.603
â€¢ [2.270 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 04/19/24 15:47:24.624
  Apr 19 15:47:24.624: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename replication-controller @ 04/19/24 15:47:24.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:47:24.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:47:24.667
  STEP: Given a ReplicationController is created @ 04/19/24 15:47:24.676
  STEP: When the matched label of one of its pods change @ 04/19/24 15:47:24.69
  Apr 19 15:47:24.696: INFO: Pod name pod-release: Found 0 pods out of 1
  Apr 19 15:47:29.711: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/19/24 15:47:29.788
  Apr 19 15:47:30.805: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6649" for this suite. @ 04/19/24 15:47:30.819
â€¢ [6.209 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 04/19/24 15:47:30.835
  Apr 19 15:47:30.835: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename sched-preemption @ 04/19/24 15:47:30.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:47:30.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:47:30.879
  Apr 19 15:47:30.925: INFO: Waiting up to 1m0s for all nodes to be ready
  Apr 19 15:48:31.007: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/19/24 15:48:31.025
  Apr 19 15:48:31.026: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/19/24 15:48:31.033
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:48:31.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:48:31.089
  STEP: Finding an available node @ 04/19/24 15:48:31.101
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/19/24 15:48:31.102
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/19/24 15:48:33.208
  Apr 19 15:48:33.253: INFO: found a healthy node: eixo7oojiese-3
  Apr 19 15:48:39.495: INFO: pods created so far: [1 1 1]
  Apr 19 15:48:39.495: INFO: length of pods created so far: 3
  Apr 19 15:48:41.517: INFO: pods created so far: [2 2 1]
  Apr 19 15:48:48.518: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 19 15:48:48.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-787" for this suite. @ 04/19/24 15:48:48.721
  STEP: Destroying namespace "sched-preemption-7269" for this suite. @ 04/19/24 15:48:48.736
â€¢ [77.914 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 04/19/24 15:48:48.757
  Apr 19 15:48:48.757: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename resourcequota @ 04/19/24 15:48:48.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:48:48.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:48:48.802
  STEP: Creating a ResourceQuota @ 04/19/24 15:48:48.808
  STEP: Getting a ResourceQuota @ 04/19/24 15:48:48.819
  STEP: Listing all ResourceQuotas with LabelSelector @ 04/19/24 15:48:48.831
  STEP: Patching the ResourceQuota @ 04/19/24 15:48:48.839
  STEP: Deleting a Collection of ResourceQuotas @ 04/19/24 15:48:48.855
  STEP: Verifying the deleted ResourceQuota @ 04/19/24 15:48:48.87
  Apr 19 15:48:48.876: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5488" for this suite. @ 04/19/24 15:48:48.883
â€¢ [0.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 04/19/24 15:48:48.928
  Apr 19 15:48:48.928: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename namespaces @ 04/19/24 15:48:48.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:48:48.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:48:48.96
  STEP: Creating a test namespace @ 04/19/24 15:48:48.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:48:48.987
  STEP: Creating a pod in the namespace @ 04/19/24 15:48:48.994
  STEP: Waiting for the pod to have running status @ 04/19/24 15:48:49.01
  STEP: Deleting the namespace @ 04/19/24 15:48:51.12
  STEP: Waiting for the namespace to be removed. @ 04/19/24 15:48:51.142
  STEP: Recreating the namespace @ 04/19/24 15:49:02.153
  STEP: Verifying there are no pods in the namespace @ 04/19/24 15:49:02.177
  Apr 19 15:49:02.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2166" for this suite. @ 04/19/24 15:49:02.194
  STEP: Destroying namespace "nsdeletetest-3919" for this suite. @ 04/19/24 15:49:02.216
  Apr 19 15:49:02.222: INFO: Namespace nsdeletetest-3919 was already deleted
  STEP: Destroying namespace "nsdeletetest-4972" for this suite. @ 04/19/24 15:49:02.222
â€¢ [13.312 seconds]
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 04/19/24 15:49:02.242
  Apr 19 15:49:02.242: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename pods @ 04/19/24 15:49:02.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:49:02.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:49:02.285
  STEP: creating a Pod with a static label @ 04/19/24 15:49:02.308
  STEP: watching for Pod to be ready @ 04/19/24 15:49:02.325
  Apr 19 15:49:02.337: INFO: observed Pod pod-test in namespace pods-5976 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Apr 19 15:49:02.347: INFO: observed Pod pod-test in namespace pods-5976 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-19 15:49:02 +0000 UTC  }]
  Apr 19 15:49:02.375: INFO: observed Pod pod-test in namespace pods-5976 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-19 15:49:02 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-19 15:49:02 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-19 15:49:02 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-19 15:49:02 +0000 UTC  }]
  Apr 19 15:49:03.741: INFO: Found Pod pod-test in namespace pods-5976 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-19 15:49:02 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-04-19 15:49:03 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-04-19 15:49:03 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-19 15:49:02 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 04/19/24 15:49:03.751
  STEP: getting the Pod and ensuring that it's patched @ 04/19/24 15:49:03.775
  STEP: replacing the Pod's status Ready condition to False @ 04/19/24 15:49:03.782
  STEP: check the Pod again to ensure its Ready conditions are False @ 04/19/24 15:49:03.807
  STEP: deleting the Pod via a Collection with a LabelSelector @ 04/19/24 15:49:03.807
  STEP: watching for the Pod to be deleted @ 04/19/24 15:49:03.828
  Apr 19 15:49:03.831: INFO: observed event type MODIFIED
  Apr 19 15:49:05.755: INFO: observed event type MODIFIED
  Apr 19 15:49:05.902: INFO: observed event type MODIFIED
  Apr 19 15:49:06.761: INFO: observed event type MODIFIED
  Apr 19 15:49:06.793: INFO: observed event type MODIFIED
  Apr 19 15:49:06.810: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5976" for this suite. @ 04/19/24 15:49:06.82
â€¢ [4.596 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 04/19/24 15:49:06.84
  Apr 19 15:49:06.840: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/19/24 15:49:06.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:49:06.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:49:06.882
  STEP: creating @ 04/19/24 15:49:06.889
  STEP: getting @ 04/19/24 15:49:06.924
  STEP: listing in namespace @ 04/19/24 15:49:06.93
  STEP: patching @ 04/19/24 15:49:06.943
  STEP: deleting @ 04/19/24 15:49:06.955
  Apr 19 15:49:06.972: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9210" for this suite. @ 04/19/24 15:49:06.982
â€¢ [0.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 04/19/24 15:49:07.003
  Apr 19 15:49:07.004: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 15:49:07.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:49:07.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:49:07.033
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-f124846b-d255-45da-8049-d38ac4cf04eb @ 04/19/24 15:49:07.057
  STEP: Creating the pod @ 04/19/24 15:49:07.068
  STEP: Updating configmap projected-configmap-test-upd-f124846b-d255-45da-8049-d38ac4cf04eb @ 04/19/24 15:49:09.146
  STEP: waiting to observe update in volume @ 04/19/24 15:49:09.158
  Apr 19 15:50:40.245: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2810" for this suite. @ 04/19/24 15:50:40.258
â€¢ [93.279 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 04/19/24 15:50:40.285
  Apr 19 15:50:40.285: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename resourcequota @ 04/19/24 15:50:40.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:50:40.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:50:40.33
  STEP: Creating a ResourceQuota @ 04/19/24 15:50:40.335
  STEP: Getting a ResourceQuota @ 04/19/24 15:50:40.346
  STEP: Updating a ResourceQuota @ 04/19/24 15:50:40.354
  STEP: Verifying a ResourceQuota was modified @ 04/19/24 15:50:40.371
  STEP: Deleting a ResourceQuota @ 04/19/24 15:50:40.377
  STEP: Verifying the deleted ResourceQuota @ 04/19/24 15:50:40.389
  Apr 19 15:50:40.393: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5846" for this suite. @ 04/19/24 15:50:40.4
â€¢ [0.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 04/19/24 15:50:40.415
  Apr 19 15:50:40.415: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename resourcequota @ 04/19/24 15:50:40.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:50:40.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:50:40.442
  STEP: Counting existing ResourceQuota @ 04/19/24 15:50:40.446
  STEP: Creating a ResourceQuota @ 04/19/24 15:50:45.456
  STEP: Ensuring resource quota status is calculated @ 04/19/24 15:50:45.466
  Apr 19 15:50:47.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5565" for this suite. @ 04/19/24 15:50:47.491
â€¢ [7.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 04/19/24 15:50:47.536
  Apr 19 15:50:47.536: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename certificates @ 04/19/24 15:50:47.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:50:47.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:50:47.583
  STEP: getting /apis @ 04/19/24 15:50:48.919
  STEP: getting /apis/certificates.k8s.io @ 04/19/24 15:50:48.929
  STEP: getting /apis/certificates.k8s.io/v1 @ 04/19/24 15:50:48.931
  STEP: creating @ 04/19/24 15:50:48.934
  STEP: getting @ 04/19/24 15:50:48.966
  STEP: listing @ 04/19/24 15:50:48.974
  STEP: watching @ 04/19/24 15:50:48.983
  Apr 19 15:50:48.983: INFO: starting watch
  STEP: patching @ 04/19/24 15:50:48.985
  STEP: updating @ 04/19/24 15:50:49.002
  Apr 19 15:50:49.012: INFO: waiting for watch events with expected annotations
  Apr 19 15:50:49.012: INFO: saw patched and updated annotations
  STEP: getting /approval @ 04/19/24 15:50:49.013
  STEP: patching /approval @ 04/19/24 15:50:49.02
  STEP: updating /approval @ 04/19/24 15:50:49.039
  STEP: getting /status @ 04/19/24 15:50:49.052
  STEP: patching /status @ 04/19/24 15:50:49.061
  STEP: updating /status @ 04/19/24 15:50:49.078
  STEP: deleting @ 04/19/24 15:50:49.09
  STEP: deleting a collection @ 04/19/24 15:50:49.111
  Apr 19 15:50:49.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-1255" for this suite. @ 04/19/24 15:50:49.155
â€¢ [1.635 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 04/19/24 15:50:49.174
  Apr 19 15:50:49.174: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename sysctl @ 04/19/24 15:50:49.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:50:49.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:50:49.206
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 04/19/24 15:50:49.211
  STEP: Watching for error events or started pod @ 04/19/24 15:50:49.23
  STEP: Waiting for pod completion @ 04/19/24 15:50:51.241
  STEP: Checking that the pod succeeded @ 04/19/24 15:50:53.278
  STEP: Getting logs from the pod @ 04/19/24 15:50:53.278
  STEP: Checking that the sysctl is actually updated @ 04/19/24 15:50:53.302
  Apr 19 15:50:53.302: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8861" for this suite. @ 04/19/24 15:50:53.322
â€¢ [4.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:331
  STEP: Creating a kubernetes client @ 04/19/24 15:50:53.347
  Apr 19 15:50:53.348: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename statefulset @ 04/19/24 15:50:53.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:50:53.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:50:53.397
  STEP: Creating service test in namespace statefulset-5747 @ 04/19/24 15:50:53.409
  STEP: Creating a new StatefulSet @ 04/19/24 15:50:53.422
  Apr 19 15:50:53.449: INFO: Found 0 stateful pods, waiting for 3
  Apr 19 15:51:03.466: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 19 15:51:03.466: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 19 15:51:03.466: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/19/24 15:51:03.492
  Apr 19 15:51:03.530: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 04/19/24 15:51:03.531
  STEP: Not applying an update when the partition is greater than the number of replicas @ 04/19/24 15:51:13.586
  STEP: Performing a canary update @ 04/19/24 15:51:13.587
  Apr 19 15:51:13.624: INFO: Updating stateful set ss2
  Apr 19 15:51:13.669: INFO: Waiting for Pod statefulset-5747/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 04/19/24 15:51:23.689
  Apr 19 15:51:23.813: INFO: Found 2 stateful pods, waiting for 3
  Apr 19 15:51:33.831: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 19 15:51:33.831: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 19 15:51:33.831: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 04/19/24 15:51:33.849
  Apr 19 15:51:33.884: INFO: Updating stateful set ss2
  Apr 19 15:51:33.934: INFO: Waiting for Pod statefulset-5747/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Apr 19 15:51:44.022: INFO: Updating stateful set ss2
  Apr 19 15:51:44.066: INFO: Waiting for StatefulSet statefulset-5747/ss2 to complete update
  Apr 19 15:51:44.066: INFO: Waiting for Pod statefulset-5747/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Apr 19 15:51:54.087: INFO: Waiting for StatefulSet statefulset-5747/ss2 to complete update
  Apr 19 15:52:04.101: INFO: Deleting all statefulset in ns statefulset-5747
  Apr 19 15:52:04.108: INFO: Scaling statefulset ss2 to 0
  Apr 19 15:52:14.150: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 19 15:52:14.162: INFO: Deleting statefulset ss2
  Apr 19 15:52:14.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5747" for this suite. @ 04/19/24 15:52:14.211
â€¢ [80.882 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 04/19/24 15:52:14.238
  Apr 19 15:52:14.239: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename pod-network-test @ 04/19/24 15:52:14.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:52:14.279
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:52:14.285
  STEP: Performing setup for networking test in namespace pod-network-test-3252 @ 04/19/24 15:52:14.292
  STEP: creating a selector @ 04/19/24 15:52:14.293
  STEP: Creating the service pods in kubernetes @ 04/19/24 15:52:14.294
  Apr 19 15:52:14.295: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/19/24 15:52:36.592
  Apr 19 15:52:38.640: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 19 15:52:38.640: INFO: Breadth first check of 10.233.64.13 on host 192.168.121.83...
  Apr 19 15:52:38.651: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.59:9080/dial?request=hostname&protocol=udp&host=10.233.64.13&port=8081&tries=1'] Namespace:pod-network-test-3252 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 15:52:38.651: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 15:52:38.656: INFO: ExecWithOptions: Clientset creation
  Apr 19 15:52:38.656: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3252/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.59%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.64.13%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 19 15:52:38.886: INFO: Waiting for responses: map[]
  Apr 19 15:52:38.886: INFO: reached 10.233.64.13 after 0/1 tries
  Apr 19 15:52:38.887: INFO: Breadth first check of 10.233.65.12 on host 192.168.121.127...
  Apr 19 15:52:38.894: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.59:9080/dial?request=hostname&protocol=udp&host=10.233.65.12&port=8081&tries=1'] Namespace:pod-network-test-3252 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 15:52:38.894: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 15:52:38.897: INFO: ExecWithOptions: Clientset creation
  Apr 19 15:52:38.897: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3252/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.59%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.65.12%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 19 15:52:39.051: INFO: Waiting for responses: map[]
  Apr 19 15:52:39.051: INFO: reached 10.233.65.12 after 0/1 tries
  Apr 19 15:52:39.051: INFO: Breadth first check of 10.233.66.58 on host 192.168.121.129...
  Apr 19 15:52:39.061: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.59:9080/dial?request=hostname&protocol=udp&host=10.233.66.58&port=8081&tries=1'] Namespace:pod-network-test-3252 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 15:52:39.061: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 15:52:39.063: INFO: ExecWithOptions: Clientset creation
  Apr 19 15:52:39.064: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3252/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.59%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.66.58%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 19 15:52:39.216: INFO: Waiting for responses: map[]
  Apr 19 15:52:39.216: INFO: reached 10.233.66.58 after 0/1 tries
  Apr 19 15:52:39.216: INFO: Going to retry 0 out of 3 pods....
  Apr 19 15:52:39.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3252" for this suite. @ 04/19/24 15:52:39.228
â€¢ [25.006 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 04/19/24 15:52:39.244
  Apr 19 15:52:39.244: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename emptydir @ 04/19/24 15:52:39.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:52:39.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:52:39.287
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/19/24 15:52:39.294
  STEP: Saw pod success @ 04/19/24 15:52:43.359
  Apr 19 15:52:43.368: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-484089c6-7c60-4b31-accd-e411e23854c3 container test-container: <nil>
  STEP: delete the pod @ 04/19/24 15:52:43.41
  Apr 19 15:52:43.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3230" for this suite. @ 04/19/24 15:52:43.455
â€¢ [4.225 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 04/19/24 15:52:43.472
  Apr 19 15:52:43.472: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename events @ 04/19/24 15:52:43.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:52:43.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:52:43.51
  STEP: Create set of events @ 04/19/24 15:52:43.516
  STEP: get a list of Events with a label in the current namespace @ 04/19/24 15:52:43.545
  STEP: delete a list of events @ 04/19/24 15:52:43.553
  Apr 19 15:52:43.553: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/19/24 15:52:43.588
  Apr 19 15:52:43.592: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-41" for this suite. @ 04/19/24 15:52:43.602
â€¢ [0.148 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 04/19/24 15:52:43.621
  Apr 19 15:52:43.621: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename deployment @ 04/19/24 15:52:43.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:52:43.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:52:43.655
  Apr 19 15:52:43.661: INFO: Creating deployment "webserver-deployment"
  Apr 19 15:52:43.672: INFO: Waiting for observed generation 1
  Apr 19 15:52:45.745: INFO: Waiting for all required pods to come up
  Apr 19 15:52:45.765: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 04/19/24 15:52:45.765
  Apr 19 15:52:47.812: INFO: Waiting for deployment "webserver-deployment" to complete
  Apr 19 15:52:47.822: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Apr 19 15:52:47.841: INFO: Updating deployment webserver-deployment
  Apr 19 15:52:47.842: INFO: Waiting for observed generation 2
  Apr 19 15:52:49.860: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Apr 19 15:52:49.870: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Apr 19 15:52:49.878: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Apr 19 15:52:49.901: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Apr 19 15:52:49.902: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Apr 19 15:52:49.911: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Apr 19 15:52:49.928: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Apr 19 15:52:49.928: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Apr 19 15:52:49.948: INFO: Updating deployment webserver-deployment
  Apr 19 15:52:49.948: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Apr 19 15:52:49.973: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Apr 19 15:52:52.031: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Apr 19 15:52:52.054: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b461c5d7-888c-4695-bb63-84c570979df8",
      ResourceVersion: (string) (len=4) "6668",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138769,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138771,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 9,
      AvailableReplicas: (int32) 9,
      UnavailableReplicas: (int32) 24,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138769,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138769,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138771,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 19 15:52:52.075: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "738fe9d7-c151-4d11-87b3-147def0123c8",
      ResourceVersion: (string) (len=4) "6613",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "b461c5d7-888c-4695-bb63-84c570979df8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138769,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 34 36 31 63 35  64 37 2d 38 38 38 63 2d  |\"b461c5d7-888c-|
              00000120  34 36 39 35 2d 62 62 36  33 2d 38 34 63 35 37 30  |4695-bb63-84c570|
              00000130  39 37 39 64 66 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |979df8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 19 15:52:52.089: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Apr 19 15:52:52.090: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "172c1b67-7bc5-4659-9921-1750655d0237",
      ResourceVersion: (string) (len=4) "6666",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "b461c5d7-888c-4695-bb63-84c570979df8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138769,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 34 36 31 63 35  64 37 2d 38 38 38 63 2d  |\"b461c5d7-888c-|
              00000120  34 36 39 35 2d 62 62 36  33 2d 38 34 63 35 37 30  |4695-bb63-84c570|
              00000130  39 37 39 64 66 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |979df8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138771,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 9,
      AvailableReplicas: (int32) 9,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 19 15:52:52.120: INFO: Pod "webserver-deployment-557759b7c7-2572c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2572c",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "feb194e6-da86-44d3-baca-f6d39fbd4353",
      ResourceVersion: (string) (len=4) "6602",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "172c1b67-7bc5-4659-9921-1750655d0237",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 37  32 63 31 62 36 37 2d 37  |d\":\"172c1b67-7|
              00000090  62 63 35 2d 34 36 35 39  2d 39 39 32 31 2d 31 37  |bc5-4659-9921-17|
              000000a0  35 30 36 35 35 64 30 32  33 37 5c 22 7d 22 3a 7b  |50655d0237\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l2llh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l2llh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.83",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.141: INFO: Pod "webserver-deployment-557759b7c7-44xrd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-44xrd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "31b05627-85cc-4658-918f-9077ac0eff87",
      ResourceVersion: (string) (len=4) "6627",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "172c1b67-7bc5-4659-9921-1750655d0237",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 37  32 63 31 62 36 37 2d 37  |d\":\"172c1b67-7|
              00000090  62 63 35 2d 34 36 35 39  2d 39 39 32 31 2d 31 37  |bc5-4659-9921-17|
              000000a0  35 30 36 35 35 64 30 32  33 37 5c 22 7d 22 3a 7b  |50655d0237\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4kwml",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4kwml",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.129",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.169: INFO: Pod "webserver-deployment-557759b7c7-49l4h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-49l4h",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2efc7268-1c08-4d34-a57f-50be61eb3479",
      ResourceVersion: (string) (len=4) "6617",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "172c1b67-7bc5-4659-9921-1750655d0237",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 37  32 63 31 62 36 37 2d 37  |d\":\"172c1b67-7|
              00000090  62 63 35 2d 34 36 35 39  2d 39 39 32 31 2d 31 37  |bc5-4659-9921-17|
              000000a0  35 30 36 35 35 64 30 32  33 37 5c 22 7d 22 3a 7b  |50655d0237\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-swlcq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-swlcq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.127",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.186: INFO: Pod "webserver-deployment-557759b7c7-4ms4h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4ms4h",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "27ff212a-eea0-48c8-83d2-33403910d25c",
      ResourceVersion: (string) (len=4) "6593",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "172c1b67-7bc5-4659-9921-1750655d0237",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 37  32 63 31 62 36 37 2d 37  |d\":\"172c1b67-7|
              00000090  62 63 35 2d 34 36 35 39  2d 39 39 32 31 2d 31 37  |bc5-4659-9921-17|
              000000a0  35 30 36 35 35 64 30 32  33 37 5c 22 7d 22 3a 7b  |50655d0237\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mmq67",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mmq67",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.83",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.192: INFO: Pod "webserver-deployment-557759b7c7-5kvlt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5kvlt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3c9d7e76-890b-4d5d-b3e8-cd648f2269e8",
      ResourceVersion: (string) (len=4) "6438",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "172c1b67-7bc5-4659-9921-1750655d0237",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 37  32 63 31 62 36 37 2d 37  |d\":\"172c1b67-7|
              00000090  62 63 35 2d 34 36 35 39  2d 39 39 32 31 2d 31 37  |bc5-4659-9921-17|
              000000a0  35 30 36 35 35 64 30 32  33 37 5c 22 7d 22 3a 7b  |50655d0237\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 31 34 5c 22 7d 22  |10.233.65.14\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wpnxx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wpnxx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.127",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.65.14",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.14"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849138766,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://02874574ec64073c79ee0529eb56b434f51d8a0f2f7b33ca8a9bf46559f7fe95",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.235: INFO: Pod "webserver-deployment-557759b7c7-77glq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-77glq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "618f5006-1930-4fe7-adc9-97dbda358e9a",
      ResourceVersion: (string) (len=4) "6545",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138769,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "172c1b67-7bc5-4659-9921-1750655d0237",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138769,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 37  32 63 31 62 36 37 2d 37  |d\":\"172c1b67-7|
              00000090  62 63 35 2d 34 36 35 39  2d 39 39 32 31 2d 31 37  |bc5-4659-9921-17|
              000000a0  35 30 36 35 35 64 30 32  33 37 5c 22 7d 22 3a 7b  |50655d0237\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7747w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7747w",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138769,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138769,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138769,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138769,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.129",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138769,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.260: INFO: Pod "webserver-deployment-557759b7c7-7hvh7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7hvh7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5ee7303e-2a05-40ff-b936-a744828573a5",
      ResourceVersion: (string) (len=4) "6601",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "172c1b67-7bc5-4659-9921-1750655d0237",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 37  32 63 31 62 36 37 2d 37  |d\":\"172c1b67-7|
              00000090  62 63 35 2d 34 36 35 39  2d 39 39 32 31 2d 31 37  |bc5-4659-9921-17|
              000000a0  35 30 36 35 35 64 30 32  33 37 5c 22 7d 22 3a 7b  |50655d0237\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9cfxq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9cfxq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.129",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.273: INFO: Pod "webserver-deployment-557759b7c7-7nl7m" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7nl7m",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e64ecf1-0081-4511-b1a0-4a22668e365b",
      ResourceVersion: (string) (len=4) "6383",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "172c1b67-7bc5-4659-9921-1750655d0237",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 37  32 63 31 62 36 37 2d 37  |d\":\"172c1b67-7|
              00000090  62 63 35 2d 34 36 35 39  2d 39 39 32 31 2d 31 37  |bc5-4659-9921-17|
              000000a0  35 30 36 35 35 64 30 32  33 37 5c 22 7d 22 3a 7b  |50655d0237\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 31 34 5c 22 7d 22  |10.233.64.14\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t97mw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t97mw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.83",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.64.14",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.14"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849138764,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://c43833158771b8b1d7de02e8c94e2ad65152dbc1f07e4cad0ff0b106d013b328",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.307: INFO: Pod "webserver-deployment-557759b7c7-9h4ds" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9h4ds",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c5a83b0d-e587-467f-85f0-07d2b864ccd3",
      ResourceVersion: (string) (len=4) "6445",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "172c1b67-7bc5-4659-9921-1750655d0237",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 37  32 63 31 62 36 37 2d 37  |d\":\"172c1b67-7|
              00000090  62 63 35 2d 34 36 35 39  2d 39 39 32 31 2d 31 37  |bc5-4659-9921-17|
              000000a0  35 30 36 35 35 64 30 32  33 37 5c 22 7d 22 3a 7b  |50655d0237\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 31 35 5c 22 7d 22  |10.233.65.15\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5x2l6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5x2l6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.127",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.65.15",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.15"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849138766,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://f459e8a1e8bd8078a4c9400d31e7c34619f7bfa1a63872bc3ef66bda371ddc46",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.319: INFO: Pod "webserver-deployment-557759b7c7-9ht5q" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9ht5q",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c2b8f9ed-a85d-4f3f-b793-7d2426ed297f",
      ResourceVersion: (string) (len=4) "6606",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "172c1b67-7bc5-4659-9921-1750655d0237",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 37  32 63 31 62 36 37 2d 37  |d\":\"172c1b67-7|
              00000090  62 63 35 2d 34 36 35 39  2d 39 39 32 31 2d 31 37  |bc5-4659-9921-17|
              000000a0  35 30 36 35 35 64 30 32  33 37 5c 22 7d 22 3a 7b  |50655d0237\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mc6gb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mc6gb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.127",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.326: INFO: Pod "webserver-deployment-557759b7c7-h42b5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-h42b5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "44e9647b-b696-41ae-9f40-0c0f04277084",
      ResourceVersion: (string) (len=4) "6386",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "172c1b67-7bc5-4659-9921-1750655d0237",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 37  32 63 31 62 36 37 2d 37  |d\":\"172c1b67-7|
              00000090  62 63 35 2d 34 36 35 39  2d 39 39 32 31 2d 31 37  |bc5-4659-9921-17|
              000000a0  35 30 36 35 35 64 30 32  33 37 5c 22 7d 22 3a 7b  |50655d0237\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 31 35 5c 22 7d 22  |10.233.64.15\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-np7gl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-np7gl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.83",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.64.15",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.15"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849138765,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://f678b488368f85c7fee51cfef7bbe2abffc20e0b1c202d38e58d5efa01bbeed3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.333: INFO: Pod "webserver-deployment-557759b7c7-lrtqb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-lrtqb",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1ff12f59-ed9e-44dc-8f37-52840a6d29b6",
      ResourceVersion: (string) (len=4) "6441",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "172c1b67-7bc5-4659-9921-1750655d0237",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 37  32 63 31 62 36 37 2d 37  |d\":\"172c1b67-7|
              00000090  62 63 35 2d 34 36 35 39  2d 39 39 32 31 2d 31 37  |bc5-4659-9921-17|
              000000a0  35 30 36 35 35 64 30 32  33 37 5c 22 7d 22 3a 7b  |50655d0237\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 31 33 5c 22 7d 22  |10.233.65.13\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j79b4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j79b4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.127",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.65.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849138766,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://8d9b547369cd93130950ba3e1fa869ebcddf4954a15fb590957c9ac89a5f3739",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.337: INFO: Pod "webserver-deployment-557759b7c7-qllxg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qllxg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "33e7993f-296d-4fe7-a00e-89aeecfeb37a",
      ResourceVersion: (string) (len=4) "6427",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "172c1b67-7bc5-4659-9921-1750655d0237",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 37  32 63 31 62 36 37 2d 37  |d\":\"172c1b67-7|
              00000090  62 63 35 2d 34 36 35 39  2d 39 39 32 31 2d 31 37  |bc5-4659-9921-17|
              000000a0  35 30 36 35 35 64 30 32  33 37 5c 22 7d 22 3a 7b  |50655d0237\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  34 2e 31 36 5c 22 7d 22  |10.233.64.16\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-78dkc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-78dkc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.83",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.64.16",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.64.16"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849138765,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://85547b9c3662840405f2477a4d1a1f363f76cbe2e09b386b02bccdc2d04c509c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.340: INFO: Pod "webserver-deployment-557759b7c7-s7ndx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-s7ndx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52f9dec8-36c3-45ac-b55a-16ff8b9291fe",
      ResourceVersion: (string) (len=4) "6549",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138769,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "172c1b67-7bc5-4659-9921-1750655d0237",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138769,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 37  32 63 31 62 36 37 2d 37  |d\":\"172c1b67-7|
              00000090  62 63 35 2d 34 36 35 39  2d 39 39 32 31 2d 31 37  |bc5-4659-9921-17|
              000000a0  35 30 36 35 35 64 30 32  33 37 5c 22 7d 22 3a 7b  |50655d0237\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4pvds",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4pvds",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.83",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.353: INFO: Pod "webserver-deployment-557759b7c7-spfvn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-spfvn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "03aa288c-3848-4027-aa1f-7a9378eb9534",
      ResourceVersion: (string) (len=4) "6664",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "172c1b67-7bc5-4659-9921-1750655d0237",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 37  32 63 31 62 36 37 2d 37  |d\":\"172c1b67-7|
              00000090  62 63 35 2d 34 36 35 39  2d 39 39 32 31 2d 31 37  |bc5-4659-9921-17|
              000000a0  35 30 36 35 35 64 30 32  33 37 5c 22 7d 22 3a 7b  |50655d0237\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138771,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 31 38 5c 22 7d 22  |10.233.65.18\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-th6dj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-th6dj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138771,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138771,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.127",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.65.18",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.65.18"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849138771,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://9faedc05743331a832796904e1d55548a97f8fc80c5816775ce645564eebfcb3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.360: INFO: Pod "webserver-deployment-557759b7c7-t2b2z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-t2b2z",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "77e01dd2-35c5-4aca-954e-403a6c44f939",
      ResourceVersion: (string) (len=4) "6573",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "172c1b67-7bc5-4659-9921-1750655d0237",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 37  32 63 31 62 36 37 2d 37  |d\":\"172c1b67-7|
              00000090  62 63 35 2d 34 36 35 39  2d 39 39 32 31 2d 31 37  |bc5-4659-9921-17|
              000000a0  35 30 36 35 35 64 30 32  33 37 5c 22 7d 22 3a 7b  |50655d0237\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fzzhf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fzzhf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.83",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.367: INFO: Pod "webserver-deployment-557759b7c7-vdvbg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vdvbg",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d19e993d-30ac-4598-b37c-3dab4671f268",
      ResourceVersion: (string) (len=4) "6376",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "172c1b67-7bc5-4659-9921-1750655d0237",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 37  32 63 31 62 36 37 2d 37  |d\":\"172c1b67-7|
              00000090  62 63 35 2d 34 36 35 39  2d 39 39 32 31 2d 31 37  |bc5-4659-9921-17|
              000000a0  35 30 36 35 35 64 30 32  33 37 5c 22 7d 22 3a 7b  |50655d0237\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 36 31 5c 22 7d 22  |10.233.66.61\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mn5gp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mn5gp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138765,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.129",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.66.61",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.61"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849138764,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://3f233a553904c84df25e196d17d007c243589a19446c0e62750d4d48efb65ca1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.375: INFO: Pod "webserver-deployment-557759b7c7-wvmvn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-wvmvn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "662a4778-6cb8-4cb4-a24b-b9e54ea6ec08",
      ResourceVersion: (string) (len=4) "6571",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138769,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "172c1b67-7bc5-4659-9921-1750655d0237",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138769,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 37  32 63 31 62 36 37 2d 37  |d\":\"172c1b67-7|
              00000090  62 63 35 2d 34 36 35 39  2d 39 39 32 31 2d 31 37  |bc5-4659-9921-17|
              000000a0  35 30 36 35 35 64 30 32  33 37 5c 22 7d 22 3a 7b  |50655d0237\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zdbqj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zdbqj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.129",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.377: INFO: Pod "webserver-deployment-557759b7c7-xdk82" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xdk82",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "14d59f0e-deaf-46f4-bd45-3e87378b1b91",
      ResourceVersion: (string) (len=4) "6409",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "172c1b67-7bc5-4659-9921-1750655d0237",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 37  32 63 31 62 36 37 2d 37  |d\":\"172c1b67-7|
              00000090  62 63 35 2d 34 36 35 39  2d 39 39 32 31 2d 31 37  |bc5-4659-9921-17|
              000000a0  35 30 36 35 35 64 30 32  33 37 5c 22 7d 22 3a 7b  |50655d0237\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 36 32 5c 22 7d 22  |10.233.66.62\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wc2fj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wc2fj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138766,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.129",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.66.62",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.62"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138763,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849138765,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://506b50bade27c0dd37f2c38574294ed8041596f8539855d8d6a8ce4b90197bc8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.380: INFO: Pod "webserver-deployment-557759b7c7-zn5mv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-zn5mv",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ed9fc17-ebe9-4847-b7e6-976025020623",
      ResourceVersion: (string) (len=4) "6624",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "172c1b67-7bc5-4659-9921-1750655d0237",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 37  32 63 31 62 36 37 2d 37  |d\":\"172c1b67-7|
              00000090  62 63 35 2d 34 36 35 39  2d 39 39 32 31 2d 31 37  |bc5-4659-9921-17|
              000000a0  35 30 36 35 35 64 30 32  33 37 5c 22 7d 22 3a 7b  |50655d0237\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zsmdc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zsmdc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.129",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.385: INFO: Pod "webserver-deployment-9b4f5bf69-6z6g8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-6z6g8",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aca3700f-0dd7-4382-a03f-70d40a7a762d",
      ResourceVersion: (string) (len=4) "6580",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "738fe9d7-c151-4d11-87b3-147def0123c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  38 66 65 39 64 37 2d 63  |d\":\"738fe9d7-c|
              00000090  31 35 31 2d 34 64 31 31  2d 38 37 62 33 2d 31 34  |151-4d11-87b3-14|
              000000a0  37 64 65 66 30 31 32 33  63 38 5c 22 7d 22 3a 7b  |7def0123c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8js66",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8js66",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.83",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.390: INFO: Pod "webserver-deployment-9b4f5bf69-74qqf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-74qqf",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9b3fab10-e6dd-4dbb-8d0c-8c02e6e05506",
      ResourceVersion: (string) (len=4) "6473",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "738fe9d7-c151-4d11-87b3-147def0123c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  38 66 65 39 64 37 2d 63  |d\":\"738fe9d7-c|
              00000090  31 35 31 2d 34 64 31 31  2d 38 37 62 33 2d 31 34  |151-4d11-87b3-14|
              000000a0  37 64 65 66 30 31 32 33  63 38 5c 22 7d 22 3a 7b  |7def0123c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-89scz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-89scz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.127",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.395: INFO: Pod "webserver-deployment-9b4f5bf69-fttv6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-fttv6",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d42844cd-230b-46a2-82c4-3a7a960edc5e",
      ResourceVersion: (string) (len=4) "6618",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "738fe9d7-c151-4d11-87b3-147def0123c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  38 66 65 39 64 37 2d 63  |d\":\"738fe9d7-c|
              00000090  31 35 31 2d 34 64 31 31  2d 38 37 62 33 2d 31 34  |151-4d11-87b3-14|
              000000a0  37 64 65 66 30 31 32 33  63 38 5c 22 7d 22 3a 7b  |7def0123c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cx2tv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cx2tv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.129",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.401: INFO: Pod "webserver-deployment-9b4f5bf69-gpzlr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-gpzlr",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "112c1f95-88e5-4d97-87b2-8d323bc67a4e",
      ResourceVersion: (string) (len=4) "6497",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138768,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "738fe9d7-c151-4d11-87b3-147def0123c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  38 66 65 39 64 37 2d 63  |d\":\"738fe9d7-c|
              00000090  31 35 31 2d 34 64 31 31  2d 38 37 62 33 2d 31 34  |151-4d11-87b3-14|
              000000a0  37 64 65 66 30 31 32 33  63 38 5c 22 7d 22 3a 7b  |7def0123c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5chzw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5chzw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.127",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138768,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.405: INFO: Pod "webserver-deployment-9b4f5bf69-k5rkf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-k5rkf",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb059b59-8685-4ebc-843b-625b46397200",
      ResourceVersion: (string) (len=4) "6621",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "738fe9d7-c151-4d11-87b3-147def0123c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  38 66 65 39 64 37 2d 63  |d\":\"738fe9d7-c|
              00000090  31 35 31 2d 34 64 31 31  2d 38 37 62 33 2d 31 34  |151-4d11-87b3-14|
              000000a0  37 64 65 66 30 31 32 33  63 38 5c 22 7d 22 3a 7b  |7def0123c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ghtvt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ghtvt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.127",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.421: INFO: Pod "webserver-deployment-9b4f5bf69-mdjrm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-mdjrm",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d3d9a42d-fbe0-48d3-a713-3179e648c245",
      ResourceVersion: (string) (len=4) "6610",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "738fe9d7-c151-4d11-87b3-147def0123c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  38 66 65 39 64 37 2d 63  |d\":\"738fe9d7-c|
              00000090  31 35 31 2d 34 64 31 31  2d 38 37 62 33 2d 31 34  |151-4d11-87b3-14|
              000000a0  37 64 65 66 30 31 32 33  63 38 5c 22 7d 22 3a 7b  |7def0123c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wlfjl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wlfjl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.83",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.428: INFO: Pod "webserver-deployment-9b4f5bf69-mf2xw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-mf2xw",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b8f7fe13-5b08-4a2b-9c06-aa52110d67a1",
      ResourceVersion: (string) (len=4) "6466",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "738fe9d7-c151-4d11-87b3-147def0123c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  38 66 65 39 64 37 2d 63  |d\":\"738fe9d7-c|
              00000090  31 35 31 2d 34 64 31 31  2d 38 37 62 33 2d 31 34  |151-4d11-87b3-14|
              000000a0  37 64 65 66 30 31 32 33  63 38 5c 22 7d 22 3a 7b  |7def0123c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z7g9l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z7g9l",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.129",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.436: INFO: Pod "webserver-deployment-9b4f5bf69-p4cqz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-p4cqz",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "05b1d032-dab6-4970-b94b-54ef5d52430b",
      ResourceVersion: (string) (len=4) "6612",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "738fe9d7-c151-4d11-87b3-147def0123c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  38 66 65 39 64 37 2d 63  |d\":\"738fe9d7-c|
              00000090  31 35 31 2d 34 64 31 31  2d 38 37 62 33 2d 31 34  |151-4d11-87b3-14|
              000000a0  37 64 65 66 30 31 32 33  63 38 5c 22 7d 22 3a 7b  |7def0123c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-p9c65",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-p9c65",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.127",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.442: INFO: Pod "webserver-deployment-9b4f5bf69-p4mq9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-p4mq9",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d49939af-35c9-4b19-9df5-222acc8b14c3",
      ResourceVersion: (string) (len=4) "6561",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138769,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "738fe9d7-c151-4d11-87b3-147def0123c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138769,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  38 66 65 39 64 37 2d 63  |d\":\"738fe9d7-c|
              00000090  31 35 31 2d 34 64 31 31  2d 38 37 62 33 2d 31 34  |151-4d11-87b3-14|
              000000a0  37 64 65 66 30 31 32 33  63 38 5c 22 7d 22 3a 7b  |7def0123c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-52c6g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-52c6g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.83",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.446: INFO: Pod "webserver-deployment-9b4f5bf69-r52rd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-r52rd",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd27237f-346a-4006-a9f2-b6a69622b2e1",
      ResourceVersion: (string) (len=4) "6614",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "738fe9d7-c151-4d11-87b3-147def0123c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  38 66 65 39 64 37 2d 63  |d\":\"738fe9d7-c|
              00000090  31 35 31 2d 34 64 31 31  2d 38 37 62 33 2d 31 34  |151-4d11-87b3-14|
              000000a0  37 64 65 66 30 31 32 33  63 38 5c 22 7d 22 3a 7b  |7def0123c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7ccxn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7ccxn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.129",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.451: INFO: Pod "webserver-deployment-9b4f5bf69-spkz7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-spkz7",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5668b525-58f8-4826-a81c-5d772d483cfe",
      ResourceVersion: (string) (len=4) "6464",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "738fe9d7-c151-4d11-87b3-147def0123c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  38 66 65 39 64 37 2d 63  |d\":\"738fe9d7-c|
              00000090  31 35 31 2d 34 64 31 31  2d 38 37 62 33 2d 31 34  |151-4d11-87b3-14|
              000000a0  37 64 65 66 30 31 32 33  63 38 5c 22 7d 22 3a 7b  |7def0123c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fnb2s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fnb2s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138767,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.121.83",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138767,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.453: INFO: Pod "webserver-deployment-9b4f5bf69-twkk8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-twkk8",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f2a46470-d23d-44af-a253-996fff3eba6b",
      ResourceVersion: (string) (len=4) "6620",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "738fe9d7-c151-4d11-87b3-147def0123c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  38 66 65 39 64 37 2d 63  |d\":\"738fe9d7-c|
              00000090  31 35 31 2d 34 64 31 31  2d 38 37 62 33 2d 31 34  |151-4d11-87b3-14|
              000000a0  37 64 65 66 30 31 32 33  63 38 5c 22 7d 22 3a 7b  |7def0123c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-85hs2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-85hs2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138770,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.129",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138770,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.457: INFO: Pod "webserver-deployment-9b4f5bf69-vfgm2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-vfgm2",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-8906",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cfb2b9f0-f12f-43f4-8fc5-ea2854e41a4c",
      ResourceVersion: (string) (len=4) "6495",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138768,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "738fe9d7-c151-4d11-87b3-147def0123c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 33  38 66 65 39 64 37 2d 63  |d\":\"738fe9d7-c|
              00000090  31 35 31 2d 34 64 31 31  2d 38 37 62 33 2d 31 34  |151-4d11-87b3-14|
              000000a0  37 64 65 66 30 31 32 33  63 38 5c 22 7d 22 3a 7b  |7def0123c8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xpvxl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xpvxl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849138768,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.129",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849138768,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 15:52:52.460: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8906" for this suite. @ 04/19/24 15:52:52.478
â€¢ [8.880 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 04/19/24 15:52:52.508
  Apr 19 15:52:52.508: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename services @ 04/19/24 15:52:52.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:52:52.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:52:52.55
  STEP: creating service in namespace services-7794 @ 04/19/24 15:52:52.555
  STEP: creating service affinity-nodeport in namespace services-7794 @ 04/19/24 15:52:52.555
  STEP: creating replication controller affinity-nodeport in namespace services-7794 @ 04/19/24 15:52:52.573
  I0419 15:52:52.584027      14 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-7794, replica count: 3
  I0419 15:52:55.636472      14 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 19 15:52:55.673: INFO: Creating new exec pod
  Apr 19 15:52:58.732: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-7794 exec execpod-affinitys7dqc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Apr 19 15:52:59.095: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Apr 19 15:52:59.095: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 19 15:52:59.095: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-7794 exec execpod-affinitys7dqc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.31.88 80'
  Apr 19 15:52:59.386: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.31.88 80\nConnection to 10.233.31.88 80 port [tcp/http] succeeded!\n"
  Apr 19 15:52:59.386: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 19 15:52:59.387: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-7794 exec execpod-affinitys7dqc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.129 30298'
  Apr 19 15:53:00.501: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.129 30298\nConnection to 192.168.121.129 30298 port [tcp/*] succeeded!\n"
  Apr 19 15:53:00.501: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 19 15:53:00.503: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-7794 exec execpod-affinitys7dqc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.127 30298'
  Apr 19 15:53:01.263: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.127 30298\nConnection to 192.168.121.127 30298 port [tcp/*] succeeded!\n"
  Apr 19 15:53:01.263: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 19 15:53:01.263: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-7794 exec execpod-affinitys7dqc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.121.83:30298/ ; done'
  Apr 19 15:53:01.624: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:30298/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:30298/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:30298/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:30298/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:30298/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:30298/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:30298/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:30298/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:30298/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:30298/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:30298/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:30298/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:30298/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:30298/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:30298/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.121.83:30298/\n"
  Apr 19 15:53:01.624: INFO: stdout: "\naffinity-nodeport-lnrrd\naffinity-nodeport-lnrrd\naffinity-nodeport-lnrrd\naffinity-nodeport-lnrrd\naffinity-nodeport-lnrrd\naffinity-nodeport-lnrrd\naffinity-nodeport-lnrrd\naffinity-nodeport-lnrrd\naffinity-nodeport-lnrrd\naffinity-nodeport-lnrrd\naffinity-nodeport-lnrrd\naffinity-nodeport-lnrrd\naffinity-nodeport-lnrrd\naffinity-nodeport-lnrrd\naffinity-nodeport-lnrrd\naffinity-nodeport-lnrrd"
  Apr 19 15:53:01.624: INFO: Received response from host: affinity-nodeport-lnrrd
  Apr 19 15:53:01.625: INFO: Received response from host: affinity-nodeport-lnrrd
  Apr 19 15:53:01.625: INFO: Received response from host: affinity-nodeport-lnrrd
  Apr 19 15:53:01.625: INFO: Received response from host: affinity-nodeport-lnrrd
  Apr 19 15:53:01.625: INFO: Received response from host: affinity-nodeport-lnrrd
  Apr 19 15:53:01.625: INFO: Received response from host: affinity-nodeport-lnrrd
  Apr 19 15:53:01.625: INFO: Received response from host: affinity-nodeport-lnrrd
  Apr 19 15:53:01.625: INFO: Received response from host: affinity-nodeport-lnrrd
  Apr 19 15:53:01.625: INFO: Received response from host: affinity-nodeport-lnrrd
  Apr 19 15:53:01.625: INFO: Received response from host: affinity-nodeport-lnrrd
  Apr 19 15:53:01.625: INFO: Received response from host: affinity-nodeport-lnrrd
  Apr 19 15:53:01.625: INFO: Received response from host: affinity-nodeport-lnrrd
  Apr 19 15:53:01.625: INFO: Received response from host: affinity-nodeport-lnrrd
  Apr 19 15:53:01.625: INFO: Received response from host: affinity-nodeport-lnrrd
  Apr 19 15:53:01.625: INFO: Received response from host: affinity-nodeport-lnrrd
  Apr 19 15:53:01.625: INFO: Received response from host: affinity-nodeport-lnrrd
  Apr 19 15:53:01.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 19 15:53:01.633: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-7794, will wait for the garbage collector to delete the pods @ 04/19/24 15:53:01.714
  Apr 19 15:53:01.833: INFO: Deleting ReplicationController affinity-nodeport took: 62.717629ms
  Apr 19 15:53:01.934: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.98811ms
  STEP: Destroying namespace "services-7794" for this suite. @ 04/19/24 15:53:05.192
â€¢ [12.710 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 04/19/24 15:53:05.221
  Apr 19 15:53:05.221: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename secrets @ 04/19/24 15:53:05.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:53:05.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:53:05.276
  STEP: Creating secret with name secret-test-651e4fa7-99bd-4d1a-a338-e744c895931f @ 04/19/24 15:53:05.31
  STEP: Creating a pod to test consume secrets @ 04/19/24 15:53:05.319
  STEP: Saw pod success @ 04/19/24 15:53:09.367
  Apr 19 15:53:09.377: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-secrets-8ab5f6dc-5b81-4e56-9f18-24fc2e697a2a container secret-volume-test: <nil>
  STEP: delete the pod @ 04/19/24 15:53:09.403
  Apr 19 15:53:09.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9134" for this suite. @ 04/19/24 15:53:09.457
  STEP: Destroying namespace "secret-namespace-302" for this suite. @ 04/19/24 15:53:09.474
â€¢ [4.269 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 04/19/24 15:53:09.499
  Apr 19 15:53:09.499: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 15:53:09.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:53:09.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:53:09.54
  STEP: Creating a pod to test downward API volume plugin @ 04/19/24 15:53:09.549
  STEP: Saw pod success @ 04/19/24 15:53:13.615
  Apr 19 15:53:13.632: INFO: Trying to get logs from node eixo7oojiese-3 pod downwardapi-volume-b6a4b7b3-4818-42e1-887a-144c564f5fce container client-container: <nil>
  STEP: delete the pod @ 04/19/24 15:53:13.652
  Apr 19 15:53:13.704: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3227" for this suite. @ 04/19/24 15:53:13.718
â€¢ [4.235 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:640
  STEP: Creating a kubernetes client @ 04/19/24 15:53:13.74
  Apr 19 15:53:13.740: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename statefulset @ 04/19/24 15:53:13.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:53:13.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:53:13.793
  STEP: Creating service test in namespace statefulset-3828 @ 04/19/24 15:53:13.802
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 04/19/24 15:53:13.817
  STEP: Creating stateful set ss in namespace statefulset-3828 @ 04/19/24 15:53:13.828
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3828 @ 04/19/24 15:53:13.838
  Apr 19 15:53:13.846: INFO: Found 0 stateful pods, waiting for 1
  Apr 19 15:53:23.867: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 04/19/24 15:53:23.869
  Apr 19 15:53:23.884: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=statefulset-3828 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 19 15:53:24.310: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 19 15:53:24.311: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 19 15:53:24.311: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 19 15:53:24.319: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Apr 19 15:53:34.335: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 19 15:53:34.335: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 19 15:53:34.406: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999537s
  Apr 19 15:53:35.419: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.991601875s
  Apr 19 15:53:36.433: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.979950147s
  Apr 19 15:53:37.445: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.965360645s
  Apr 19 15:53:38.460: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.953464625s
  Apr 19 15:53:39.475: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.938881793s
  Apr 19 15:53:40.489: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.922572905s
  Apr 19 15:53:41.502: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.909146199s
  Apr 19 15:53:42.514: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.896412521s
  Apr 19 15:53:43.524: INFO: Verifying statefulset ss doesn't scale past 1 for another 883.562426ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3828 @ 04/19/24 15:53:44.525
  Apr 19 15:53:44.539: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=statefulset-3828 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 19 15:53:44.914: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 19 15:53:44.914: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 19 15:53:44.914: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 19 15:53:44.933: INFO: Found 1 stateful pods, waiting for 3
  Apr 19 15:53:54.962: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 19 15:53:54.965: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 19 15:53:54.966: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 04/19/24 15:53:54.967
  STEP: Scale down will halt with unhealthy stateful pod @ 04/19/24 15:53:54.968
  Apr 19 15:53:54.998: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=statefulset-3828 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 19 15:53:55.299: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 19 15:53:55.301: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 19 15:53:55.301: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 19 15:53:55.302: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=statefulset-3828 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 19 15:53:55.639: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 19 15:53:55.641: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 19 15:53:55.641: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 19 15:53:55.646: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=statefulset-3828 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 19 15:53:55.959: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 19 15:53:55.959: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 19 15:53:55.959: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 19 15:53:55.959: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 19 15:53:55.972: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  Apr 19 15:54:06.001: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 19 15:54:06.001: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Apr 19 15:54:06.001: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Apr 19 15:54:06.045: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999263s
  Apr 19 15:54:07.059: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.97787663s
  Apr 19 15:54:08.070: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.963971611s
  Apr 19 15:54:09.085: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.950883346s
  Apr 19 15:54:10.094: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.939147822s
  Apr 19 15:54:11.110: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.929740592s
  Apr 19 15:54:12.124: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.913592228s
  Apr 19 15:54:13.136: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.899409978s
  Apr 19 15:54:14.146: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.887656594s
  Apr 19 15:54:15.157: INFO: Verifying statefulset ss doesn't scale past 3 for another 878.056429ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3828 @ 04/19/24 15:54:16.158
  Apr 19 15:54:16.175: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=statefulset-3828 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 19 15:54:16.522: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 19 15:54:16.522: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 19 15:54:16.522: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 19 15:54:16.523: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=statefulset-3828 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 19 15:54:16.916: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 19 15:54:16.916: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 19 15:54:16.916: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 19 15:54:16.916: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=statefulset-3828 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 19 15:54:17.224: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 19 15:54:17.224: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 19 15:54:17.224: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 19 15:54:17.224: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 04/19/24 15:54:27.265
  Apr 19 15:54:27.266: INFO: Deleting all statefulset in ns statefulset-3828
  Apr 19 15:54:27.274: INFO: Scaling statefulset ss to 0
  Apr 19 15:54:27.313: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 19 15:54:27.322: INFO: Deleting statefulset ss
  Apr 19 15:54:27.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3828" for this suite. @ 04/19/24 15:54:27.387
â€¢ [73.665 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 04/19/24 15:54:27.409
  Apr 19 15:54:27.409: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename field-validation @ 04/19/24 15:54:27.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:54:27.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:54:27.456
  Apr 19 15:54:27.462: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  W0419 15:54:30.235759      14 warnings.go:70] unknown field "alpha"
  W0419 15:54:30.236164      14 warnings.go:70] unknown field "beta"
  W0419 15:54:30.236450      14 warnings.go:70] unknown field "delta"
  W0419 15:54:30.236697      14 warnings.go:70] unknown field "epsilon"
  W0419 15:54:30.236952      14 warnings.go:70] unknown field "gamma"
  Apr 19 15:54:30.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7565" for this suite. @ 04/19/24 15:54:30.88
â€¢ [3.507 seconds]
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 04/19/24 15:54:30.917
  Apr 19 15:54:30.917: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename services @ 04/19/24 15:54:30.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:54:30.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:54:30.967
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-3113 @ 04/19/24 15:54:30.973
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/19/24 15:54:30.998
  STEP: creating service externalsvc in namespace services-3113 @ 04/19/24 15:54:30.999
  STEP: creating replication controller externalsvc in namespace services-3113 @ 04/19/24 15:54:31.03
  I0419 15:54:31.051301      14 runners.go:197] Created replication controller with name: externalsvc, namespace: services-3113, replica count: 2
  I0419 15:54:34.104202      14 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 04/19/24 15:54:34.118
  Apr 19 15:54:34.155: INFO: Creating new exec pod
  Apr 19 15:54:36.192: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-3113 exec execpod95hsc -- /bin/sh -x -c nslookup clusterip-service.services-3113.svc.cluster.local'
  Apr 19 15:54:36.653: INFO: stderr: "+ nslookup clusterip-service.services-3113.svc.cluster.local\n"
  Apr 19 15:54:36.653: INFO: stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nclusterip-service.services-3113.svc.cluster.local\tcanonical name = externalsvc.services-3113.svc.cluster.local.\nName:\texternalsvc.services-3113.svc.cluster.local\nAddress: 10.233.19.111\n\n"
  Apr 19 15:54:36.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-3113, will wait for the garbage collector to delete the pods @ 04/19/24 15:54:36.672
  Apr 19 15:54:36.748: INFO: Deleting ReplicationController externalsvc took: 14.249738ms
  Apr 19 15:54:36.850: INFO: Terminating ReplicationController externalsvc pods took: 101.543336ms
  Apr 19 15:54:39.793: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-3113" for this suite. @ 04/19/24 15:54:39.819
â€¢ [8.922 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 04/19/24 15:54:39.842
  Apr 19 15:54:39.842: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 15:54:39.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:54:39.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:54:39.875
  STEP: Creating configMap with name projected-configmap-test-volume-eddd8fbc-6953-484a-bd69-2b7d1379cdd5 @ 04/19/24 15:54:39.881
  STEP: Creating a pod to test consume configMaps @ 04/19/24 15:54:39.889
  STEP: Saw pod success @ 04/19/24 15:54:43.934
  Apr 19 15:54:43.941: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-projected-configmaps-cc0e1bd8-7557-450f-91a4-de7bdf385404 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 04/19/24 15:54:44.002
  Apr 19 15:54:44.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5282" for this suite. @ 04/19/24 15:54:44.077
â€¢ [4.247 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 04/19/24 15:54:44.095
  Apr 19 15:54:44.095: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename configmap @ 04/19/24 15:54:44.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:54:44.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:54:44.135
  Apr 19 15:54:44.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5527" for this suite. @ 04/19/24 15:54:44.225
â€¢ [0.145 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 04/19/24 15:54:44.243
  Apr 19 15:54:44.243: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename daemonsets @ 04/19/24 15:54:44.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:54:44.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:54:44.281
  Apr 19 15:54:44.332: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 04/19/24 15:54:44.344
  Apr 19 15:54:44.350: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 15:54:44.350: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 04/19/24 15:54:44.35
  Apr 19 15:54:44.397: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 15:54:44.397: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  Apr 19 15:54:45.404: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 19 15:54:45.404: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 04/19/24 15:54:45.409
  Apr 19 15:54:45.445: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 19 15:54:45.445: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Apr 19 15:54:46.456: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 15:54:46.456: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 04/19/24 15:54:46.456
  Apr 19 15:54:46.497: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 15:54:46.497: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  Apr 19 15:54:47.506: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 15:54:47.507: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  Apr 19 15:54:48.509: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 19 15:54:48.509: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/19/24 15:54:48.532
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8729, will wait for the garbage collector to delete the pods @ 04/19/24 15:54:48.532
  Apr 19 15:54:48.613: INFO: Deleting DaemonSet.extensions daemon-set took: 16.860018ms
  Apr 19 15:54:48.714: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.136664ms
  Apr 19 15:54:51.426: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 15:54:51.427: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 19 15:54:51.435: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7761"},"items":null}

  Apr 19 15:54:51.442: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7761"},"items":null}

  Apr 19 15:54:51.510: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8729" for this suite. @ 04/19/24 15:54:51.517
â€¢ [7.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 04/19/24 15:54:51.54
  Apr 19 15:54:51.541: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/19/24 15:54:51.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:54:51.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:54:51.576
  Apr 19 15:54:51.582: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 04/19/24 15:54:53.436
  Apr 19 15:54:53.437: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-6490 --namespace=crd-publish-openapi-6490 create -f -'
  Apr 19 15:54:54.640: INFO: stderr: ""
  Apr 19 15:54:54.640: INFO: stdout: "e2e-test-crd-publish-openapi-8621-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Apr 19 15:54:54.641: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-6490 --namespace=crd-publish-openapi-6490 delete e2e-test-crd-publish-openapi-8621-crds test-foo'
  Apr 19 15:54:54.908: INFO: stderr: ""
  Apr 19 15:54:54.908: INFO: stdout: "e2e-test-crd-publish-openapi-8621-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Apr 19 15:54:54.908: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-6490 --namespace=crd-publish-openapi-6490 apply -f -'
  Apr 19 15:54:55.803: INFO: stderr: ""
  Apr 19 15:54:55.804: INFO: stdout: "e2e-test-crd-publish-openapi-8621-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Apr 19 15:54:55.804: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-6490 --namespace=crd-publish-openapi-6490 delete e2e-test-crd-publish-openapi-8621-crds test-foo'
  Apr 19 15:54:55.983: INFO: stderr: ""
  Apr 19 15:54:55.984: INFO: stdout: "e2e-test-crd-publish-openapi-8621-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 04/19/24 15:54:55.984
  Apr 19 15:54:55.984: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-6490 --namespace=crd-publish-openapi-6490 create -f -'
  Apr 19 15:54:56.323: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 04/19/24 15:54:56.323
  Apr 19 15:54:56.323: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-6490 --namespace=crd-publish-openapi-6490 create -f -'
  Apr 19 15:54:56.651: INFO: rc: 1
  Apr 19 15:54:56.652: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-6490 --namespace=crd-publish-openapi-6490 apply -f -'
  Apr 19 15:54:57.035: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 04/19/24 15:54:57.035
  Apr 19 15:54:57.035: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-6490 --namespace=crd-publish-openapi-6490 create -f -'
  Apr 19 15:54:57.390: INFO: rc: 1
  Apr 19 15:54:57.391: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-6490 --namespace=crd-publish-openapi-6490 apply -f -'
  Apr 19 15:54:57.767: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 04/19/24 15:54:57.767
  Apr 19 15:54:57.768: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-6490 explain e2e-test-crd-publish-openapi-8621-crds'
  Apr 19 15:54:58.097: INFO: stderr: ""
  Apr 19 15:54:58.097: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8621-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 04/19/24 15:54:58.098
  Apr 19 15:54:58.098: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-6490 explain e2e-test-crd-publish-openapi-8621-crds.metadata'
  Apr 19 15:54:58.418: INFO: stderr: ""
  Apr 19 15:54:58.418: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8621-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Apr 19 15:54:58.419: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-6490 explain e2e-test-crd-publish-openapi-8621-crds.spec'
  Apr 19 15:54:58.760: INFO: stderr: ""
  Apr 19 15:54:58.760: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8621-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Apr 19 15:54:58.760: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-6490 explain e2e-test-crd-publish-openapi-8621-crds.spec.bars'
  Apr 19 15:54:59.110: INFO: stderr: ""
  Apr 19 15:54:59.110: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-8621-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 04/19/24 15:54:59.11
  Apr 19 15:54:59.111: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-6490 explain e2e-test-crd-publish-openapi-8621-crds.spec.bars2'
  Apr 19 15:54:59.455: INFO: rc: 1
  Apr 19 15:55:01.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6490" for this suite. @ 04/19/24 15:55:01.317
â€¢ [9.795 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 04/19/24 15:55:01.355
  Apr 19 15:55:01.355: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename emptydir @ 04/19/24 15:55:01.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:55:01.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:55:01.402
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/19/24 15:55:01.409
  STEP: Saw pod success @ 04/19/24 15:55:05.466
  Apr 19 15:55:05.473: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-250361c4-30d2-4fcd-b2c8-c4dbf695a0f6 container test-container: <nil>
  STEP: delete the pod @ 04/19/24 15:55:05.489
  Apr 19 15:55:05.533: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7376" for this suite. @ 04/19/24 15:55:05.55
â€¢ [4.210 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 04/19/24 15:55:05.572
  Apr 19 15:55:05.573: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename kubectl @ 04/19/24 15:55:05.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:55:05.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:55:05.622
  STEP: creating a replication controller @ 04/19/24 15:55:05.627
  Apr 19 15:55:05.627: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 create -f -'
  Apr 19 15:55:06.717: INFO: stderr: ""
  Apr 19 15:55:06.717: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/19/24 15:55:06.717
  Apr 19 15:55:06.718: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 19 15:55:06.917: INFO: stderr: ""
  Apr 19 15:55:06.917: INFO: stdout: "update-demo-nautilus-8r7kh update-demo-nautilus-cw9ln "
  Apr 19 15:55:06.918: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get pods update-demo-nautilus-8r7kh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 19 15:55:07.069: INFO: stderr: ""
  Apr 19 15:55:07.069: INFO: stdout: ""
  Apr 19 15:55:07.069: INFO: update-demo-nautilus-8r7kh is created but not running
  Apr 19 15:55:12.071: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 19 15:55:12.269: INFO: stderr: ""
  Apr 19 15:55:12.269: INFO: stdout: "update-demo-nautilus-8r7kh update-demo-nautilus-cw9ln "
  Apr 19 15:55:12.269: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get pods update-demo-nautilus-8r7kh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 19 15:55:12.429: INFO: stderr: ""
  Apr 19 15:55:12.429: INFO: stdout: ""
  Apr 19 15:55:12.430: INFO: update-demo-nautilus-8r7kh is created but not running
  Apr 19 15:55:17.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 19 15:55:17.623: INFO: stderr: ""
  Apr 19 15:55:17.625: INFO: stdout: "update-demo-nautilus-8r7kh update-demo-nautilus-cw9ln "
  Apr 19 15:55:17.625: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get pods update-demo-nautilus-8r7kh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 19 15:55:17.794: INFO: stderr: ""
  Apr 19 15:55:17.794: INFO: stdout: ""
  Apr 19 15:55:17.794: INFO: update-demo-nautilus-8r7kh is created but not running
  Apr 19 15:55:22.795: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 19 15:55:23.026: INFO: stderr: ""
  Apr 19 15:55:23.026: INFO: stdout: "update-demo-nautilus-8r7kh update-demo-nautilus-cw9ln "
  Apr 19 15:55:23.027: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get pods update-demo-nautilus-8r7kh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 19 15:55:23.173: INFO: stderr: ""
  Apr 19 15:55:23.173: INFO: stdout: "true"
  Apr 19 15:55:23.174: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get pods update-demo-nautilus-8r7kh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 19 15:55:23.328: INFO: stderr: ""
  Apr 19 15:55:23.328: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 19 15:55:23.328: INFO: validating pod update-demo-nautilus-8r7kh
  Apr 19 15:55:23.341: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 19 15:55:23.341: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 19 15:55:23.341: INFO: update-demo-nautilus-8r7kh is verified up and running
  Apr 19 15:55:23.341: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get pods update-demo-nautilus-cw9ln -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 19 15:55:23.502: INFO: stderr: ""
  Apr 19 15:55:23.502: INFO: stdout: "true"
  Apr 19 15:55:23.502: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get pods update-demo-nautilus-cw9ln -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 19 15:55:23.655: INFO: stderr: ""
  Apr 19 15:55:23.655: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 19 15:55:23.655: INFO: validating pod update-demo-nautilus-cw9ln
  Apr 19 15:55:23.678: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 19 15:55:23.678: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 19 15:55:23.678: INFO: update-demo-nautilus-cw9ln is verified up and running
  STEP: scaling down the replication controller @ 04/19/24 15:55:23.678
  Apr 19 15:55:23.696: INFO: scanned /root for discovery docs: <nil>
  Apr 19 15:55:23.696: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Apr 19 15:55:24.921: INFO: stderr: ""
  Apr 19 15:55:24.921: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/19/24 15:55:24.921
  Apr 19 15:55:24.922: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 19 15:55:25.121: INFO: stderr: ""
  Apr 19 15:55:25.121: INFO: stdout: "update-demo-nautilus-8r7kh update-demo-nautilus-cw9ln "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 04/19/24 15:55:25.121
  Apr 19 15:55:30.125: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 19 15:55:30.335: INFO: stderr: ""
  Apr 19 15:55:30.335: INFO: stdout: "update-demo-nautilus-cw9ln "
  Apr 19 15:55:30.335: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get pods update-demo-nautilus-cw9ln -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 19 15:55:30.476: INFO: stderr: ""
  Apr 19 15:55:30.477: INFO: stdout: "true"
  Apr 19 15:55:30.477: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get pods update-demo-nautilus-cw9ln -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 19 15:55:30.652: INFO: stderr: ""
  Apr 19 15:55:30.652: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 19 15:55:30.652: INFO: validating pod update-demo-nautilus-cw9ln
  Apr 19 15:55:30.669: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 19 15:55:30.669: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 19 15:55:30.669: INFO: update-demo-nautilus-cw9ln is verified up and running
  STEP: scaling up the replication controller @ 04/19/24 15:55:30.669
  Apr 19 15:55:30.681: INFO: scanned /root for discovery docs: <nil>
  Apr 19 15:55:30.681: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Apr 19 15:55:31.906: INFO: stderr: ""
  Apr 19 15:55:31.906: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/19/24 15:55:31.906
  Apr 19 15:55:31.907: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 19 15:55:32.104: INFO: stderr: ""
  Apr 19 15:55:32.104: INFO: stdout: "update-demo-nautilus-7zprh update-demo-nautilus-cw9ln "
  Apr 19 15:55:32.104: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get pods update-demo-nautilus-7zprh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 19 15:55:32.262: INFO: stderr: ""
  Apr 19 15:55:32.262: INFO: stdout: ""
  Apr 19 15:55:32.262: INFO: update-demo-nautilus-7zprh is created but not running
  Apr 19 15:55:37.263: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 19 15:55:37.455: INFO: stderr: ""
  Apr 19 15:55:37.455: INFO: stdout: "update-demo-nautilus-7zprh update-demo-nautilus-cw9ln "
  Apr 19 15:55:37.456: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get pods update-demo-nautilus-7zprh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 19 15:55:37.619: INFO: stderr: ""
  Apr 19 15:55:37.619: INFO: stdout: "true"
  Apr 19 15:55:37.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get pods update-demo-nautilus-7zprh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 19 15:55:37.804: INFO: stderr: ""
  Apr 19 15:55:37.804: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 19 15:55:37.804: INFO: validating pod update-demo-nautilus-7zprh
  Apr 19 15:55:37.825: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 19 15:55:37.825: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 19 15:55:37.825: INFO: update-demo-nautilus-7zprh is verified up and running
  Apr 19 15:55:37.825: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get pods update-demo-nautilus-cw9ln -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 19 15:55:38.004: INFO: stderr: ""
  Apr 19 15:55:38.005: INFO: stdout: "true"
  Apr 19 15:55:38.005: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get pods update-demo-nautilus-cw9ln -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 19 15:55:38.168: INFO: stderr: ""
  Apr 19 15:55:38.168: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 19 15:55:38.168: INFO: validating pod update-demo-nautilus-cw9ln
  Apr 19 15:55:38.179: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 19 15:55:38.179: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 19 15:55:38.179: INFO: update-demo-nautilus-cw9ln is verified up and running
  STEP: using delete to clean up resources @ 04/19/24 15:55:38.179
  Apr 19 15:55:38.180: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 delete --grace-period=0 --force -f -'
  Apr 19 15:55:38.333: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 19 15:55:38.333: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Apr 19 15:55:38.333: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get rc,svc -l name=update-demo --no-headers'
  Apr 19 15:55:38.622: INFO: stderr: "No resources found in kubectl-8857 namespace.\n"
  Apr 19 15:55:38.622: INFO: stdout: ""
  Apr 19 15:55:38.623: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8857 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 19 15:55:38.786: INFO: stderr: ""
  Apr 19 15:55:38.786: INFO: stdout: ""
  Apr 19 15:55:38.786: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8857" for this suite. @ 04/19/24 15:55:38.797
â€¢ [33.238 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 04/19/24 15:55:38.812
  Apr 19 15:55:38.812: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename replicaset @ 04/19/24 15:55:38.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:55:38.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:55:38.851
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 04/19/24 15:55:38.859
  STEP: When a replicaset with a matching selector is created @ 04/19/24 15:55:40.905
  STEP: Then the orphan pod is adopted @ 04/19/24 15:55:40.919
  STEP: When the matched label of one of its pods change @ 04/19/24 15:55:41.944
  Apr 19 15:55:41.956: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 04/19/24 15:55:42.003
  Apr 19 15:55:43.052: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3498" for this suite. @ 04/19/24 15:55:43.072
â€¢ [4.276 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 04/19/24 15:55:43.111
  Apr 19 15:55:43.111: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename webhook @ 04/19/24 15:55:43.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:55:43.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:55:43.163
  STEP: Setting up server cert @ 04/19/24 15:55:43.215
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/19/24 15:55:44.847
  STEP: Deploying the webhook pod @ 04/19/24 15:55:44.872
  STEP: Wait for the deployment to be ready @ 04/19/24 15:55:44.903
  Apr 19 15:55:44.950: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/19/24 15:55:46.987
  STEP: Verifying the service has paired with the endpoint @ 04/19/24 15:55:47.026
  Apr 19 15:55:48.036: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 04/19/24 15:55:48.077
  STEP: create a pod that should be updated by the webhook @ 04/19/24 15:55:48.123
  Apr 19 15:55:48.177: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1730" for this suite. @ 04/19/24 15:55:48.343
  STEP: Destroying namespace "webhook-markers-2423" for this suite. @ 04/19/24 15:55:48.395
â€¢ [5.310 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 04/19/24 15:55:48.426
  Apr 19 15:55:48.426: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/19/24 15:55:48.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:55:48.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:55:48.475
  STEP: create the container to handle the HTTPGet hook request. @ 04/19/24 15:55:48.501
  STEP: create the pod with lifecycle hook @ 04/19/24 15:55:52.572
  STEP: check poststart hook @ 04/19/24 15:55:54.623
  STEP: delete the pod with lifecycle hook @ 04/19/24 15:55:54.671
  Apr 19 15:55:56.726: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4765" for this suite. @ 04/19/24 15:55:56.744
â€¢ [8.343 seconds]
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 04/19/24 15:55:56.77
  Apr 19 15:55:56.770: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename security-context @ 04/19/24 15:55:56.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:55:56.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:55:56.825
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/19/24 15:55:56.834
  STEP: Saw pod success @ 04/19/24 15:56:00.896
  Apr 19 15:56:00.906: INFO: Trying to get logs from node eixo7oojiese-3 pod security-context-5e3e5cff-3852-4cf8-9df7-df09bc1585b0 container test-container: <nil>
  STEP: delete the pod @ 04/19/24 15:56:00.935
  Apr 19 15:56:00.962: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4150" for this suite. @ 04/19/24 15:56:00.971
â€¢ [4.218 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 04/19/24 15:56:00.988
  Apr 19 15:56:00.989: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename namespaces @ 04/19/24 15:56:01
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:56:01.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:56:01.044
  STEP: Read namespace status @ 04/19/24 15:56:01.05
  Apr 19 15:56:01.058: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 04/19/24 15:56:01.058
  Apr 19 15:56:01.073: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 04/19/24 15:56:01.073
  Apr 19 15:56:01.090: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Apr 19 15:56:01.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4332" for this suite. @ 04/19/24 15:56:01.104
â€¢ [0.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 04/19/24 15:56:01.128
  Apr 19 15:56:01.128: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename kubectl @ 04/19/24 15:56:01.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:56:01.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:56:01.216
  STEP: creating Agnhost RC @ 04/19/24 15:56:01.222
  Apr 19 15:56:01.223: INFO: namespace kubectl-8566
  Apr 19 15:56:01.224: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8566 create -f -'
  Apr 19 15:56:02.032: INFO: stderr: ""
  Apr 19 15:56:02.032: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/19/24 15:56:02.032
  Apr 19 15:56:03.055: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 19 15:56:03.055: INFO: Found 0 / 1
  Apr 19 15:56:04.055: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 19 15:56:04.055: INFO: Found 1 / 1
  Apr 19 15:56:04.055: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Apr 19 15:56:04.062: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 19 15:56:04.062: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 19 15:56:04.062: INFO: wait on agnhost-primary startup in kubectl-8566 
  Apr 19 15:56:04.062: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8566 logs agnhost-primary-g9pjx agnhost-primary'
  Apr 19 15:56:04.268: INFO: stderr: ""
  Apr 19 15:56:04.268: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 04/19/24 15:56:04.268
  Apr 19 15:56:04.269: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8566 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Apr 19 15:56:04.508: INFO: stderr: ""
  Apr 19 15:56:04.508: INFO: stdout: "service/rm2 exposed\n"
  Apr 19 15:56:04.520: INFO: Service rm2 in namespace kubectl-8566 found.
  STEP: exposing service @ 04/19/24 15:56:06.543
  Apr 19 15:56:06.543: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8566 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Apr 19 15:56:06.738: INFO: stderr: ""
  Apr 19 15:56:06.738: INFO: stdout: "service/rm3 exposed\n"
  Apr 19 15:56:06.746: INFO: Service rm3 in namespace kubectl-8566 found.
  Apr 19 15:56:08.769: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8566" for this suite. @ 04/19/24 15:56:08.782
â€¢ [7.673 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 04/19/24 15:56:08.804
  Apr 19 15:56:08.804: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 15:56:08.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:56:08.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:56:08.862
  STEP: Creating a pod to test downward API volume plugin @ 04/19/24 15:56:08.871
  STEP: Saw pod success @ 04/19/24 15:56:12.951
  Apr 19 15:56:12.958: INFO: Trying to get logs from node eixo7oojiese-3 pod downwardapi-volume-95737006-68be-4042-833c-a53082c8ee33 container client-container: <nil>
  STEP: delete the pod @ 04/19/24 15:56:12.978
  Apr 19 15:56:13.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3433" for this suite. @ 04/19/24 15:56:13.033
â€¢ [4.245 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 04/19/24 15:56:13.059
  Apr 19 15:56:13.059: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename field-validation @ 04/19/24 15:56:13.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:56:13.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:56:13.099
  Apr 19 15:56:13.105: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  W0419 15:56:15.853956      14 warnings.go:70] unknown field "alpha"
  W0419 15:56:15.854842      14 warnings.go:70] unknown field "beta"
  W0419 15:56:15.855271      14 warnings.go:70] unknown field "delta"
  W0419 15:56:15.855699      14 warnings.go:70] unknown field "epsilon"
  W0419 15:56:15.856124      14 warnings.go:70] unknown field "gamma"
  Apr 19 15:56:16.452: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3555" for this suite. @ 04/19/24 15:56:16.494
â€¢ [3.449 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 04/19/24 15:56:16.51
  Apr 19 15:56:16.510: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename container-runtime @ 04/19/24 15:56:16.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:56:16.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:56:16.548
  STEP: create the container @ 04/19/24 15:56:16.555
  W0419 15:56:16.572863      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/19/24 15:56:16.573
  STEP: get the container status @ 04/19/24 15:56:19.621
  STEP: the container should be terminated @ 04/19/24 15:56:19.631
  STEP: the termination message should be set @ 04/19/24 15:56:19.631
  Apr 19 15:56:19.632: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/19/24 15:56:19.632
  Apr 19 15:56:19.654: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-700" for this suite. @ 04/19/24 15:56:19.671
â€¢ [3.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 04/19/24 15:56:19.688
  Apr 19 15:56:19.688: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/19/24 15:56:19.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:56:19.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:56:19.724
  Apr 19 15:56:19.732: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 15:56:20.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7459" for this suite. @ 04/19/24 15:56:20.323
â€¢ [0.653 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 04/19/24 15:56:20.343
  Apr 19 15:56:20.343: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename csiinlinevolumes @ 04/19/24 15:56:20.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:56:20.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:56:20.391
  STEP: Creating two CSIDrivers @ 04/19/24 15:56:20.401
  STEP: Getting "inline-driver-2ea43dd6-056f-4586-829c-e5df3957d12b" & "inline-driver-e2aa5d57-fc9b-435b-b6ff-6cb468883ccd" @ 04/19/24 15:56:20.465
  STEP: Patching the CSIDriver "inline-driver-e2aa5d57-fc9b-435b-b6ff-6cb468883ccd" @ 04/19/24 15:56:20.486
  STEP: Updating the CSIDriver "inline-driver-e2aa5d57-fc9b-435b-b6ff-6cb468883ccd" @ 04/19/24 15:56:20.543
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-2617" @ 04/19/24 15:56:20.587
  STEP: Deleting CSIDriver "inline-driver-2ea43dd6-056f-4586-829c-e5df3957d12b" @ 04/19/24 15:56:20.614
  STEP: Confirm deletion of CSIDriver "inline-driver-2ea43dd6-056f-4586-829c-e5df3957d12b" @ 04/19/24 15:56:20.632
  STEP: Deleting CSIDriver "inline-driver-e2aa5d57-fc9b-435b-b6ff-6cb468883ccd" via DeleteCollection @ 04/19/24 15:56:20.638
  STEP: Confirm deletion of CSIDriver "inline-driver-e2aa5d57-fc9b-435b-b6ff-6cb468883ccd" @ 04/19/24 15:56:20.653
  Apr 19 15:56:20.659: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2617" for this suite. @ 04/19/24 15:56:20.676
â€¢ [0.347 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 04/19/24 15:56:20.699
  Apr 19 15:56:20.699: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename watch @ 04/19/24 15:56:20.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:56:20.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:56:20.74
  STEP: creating a watch on configmaps @ 04/19/24 15:56:20.745
  STEP: creating a new configmap @ 04/19/24 15:56:20.747
  STEP: modifying the configmap once @ 04/19/24 15:56:20.756
  STEP: closing the watch once it receives two notifications @ 04/19/24 15:56:20.771
  Apr 19 15:56:20.771: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2889  755d6cd9-cfb6-4966-a61f-5e6d4e9dca6e 8409 0 2024-04-19 15:56:20 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-19 15:56:20 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 19 15:56:20.772: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2889  755d6cd9-cfb6-4966-a61f-5e6d4e9dca6e 8410 0 2024-04-19 15:56:20 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-19 15:56:20 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 04/19/24 15:56:20.772
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 04/19/24 15:56:20.785
  STEP: deleting the configmap @ 04/19/24 15:56:20.787
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 04/19/24 15:56:20.799
  Apr 19 15:56:20.799: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2889  755d6cd9-cfb6-4966-a61f-5e6d4e9dca6e 8411 0 2024-04-19 15:56:20 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-19 15:56:20 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 19 15:56:20.799: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-2889  755d6cd9-cfb6-4966-a61f-5e6d4e9dca6e 8412 0 2024-04-19 15:56:20 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-04-19 15:56:20 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 19 15:56:20.800: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2889" for this suite. @ 04/19/24 15:56:20.809
â€¢ [0.123 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 04/19/24 15:56:20.824
  Apr 19 15:56:20.825: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename configmap @ 04/19/24 15:56:20.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:56:20.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:56:20.855
  STEP: Creating configMap with name configmap-test-volume-a9896c62-092f-4e86-b0b4-4964dceeb48f @ 04/19/24 15:56:20.86
  STEP: Creating a pod to test consume configMaps @ 04/19/24 15:56:20.868
  STEP: Saw pod success @ 04/19/24 15:56:24.928
  Apr 19 15:56:24.938: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-configmaps-96443418-d620-4b16-bfcf-68a2c77f8cbd container agnhost-container: <nil>
  STEP: delete the pod @ 04/19/24 15:56:24.957
  Apr 19 15:56:24.992: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9377" for this suite. @ 04/19/24 15:56:25.009
â€¢ [4.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 04/19/24 15:56:25.025
  Apr 19 15:56:25.026: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename kubelet-test @ 04/19/24 15:56:25.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:56:25.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:56:25.075
  STEP: Waiting for pod completion @ 04/19/24 15:56:25.105
  Apr 19 15:56:29.155: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2426" for this suite. @ 04/19/24 15:56:29.171
â€¢ [4.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 04/19/24 15:56:29.214
  Apr 19 15:56:29.214: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename emptydir @ 04/19/24 15:56:29.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:56:29.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:56:29.264
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/19/24 15:56:29.277
  STEP: Saw pod success @ 04/19/24 15:56:33.34
  Apr 19 15:56:33.349: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-e4bc7e98-a6d7-4e85-9d73-4580ef04f3f7 container test-container: <nil>
  STEP: delete the pod @ 04/19/24 15:56:33.375
  Apr 19 15:56:33.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-647" for this suite. @ 04/19/24 15:56:33.434
â€¢ [4.240 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 04/19/24 15:56:33.455
  Apr 19 15:56:33.455: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename container-probe @ 04/19/24 15:56:33.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 15:56:33.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 15:56:33.502
  STEP: Creating pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851 @ 04/19/24 15:56:33.514
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/19/24 15:56:35.573
  Apr 19 15:56:35.584: INFO: Initial restart count of pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb is 0
  Apr 19 15:56:35.595: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:56:37.612: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:56:39.630: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:56:41.643: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:56:43.660: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:56:45.679: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:56:47.690: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:56:49.704: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:56:51.719: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:56:53.748: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:56:55.769: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:56:57.780: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:56:59.792: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:01.812: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:03.825: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:05.840: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:07.853: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:09.869: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:11.887: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:13.904: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:15.920: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:17.934: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:19.944: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:21.957: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:23.967: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:25.983: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:28.000: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:30.016: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:32.046: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:34.059: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:36.068: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:38.081: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:40.092: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:42.102: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:44.116: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:46.129: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:48.142: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:50.158: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:52.170: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:54.180: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:56.192: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:57:58.207: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:00.216: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:02.228: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:04.239: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:06.250: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:08.264: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:10.277: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:12.289: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:14.317: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:16.334: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:18.360: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:20.373: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:22.385: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:24.400: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:26.415: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:28.425: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:30.439: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:32.455: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:34.466: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:36.480: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:38.498: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:40.513: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:42.529: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:44.541: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:46.553: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:48.567: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:50.579: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:52.592: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:54.607: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:56.625: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:58:58.638: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:00.651: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:02.668: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:04.683: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:06.696: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:08.706: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:10.719: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:12.730: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:14.742: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:16.756: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:18.766: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:20.774: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:22.786: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:24.798: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:26.813: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:28.823: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:30.835: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:32.867: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:34.880: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:36.919: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:38.933: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:40.954: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:42.965: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:44.977: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:46.987: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:48.997: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:51.010: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:53.033: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:55.050: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:57.066: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 15:59:59.079: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 16:00:01.089: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 16:00:03.101: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 16:00:05.114: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 16:00:07.125: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 16:00:09.140: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 16:00:11.152: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 16:00:13.162: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 16:00:15.175: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 16:00:17.187: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 16:00:19.201: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 16:00:21.211: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 16:00:23.222: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 16:00:25.236: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 16:00:27.250: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 16:00:29.265: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 16:00:31.278: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 16:00:33.290: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 16:00:35.305: INFO: Get pod busybox-5e1d58c4-a164-46be-89f9-02a443ec90bb in namespace container-probe-851
  Apr 19 16:00:37.307: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/19/24 16:00:37.34
  STEP: Destroying namespace "container-probe-851" for this suite. @ 04/19/24 16:00:37.388
â€¢ [243.948 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 04/19/24 16:00:37.406
  Apr 19 16:00:37.407: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename runtimeclass @ 04/19/24 16:00:37.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:00:37.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:00:37.447
  Apr 19 16:00:37.491: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5808" for this suite. @ 04/19/24 16:00:37.527
â€¢ [0.136 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 04/19/24 16:00:37.544
  Apr 19 16:00:37.544: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 16:00:37.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:00:37.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:00:37.576
  STEP: Creating a pod to test downward API volume plugin @ 04/19/24 16:00:37.58
  STEP: Saw pod success @ 04/19/24 16:00:41.637
  Apr 19 16:00:41.644: INFO: Trying to get logs from node eixo7oojiese-3 pod downwardapi-volume-e8224959-65a0-45d4-a872-a10002b4b970 container client-container: <nil>
  STEP: delete the pod @ 04/19/24 16:00:41.684
  Apr 19 16:00:41.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2402" for this suite. @ 04/19/24 16:00:41.729
â€¢ [4.201 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 04/19/24 16:00:41.75
  Apr 19 16:00:41.750: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 16:00:41.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:00:41.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:00:41.785
  STEP: Creating projection with secret that has name projected-secret-test-4bf8b90a-4a44-4e42-8baf-51cfe5a61dca @ 04/19/24 16:00:41.79
  STEP: Creating a pod to test consume secrets @ 04/19/24 16:00:41.801
  STEP: Saw pod success @ 04/19/24 16:00:45.851
  Apr 19 16:00:45.862: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-projected-secrets-c502cb14-dca2-4962-a062-9feb5b881bc7 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/19/24 16:00:45.885
  Apr 19 16:00:45.920: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2367" for this suite. @ 04/19/24 16:00:45.937
â€¢ [4.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 04/19/24 16:00:45.977
  Apr 19 16:00:45.977: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 16:00:45.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:00:46.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:00:46.021
  STEP: Creating configMap with name cm-test-opt-del-5d0dfded-9b8a-4197-9926-847c277f57a5 @ 04/19/24 16:00:46.039
  STEP: Creating configMap with name cm-test-opt-upd-844d9fbe-db2b-4e67-a736-f0c278be1b60 @ 04/19/24 16:00:46.052
  STEP: Creating the pod @ 04/19/24 16:00:46.061
  STEP: Deleting configmap cm-test-opt-del-5d0dfded-9b8a-4197-9926-847c277f57a5 @ 04/19/24 16:00:48.175
  STEP: Updating configmap cm-test-opt-upd-844d9fbe-db2b-4e67-a736-f0c278be1b60 @ 04/19/24 16:00:48.188
  STEP: Creating configMap with name cm-test-opt-create-794c2f3a-86f9-47f2-8907-ae1036c6f8a0 @ 04/19/24 16:00:48.202
  STEP: waiting to observe update in volume @ 04/19/24 16:00:48.212
  Apr 19 16:00:52.309: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6955" for this suite. @ 04/19/24 16:00:52.324
â€¢ [6.362 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 04/19/24 16:00:52.341
  Apr 19 16:00:52.341: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/19/24 16:00:52.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:00:52.392
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:00:52.399
  Apr 19 16:00:52.407: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 16:00:58.869: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6212" for this suite. @ 04/19/24 16:00:58.886
â€¢ [6.568 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 04/19/24 16:00:58.93
  Apr 19 16:00:58.930: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename var-expansion @ 04/19/24 16:00:58.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:00:58.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:00:58.989
  STEP: Creating a pod to test substitution in volume subpath @ 04/19/24 16:00:58.996
  STEP: Saw pod success @ 04/19/24 16:01:03.068
  Apr 19 16:01:03.076: INFO: Trying to get logs from node eixo7oojiese-3 pod var-expansion-d0795387-3bb9-4819-887d-5f86976448bc container dapi-container: <nil>
  STEP: delete the pod @ 04/19/24 16:01:03.1
  Apr 19 16:01:03.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-852" for this suite. @ 04/19/24 16:01:03.148
â€¢ [4.231 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 04/19/24 16:01:03.161
  Apr 19 16:01:03.161: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename subpath @ 04/19/24 16:01:03.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:01:03.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:01:03.198
  STEP: Setting up data @ 04/19/24 16:01:03.205
  STEP: Creating pod pod-subpath-test-projected-mks9 @ 04/19/24 16:01:03.223
  STEP: Creating a pod to test atomic-volume-subpath @ 04/19/24 16:01:03.223
  STEP: Saw pod success @ 04/19/24 16:01:25.371
  Apr 19 16:01:25.382: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-subpath-test-projected-mks9 container test-container-subpath-projected-mks9: <nil>
  STEP: delete the pod @ 04/19/24 16:01:25.409
  STEP: Deleting pod pod-subpath-test-projected-mks9 @ 04/19/24 16:01:25.447
  Apr 19 16:01:25.447: INFO: Deleting pod "pod-subpath-test-projected-mks9" in namespace "subpath-9928"
  Apr 19 16:01:25.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9928" for this suite. @ 04/19/24 16:01:25.466
â€¢ [22.321 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 04/19/24 16:01:25.488
  Apr 19 16:01:25.488: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 16:01:25.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:01:25.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:01:25.538
  STEP: Creating secret with name projected-secret-test-a8fb6bf0-f3d6-4962-b022-8b4943fb732b @ 04/19/24 16:01:25.545
  STEP: Creating a pod to test consume secrets @ 04/19/24 16:01:25.559
  STEP: Saw pod success @ 04/19/24 16:01:29.654
  Apr 19 16:01:29.660: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-projected-secrets-8fdd2db6-d1b7-4ae0-93a1-d00cda8e2652 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/19/24 16:01:29.694
  Apr 19 16:01:29.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4816" for this suite. @ 04/19/24 16:01:29.747
â€¢ [4.270 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 04/19/24 16:01:29.761
  Apr 19 16:01:29.761: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename emptydir @ 04/19/24 16:01:29.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:01:29.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:01:29.794
  STEP: Creating a pod to test emptydir volume type on node default medium @ 04/19/24 16:01:29.799
  STEP: Saw pod success @ 04/19/24 16:01:33.848
  Apr 19 16:01:33.857: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-bf650415-c0c6-4fd8-94b4-29ca5e32cf98 container test-container: <nil>
  STEP: delete the pod @ 04/19/24 16:01:33.875
  Apr 19 16:01:33.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8787" for this suite. @ 04/19/24 16:01:33.925
â€¢ [4.177 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 04/19/24 16:01:33.94
  Apr 19 16:01:33.941: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename kubectl @ 04/19/24 16:01:33.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:01:33.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:01:33.981
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/19/24 16:01:33.987
  Apr 19 16:01:33.988: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-1039 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Apr 19 16:01:34.184: INFO: stderr: ""
  Apr 19 16:01:34.184: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 04/19/24 16:01:34.184
  Apr 19 16:01:34.185: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-1039 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Apr 19 16:01:34.368: INFO: stderr: ""
  Apr 19 16:01:34.368: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/19/24 16:01:34.368
  Apr 19 16:01:34.379: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-1039 delete pods e2e-test-httpd-pod'
  Apr 19 16:01:36.293: INFO: stderr: ""
  Apr 19 16:01:36.293: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 19 16:01:36.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1039" for this suite. @ 04/19/24 16:01:36.305
â€¢ [2.381 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 04/19/24 16:01:36.322
  Apr 19 16:01:36.322: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename dns @ 04/19/24 16:01:36.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:01:36.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:01:36.366
  STEP: Creating a test headless service @ 04/19/24 16:01:36.373
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5625.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-5625.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 04/19/24 16:01:36.393
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5625.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-5625.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 04/19/24 16:01:36.393
  STEP: creating a pod to probe DNS @ 04/19/24 16:01:36.393
  STEP: submitting the pod to kubernetes @ 04/19/24 16:01:36.395
  STEP: retrieving the pod @ 04/19/24 16:01:38.448
  STEP: looking for the results for each expected name from probers @ 04/19/24 16:01:38.463
  Apr 19 16:01:38.511: INFO: Unable to read jessie_hosts@dns-querier-2 from pod dns-5625/dns-test-2266b694-498f-426c-89fb-5551461c04d9: the server could not find the requested resource (get pods dns-test-2266b694-498f-426c-89fb-5551461c04d9)
  Apr 19 16:01:38.511: INFO: Lookups using dns-5625/dns-test-2266b694-498f-426c-89fb-5551461c04d9 failed for: [jessie_hosts@dns-querier-2]

  Apr 19 16:01:38.525: INFO: Pod client logs for webserver: 
  Apr 19 16:01:38.542: INFO: Pod client logs for querier: 
  Apr 19 16:01:38.555: INFO: Pod client logs for jessie-querier: 
  Apr 19 16:01:43.609: INFO: DNS probes using dns-5625/dns-test-2266b694-498f-426c-89fb-5551461c04d9 succeeded

  Apr 19 16:01:43.609: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/19/24 16:01:43.623
  STEP: deleting the test headless service @ 04/19/24 16:01:43.656
  STEP: Destroying namespace "dns-5625" for this suite. @ 04/19/24 16:01:43.707
â€¢ [7.396 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 04/19/24 16:01:43.724
  Apr 19 16:01:43.724: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename services @ 04/19/24 16:01:43.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:01:43.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:01:43.763
  STEP: fetching services @ 04/19/24 16:01:43.768
  Apr 19 16:01:43.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-734" for this suite. @ 04/19/24 16:01:43.783
â€¢ [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 04/19/24 16:01:43.827
  Apr 19 16:01:43.827: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename downward-api @ 04/19/24 16:01:43.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:01:43.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:01:43.858
  STEP: Creating a pod to test downward API volume plugin @ 04/19/24 16:01:43.87
  STEP: Saw pod success @ 04/19/24 16:01:47.929
  Apr 19 16:01:47.939: INFO: Trying to get logs from node eixo7oojiese-3 pod downwardapi-volume-becb5469-250d-4a9f-b9ae-f2d465e56151 container client-container: <nil>
  STEP: delete the pod @ 04/19/24 16:01:47.964
  Apr 19 16:01:47.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7846" for this suite. @ 04/19/24 16:01:48.045
â€¢ [4.232 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 04/19/24 16:01:48.059
  Apr 19 16:01:48.059: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename namespaces @ 04/19/24 16:01:48.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:01:48.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:01:48.095
  STEP: Updating Namespace "namespaces-8098" @ 04/19/24 16:01:48.101
  Apr 19 16:01:48.113: INFO: Namespace "namespaces-8098" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"ecc91bd4-ae45-4a02-ad75-06b46a186390", "kubernetes.io/metadata.name":"namespaces-8098", "namespaces-8098":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Apr 19 16:01:48.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8098" for this suite. @ 04/19/24 16:01:48.121
â€¢ [0.084 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 04/19/24 16:01:48.145
  Apr 19 16:01:48.145: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename container-probe @ 04/19/24 16:01:48.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:01:48.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:01:48.177
  STEP: Creating pod liveness-44f7e52f-b33f-4603-8c80-611f5d2be90e in namespace container-probe-9475 @ 04/19/24 16:01:48.184
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/19/24 16:01:50.232
  Apr 19 16:01:50.242: INFO: Initial restart count of pod liveness-44f7e52f-b33f-4603-8c80-611f5d2be90e is 0
  Apr 19 16:01:50.251: INFO: Get pod liveness-44f7e52f-b33f-4603-8c80-611f5d2be90e in namespace container-probe-9475
  Apr 19 16:01:52.263: INFO: Get pod liveness-44f7e52f-b33f-4603-8c80-611f5d2be90e in namespace container-probe-9475
  Apr 19 16:01:54.276: INFO: Get pod liveness-44f7e52f-b33f-4603-8c80-611f5d2be90e in namespace container-probe-9475
  Apr 19 16:01:56.287: INFO: Get pod liveness-44f7e52f-b33f-4603-8c80-611f5d2be90e in namespace container-probe-9475
  Apr 19 16:01:58.307: INFO: Get pod liveness-44f7e52f-b33f-4603-8c80-611f5d2be90e in namespace container-probe-9475
  Apr 19 16:02:00.320: INFO: Get pod liveness-44f7e52f-b33f-4603-8c80-611f5d2be90e in namespace container-probe-9475
  Apr 19 16:02:02.331: INFO: Get pod liveness-44f7e52f-b33f-4603-8c80-611f5d2be90e in namespace container-probe-9475
  Apr 19 16:02:04.348: INFO: Get pod liveness-44f7e52f-b33f-4603-8c80-611f5d2be90e in namespace container-probe-9475
  Apr 19 16:02:06.363: INFO: Get pod liveness-44f7e52f-b33f-4603-8c80-611f5d2be90e in namespace container-probe-9475
  Apr 19 16:02:08.374: INFO: Get pod liveness-44f7e52f-b33f-4603-8c80-611f5d2be90e in namespace container-probe-9475
  Apr 19 16:02:10.388: INFO: Get pod liveness-44f7e52f-b33f-4603-8c80-611f5d2be90e in namespace container-probe-9475
  Apr 19 16:02:10.388: INFO: Restart count of pod container-probe-9475/liveness-44f7e52f-b33f-4603-8c80-611f5d2be90e is now 1 (20.145071787s elapsed)
  Apr 19 16:02:10.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/19/24 16:02:10.403
  STEP: Destroying namespace "container-probe-9475" for this suite. @ 04/19/24 16:02:10.436
â€¢ [22.311 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 04/19/24 16:02:10.462
  Apr 19 16:02:10.463: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename job @ 04/19/24 16:02:10.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:02:10.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:02:10.535
  STEP: Creating a job @ 04/19/24 16:02:10.54
  STEP: Ensuring active pods == parallelism @ 04/19/24 16:02:10.556
  STEP: delete a job @ 04/19/24 16:02:12.585
  STEP: deleting Job.batch foo in namespace job-5002, will wait for the garbage collector to delete the pods @ 04/19/24 16:02:12.586
  Apr 19 16:02:12.678: INFO: Deleting Job.batch foo took: 27.216511ms
  Apr 19 16:02:12.779: INFO: Terminating Job.batch foo pods took: 101.458535ms
  STEP: Ensuring job was deleted @ 04/19/24 16:02:43.882
  Apr 19 16:02:43.895: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5002" for this suite. @ 04/19/24 16:02:43.906
â€¢ [33.457 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 04/19/24 16:02:43.92
  Apr 19 16:02:43.920: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename emptydir @ 04/19/24 16:02:43.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:02:43.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:02:43.956
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/19/24 16:02:43.96
  STEP: Saw pod success @ 04/19/24 16:02:48.036
  Apr 19 16:02:48.061: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-8b0d3d91-9be1-4f23-ad03-bee2ce708d71 container test-container: <nil>
  STEP: delete the pod @ 04/19/24 16:02:48.078
  Apr 19 16:02:48.109: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6406" for this suite. @ 04/19/24 16:02:48.122
â€¢ [4.223 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 04/19/24 16:02:48.144
  Apr 19 16:02:48.144: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename webhook @ 04/19/24 16:02:48.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:02:48.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:02:48.185
  STEP: Setting up server cert @ 04/19/24 16:02:48.228
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/19/24 16:02:49.06
  STEP: Deploying the webhook pod @ 04/19/24 16:02:49.077
  STEP: Wait for the deployment to be ready @ 04/19/24 16:02:49.105
  Apr 19 16:02:49.115: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/19/24 16:02:51.147
  STEP: Verifying the service has paired with the endpoint @ 04/19/24 16:02:51.172
  Apr 19 16:02:52.172: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 19 16:02:52.193: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9323-crds.webhook.example.com via the AdmissionRegistration API @ 04/19/24 16:02:52.743
  STEP: Creating a custom resource while v1 is storage version @ 04/19/24 16:02:52.801
  STEP: Patching Custom Resource Definition to set v2 as storage @ 04/19/24 16:02:55.084
  STEP: Patching the custom resource while v2 is storage version @ 04/19/24 16:02:55.138
  Apr 19 16:02:55.353: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3470" for this suite. @ 04/19/24 16:02:56.084
  STEP: Destroying namespace "webhook-markers-2077" for this suite. @ 04/19/24 16:02:56.1
â€¢ [7.976 seconds]
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 04/19/24 16:02:56.122
  Apr 19 16:02:56.123: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename replicaset @ 04/19/24 16:02:56.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:02:56.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:02:56.168
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 04/19/24 16:02:56.176
  Apr 19 16:02:56.197: INFO: Pod name sample-pod: Found 0 pods out of 1
  Apr 19 16:03:01.207: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/19/24 16:03:01.207
  STEP: getting scale subresource @ 04/19/24 16:03:01.208
  STEP: updating a scale subresource @ 04/19/24 16:03:01.219
  STEP: verifying the replicaset Spec.Replicas was modified @ 04/19/24 16:03:01.234
  STEP: Patch a scale subresource @ 04/19/24 16:03:01.241
  Apr 19 16:03:01.281: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5056" for this suite. @ 04/19/24 16:03:01.321
â€¢ [5.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 04/19/24 16:03:01.357
  Apr 19 16:03:01.357: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename taint-multiple-pods @ 04/19/24 16:03:01.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:03:01.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:03:01.413
  Apr 19 16:03:01.418: INFO: Waiting up to 1m0s for all nodes to be ready
  Apr 19 16:04:01.499: INFO: Waiting for terminating namespaces to be deleted...
  Apr 19 16:04:01.511: INFO: Starting informer...
  STEP: Starting pods... @ 04/19/24 16:04:01.511
  Apr 19 16:04:01.782: INFO: Pod1 is running on eixo7oojiese-3. Tainting Node
  Apr 19 16:04:03.872: INFO: Pod2 is running on eixo7oojiese-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/19/24 16:04:03.872
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/19/24 16:04:03.912
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 04/19/24 16:04:03.939
  Apr 19 16:04:10.455: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Apr 19 16:04:29.651: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Apr 19 16:04:29.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/19/24 16:04:29.696
  STEP: Destroying namespace "taint-multiple-pods-5658" for this suite. @ 04/19/24 16:04:29.707
â€¢ [88.379 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 04/19/24 16:04:29.741
  Apr 19 16:04:29.741: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename configmap @ 04/19/24 16:04:29.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:04:29.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:04:29.797
  STEP: Creating configMap with name configmap-test-volume-map-f0491680-b13e-49ec-8e2f-f2d94871b176 @ 04/19/24 16:04:29.802
  STEP: Creating a pod to test consume configMaps @ 04/19/24 16:04:29.809
  STEP: Saw pod success @ 04/19/24 16:04:33.85
  Apr 19 16:04:33.859: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-configmaps-b5b4c55b-4600-4d3c-a4a1-2335c9124ff0 container agnhost-container: <nil>
  STEP: delete the pod @ 04/19/24 16:04:33.895
  Apr 19 16:04:33.938: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5168" for this suite. @ 04/19/24 16:04:33.951
â€¢ [4.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 04/19/24 16:04:33.98
  Apr 19 16:04:33.981: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename disruption @ 04/19/24 16:04:33.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:04:34.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:04:34.026
  STEP: creating the pdb @ 04/19/24 16:04:34.035
  STEP: Waiting for the pdb to be processed @ 04/19/24 16:04:34.052
  STEP: updating the pdb @ 04/19/24 16:04:36.077
  STEP: Waiting for the pdb to be processed @ 04/19/24 16:04:36.107
  STEP: patching the pdb @ 04/19/24 16:04:36.119
  STEP: Waiting for the pdb to be processed @ 04/19/24 16:04:36.148
  STEP: Waiting for the pdb to be deleted @ 04/19/24 16:04:38.196
  Apr 19 16:04:38.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1597" for this suite. @ 04/19/24 16:04:38.227
â€¢ [4.267 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 04/19/24 16:04:38.257
  Apr 19 16:04:38.257: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename sched-pred @ 04/19/24 16:04:38.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:04:38.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:04:38.316
  Apr 19 16:04:38.335: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 19 16:04:38.359: INFO: Waiting for terminating namespaces to be deleted...
  Apr 19 16:04:38.368: INFO: 
  Logging pods the apiserver thinks is on node eixo7oojiese-1 before test
  Apr 19 16:04:38.389: INFO: coredns-5dd5756b68-5bdmv from kube-system started at 2024-04-19 16:04:04 +0000 UTC (1 container statuses recorded)
  Apr 19 16:04:38.390: INFO: 	Container coredns ready: true, restart count 0
  Apr 19 16:04:38.390: INFO: kube-addon-manager-eixo7oojiese-1 from kube-system started at 2024-04-19 15:38:19 +0000 UTC (1 container statuses recorded)
  Apr 19 16:04:38.391: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Apr 19 16:04:38.391: INFO: kube-apiserver-eixo7oojiese-1 from kube-system started at 2024-04-19 15:38:19 +0000 UTC (1 container statuses recorded)
  Apr 19 16:04:38.392: INFO: 	Container kube-apiserver ready: true, restart count 1
  Apr 19 16:04:38.393: INFO: kube-controller-manager-eixo7oojiese-1 from kube-system started at 2024-04-19 15:38:19 +0000 UTC (1 container statuses recorded)
  Apr 19 16:04:38.393: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Apr 19 16:04:38.394: INFO: kube-flannel-ds-w6gb8 from kube-system started at 2024-04-19 15:31:52 +0000 UTC (1 container statuses recorded)
  Apr 19 16:04:38.394: INFO: 	Container kube-flannel ready: true, restart count 1
  Apr 19 16:04:38.395: INFO: kube-proxy-2xwhq from kube-system started at 2024-04-19 15:26:10 +0000 UTC (1 container statuses recorded)
  Apr 19 16:04:38.395: INFO: 	Container kube-proxy ready: true, restart count 1
  Apr 19 16:04:38.396: INFO: kube-scheduler-eixo7oojiese-1 from kube-system started at 2024-04-19 15:38:19 +0000 UTC (1 container statuses recorded)
  Apr 19 16:04:38.396: INFO: 	Container kube-scheduler ready: true, restart count 1
  Apr 19 16:04:38.396: INFO: sonobuoy-systemd-logs-daemon-set-b366af8c5db04861-m7ssp from sonobuoy started at 2024-04-19 15:39:22 +0000 UTC (2 container statuses recorded)
  Apr 19 16:04:38.397: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 19 16:04:38.397: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 19 16:04:38.398: INFO: 
  Logging pods the apiserver thinks is on node eixo7oojiese-2 before test
  Apr 19 16:04:38.414: INFO: coredns-5dd5756b68-4mqrq from kube-system started at 2024-04-19 16:04:04 +0000 UTC (1 container statuses recorded)
  Apr 19 16:04:38.414: INFO: 	Container coredns ready: true, restart count 0
  Apr 19 16:04:38.414: INFO: kube-addon-manager-eixo7oojiese-2 from kube-system started at 2024-04-19 15:33:54 +0000 UTC (1 container statuses recorded)
  Apr 19 16:04:38.414: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Apr 19 16:04:38.414: INFO: kube-apiserver-eixo7oojiese-2 from kube-system started at 2024-04-19 15:33:54 +0000 UTC (1 container statuses recorded)
  Apr 19 16:04:38.414: INFO: 	Container kube-apiserver ready: true, restart count 1
  Apr 19 16:04:38.414: INFO: kube-controller-manager-eixo7oojiese-2 from kube-system started at 2024-04-19 15:33:54 +0000 UTC (1 container statuses recorded)
  Apr 19 16:04:38.414: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Apr 19 16:04:38.414: INFO: kube-flannel-ds-pcsbj from kube-system started at 2024-04-19 15:31:52 +0000 UTC (1 container statuses recorded)
  Apr 19 16:04:38.414: INFO: 	Container kube-flannel ready: true, restart count 1
  Apr 19 16:04:38.414: INFO: kube-proxy-g7s86 from kube-system started at 2024-04-19 15:26:58 +0000 UTC (1 container statuses recorded)
  Apr 19 16:04:38.414: INFO: 	Container kube-proxy ready: true, restart count 1
  Apr 19 16:04:38.414: INFO: kube-scheduler-eixo7oojiese-2 from kube-system started at 2024-04-19 15:33:54 +0000 UTC (1 container statuses recorded)
  Apr 19 16:04:38.414: INFO: 	Container kube-scheduler ready: true, restart count 1
  Apr 19 16:04:38.414: INFO: sonobuoy-systemd-logs-daemon-set-b366af8c5db04861-wh5lb from sonobuoy started at 2024-04-19 15:39:22 +0000 UTC (2 container statuses recorded)
  Apr 19 16:04:38.414: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 19 16:04:38.414: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 19 16:04:38.414: INFO: 
  Logging pods the apiserver thinks is on node eixo7oojiese-3 before test
  Apr 19 16:04:38.433: INFO: kube-flannel-ds-qfg6v from kube-system started at 2024-04-19 16:04:29 +0000 UTC (1 container statuses recorded)
  Apr 19 16:04:38.433: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 19 16:04:38.433: INFO: kube-proxy-bf9lq from kube-system started at 2024-04-19 15:27:22 +0000 UTC (1 container statuses recorded)
  Apr 19 16:04:38.434: INFO: 	Container kube-proxy ready: true, restart count 1
  Apr 19 16:04:38.434: INFO: sonobuoy from sonobuoy started at 2024-04-19 15:39:14 +0000 UTC (1 container statuses recorded)
  Apr 19 16:04:38.434: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 19 16:04:38.435: INFO: sonobuoy-e2e-job-589bb66d96224712 from sonobuoy started at 2024-04-19 15:39:22 +0000 UTC (2 container statuses recorded)
  Apr 19 16:04:38.435: INFO: 	Container e2e ready: true, restart count 0
  Apr 19 16:04:38.435: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 19 16:04:38.435: INFO: sonobuoy-systemd-logs-daemon-set-b366af8c5db04861-j649g from sonobuoy started at 2024-04-19 15:39:22 +0000 UTC (2 container statuses recorded)
  Apr 19 16:04:38.436: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 19 16:04:38.436: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 04/19/24 16:04:38.436
  STEP: Explicitly delete pod here to free the resource it takes. @ 04/19/24 16:04:40.487
  STEP: Trying to apply a random label on the found node. @ 04/19/24 16:04:40.527
  STEP: verifying the node has the label kubernetes.io/e2e-3dc71e8d-070d-4d4d-b9a2-b2ef4016a879 95 @ 04/19/24 16:04:40.552
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 04/19/24 16:04:40.565
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.121.129 on the node which pod4 resides and expect not scheduled @ 04/19/24 16:04:42.603
  STEP: removing the label kubernetes.io/e2e-3dc71e8d-070d-4d4d-b9a2-b2ef4016a879 off the node eixo7oojiese-3 @ 04/19/24 16:09:42.631
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-3dc71e8d-070d-4d4d-b9a2-b2ef4016a879 @ 04/19/24 16:09:42.695
  Apr 19 16:09:42.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3594" for this suite. @ 04/19/24 16:09:42.739
â€¢ [304.499 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 04/19/24 16:09:42.759
  Apr 19 16:09:42.759: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename disruption @ 04/19/24 16:09:42.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:09:42.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:09:42.81
  STEP: Waiting for the pdb to be processed @ 04/19/24 16:09:42.833
  STEP: Updating PodDisruptionBudget status @ 04/19/24 16:09:44.852
  STEP: Waiting for all pods to be running @ 04/19/24 16:09:44.887
  Apr 19 16:09:44.908: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 04/19/24 16:09:46.929
  STEP: Waiting for the pdb to be processed @ 04/19/24 16:09:46.977
  STEP: Patching PodDisruptionBudget status @ 04/19/24 16:09:47.003
  STEP: Waiting for the pdb to be processed @ 04/19/24 16:09:47.032
  Apr 19 16:09:47.045: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4348" for this suite. @ 04/19/24 16:09:47.075
â€¢ [4.335 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 04/19/24 16:09:47.098
  Apr 19 16:09:47.098: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename services @ 04/19/24 16:09:47.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:09:47.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:09:47.156
  STEP: creating service endpoint-test2 in namespace services-3984 @ 04/19/24 16:09:47.165
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3984 to expose endpoints map[] @ 04/19/24 16:09:47.195
  Apr 19 16:09:47.207: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Apr 19 16:09:48.227: INFO: successfully validated that service endpoint-test2 in namespace services-3984 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3984 @ 04/19/24 16:09:48.227
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3984 to expose endpoints map[pod1:[80]] @ 04/19/24 16:09:50.292
  Apr 19 16:09:50.325: INFO: successfully validated that service endpoint-test2 in namespace services-3984 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 04/19/24 16:09:50.325
  Apr 19 16:09:50.325: INFO: Creating new exec pod
  Apr 19 16:09:53.381: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-3984 exec execpods9w54 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Apr 19 16:09:53.805: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 19 16:09:53.805: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 19 16:09:53.806: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-3984 exec execpods9w54 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.51.46 80'
  Apr 19 16:09:54.116: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.51.46 80\nConnection to 10.233.51.46 80 port [tcp/http] succeeded!\n"
  Apr 19 16:09:54.116: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-3984 @ 04/19/24 16:09:54.116
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3984 to expose endpoints map[pod1:[80] pod2:[80]] @ 04/19/24 16:09:56.176
  Apr 19 16:09:56.207: INFO: successfully validated that service endpoint-test2 in namespace services-3984 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 04/19/24 16:09:56.207
  Apr 19 16:09:57.209: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-3984 exec execpods9w54 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Apr 19 16:09:57.552: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 19 16:09:57.552: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 19 16:09:57.553: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-3984 exec execpods9w54 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.51.46 80'
  Apr 19 16:09:57.821: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.51.46 80\nConnection to 10.233.51.46 80 port [tcp/http] succeeded!\n"
  Apr 19 16:09:57.821: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3984 @ 04/19/24 16:09:57.821
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3984 to expose endpoints map[pod2:[80]] @ 04/19/24 16:09:57.85
  Apr 19 16:09:58.890: INFO: successfully validated that service endpoint-test2 in namespace services-3984 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 04/19/24 16:09:58.89
  Apr 19 16:09:59.892: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-3984 exec execpods9w54 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Apr 19 16:10:00.271: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Apr 19 16:10:00.271: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 19 16:10:00.272: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-3984 exec execpods9w54 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.51.46 80'
  Apr 19 16:10:00.615: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.51.46 80\nConnection to 10.233.51.46 80 port [tcp/http] succeeded!\n"
  Apr 19 16:10:00.615: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-3984 @ 04/19/24 16:10:00.615
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3984 to expose endpoints map[] @ 04/19/24 16:10:00.651
  Apr 19 16:10:01.713: INFO: successfully validated that service endpoint-test2 in namespace services-3984 exposes endpoints map[]
  Apr 19 16:10:01.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3984" for this suite. @ 04/19/24 16:10:01.768
â€¢ [14.683 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 04/19/24 16:10:01.782
  Apr 19 16:10:01.786: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename emptydir @ 04/19/24 16:10:01.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:10:01.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:10:01.818
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 04/19/24 16:10:01.826
  STEP: Saw pod success @ 04/19/24 16:10:05.886
  Apr 19 16:10:05.899: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-e0088ff2-6d27-45d5-a4d4-ae8e08c0f9c3 container test-container: <nil>
  STEP: delete the pod @ 04/19/24 16:10:05.945
  Apr 19 16:10:05.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9568" for this suite. @ 04/19/24 16:10:06.001
â€¢ [4.245 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 04/19/24 16:10:06.028
  Apr 19 16:10:06.028: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename replicaset @ 04/19/24 16:10:06.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:10:06.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:10:06.071
  STEP: Create a Replicaset @ 04/19/24 16:10:06.088
  STEP: Verify that the required pods have come up. @ 04/19/24 16:10:06.098
  Apr 19 16:10:06.109: INFO: Pod name sample-pod: Found 0 pods out of 1
  Apr 19 16:10:11.128: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/19/24 16:10:11.129
  STEP: Getting /status @ 04/19/24 16:10:11.129
  Apr 19 16:10:11.139: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 04/19/24 16:10:11.139
  Apr 19 16:10:11.160: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 04/19/24 16:10:11.16
  Apr 19 16:10:11.164: INFO: Observed &ReplicaSet event: ADDED
  Apr 19 16:10:11.165: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 19 16:10:11.165: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 19 16:10:11.166: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 19 16:10:11.167: INFO: Found replicaset test-rs in namespace replicaset-95 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 19 16:10:11.167: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 04/19/24 16:10:11.168
  Apr 19 16:10:11.168: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 19 16:10:11.186: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 04/19/24 16:10:11.186
  Apr 19 16:10:11.191: INFO: Observed &ReplicaSet event: ADDED
  Apr 19 16:10:11.191: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 19 16:10:11.192: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 19 16:10:11.193: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 19 16:10:11.193: INFO: Observed replicaset test-rs in namespace replicaset-95 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 19 16:10:11.195: INFO: Observed &ReplicaSet event: MODIFIED
  Apr 19 16:10:11.195: INFO: Found replicaset test-rs in namespace replicaset-95 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Apr 19 16:10:11.195: INFO: Replicaset test-rs has a patched status
  Apr 19 16:10:11.196: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-95" for this suite. @ 04/19/24 16:10:11.204
â€¢ [5.197 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 04/19/24 16:10:11.228
  Apr 19 16:10:11.229: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename secrets @ 04/19/24 16:10:11.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:10:11.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:10:11.282
  STEP: Creating secret with name s-test-opt-del-a7ce4142-c9c4-4d97-b945-34957d06b810 @ 04/19/24 16:10:11.299
  STEP: Creating secret with name s-test-opt-upd-ed8ab5a8-71e2-4234-8aa0-cc1ff7641d36 @ 04/19/24 16:10:11.31
  STEP: Creating the pod @ 04/19/24 16:10:11.319
  STEP: Deleting secret s-test-opt-del-a7ce4142-c9c4-4d97-b945-34957d06b810 @ 04/19/24 16:10:13.447
  STEP: Updating secret s-test-opt-upd-ed8ab5a8-71e2-4234-8aa0-cc1ff7641d36 @ 04/19/24 16:10:13.464
  STEP: Creating secret with name s-test-opt-create-5cf4a4d7-471c-4f8a-ba14-fe4f9359909e @ 04/19/24 16:10:13.482
  STEP: waiting to observe update in volume @ 04/19/24 16:10:13.501
  Apr 19 16:11:36.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-663" for this suite. @ 04/19/24 16:11:36.781
â€¢ [85.569 seconds]
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 04/19/24 16:11:36.799
  Apr 19 16:11:36.799: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename svcaccounts @ 04/19/24 16:11:36.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:11:36.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:11:36.849
  Apr 19 16:11:36.912: INFO: created pod pod-service-account-defaultsa
  Apr 19 16:11:36.913: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Apr 19 16:11:36.926: INFO: created pod pod-service-account-mountsa
  Apr 19 16:11:36.926: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Apr 19 16:11:36.949: INFO: created pod pod-service-account-nomountsa
  Apr 19 16:11:36.949: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Apr 19 16:11:36.966: INFO: created pod pod-service-account-defaultsa-mountspec
  Apr 19 16:11:36.967: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Apr 19 16:11:36.999: INFO: created pod pod-service-account-mountsa-mountspec
  Apr 19 16:11:36.999: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Apr 19 16:11:37.070: INFO: created pod pod-service-account-nomountsa-mountspec
  Apr 19 16:11:37.070: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Apr 19 16:11:37.115: INFO: created pod pod-service-account-defaultsa-nomountspec
  Apr 19 16:11:37.115: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Apr 19 16:11:37.168: INFO: created pod pod-service-account-mountsa-nomountspec
  Apr 19 16:11:37.169: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Apr 19 16:11:37.188: INFO: created pod pod-service-account-nomountsa-nomountspec
  Apr 19 16:11:37.188: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Apr 19 16:11:37.188: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2771" for this suite. @ 04/19/24 16:11:37.22
â€¢ [0.481 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 04/19/24 16:11:37.292
  Apr 19 16:11:37.292: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename replicaset @ 04/19/24 16:11:37.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:11:37.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:11:37.378
  Apr 19 16:11:37.468: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/19/24 16:11:37.468
  STEP: Scaling up "test-rs" replicaset  @ 04/19/24 16:11:39.544
  Apr 19 16:11:39.572: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 04/19/24 16:11:39.573
  Apr 19 16:11:39.598: INFO: observed ReplicaSet test-rs in namespace replicaset-6352 with ReadyReplicas 1, AvailableReplicas 1
  Apr 19 16:11:39.629: INFO: observed ReplicaSet test-rs in namespace replicaset-6352 with ReadyReplicas 1, AvailableReplicas 1
  Apr 19 16:11:39.688: INFO: observed ReplicaSet test-rs in namespace replicaset-6352 with ReadyReplicas 1, AvailableReplicas 1
  Apr 19 16:11:39.702: INFO: observed ReplicaSet test-rs in namespace replicaset-6352 with ReadyReplicas 1, AvailableReplicas 1
  Apr 19 16:11:40.642: INFO: observed ReplicaSet test-rs in namespace replicaset-6352 with ReadyReplicas 2, AvailableReplicas 2
  Apr 19 16:11:41.261: INFO: observed Replicaset test-rs in namespace replicaset-6352 with ReadyReplicas 3 found true
  Apr 19 16:11:41.261: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6352" for this suite. @ 04/19/24 16:11:41.281
â€¢ [4.007 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 04/19/24 16:11:41.311
  Apr 19 16:11:41.311: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename field-validation @ 04/19/24 16:11:41.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:11:41.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:11:41.365
  Apr 19 16:11:41.371: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  W0419 16:11:41.374209      14 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc006407530 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0419 16:11:44.158568      14 warnings.go:70] unknown field "alpha"
  W0419 16:11:44.158647      14 warnings.go:70] unknown field "beta"
  W0419 16:11:44.158666      14 warnings.go:70] unknown field "delta"
  W0419 16:11:44.158699      14 warnings.go:70] unknown field "epsilon"
  W0419 16:11:44.158727      14 warnings.go:70] unknown field "gamma"
  Apr 19 16:11:44.716: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1898" for this suite. @ 04/19/24 16:11:44.759
â€¢ [3.465 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 04/19/24 16:11:44.786
  Apr 19 16:11:44.786: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename gc @ 04/19/24 16:11:44.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:11:44.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:11:44.833
  STEP: create the rc @ 04/19/24 16:11:44.844
  W0419 16:11:44.859589      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/19/24 16:11:49.874
  STEP: wait for all pods to be garbage collected @ 04/19/24 16:11:49.89
  STEP: Gathering metrics @ 04/19/24 16:11:54.922
  Apr 19 16:11:55.156: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 19 16:11:55.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2357" for this suite. @ 04/19/24 16:11:55.169
â€¢ [10.399 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 04/19/24 16:11:55.187
  Apr 19 16:11:55.187: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename configmap @ 04/19/24 16:11:55.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:11:55.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:11:55.224
  STEP: Creating configMap with name cm-test-opt-del-e64875c3-f3ae-48ff-bdc6-aae11004eeb8 @ 04/19/24 16:11:55.238
  STEP: Creating configMap with name cm-test-opt-upd-ba90b20a-2e72-4ab4-9b2b-c139cdb6464c @ 04/19/24 16:11:55.246
  STEP: Creating the pod @ 04/19/24 16:11:55.252
  STEP: Deleting configmap cm-test-opt-del-e64875c3-f3ae-48ff-bdc6-aae11004eeb8 @ 04/19/24 16:11:57.36
  STEP: Updating configmap cm-test-opt-upd-ba90b20a-2e72-4ab4-9b2b-c139cdb6464c @ 04/19/24 16:11:57.38
  STEP: Creating configMap with name cm-test-opt-create-f0c84e04-a909-46ad-a5ed-6beac443083d @ 04/19/24 16:11:57.393
  STEP: waiting to observe update in volume @ 04/19/24 16:11:57.405
  Apr 19 16:13:10.432: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8312" for this suite. @ 04/19/24 16:13:10.451
â€¢ [75.282 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 04/19/24 16:13:10.472
  Apr 19 16:13:10.473: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename cronjob @ 04/19/24 16:13:10.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:13:10.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:13:10.518
  STEP: Creating a ReplaceConcurrent cronjob @ 04/19/24 16:13:10.526
  STEP: Ensuring a job is scheduled @ 04/19/24 16:13:10.545
  STEP: Ensuring exactly one is scheduled @ 04/19/24 16:14:00.56
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/19/24 16:14:00.57
  STEP: Ensuring the job is replaced with a new one @ 04/19/24 16:14:00.582
  STEP: Removing cronjob @ 04/19/24 16:15:00.591
  Apr 19 16:15:00.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7817" for this suite. @ 04/19/24 16:15:00.641
â€¢ [110.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 04/19/24 16:15:00.687
  Apr 19 16:15:00.687: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename downward-api @ 04/19/24 16:15:00.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:15:00.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:15:00.737
  STEP: Creating a pod to test downward api env vars @ 04/19/24 16:15:00.742
  STEP: Saw pod success @ 04/19/24 16:15:04.817
  Apr 19 16:15:04.828: INFO: Trying to get logs from node eixo7oojiese-3 pod downward-api-ee8bc59c-382d-40c3-a17a-751d25599d47 container dapi-container: <nil>
  STEP: delete the pod @ 04/19/24 16:15:04.87
  Apr 19 16:15:04.914: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4239" for this suite. @ 04/19/24 16:15:04.924
â€¢ [4.246 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 04/19/24 16:15:04.937
  Apr 19 16:15:04.937: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 16:15:04.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:15:04.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:15:04.972
  STEP: Creating a pod to test downward API volume plugin @ 04/19/24 16:15:04.98
  STEP: Saw pod success @ 04/19/24 16:15:09.026
  Apr 19 16:15:09.037: INFO: Trying to get logs from node eixo7oojiese-3 pod downwardapi-volume-155a4735-1803-4326-a5d7-86ad4bf49fe0 container client-container: <nil>
  STEP: delete the pod @ 04/19/24 16:15:09.065
  Apr 19 16:15:09.107: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-381" for this suite. @ 04/19/24 16:15:09.119
â€¢ [4.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 04/19/24 16:15:09.136
  Apr 19 16:15:09.136: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename replication-controller @ 04/19/24 16:15:09.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:15:09.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:15:09.178
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 04/19/24 16:15:09.184
  STEP: When a replication controller with a matching selector is created @ 04/19/24 16:15:11.241
  STEP: Then the orphan pod is adopted @ 04/19/24 16:15:11.257
  Apr 19 16:15:12.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8657" for this suite. @ 04/19/24 16:15:12.29
â€¢ [3.168 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 04/19/24 16:15:12.308
  Apr 19 16:15:12.308: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename emptydir @ 04/19/24 16:15:12.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:15:12.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:15:12.35
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/19/24 16:15:12.359
  STEP: Saw pod success @ 04/19/24 16:15:16.419
  Apr 19 16:15:16.431: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-08c32d84-fcf7-4cd1-8edc-9f45870affee container test-container: <nil>
  STEP: delete the pod @ 04/19/24 16:15:16.453
  Apr 19 16:15:16.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9363" for this suite. @ 04/19/24 16:15:16.511
â€¢ [4.222 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 04/19/24 16:15:16.532
  Apr 19 16:15:16.533: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename webhook @ 04/19/24 16:15:16.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:15:16.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:15:16.58
  STEP: Setting up server cert @ 04/19/24 16:15:16.639
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/19/24 16:15:18.748
  STEP: Deploying the webhook pod @ 04/19/24 16:15:18.771
  STEP: Wait for the deployment to be ready @ 04/19/24 16:15:18.804
  Apr 19 16:15:18.840: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/19/24 16:15:20.861
  STEP: Verifying the service has paired with the endpoint @ 04/19/24 16:15:20.891
  Apr 19 16:15:21.892: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 04/19/24 16:15:21.907
  STEP: create a configmap that should be updated by the webhook @ 04/19/24 16:15:21.952
  Apr 19 16:15:21.991: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7316" for this suite. @ 04/19/24 16:15:22.119
  STEP: Destroying namespace "webhook-markers-9100" for this suite. @ 04/19/24 16:15:22.14
â€¢ [5.623 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 04/19/24 16:15:22.156
  Apr 19 16:15:22.156: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename gc @ 04/19/24 16:15:22.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:15:22.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:15:22.197
  STEP: create the rc1 @ 04/19/24 16:15:22.213
  STEP: create the rc2 @ 04/19/24 16:15:22.225
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 04/19/24 16:15:28.261
  STEP: delete the rc simpletest-rc-to-be-deleted @ 04/19/24 16:15:29.601
  STEP: wait for the rc to be deleted @ 04/19/24 16:15:29.655
  Apr 19 16:15:34.774: INFO: 66 pods remaining
  Apr 19 16:15:34.774: INFO: 66 pods has nil DeletionTimestamp
  Apr 19 16:15:34.775: INFO: 
  STEP: Gathering metrics @ 04/19/24 16:15:39.69
  Apr 19 16:15:39.920: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 19 16:15:39.920: INFO: Deleting pod "simpletest-rc-to-be-deleted-22fjt" in namespace "gc-6725"
  Apr 19 16:15:39.945: INFO: Deleting pod "simpletest-rc-to-be-deleted-2f5cq" in namespace "gc-6725"
  Apr 19 16:15:39.995: INFO: Deleting pod "simpletest-rc-to-be-deleted-2lwwk" in namespace "gc-6725"
  Apr 19 16:15:40.067: INFO: Deleting pod "simpletest-rc-to-be-deleted-2n7tj" in namespace "gc-6725"
  Apr 19 16:15:40.113: INFO: Deleting pod "simpletest-rc-to-be-deleted-2rjq4" in namespace "gc-6725"
  Apr 19 16:15:40.183: INFO: Deleting pod "simpletest-rc-to-be-deleted-2zxm7" in namespace "gc-6725"
  Apr 19 16:15:40.207: INFO: Deleting pod "simpletest-rc-to-be-deleted-4llpm" in namespace "gc-6725"
  Apr 19 16:15:40.271: INFO: Deleting pod "simpletest-rc-to-be-deleted-4ss4k" in namespace "gc-6725"
  Apr 19 16:15:40.303: INFO: Deleting pod "simpletest-rc-to-be-deleted-4vzmm" in namespace "gc-6725"
  Apr 19 16:15:40.344: INFO: Deleting pod "simpletest-rc-to-be-deleted-5fq7b" in namespace "gc-6725"
  Apr 19 16:15:40.431: INFO: Deleting pod "simpletest-rc-to-be-deleted-5l9l5" in namespace "gc-6725"
  Apr 19 16:15:40.464: INFO: Deleting pod "simpletest-rc-to-be-deleted-655mx" in namespace "gc-6725"
  Apr 19 16:15:40.485: INFO: Deleting pod "simpletest-rc-to-be-deleted-6mt8j" in namespace "gc-6725"
  Apr 19 16:15:40.530: INFO: Deleting pod "simpletest-rc-to-be-deleted-6nhxq" in namespace "gc-6725"
  Apr 19 16:15:40.568: INFO: Deleting pod "simpletest-rc-to-be-deleted-6npbn" in namespace "gc-6725"
  Apr 19 16:15:40.615: INFO: Deleting pod "simpletest-rc-to-be-deleted-6ns9x" in namespace "gc-6725"
  Apr 19 16:15:40.648: INFO: Deleting pod "simpletest-rc-to-be-deleted-6tbb5" in namespace "gc-6725"
  Apr 19 16:15:40.710: INFO: Deleting pod "simpletest-rc-to-be-deleted-6w66r" in namespace "gc-6725"
  Apr 19 16:15:40.741: INFO: Deleting pod "simpletest-rc-to-be-deleted-7lthk" in namespace "gc-6725"
  Apr 19 16:15:40.769: INFO: Deleting pod "simpletest-rc-to-be-deleted-7nsk8" in namespace "gc-6725"
  Apr 19 16:15:40.808: INFO: Deleting pod "simpletest-rc-to-be-deleted-7tw55" in namespace "gc-6725"
  Apr 19 16:15:40.877: INFO: Deleting pod "simpletest-rc-to-be-deleted-7wb5w" in namespace "gc-6725"
  Apr 19 16:15:40.941: INFO: Deleting pod "simpletest-rc-to-be-deleted-855cm" in namespace "gc-6725"
  Apr 19 16:15:41.050: INFO: Deleting pod "simpletest-rc-to-be-deleted-92hbp" in namespace "gc-6725"
  Apr 19 16:15:41.201: INFO: Deleting pod "simpletest-rc-to-be-deleted-945lk" in namespace "gc-6725"
  Apr 19 16:15:41.281: INFO: Deleting pod "simpletest-rc-to-be-deleted-997g8" in namespace "gc-6725"
  Apr 19 16:15:41.318: INFO: Deleting pod "simpletest-rc-to-be-deleted-9dwhr" in namespace "gc-6725"
  Apr 19 16:15:41.369: INFO: Deleting pod "simpletest-rc-to-be-deleted-b8xg5" in namespace "gc-6725"
  Apr 19 16:15:41.418: INFO: Deleting pod "simpletest-rc-to-be-deleted-bhvw5" in namespace "gc-6725"
  Apr 19 16:15:41.447: INFO: Deleting pod "simpletest-rc-to-be-deleted-bj9p8" in namespace "gc-6725"
  Apr 19 16:15:41.475: INFO: Deleting pod "simpletest-rc-to-be-deleted-blwst" in namespace "gc-6725"
  Apr 19 16:15:41.527: INFO: Deleting pod "simpletest-rc-to-be-deleted-brcrm" in namespace "gc-6725"
  Apr 19 16:15:41.586: INFO: Deleting pod "simpletest-rc-to-be-deleted-btdt7" in namespace "gc-6725"
  Apr 19 16:15:41.689: INFO: Deleting pod "simpletest-rc-to-be-deleted-c9jv4" in namespace "gc-6725"
  Apr 19 16:15:41.798: INFO: Deleting pod "simpletest-rc-to-be-deleted-cbjws" in namespace "gc-6725"
  Apr 19 16:15:41.862: INFO: Deleting pod "simpletest-rc-to-be-deleted-cgnj2" in namespace "gc-6725"
  Apr 19 16:15:41.908: INFO: Deleting pod "simpletest-rc-to-be-deleted-djp4z" in namespace "gc-6725"
  Apr 19 16:15:41.944: INFO: Deleting pod "simpletest-rc-to-be-deleted-dlxqs" in namespace "gc-6725"
  Apr 19 16:15:41.989: INFO: Deleting pod "simpletest-rc-to-be-deleted-flj4z" in namespace "gc-6725"
  Apr 19 16:15:42.057: INFO: Deleting pod "simpletest-rc-to-be-deleted-frqbz" in namespace "gc-6725"
  Apr 19 16:15:42.228: INFO: Deleting pod "simpletest-rc-to-be-deleted-fw2bf" in namespace "gc-6725"
  Apr 19 16:15:42.280: INFO: Deleting pod "simpletest-rc-to-be-deleted-fwsxj" in namespace "gc-6725"
  Apr 19 16:15:42.313: INFO: Deleting pod "simpletest-rc-to-be-deleted-glxpt" in namespace "gc-6725"
  Apr 19 16:15:42.354: INFO: Deleting pod "simpletest-rc-to-be-deleted-h5dsp" in namespace "gc-6725"
  Apr 19 16:15:42.409: INFO: Deleting pod "simpletest-rc-to-be-deleted-j6mv8" in namespace "gc-6725"
  Apr 19 16:15:42.445: INFO: Deleting pod "simpletest-rc-to-be-deleted-js5k9" in namespace "gc-6725"
  Apr 19 16:15:42.476: INFO: Deleting pod "simpletest-rc-to-be-deleted-jvzzk" in namespace "gc-6725"
  Apr 19 16:15:42.513: INFO: Deleting pod "simpletest-rc-to-be-deleted-jzc6z" in namespace "gc-6725"
  Apr 19 16:15:42.536: INFO: Deleting pod "simpletest-rc-to-be-deleted-kdbml" in namespace "gc-6725"
  Apr 19 16:15:42.568: INFO: Deleting pod "simpletest-rc-to-be-deleted-kf729" in namespace "gc-6725"
  Apr 19 16:15:42.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6725" for this suite. @ 04/19/24 16:15:42.623
â€¢ [20.513 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 04/19/24 16:15:42.676
  Apr 19 16:15:42.676: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename pod-network-test @ 04/19/24 16:15:42.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:15:42.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:15:42.723
  STEP: Performing setup for networking test in namespace pod-network-test-6969 @ 04/19/24 16:15:42.727
  STEP: creating a selector @ 04/19/24 16:15:42.727
  STEP: Creating the service pods in kubernetes @ 04/19/24 16:15:42.727
  Apr 19 16:15:42.727: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/19/24 16:16:05.102
  Apr 19 16:16:07.230: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 19 16:16:07.230: INFO: Going to poll 10.233.64.69 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 19 16:16:07.238: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.64.69 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6969 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 16:16:07.239: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 16:16:07.242: INFO: ExecWithOptions: Clientset creation
  Apr 19 16:16:07.242: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6969/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.64.69+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 19 16:16:08.421: INFO: Found all 1 expected endpoints: [netserver-0]
  Apr 19 16:16:08.421: INFO: Going to poll 10.233.65.63 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 19 16:16:08.430: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.65.63 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6969 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 16:16:08.431: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 16:16:08.433: INFO: ExecWithOptions: Clientset creation
  Apr 19 16:16:08.433: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6969/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.65.63+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 19 16:16:09.652: INFO: Found all 1 expected endpoints: [netserver-1]
  Apr 19 16:16:09.652: INFO: Going to poll 10.233.66.174 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Apr 19 16:16:09.660: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.66.174 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6969 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 16:16:09.661: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 16:16:09.663: INFO: ExecWithOptions: Clientset creation
  Apr 19 16:16:09.663: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6969/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.66.174+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 19 16:16:10.831: INFO: Found all 1 expected endpoints: [netserver-2]
  Apr 19 16:16:10.832: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6969" for this suite. @ 04/19/24 16:16:10.853
â€¢ [28.202 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 04/19/24 16:16:10.887
  Apr 19 16:16:10.887: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename sched-pred @ 04/19/24 16:16:10.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:16:10.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:16:10.959
  Apr 19 16:16:10.967: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 19 16:16:10.988: INFO: Waiting for terminating namespaces to be deleted...
  Apr 19 16:16:10.993: INFO: 
  Logging pods the apiserver thinks is on node eixo7oojiese-1 before test
  Apr 19 16:16:11.013: INFO: coredns-5dd5756b68-5bdmv from kube-system started at 2024-04-19 16:04:04 +0000 UTC (1 container statuses recorded)
  Apr 19 16:16:11.013: INFO: 	Container coredns ready: true, restart count 0
  Apr 19 16:16:11.014: INFO: kube-addon-manager-eixo7oojiese-1 from kube-system started at 2024-04-19 15:38:19 +0000 UTC (1 container statuses recorded)
  Apr 19 16:16:11.014: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Apr 19 16:16:11.014: INFO: kube-apiserver-eixo7oojiese-1 from kube-system started at 2024-04-19 15:38:19 +0000 UTC (1 container statuses recorded)
  Apr 19 16:16:11.015: INFO: 	Container kube-apiserver ready: true, restart count 1
  Apr 19 16:16:11.015: INFO: kube-controller-manager-eixo7oojiese-1 from kube-system started at 2024-04-19 15:38:19 +0000 UTC (1 container statuses recorded)
  Apr 19 16:16:11.016: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Apr 19 16:16:11.016: INFO: kube-flannel-ds-w6gb8 from kube-system started at 2024-04-19 15:31:52 +0000 UTC (1 container statuses recorded)
  Apr 19 16:16:11.016: INFO: 	Container kube-flannel ready: true, restart count 1
  Apr 19 16:16:11.016: INFO: kube-proxy-2xwhq from kube-system started at 2024-04-19 15:26:10 +0000 UTC (1 container statuses recorded)
  Apr 19 16:16:11.016: INFO: 	Container kube-proxy ready: true, restart count 1
  Apr 19 16:16:11.016: INFO: kube-scheduler-eixo7oojiese-1 from kube-system started at 2024-04-19 15:38:19 +0000 UTC (1 container statuses recorded)
  Apr 19 16:16:11.016: INFO: 	Container kube-scheduler ready: true, restart count 1
  Apr 19 16:16:11.016: INFO: netserver-0 from pod-network-test-6969 started at 2024-04-19 16:15:42 +0000 UTC (1 container statuses recorded)
  Apr 19 16:16:11.016: INFO: 	Container webserver ready: true, restart count 0
  Apr 19 16:16:11.016: INFO: sonobuoy-systemd-logs-daemon-set-b366af8c5db04861-m7ssp from sonobuoy started at 2024-04-19 15:39:22 +0000 UTC (2 container statuses recorded)
  Apr 19 16:16:11.016: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 19 16:16:11.016: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 19 16:16:11.016: INFO: 
  Logging pods the apiserver thinks is on node eixo7oojiese-2 before test
  Apr 19 16:16:11.039: INFO: coredns-5dd5756b68-4mqrq from kube-system started at 2024-04-19 16:04:04 +0000 UTC (1 container statuses recorded)
  Apr 19 16:16:11.039: INFO: 	Container coredns ready: true, restart count 0
  Apr 19 16:16:11.039: INFO: kube-addon-manager-eixo7oojiese-2 from kube-system started at 2024-04-19 15:33:54 +0000 UTC (1 container statuses recorded)
  Apr 19 16:16:11.039: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Apr 19 16:16:11.039: INFO: kube-apiserver-eixo7oojiese-2 from kube-system started at 2024-04-19 15:33:54 +0000 UTC (1 container statuses recorded)
  Apr 19 16:16:11.039: INFO: 	Container kube-apiserver ready: true, restart count 1
  Apr 19 16:16:11.039: INFO: kube-controller-manager-eixo7oojiese-2 from kube-system started at 2024-04-19 15:33:54 +0000 UTC (1 container statuses recorded)
  Apr 19 16:16:11.039: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Apr 19 16:16:11.039: INFO: kube-flannel-ds-pcsbj from kube-system started at 2024-04-19 15:31:52 +0000 UTC (1 container statuses recorded)
  Apr 19 16:16:11.039: INFO: 	Container kube-flannel ready: true, restart count 1
  Apr 19 16:16:11.039: INFO: kube-proxy-g7s86 from kube-system started at 2024-04-19 15:26:58 +0000 UTC (1 container statuses recorded)
  Apr 19 16:16:11.039: INFO: 	Container kube-proxy ready: true, restart count 1
  Apr 19 16:16:11.039: INFO: kube-scheduler-eixo7oojiese-2 from kube-system started at 2024-04-19 15:33:54 +0000 UTC (1 container statuses recorded)
  Apr 19 16:16:11.039: INFO: 	Container kube-scheduler ready: true, restart count 1
  Apr 19 16:16:11.040: INFO: netserver-1 from pod-network-test-6969 started at 2024-04-19 16:15:42 +0000 UTC (1 container statuses recorded)
  Apr 19 16:16:11.040: INFO: 	Container webserver ready: true, restart count 0
  Apr 19 16:16:11.040: INFO: sonobuoy-systemd-logs-daemon-set-b366af8c5db04861-wh5lb from sonobuoy started at 2024-04-19 15:39:22 +0000 UTC (2 container statuses recorded)
  Apr 19 16:16:11.040: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 19 16:16:11.040: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 19 16:16:11.040: INFO: 
  Logging pods the apiserver thinks is on node eixo7oojiese-3 before test
  Apr 19 16:16:11.055: INFO: kube-flannel-ds-qfg6v from kube-system started at 2024-04-19 16:04:29 +0000 UTC (1 container statuses recorded)
  Apr 19 16:16:11.055: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 19 16:16:11.056: INFO: kube-proxy-bf9lq from kube-system started at 2024-04-19 15:27:22 +0000 UTC (1 container statuses recorded)
  Apr 19 16:16:11.056: INFO: 	Container kube-proxy ready: true, restart count 1
  Apr 19 16:16:11.057: INFO: host-test-container-pod from pod-network-test-6969 started at 2024-04-19 16:16:05 +0000 UTC (1 container statuses recorded)
  Apr 19 16:16:11.057: INFO: 	Container agnhost-container ready: true, restart count 0
  Apr 19 16:16:11.057: INFO: netserver-2 from pod-network-test-6969 started at 2024-04-19 16:15:42 +0000 UTC (1 container statuses recorded)
  Apr 19 16:16:11.058: INFO: 	Container webserver ready: true, restart count 0
  Apr 19 16:16:11.058: INFO: test-container-pod from pod-network-test-6969 started at 2024-04-19 16:16:05 +0000 UTC (1 container statuses recorded)
  Apr 19 16:16:11.058: INFO: 	Container webserver ready: true, restart count 0
  Apr 19 16:16:11.059: INFO: sonobuoy from sonobuoy started at 2024-04-19 15:39:14 +0000 UTC (1 container statuses recorded)
  Apr 19 16:16:11.059: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 19 16:16:11.059: INFO: sonobuoy-e2e-job-589bb66d96224712 from sonobuoy started at 2024-04-19 15:39:22 +0000 UTC (2 container statuses recorded)
  Apr 19 16:16:11.060: INFO: 	Container e2e ready: true, restart count 0
  Apr 19 16:16:11.061: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 19 16:16:11.061: INFO: sonobuoy-systemd-logs-daemon-set-b366af8c5db04861-j649g from sonobuoy started at 2024-04-19 15:39:22 +0000 UTC (2 container statuses recorded)
  Apr 19 16:16:11.062: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 19 16:16:11.062: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node eixo7oojiese-1 @ 04/19/24 16:16:11.112
  STEP: verifying the node has the label node eixo7oojiese-2 @ 04/19/24 16:16:11.141
  STEP: verifying the node has the label node eixo7oojiese-3 @ 04/19/24 16:16:11.167
  Apr 19 16:16:11.209: INFO: Pod coredns-5dd5756b68-4mqrq requesting resource cpu=100m on Node eixo7oojiese-2
  Apr 19 16:16:11.212: INFO: Pod coredns-5dd5756b68-5bdmv requesting resource cpu=100m on Node eixo7oojiese-1
  Apr 19 16:16:11.212: INFO: Pod kube-addon-manager-eixo7oojiese-1 requesting resource cpu=5m on Node eixo7oojiese-1
  Apr 19 16:16:11.212: INFO: Pod kube-addon-manager-eixo7oojiese-2 requesting resource cpu=5m on Node eixo7oojiese-2
  Apr 19 16:16:11.212: INFO: Pod kube-apiserver-eixo7oojiese-1 requesting resource cpu=250m on Node eixo7oojiese-1
  Apr 19 16:16:11.213: INFO: Pod kube-apiserver-eixo7oojiese-2 requesting resource cpu=250m on Node eixo7oojiese-2
  Apr 19 16:16:11.215: INFO: Pod kube-controller-manager-eixo7oojiese-1 requesting resource cpu=200m on Node eixo7oojiese-1
  Apr 19 16:16:11.216: INFO: Pod kube-controller-manager-eixo7oojiese-2 requesting resource cpu=200m on Node eixo7oojiese-2
  Apr 19 16:16:11.216: INFO: Pod kube-flannel-ds-pcsbj requesting resource cpu=100m on Node eixo7oojiese-2
  Apr 19 16:16:11.216: INFO: Pod kube-flannel-ds-qfg6v requesting resource cpu=100m on Node eixo7oojiese-3
  Apr 19 16:16:11.217: INFO: Pod kube-flannel-ds-w6gb8 requesting resource cpu=100m on Node eixo7oojiese-1
  Apr 19 16:16:11.217: INFO: Pod kube-proxy-2xwhq requesting resource cpu=0m on Node eixo7oojiese-1
  Apr 19 16:16:11.217: INFO: Pod kube-proxy-bf9lq requesting resource cpu=0m on Node eixo7oojiese-3
  Apr 19 16:16:11.218: INFO: Pod kube-proxy-g7s86 requesting resource cpu=0m on Node eixo7oojiese-2
  Apr 19 16:16:11.218: INFO: Pod kube-scheduler-eixo7oojiese-1 requesting resource cpu=100m on Node eixo7oojiese-1
  Apr 19 16:16:11.220: INFO: Pod kube-scheduler-eixo7oojiese-2 requesting resource cpu=100m on Node eixo7oojiese-2
  Apr 19 16:16:11.220: INFO: Pod host-test-container-pod requesting resource cpu=0m on Node eixo7oojiese-3
  Apr 19 16:16:11.221: INFO: Pod netserver-0 requesting resource cpu=0m on Node eixo7oojiese-1
  Apr 19 16:16:11.221: INFO: Pod netserver-1 requesting resource cpu=0m on Node eixo7oojiese-2
  Apr 19 16:16:11.221: INFO: Pod netserver-2 requesting resource cpu=0m on Node eixo7oojiese-3
  Apr 19 16:16:11.222: INFO: Pod test-container-pod requesting resource cpu=0m on Node eixo7oojiese-3
  Apr 19 16:16:11.222: INFO: Pod sonobuoy requesting resource cpu=0m on Node eixo7oojiese-3
  Apr 19 16:16:11.223: INFO: Pod sonobuoy-e2e-job-589bb66d96224712 requesting resource cpu=0m on Node eixo7oojiese-3
  Apr 19 16:16:11.223: INFO: Pod sonobuoy-systemd-logs-daemon-set-b366af8c5db04861-j649g requesting resource cpu=0m on Node eixo7oojiese-3
  Apr 19 16:16:11.223: INFO: Pod sonobuoy-systemd-logs-daemon-set-b366af8c5db04861-m7ssp requesting resource cpu=0m on Node eixo7oojiese-1
  Apr 19 16:16:11.224: INFO: Pod sonobuoy-systemd-logs-daemon-set-b366af8c5db04861-wh5lb requesting resource cpu=0m on Node eixo7oojiese-2
  STEP: Starting Pods to consume most of the cluster CPU. @ 04/19/24 16:16:11.224
  Apr 19 16:16:11.225: INFO: Creating a pod which consumes cpu=591m on Node eixo7oojiese-1
  Apr 19 16:16:11.242: INFO: Creating a pod which consumes cpu=591m on Node eixo7oojiese-2
  Apr 19 16:16:11.269: INFO: Creating a pod which consumes cpu=1050m on Node eixo7oojiese-3
  STEP: Creating another pod that requires unavailable amount of CPU. @ 04/19/24 16:16:15.366
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0be8d411-8b40-4c60-8ad0-3549447886e5.17c7ba9e15c94eda], Reason = [Scheduled], Message = [Successfully assigned sched-pred-558/filler-pod-0be8d411-8b40-4c60-8ad0-3549447886e5 to eixo7oojiese-3] @ 04/19/24 16:16:15.378
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0be8d411-8b40-4c60-8ad0-3549447886e5.17c7ba9e322ebd98], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/19/24 16:16:15.379
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0be8d411-8b40-4c60-8ad0-3549447886e5.17c7ba9e3c6b2201], Reason = [Created], Message = [Created container filler-pod-0be8d411-8b40-4c60-8ad0-3549447886e5] @ 04/19/24 16:16:15.38
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-0be8d411-8b40-4c60-8ad0-3549447886e5.17c7ba9e3eea174b], Reason = [Started], Message = [Started container filler-pod-0be8d411-8b40-4c60-8ad0-3549447886e5] @ 04/19/24 16:16:15.381
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-18c74082-918a-4573-89c3-bfe6e408f796.17c7ba9e116e99fd], Reason = [Scheduled], Message = [Successfully assigned sched-pred-558/filler-pod-18c74082-918a-4573-89c3-bfe6e408f796 to eixo7oojiese-2] @ 04/19/24 16:16:15.382
  STEP: Considering event: 
  Type = [Warning], Name = [filler-pod-18c74082-918a-4573-89c3-bfe6e408f796.17c7ba9e5959c6cd], Reason = [FailedMount], Message = [MountVolume.SetUp failed for volume "kube-api-access-shw85" : failed to sync configmap cache: timed out waiting for the condition] @ 04/19/24 16:16:15.383
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-18c74082-918a-4573-89c3-bfe6e408f796.17c7ba9e85ac2bc1], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/19/24 16:16:15.383
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-18c74082-918a-4573-89c3-bfe6e408f796.17c7ba9e919cc076], Reason = [Created], Message = [Created container filler-pod-18c74082-918a-4573-89c3-bfe6e408f796] @ 04/19/24 16:16:15.384
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-18c74082-918a-4573-89c3-bfe6e408f796.17c7ba9e93bc860f], Reason = [Started], Message = [Started container filler-pod-18c74082-918a-4573-89c3-bfe6e408f796] @ 04/19/24 16:16:15.385
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-634e16b4-f935-46d1-bc92-5f69fb70b3d5.17c7ba9e0f12ff88], Reason = [Scheduled], Message = [Successfully assigned sched-pred-558/filler-pod-634e16b4-f935-46d1-bc92-5f69fb70b3d5 to eixo7oojiese-1] @ 04/19/24 16:16:15.385
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-634e16b4-f935-46d1-bc92-5f69fb70b3d5.17c7ba9e30c6edaf], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 04/19/24 16:16:15.386
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-634e16b4-f935-46d1-bc92-5f69fb70b3d5.17c7ba9e390eb8b0], Reason = [Created], Message = [Created container filler-pod-634e16b4-f935-46d1-bc92-5f69fb70b3d5] @ 04/19/24 16:16:15.387
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-634e16b4-f935-46d1-bc92-5f69fb70b3d5.17c7ba9e3bd16d02], Reason = [Started], Message = [Started container filler-pod-634e16b4-f935-46d1-bc92-5f69fb70b3d5] @ 04/19/24 16:16:15.389
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17c7ba9f05ce2351], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod..] @ 04/19/24 16:16:15.414
  STEP: removing the label node off the node eixo7oojiese-2 @ 04/19/24 16:16:16.414
  STEP: verifying the node doesn't have the label node @ 04/19/24 16:16:16.44
  STEP: removing the label node off the node eixo7oojiese-3 @ 04/19/24 16:16:16.454
  STEP: verifying the node doesn't have the label node @ 04/19/24 16:16:16.493
  STEP: removing the label node off the node eixo7oojiese-1 @ 04/19/24 16:16:16.501
  STEP: verifying the node doesn't have the label node @ 04/19/24 16:16:16.546
  Apr 19 16:16:16.561: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-558" for this suite. @ 04/19/24 16:16:16.573
â€¢ [5.706 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 04/19/24 16:16:16.61
  Apr 19 16:16:16.610: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename podtemplate @ 04/19/24 16:16:16.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:16:16.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:16:16.687
  STEP: Create a pod template @ 04/19/24 16:16:16.694
  STEP: Replace a pod template @ 04/19/24 16:16:16.709
  Apr 19 16:16:16.746: INFO: Found updated podtemplate annotation: "true"

  Apr 19 16:16:16.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2721" for this suite. @ 04/19/24 16:16:16.757
â€¢ [0.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 04/19/24 16:16:16.81
  Apr 19 16:16:16.810: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename kubectl @ 04/19/24 16:16:16.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:16:16.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:16:16.868
  Apr 19 16:16:16.879: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-839 create -f -'
  Apr 19 16:16:17.594: INFO: stderr: ""
  Apr 19 16:16:17.594: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Apr 19 16:16:17.594: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-839 create -f -'
  Apr 19 16:16:18.189: INFO: stderr: ""
  Apr 19 16:16:18.189: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/19/24 16:16:18.189
  Apr 19 16:16:19.198: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 19 16:16:19.199: INFO: Found 1 / 1
  Apr 19 16:16:19.199: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Apr 19 16:16:19.207: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 19 16:16:19.207: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 19 16:16:19.208: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-839 describe pod agnhost-primary-2tjgp'
  Apr 19 16:16:19.435: INFO: stderr: ""
  Apr 19 16:16:19.435: INFO: stdout: "Name:             agnhost-primary-2tjgp\nNamespace:        kubectl-839\nPriority:         0\nService Account:  default\nNode:             eixo7oojiese-3/192.168.121.129\nStart Time:       Fri, 19 Apr 2024 16:16:17 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.233.66.177\nIPs:\n  IP:           10.233.66.177\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   cri-o://f1350f629e12d2558e01ea3c2defe8c73badfa671e582bbda0e6bc57c9cd6c25\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Fri, 19 Apr 2024 16:16:18 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-j2zn8 (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-j2zn8:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-839/agnhost-primary-2tjgp to eixo7oojiese-3\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Apr 19 16:16:19.436: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-839 describe rc agnhost-primary'
  Apr 19 16:16:19.638: INFO: stderr: ""
  Apr 19 16:16:19.638: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-839\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-2tjgp\n"
  Apr 19 16:16:19.638: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-839 describe service agnhost-primary'
  Apr 19 16:16:19.841: INFO: stderr: ""
  Apr 19 16:16:19.841: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-839\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.233.23.36\nIPs:               10.233.23.36\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.233.66.177:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Apr 19 16:16:19.848: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-839 describe node eixo7oojiese-1'
  Apr 19 16:16:20.142: INFO: stderr: ""
  Apr 19 16:16:20.142: INFO: stdout: "Name:               eixo7oojiese-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=eixo7oojiese-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"de:fd:17:c3:4f:6e\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 192.168.121.83\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/crio/crio.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Fri, 19 Apr 2024 15:25:52 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  eixo7oojiese-1\n  AcquireTime:     <unset>\n  RenewTime:       Fri, 19 Apr 2024 16:16:16 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Fri, 19 Apr 2024 15:39:11 +0000   Fri, 19 Apr 2024 15:39:11 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Fri, 19 Apr 2024 16:11:57 +0000   Fri, 19 Apr 2024 15:38:45 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Fri, 19 Apr 2024 16:11:57 +0000   Fri, 19 Apr 2024 15:38:45 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Fri, 19 Apr 2024 16:11:57 +0000   Fri, 19 Apr 2024 15:38:45 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Fri, 19 Apr 2024 16:11:57 +0000   Fri, 19 Apr 2024 15:38:45 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  192.168.121.83\n  Hostname:    eixo7oojiese-1\nCapacity:\n  cpu:                2\n  ephemeral-storage:  115008636Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8123560Ki\n  pods:               110\nAllocatable:\n  cpu:                1600m\n  ephemeral-storage:  111880401014\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3273896Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 1c6ca97551f844c89b44f9174eb973bd\n  System UUID:                1c6ca975-51f8-44c8-9b44-f9174eb973bd\n  Boot ID:                    fdab4417-018e-40d1-be5c-3a18e2b447c5\n  Kernel Version:             6.5.0-28-generic\n  OS Image:                   Ubuntu 22.04.4 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  cri-o://1.28.4\n  Kubelet Version:            v1.28.9\n  Kube-Proxy Version:         v1.28.9\nPodCIDR:                      10.233.64.0/24\nPodCIDRs:                     10.233.64.0/24\nNon-terminated Pods:          (9 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 coredns-5dd5756b68-5bdmv                                   100m (6%)     0 (0%)      70Mi (2%)        170Mi (5%)     12m\n  kube-system                 kube-addon-manager-eixo7oojiese-1                          5m (0%)       0 (0%)      50Mi (1%)        0 (0%)         44m\n  kube-system                 kube-apiserver-eixo7oojiese-1                              250m (15%)    0 (0%)      0 (0%)           0 (0%)         50m\n  kube-system                 kube-controller-manager-eixo7oojiese-1                     200m (12%)    0 (0%)      0 (0%)           0 (0%)         50m\n  kube-system                 kube-flannel-ds-w6gb8                                      100m (6%)     0 (0%)      50Mi (1%)        0 (0%)         44m\n  kube-system                 kube-proxy-2xwhq                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         50m\n  kube-system                 kube-scheduler-eixo7oojiese-1                              100m (6%)     0 (0%)      0 (0%)           0 (0%)         50m\n  sched-pred-558              filler-pod-634e16b4-f935-46d1-bc92-5f69fb70b3d5            591m (36%)    591m (36%)  0 (0%)           0 (0%)         9s\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-b366af8c5db04861-m7ssp    0 (0%)        0 (0%)      0 (0%)           0 (0%)         36m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests     Limits\n  --------           --------     ------\n  cpu                1346m (84%)  591m (36%)\n  memory             170Mi (5%)   170Mi (5%)\n  ephemeral-storage  0 (0%)       0 (0%)\n  hugepages-1Gi      0 (0%)       0 (0%)\n  hugepages-2Mi      0 (0%)       0 (0%)\nEvents:\n  Type    Reason                   Age                From             Message\n  ----    ------                   ----               ----             -------\n  Normal  Starting                 50m                kube-proxy       \n  Normal  Starting                 37m                kube-proxy       \n  Normal  NodeAllocatableEnforced  50m                kubelet          Updated Node Allocatable limit across pods\n  Normal  NodeHasNoDiskPressure    50m (x8 over 50m)  kubelet          Node eixo7oojiese-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientMemory  50m (x8 over 50m)  kubelet          Node eixo7oojiese-1 status is now: NodeHasSufficientMemory\n  Normal  NodeHasSufficientPID     50m (x7 over 50m)  kubelet          Node eixo7oojiese-1 status is now: NodeHasSufficientPID\n  Normal  NodeHasNoDiskPressure    50m                kubelet          Node eixo7oojiese-1 status is now: NodeHasNoDiskPressure\n  Normal  Starting                 50m                kubelet          Starting kubelet.\n  Normal  NodeHasSufficientMemory  50m                kubelet          Node eixo7oojiese-1 status is now: NodeHasSufficientMemory\n  Normal  NodeHasSufficientPID     50m                kubelet          Node eixo7oojiese-1 status is now: NodeHasSufficientPID\n  Normal  NodeAllocatableEnforced  50m                kubelet          Updated Node Allocatable limit across pods\n  Normal  RegisteredNode           50m                node-controller  Node eixo7oojiese-1 event: Registered Node eixo7oojiese-1 in Controller\n  Normal  NodeHasSufficientMemory  49m                kubelet          Node eixo7oojiese-1 status is now: NodeHasSufficientMemory\n  Normal  Starting                 49m                kubelet          Starting kubelet.\n  Normal  NodeHasNoDiskPressure    49m                kubelet          Node eixo7oojiese-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     49m                kubelet          Node eixo7oojiese-1 status is now: NodeHasSufficientPID\n  Normal  NodeAllocatableEnforced  49m                kubelet          Updated Node Allocatable limit across pods\n  Normal  NodeReady                44m                kubelet          Node eixo7oojiese-1 status is now: NodeReady\n  Normal  RegisteredNode           38m                node-controller  Node eixo7oojiese-1 event: Registered Node eixo7oojiese-1 in Controller\n  Normal  Starting                 38m                kubelet          Starting kubelet.\n  Normal  NodeHasSufficientMemory  38m (x8 over 38m)  kubelet          Node eixo7oojiese-1 status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    38m (x8 over 38m)  kubelet          Node eixo7oojiese-1 status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     38m (x7 over 38m)  kubelet          Node eixo7oojiese-1 status is now: NodeHasSufficientPID\n  Normal  NodeAllocatableEnforced  38m                kubelet          Updated Node Allocatable limit across pods\n  Normal  NodeNotReady             37m                node-controller  Node eixo7oojiese-1 status is now: NodeNotReady\n"
  Apr 19 16:16:20.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-839 describe namespace kubectl-839'
  Apr 19 16:16:20.312: INFO: stderr: ""
  Apr 19 16:16:20.312: INFO: stdout: "Name:         kubectl-839\nLabels:       e2e-framework=kubectl\n              e2e-run=ecc91bd4-ae45-4a02-ad75-06b46a186390\n              kubernetes.io/metadata.name=kubectl-839\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Apr 19 16:16:20.312: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-839" for this suite. @ 04/19/24 16:16:20.321
â€¢ [3.524 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 04/19/24 16:16:20.335
  Apr 19 16:16:20.335: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename var-expansion @ 04/19/24 16:16:20.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:16:20.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:16:20.366
  STEP: creating the pod with failed condition @ 04/19/24 16:16:20.374
  STEP: updating the pod @ 04/19/24 16:18:20.39
  Apr 19 16:18:20.949: INFO: Successfully updated pod "var-expansion-12b2c821-69c7-4f42-8132-ae0093c1ba2b"
  STEP: waiting for pod running @ 04/19/24 16:18:20.95
  STEP: deleting the pod gracefully @ 04/19/24 16:18:22.977
  Apr 19 16:18:22.979: INFO: Deleting pod "var-expansion-12b2c821-69c7-4f42-8132-ae0093c1ba2b" in namespace "var-expansion-6522"
  Apr 19 16:18:23.009: INFO: Wait up to 5m0s for pod "var-expansion-12b2c821-69c7-4f42-8132-ae0093c1ba2b" to be fully deleted
  Apr 19 16:18:55.233: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6522" for this suite. @ 04/19/24 16:18:55.251
â€¢ [154.932 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 04/19/24 16:18:55.27
  Apr 19 16:18:55.270: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename webhook @ 04/19/24 16:18:55.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:18:55.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:18:55.324
  STEP: Setting up server cert @ 04/19/24 16:18:55.372
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/19/24 16:18:56.511
  STEP: Deploying the webhook pod @ 04/19/24 16:18:56.532
  STEP: Wait for the deployment to be ready @ 04/19/24 16:18:56.564
  Apr 19 16:18:56.585: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 04/19/24 16:18:58.616
  STEP: Verifying the service has paired with the endpoint @ 04/19/24 16:18:58.647
  Apr 19 16:18:59.648: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 04/19/24 16:18:59.67
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/19/24 16:18:59.67
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 04/19/24 16:18:59.722
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 04/19/24 16:19:00.741
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/19/24 16:19:00.741
  STEP: Having no error when timeout is longer than webhook latency @ 04/19/24 16:19:01.799
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/19/24 16:19:01.799
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 04/19/24 16:19:06.892
  STEP: Registering slow webhook via the AdmissionRegistration API @ 04/19/24 16:19:06.893
  Apr 19 16:19:11.971: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8543" for this suite. @ 04/19/24 16:19:12.147
  STEP: Destroying namespace "webhook-markers-8383" for this suite. @ 04/19/24 16:19:12.162
â€¢ [16.908 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 04/19/24 16:19:12.18
  Apr 19 16:19:12.180: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename security-context-test @ 04/19/24 16:19:12.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:19:12.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:19:12.219
  Apr 19 16:19:16.318: INFO: Got logs for pod "busybox-privileged-false-2681fe1d-4932-4796-8a96-fb4fa07cd5a8": "ip: RTNETLINK answers: Operation not permitted\n"
  Apr 19 16:19:16.319: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9595" for this suite. @ 04/19/24 16:19:16.337
â€¢ [4.175 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 04/19/24 16:19:16.362
  Apr 19 16:19:16.363: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename secrets @ 04/19/24 16:19:16.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:19:16.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:19:16.413
  STEP: Creating secret with name secret-test-44a69fd9-e140-4097-83bb-9dbf60f94082 @ 04/19/24 16:19:16.421
  STEP: Creating a pod to test consume secrets @ 04/19/24 16:19:16.432
  STEP: Saw pod success @ 04/19/24 16:19:20.483
  Apr 19 16:19:20.489: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-secrets-2506e43a-1dd4-4538-8f6a-b9a91aed36f6 container secret-env-test: <nil>
  STEP: delete the pod @ 04/19/24 16:19:20.504
  Apr 19 16:19:20.537: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3594" for this suite. @ 04/19/24 16:19:20.551
â€¢ [4.203 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 04/19/24 16:19:20.583
  Apr 19 16:19:20.583: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename gc @ 04/19/24 16:19:20.586
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:19:20.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:19:20.618
  STEP: create the rc @ 04/19/24 16:19:20.63
  W0419 16:19:20.639176      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/19/24 16:19:26.645
  STEP: wait for the rc to be deleted @ 04/19/24 16:19:26.655
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 04/19/24 16:19:31.66
  STEP: Gathering metrics @ 04/19/24 16:20:01.686
  Apr 19 16:20:01.876: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 19 16:20:01.883: INFO: Deleting pod "simpletest.rc-2h45m" in namespace "gc-1350"
  Apr 19 16:20:01.905: INFO: Deleting pod "simpletest.rc-2wflw" in namespace "gc-1350"
  Apr 19 16:20:01.947: INFO: Deleting pod "simpletest.rc-2xqpz" in namespace "gc-1350"
  Apr 19 16:20:01.991: INFO: Deleting pod "simpletest.rc-2zpvb" in namespace "gc-1350"
  Apr 19 16:20:02.020: INFO: Deleting pod "simpletest.rc-45tfn" in namespace "gc-1350"
  Apr 19 16:20:02.084: INFO: Deleting pod "simpletest.rc-46lf2" in namespace "gc-1350"
  Apr 19 16:20:02.124: INFO: Deleting pod "simpletest.rc-4qdx4" in namespace "gc-1350"
  Apr 19 16:20:02.169: INFO: Deleting pod "simpletest.rc-54tgv" in namespace "gc-1350"
  Apr 19 16:20:02.212: INFO: Deleting pod "simpletest.rc-5llkg" in namespace "gc-1350"
  Apr 19 16:20:02.262: INFO: Deleting pod "simpletest.rc-5qxxv" in namespace "gc-1350"
  Apr 19 16:20:02.287: INFO: Deleting pod "simpletest.rc-5vb87" in namespace "gc-1350"
  Apr 19 16:20:02.328: INFO: Deleting pod "simpletest.rc-64gqs" in namespace "gc-1350"
  Apr 19 16:20:02.386: INFO: Deleting pod "simpletest.rc-69nhg" in namespace "gc-1350"
  Apr 19 16:20:02.419: INFO: Deleting pod "simpletest.rc-69sxf" in namespace "gc-1350"
  Apr 19 16:20:02.458: INFO: Deleting pod "simpletest.rc-6qldr" in namespace "gc-1350"
  Apr 19 16:20:02.495: INFO: Deleting pod "simpletest.rc-775hb" in namespace "gc-1350"
  Apr 19 16:20:02.547: INFO: Deleting pod "simpletest.rc-7zk76" in namespace "gc-1350"
  Apr 19 16:20:02.579: INFO: Deleting pod "simpletest.rc-8s62n" in namespace "gc-1350"
  Apr 19 16:20:02.679: INFO: Deleting pod "simpletest.rc-8zs5w" in namespace "gc-1350"
  Apr 19 16:20:02.708: INFO: Deleting pod "simpletest.rc-924gg" in namespace "gc-1350"
  Apr 19 16:20:02.730: INFO: Deleting pod "simpletest.rc-98qgx" in namespace "gc-1350"
  Apr 19 16:20:02.795: INFO: Deleting pod "simpletest.rc-9v295" in namespace "gc-1350"
  Apr 19 16:20:02.872: INFO: Deleting pod "simpletest.rc-b28kk" in namespace "gc-1350"
  Apr 19 16:20:02.893: INFO: Deleting pod "simpletest.rc-b42mm" in namespace "gc-1350"
  Apr 19 16:20:02.944: INFO: Deleting pod "simpletest.rc-b958h" in namespace "gc-1350"
  Apr 19 16:20:03.041: INFO: Deleting pod "simpletest.rc-c87lp" in namespace "gc-1350"
  Apr 19 16:20:03.167: INFO: Deleting pod "simpletest.rc-chn2c" in namespace "gc-1350"
  Apr 19 16:20:03.285: INFO: Deleting pod "simpletest.rc-cn2xk" in namespace "gc-1350"
  Apr 19 16:20:03.316: INFO: Deleting pod "simpletest.rc-cqfzg" in namespace "gc-1350"
  Apr 19 16:20:03.349: INFO: Deleting pod "simpletest.rc-crldf" in namespace "gc-1350"
  Apr 19 16:20:03.424: INFO: Deleting pod "simpletest.rc-ctmhk" in namespace "gc-1350"
  Apr 19 16:20:03.471: INFO: Deleting pod "simpletest.rc-cvz8z" in namespace "gc-1350"
  Apr 19 16:20:03.536: INFO: Deleting pod "simpletest.rc-d4752" in namespace "gc-1350"
  Apr 19 16:20:03.628: INFO: Deleting pod "simpletest.rc-d5g2w" in namespace "gc-1350"
  Apr 19 16:20:03.704: INFO: Deleting pod "simpletest.rc-d6797" in namespace "gc-1350"
  Apr 19 16:20:03.726: INFO: Deleting pod "simpletest.rc-d6wd6" in namespace "gc-1350"
  Apr 19 16:20:03.772: INFO: Deleting pod "simpletest.rc-dpj82" in namespace "gc-1350"
  Apr 19 16:20:03.814: INFO: Deleting pod "simpletest.rc-dpmhj" in namespace "gc-1350"
  Apr 19 16:20:03.916: INFO: Deleting pod "simpletest.rc-dst7t" in namespace "gc-1350"
  Apr 19 16:20:04.013: INFO: Deleting pod "simpletest.rc-dxz5b" in namespace "gc-1350"
  Apr 19 16:20:04.114: INFO: Deleting pod "simpletest.rc-f2r85" in namespace "gc-1350"
  Apr 19 16:20:04.251: INFO: Deleting pod "simpletest.rc-fn9v2" in namespace "gc-1350"
  Apr 19 16:20:04.321: INFO: Deleting pod "simpletest.rc-fnnh7" in namespace "gc-1350"
  Apr 19 16:20:04.354: INFO: Deleting pod "simpletest.rc-frr6z" in namespace "gc-1350"
  Apr 19 16:20:04.383: INFO: Deleting pod "simpletest.rc-fsjcz" in namespace "gc-1350"
  Apr 19 16:20:04.425: INFO: Deleting pod "simpletest.rc-g942v" in namespace "gc-1350"
  Apr 19 16:20:04.457: INFO: Deleting pod "simpletest.rc-gbbb7" in namespace "gc-1350"
  Apr 19 16:20:04.513: INFO: Deleting pod "simpletest.rc-gbs4d" in namespace "gc-1350"
  Apr 19 16:20:04.548: INFO: Deleting pod "simpletest.rc-gdgxd" in namespace "gc-1350"
  Apr 19 16:20:04.587: INFO: Deleting pod "simpletest.rc-gjgkp" in namespace "gc-1350"
  Apr 19 16:20:04.629: INFO: Deleting pod "simpletest.rc-gldbr" in namespace "gc-1350"
  Apr 19 16:20:04.692: INFO: Deleting pod "simpletest.rc-gxqfq" in namespace "gc-1350"
  Apr 19 16:20:04.765: INFO: Deleting pod "simpletest.rc-h7plp" in namespace "gc-1350"
  Apr 19 16:20:04.861: INFO: Deleting pod "simpletest.rc-hhkvs" in namespace "gc-1350"
  Apr 19 16:20:05.012: INFO: Deleting pod "simpletest.rc-hl9cl" in namespace "gc-1350"
  Apr 19 16:20:05.200: INFO: Deleting pod "simpletest.rc-hmgn2" in namespace "gc-1350"
  Apr 19 16:20:05.276: INFO: Deleting pod "simpletest.rc-j5qjn" in namespace "gc-1350"
  Apr 19 16:20:05.312: INFO: Deleting pod "simpletest.rc-jhz2m" in namespace "gc-1350"
  Apr 19 16:20:05.351: INFO: Deleting pod "simpletest.rc-jr896" in namespace "gc-1350"
  Apr 19 16:20:05.391: INFO: Deleting pod "simpletest.rc-jxkwb" in namespace "gc-1350"
  Apr 19 16:20:05.436: INFO: Deleting pod "simpletest.rc-k7trd" in namespace "gc-1350"
  Apr 19 16:20:05.466: INFO: Deleting pod "simpletest.rc-kfpsf" in namespace "gc-1350"
  Apr 19 16:20:05.520: INFO: Deleting pod "simpletest.rc-lbj6w" in namespace "gc-1350"
  Apr 19 16:20:05.544: INFO: Deleting pod "simpletest.rc-lhk2v" in namespace "gc-1350"
  Apr 19 16:20:05.565: INFO: Deleting pod "simpletest.rc-mghvq" in namespace "gc-1350"
  Apr 19 16:20:05.591: INFO: Deleting pod "simpletest.rc-n7x9x" in namespace "gc-1350"
  Apr 19 16:20:05.629: INFO: Deleting pod "simpletest.rc-ndxvj" in namespace "gc-1350"
  Apr 19 16:20:05.746: INFO: Deleting pod "simpletest.rc-nsmct" in namespace "gc-1350"
  Apr 19 16:20:05.857: INFO: Deleting pod "simpletest.rc-nx5d8" in namespace "gc-1350"
  Apr 19 16:20:05.882: INFO: Deleting pod "simpletest.rc-nzmpg" in namespace "gc-1350"
  Apr 19 16:20:05.945: INFO: Deleting pod "simpletest.rc-p6hxg" in namespace "gc-1350"
  Apr 19 16:20:06.027: INFO: Deleting pod "simpletest.rc-pc9pz" in namespace "gc-1350"
  Apr 19 16:20:06.058: INFO: Deleting pod "simpletest.rc-q4242" in namespace "gc-1350"
  Apr 19 16:20:06.107: INFO: Deleting pod "simpletest.rc-q4svl" in namespace "gc-1350"
  Apr 19 16:20:06.146: INFO: Deleting pod "simpletest.rc-qpnmn" in namespace "gc-1350"
  Apr 19 16:20:06.178: INFO: Deleting pod "simpletest.rc-qv9vx" in namespace "gc-1350"
  Apr 19 16:20:06.211: INFO: Deleting pod "simpletest.rc-rgwpv" in namespace "gc-1350"
  Apr 19 16:20:06.251: INFO: Deleting pod "simpletest.rc-rh7cg" in namespace "gc-1350"
  Apr 19 16:20:06.293: INFO: Deleting pod "simpletest.rc-rjrwv" in namespace "gc-1350"
  Apr 19 16:20:06.342: INFO: Deleting pod "simpletest.rc-rvrwf" in namespace "gc-1350"
  Apr 19 16:20:06.416: INFO: Deleting pod "simpletest.rc-s92gk" in namespace "gc-1350"
  Apr 19 16:20:06.502: INFO: Deleting pod "simpletest.rc-sqvpx" in namespace "gc-1350"
  Apr 19 16:20:06.569: INFO: Deleting pod "simpletest.rc-t26jm" in namespace "gc-1350"
  Apr 19 16:20:06.661: INFO: Deleting pod "simpletest.rc-t5cnn" in namespace "gc-1350"
  Apr 19 16:20:06.711: INFO: Deleting pod "simpletest.rc-tb9jw" in namespace "gc-1350"
  Apr 19 16:20:06.803: INFO: Deleting pod "simpletest.rc-tdnph" in namespace "gc-1350"
  Apr 19 16:20:06.861: INFO: Deleting pod "simpletest.rc-tl2gx" in namespace "gc-1350"
  Apr 19 16:20:06.889: INFO: Deleting pod "simpletest.rc-tqtn9" in namespace "gc-1350"
  Apr 19 16:20:06.991: INFO: Deleting pod "simpletest.rc-v6hn8" in namespace "gc-1350"
  Apr 19 16:20:07.051: INFO: Deleting pod "simpletest.rc-vq9dj" in namespace "gc-1350"
  Apr 19 16:20:07.114: INFO: Deleting pod "simpletest.rc-vzt84" in namespace "gc-1350"
  Apr 19 16:20:07.163: INFO: Deleting pod "simpletest.rc-w222t" in namespace "gc-1350"
  Apr 19 16:20:07.194: INFO: Deleting pod "simpletest.rc-w976r" in namespace "gc-1350"
  Apr 19 16:20:07.231: INFO: Deleting pod "simpletest.rc-wktw2" in namespace "gc-1350"
  Apr 19 16:20:07.264: INFO: Deleting pod "simpletest.rc-x7zkb" in namespace "gc-1350"
  Apr 19 16:20:07.298: INFO: Deleting pod "simpletest.rc-x965t" in namespace "gc-1350"
  Apr 19 16:20:07.333: INFO: Deleting pod "simpletest.rc-xfr5p" in namespace "gc-1350"
  Apr 19 16:20:07.397: INFO: Deleting pod "simpletest.rc-xlk7z" in namespace "gc-1350"
  Apr 19 16:20:07.440: INFO: Deleting pod "simpletest.rc-xnmdr" in namespace "gc-1350"
  Apr 19 16:20:07.497: INFO: Deleting pod "simpletest.rc-zlljz" in namespace "gc-1350"
  Apr 19 16:20:07.559: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1350" for this suite. @ 04/19/24 16:20:07.568
â€¢ [47.015 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 04/19/24 16:20:07.6
  Apr 19 16:20:07.600: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename sysctl @ 04/19/24 16:20:07.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:20:07.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:20:07.641
  STEP: Creating a pod with one valid and two invalid sysctls @ 04/19/24 16:20:07.644
  Apr 19 16:20:07.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-2705" for this suite. @ 04/19/24 16:20:07.667
â€¢ [0.080 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 04/19/24 16:20:07.682
  Apr 19 16:20:07.682: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename resourcequota @ 04/19/24 16:20:07.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:20:07.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:20:07.738
  STEP: Discovering how many secrets are in namespace by default @ 04/19/24 16:20:07.743
  STEP: Counting existing ResourceQuota @ 04/19/24 16:20:12.759
  STEP: Creating a ResourceQuota @ 04/19/24 16:20:17.769
  STEP: Ensuring resource quota status is calculated @ 04/19/24 16:20:17.777
  STEP: Creating a Secret @ 04/19/24 16:20:19.786
  STEP: Ensuring resource quota status captures secret creation @ 04/19/24 16:20:19.81
  STEP: Deleting a secret @ 04/19/24 16:20:21.826
  STEP: Ensuring resource quota status released usage @ 04/19/24 16:20:21.846
  Apr 19 16:20:23.855: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1396" for this suite. @ 04/19/24 16:20:23.874
â€¢ [16.211 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 04/19/24 16:20:23.904
  Apr 19 16:20:23.904: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename kubelet-test @ 04/19/24 16:20:23.911
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:20:23.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:20:23.971
  Apr 19 16:20:26.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5650" for this suite. @ 04/19/24 16:20:26.07
â€¢ [2.187 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 04/19/24 16:20:26.097
  Apr 19 16:20:26.097: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename dns @ 04/19/24 16:20:26.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:20:26.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:20:26.146
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/19/24 16:20:26.155
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 04/19/24 16:20:26.155
  STEP: creating a pod to probe DNS @ 04/19/24 16:20:26.156
  STEP: submitting the pod to kubernetes @ 04/19/24 16:20:26.156
  STEP: retrieving the pod @ 04/19/24 16:20:28.193
  STEP: looking for the results for each expected name from probers @ 04/19/24 16:20:28.203
  Apr 19 16:20:28.255: INFO: DNS probes using dns-9794/dns-test-6ee95f1a-acbc-4a0f-9184-6edbc367056c succeeded

  Apr 19 16:20:28.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/19/24 16:20:28.269
  STEP: Destroying namespace "dns-9794" for this suite. @ 04/19/24 16:20:28.301
â€¢ [2.221 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 04/19/24 16:20:28.323
  Apr 19 16:20:28.323: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename webhook @ 04/19/24 16:20:28.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:20:28.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:20:28.357
  STEP: Setting up server cert @ 04/19/24 16:20:28.4
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/19/24 16:20:28.947
  STEP: Deploying the webhook pod @ 04/19/24 16:20:28.968
  STEP: Wait for the deployment to be ready @ 04/19/24 16:20:29.001
  Apr 19 16:20:29.022: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/19/24 16:20:31.059
  STEP: Verifying the service has paired with the endpoint @ 04/19/24 16:20:31.085
  Apr 19 16:20:32.085: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 04/19/24 16:20:32.101
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 04/19/24 16:20:32.166
  STEP: Creating a configMap that should not be mutated @ 04/19/24 16:20:32.176
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 04/19/24 16:20:32.208
  STEP: Creating a configMap that should be mutated @ 04/19/24 16:20:32.224
  Apr 19 16:20:32.274: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4101" for this suite. @ 04/19/24 16:20:32.368
  STEP: Destroying namespace "webhook-markers-1444" for this suite. @ 04/19/24 16:20:32.379
â€¢ [4.071 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 04/19/24 16:20:32.396
  Apr 19 16:20:32.396: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename secrets @ 04/19/24 16:20:32.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:20:32.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:20:32.425
  STEP: Creating secret with name secret-test-4758e80e-7ce0-4560-9b49-164eb6a214ea @ 04/19/24 16:20:32.431
  STEP: Creating a pod to test consume secrets @ 04/19/24 16:20:32.439
  STEP: Saw pod success @ 04/19/24 16:20:36.488
  Apr 19 16:20:36.498: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-secrets-003a7f01-58ef-4ce8-b47f-bbd624fd39fd container secret-volume-test: <nil>
  STEP: delete the pod @ 04/19/24 16:20:36.528
  Apr 19 16:20:36.572: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9987" for this suite. @ 04/19/24 16:20:36.586
â€¢ [4.213 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 04/19/24 16:20:36.613
  Apr 19 16:20:36.613: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename kubectl @ 04/19/24 16:20:36.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:20:36.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:20:36.661
  STEP: creating Agnhost RC @ 04/19/24 16:20:36.672
  Apr 19 16:20:36.674: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8541 create -f -'
  Apr 19 16:20:37.244: INFO: stderr: ""
  Apr 19 16:20:37.244: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 04/19/24 16:20:37.244
  Apr 19 16:20:38.255: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 19 16:20:38.255: INFO: Found 1 / 1
  Apr 19 16:20:38.255: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 04/19/24 16:20:38.255
  Apr 19 16:20:38.259: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 19 16:20:38.259: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 19 16:20:38.260: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-8541 patch pod agnhost-primary-dh5qz -p {"metadata":{"annotations":{"x":"y"}}}'
  Apr 19 16:20:38.440: INFO: stderr: ""
  Apr 19 16:20:38.440: INFO: stdout: "pod/agnhost-primary-dh5qz patched\n"
  STEP: checking annotations @ 04/19/24 16:20:38.44
  Apr 19 16:20:38.449: INFO: Selector matched 1 pods for map[app:agnhost]
  Apr 19 16:20:38.449: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Apr 19 16:20:38.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8541" for this suite. @ 04/19/24 16:20:38.46
â€¢ [1.866 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 04/19/24 16:20:38.485
  Apr 19 16:20:38.485: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/19/24 16:20:38.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:20:38.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:20:38.538
  STEP: fetching the /apis discovery document @ 04/19/24 16:20:38.543
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 04/19/24 16:20:38.546
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 04/19/24 16:20:38.546
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 04/19/24 16:20:38.547
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 04/19/24 16:20:38.558
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 04/19/24 16:20:38.558
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 04/19/24 16:20:38.572
  Apr 19 16:20:38.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5406" for this suite. @ 04/19/24 16:20:38.588
â€¢ [0.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 04/19/24 16:20:38.627
  Apr 19 16:20:38.627: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename pod-network-test @ 04/19/24 16:20:38.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:20:38.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:20:38.658
  STEP: Performing setup for networking test in namespace pod-network-test-6124 @ 04/19/24 16:20:38.665
  STEP: creating a selector @ 04/19/24 16:20:38.665
  STEP: Creating the service pods in kubernetes @ 04/19/24 16:20:38.665
  Apr 19 16:20:38.665: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 04/19/24 16:20:50.923
  Apr 19 16:20:52.999: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 19 16:20:52.999: INFO: Going to poll 10.233.64.103 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 19 16:20:53.004: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.64.103:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6124 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 16:20:53.004: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 16:20:53.006: INFO: ExecWithOptions: Clientset creation
  Apr 19 16:20:53.007: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6124/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.64.103%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 19 16:20:53.171: INFO: Found all 1 expected endpoints: [netserver-0]
  Apr 19 16:20:53.171: INFO: Going to poll 10.233.65.97 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 19 16:20:53.178: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.65.97:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6124 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 16:20:53.178: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 16:20:53.181: INFO: ExecWithOptions: Clientset creation
  Apr 19 16:20:53.181: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6124/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.65.97%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 19 16:20:53.321: INFO: Found all 1 expected endpoints: [netserver-1]
  Apr 19 16:20:53.321: INFO: Going to poll 10.233.66.223 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Apr 19 16:20:53.326: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.66.223:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6124 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 16:20:53.326: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 16:20:53.328: INFO: ExecWithOptions: Clientset creation
  Apr 19 16:20:53.328: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6124/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.66.223%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 19 16:20:53.449: INFO: Found all 1 expected endpoints: [netserver-2]
  Apr 19 16:20:53.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6124" for this suite. @ 04/19/24 16:20:53.458
â€¢ [14.844 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 04/19/24 16:20:53.475
  Apr 19 16:20:53.475: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename var-expansion @ 04/19/24 16:20:53.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:20:53.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:20:53.511
  STEP: Creating a pod to test substitution in container's args @ 04/19/24 16:20:53.518
  STEP: Saw pod success @ 04/19/24 16:20:55.553
  Apr 19 16:20:55.559: INFO: Trying to get logs from node eixo7oojiese-3 pod var-expansion-5abb88c3-668c-4005-b818-e14d54102bca container dapi-container: <nil>
  STEP: delete the pod @ 04/19/24 16:20:55.573
  Apr 19 16:20:55.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6450" for this suite. @ 04/19/24 16:20:55.613
â€¢ [2.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 04/19/24 16:20:55.632
  Apr 19 16:20:55.632: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename kubectl @ 04/19/24 16:20:55.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:20:55.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:20:55.668
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 04/19/24 16:20:55.672
  Apr 19 16:20:55.672: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-967 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Apr 19 16:20:55.856: INFO: stderr: ""
  Apr 19 16:20:55.856: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 04/19/24 16:20:55.856
  STEP: verifying the pod e2e-test-httpd-pod was created @ 04/19/24 16:21:00.91
  Apr 19 16:21:00.911: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-967 get pod e2e-test-httpd-pod -o json'
  Apr 19 16:21:01.090: INFO: stderr: ""
  Apr 19 16:21:01.090: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-04-19T16:20:55Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-967\",\n        \"resourceVersion\": \"17045\",\n        \"uid\": \"f039bf60-7d55-473d-ba84-82d34a503068\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-8crr9\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"eixo7oojiese-3\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-8crr9\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-19T16:20:55Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-19T16:20:57Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-19T16:20:57Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-04-19T16:20:55Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"cri-o://2f3021cf628dcdd4b87c175a1305d38bd8da63553b870f898cff89e256ff9c88\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-04-19T16:20:56Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.121.129\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.233.66.226\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.233.66.226\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-04-19T16:20:55Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 04/19/24 16:21:01.091
  Apr 19 16:21:01.091: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-967 replace -f -'
  Apr 19 16:21:01.674: INFO: stderr: ""
  Apr 19 16:21:01.674: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 04/19/24 16:21:01.674
  Apr 19 16:21:01.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-967 delete pods e2e-test-httpd-pod'
  Apr 19 16:21:03.521: INFO: stderr: ""
  Apr 19 16:21:03.522: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Apr 19 16:21:03.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-967" for this suite. @ 04/19/24 16:21:03.534
â€¢ [7.922 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 04/19/24 16:21:03.554
  Apr 19 16:21:03.554: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename container-runtime @ 04/19/24 16:21:03.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:21:03.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:21:03.596
  STEP: create the container @ 04/19/24 16:21:03.603
  W0419 16:21:03.623851      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/19/24 16:21:03.624
  STEP: get the container status @ 04/19/24 16:21:05.645
  STEP: the container should be terminated @ 04/19/24 16:21:05.687
  STEP: the termination message should be set @ 04/19/24 16:21:05.687
  Apr 19 16:21:05.688: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 04/19/24 16:21:05.688
  Apr 19 16:21:05.711: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1290" for this suite. @ 04/19/24 16:21:05.727
â€¢ [2.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 04/19/24 16:21:05.745
  Apr 19 16:21:05.745: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename services @ 04/19/24 16:21:05.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:21:05.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:21:05.78
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-8030 @ 04/19/24 16:21:05.787
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 04/19/24 16:21:05.826
  STEP: creating service externalsvc in namespace services-8030 @ 04/19/24 16:21:05.827
  STEP: creating replication controller externalsvc in namespace services-8030 @ 04/19/24 16:21:05.851
  I0419 16:21:05.868295      14 runners.go:197] Created replication controller with name: externalsvc, namespace: services-8030, replica count: 2
  I0419 16:21:08.919408      14 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 04/19/24 16:21:08.93
  Apr 19 16:21:08.967: INFO: Creating new exec pod
  Apr 19 16:21:11.018: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-8030 exec execpodgd8fr -- /bin/sh -x -c nslookup nodeport-service.services-8030.svc.cluster.local'
  Apr 19 16:21:11.443: INFO: stderr: "+ nslookup nodeport-service.services-8030.svc.cluster.local\n"
  Apr 19 16:21:11.443: INFO: stdout: "Server:\t\t10.233.0.10\nAddress:\t10.233.0.10#53\n\nnodeport-service.services-8030.svc.cluster.local\tcanonical name = externalsvc.services-8030.svc.cluster.local.\nName:\texternalsvc.services-8030.svc.cluster.local\nAddress: 10.233.24.199\n\n"
  Apr 19 16:21:11.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-8030, will wait for the garbage collector to delete the pods @ 04/19/24 16:21:11.453
  Apr 19 16:21:11.533: INFO: Deleting ReplicationController externalsvc took: 21.990808ms
  Apr 19 16:21:11.633: INFO: Terminating ReplicationController externalsvc pods took: 100.60199ms
  Apr 19 16:21:14.786: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-8030" for this suite. @ 04/19/24 16:21:14.818
â€¢ [9.087 seconds]
------------------------------
S
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 04/19/24 16:21:14.833
  Apr 19 16:21:14.833: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename prestop @ 04/19/24 16:21:14.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:21:14.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:21:14.873
  STEP: Creating server pod server in namespace prestop-5978 @ 04/19/24 16:21:14.877
  STEP: Waiting for pods to come up. @ 04/19/24 16:21:14.891
  STEP: Creating tester pod tester in namespace prestop-5978 @ 04/19/24 16:21:16.923
  STEP: Deleting pre-stop pod @ 04/19/24 16:21:18.964
  Apr 19 16:21:24.025: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Apr 19 16:21:24.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 04/19/24 16:21:24.064
  STEP: Destroying namespace "prestop-5978" for this suite. @ 04/19/24 16:21:24.099
â€¢ [9.301 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 04/19/24 16:21:24.137
  Apr 19 16:21:24.137: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename crd-webhook @ 04/19/24 16:21:24.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:21:24.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:21:24.198
  STEP: Setting up server cert @ 04/19/24 16:21:24.212
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/19/24 16:21:25.373
  STEP: Deploying the custom resource conversion webhook pod @ 04/19/24 16:21:25.398
  STEP: Wait for the deployment to be ready @ 04/19/24 16:21:25.424
  Apr 19 16:21:25.444: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/19/24 16:21:27.476
  STEP: Verifying the service has paired with the endpoint @ 04/19/24 16:21:27.512
  Apr 19 16:21:28.513: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 19 16:21:28.532: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Creating a v1 custom resource @ 04/19/24 16:21:31.445
  STEP: Create a v2 custom resource @ 04/19/24 16:21:31.497
  STEP: List CRs in v1 @ 04/19/24 16:21:31.51
  STEP: List CRs in v2 @ 04/19/24 16:21:31.716
  Apr 19 16:21:31.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8042" for this suite. @ 04/19/24 16:21:32.389
â€¢ [8.267 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 04/19/24 16:21:32.41
  Apr 19 16:21:32.410: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/19/24 16:21:32.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:21:32.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:21:32.47
  STEP: create the container to handle the HTTPGet hook request. @ 04/19/24 16:21:32.485
  STEP: create the pod with lifecycle hook @ 04/19/24 16:21:34.54
  STEP: check poststart hook @ 04/19/24 16:21:36.617
  STEP: delete the pod with lifecycle hook @ 04/19/24 16:21:36.66
  Apr 19 16:21:38.698: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8862" for this suite. @ 04/19/24 16:21:38.714
â€¢ [6.322 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 04/19/24 16:21:38.739
  Apr 19 16:21:38.739: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename container-probe @ 04/19/24 16:21:38.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:21:38.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:21:38.798
  STEP: Creating pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440 @ 04/19/24 16:21:38.806
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/19/24 16:21:40.852
  Apr 19 16:21:40.858: INFO: Initial restart count of pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f is 0
  Apr 19 16:21:40.865: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:21:42.874: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:21:44.886: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:21:46.900: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:21:48.911: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:21:50.922: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:21:52.930: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:21:54.943: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:21:56.956: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:21:58.969: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:00.982: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:02.995: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:05.002: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:07.015: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:09.055: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:11.075: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:13.087: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:15.098: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:17.108: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:19.120: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:21.128: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:23.140: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:25.149: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:27.160: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:29.171: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:31.183: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:33.191: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:35.201: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:37.216: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:39.225: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:41.236: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:43.244: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:45.258: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:47.270: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:49.278: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:51.291: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:53.303: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:55.315: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:57.329: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:22:59.337: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:01.351: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:03.362: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:05.372: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:07.385: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:09.397: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:11.407: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:13.418: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:15.434: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:17.449: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:19.461: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:21.471: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:23.484: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:25.494: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:27.505: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:29.520: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:31.531: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:33.543: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:35.555: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:37.565: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:39.577: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:41.591: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:43.601: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:45.612: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:47.625: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:49.638: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:51.657: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:53.669: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:55.678: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:57.710: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:23:59.721: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:01.736: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:03.749: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:05.761: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:07.773: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:09.787: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:11.799: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:13.808: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:15.820: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:17.831: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:19.838: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:21.846: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:23.859: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:25.873: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:27.884: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:29.896: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:31.909: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:33.920: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:35.932: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:37.944: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:39.954: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:41.967: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:43.977: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:45.988: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:48.024: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:50.038: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:52.062: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:54.075: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:56.084: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:24:58.099: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:25:00.111: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:25:02.120: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:25:04.131: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:25:06.146: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:25:08.165: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:25:10.177: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:25:12.190: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:25:14.202: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:25:16.215: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:25:18.226: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:25:20.236: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:25:22.247: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:25:24.256: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:25:26.269: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:25:28.282: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:25:30.295: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:25:32.306: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:25:34.320: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:25:36.330: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:25:38.346: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:25:40.358: INFO: Get pod test-webserver-f8254b71-67e2-4b14-acd0-9ef06da9227f in namespace container-probe-6440
  Apr 19 16:25:42.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/19/24 16:25:42.379
  STEP: Destroying namespace "container-probe-6440" for this suite. @ 04/19/24 16:25:42.453
â€¢ [243.731 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:792
  STEP: Creating a kubernetes client @ 04/19/24 16:25:42.472
  Apr 19 16:25:42.472: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename statefulset @ 04/19/24 16:25:42.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:25:42.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:25:42.521
  STEP: Creating service test in namespace statefulset-3550 @ 04/19/24 16:25:42.525
  STEP: Looking for a node to schedule stateful set and pod @ 04/19/24 16:25:42.534
  STEP: Creating pod with conflicting port in namespace statefulset-3550 @ 04/19/24 16:25:42.559
  STEP: Waiting until pod test-pod will start running in namespace statefulset-3550 @ 04/19/24 16:25:42.578
  STEP: Creating statefulset with conflicting port in namespace statefulset-3550 @ 04/19/24 16:25:44.605
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-3550 @ 04/19/24 16:25:44.624
  Apr 19 16:25:44.666: INFO: Observed stateful pod in namespace: statefulset-3550, name: ss-0, uid: ad05d714-18c0-491c-b273-0514d42d8995, status phase: Pending. Waiting for statefulset controller to delete.
  Apr 19 16:25:44.696: INFO: Observed stateful pod in namespace: statefulset-3550, name: ss-0, uid: ad05d714-18c0-491c-b273-0514d42d8995, status phase: Failed. Waiting for statefulset controller to delete.
  Apr 19 16:25:44.740: INFO: Observed stateful pod in namespace: statefulset-3550, name: ss-0, uid: ad05d714-18c0-491c-b273-0514d42d8995, status phase: Failed. Waiting for statefulset controller to delete.
  Apr 19 16:25:44.759: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-3550
  STEP: Removing pod with conflicting port in namespace statefulset-3550 @ 04/19/24 16:25:44.759
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-3550 and will be in running state @ 04/19/24 16:25:44.801
  Apr 19 16:25:58.899: INFO: Deleting all statefulset in ns statefulset-3550
  Apr 19 16:25:58.909: INFO: Scaling statefulset ss to 0
  Apr 19 16:26:08.961: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 19 16:26:08.972: INFO: Deleting statefulset ss
  Apr 19 16:26:09.008: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3550" for this suite. @ 04/19/24 16:26:09.037
â€¢ [26.582 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 04/19/24 16:26:09.057
  Apr 19 16:26:09.057: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename endpointslice @ 04/19/24 16:26:09.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:26:09.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:26:09.1
  STEP: referencing a single matching pod @ 04/19/24 16:26:14.256
  STEP: referencing matching pods with named port @ 04/19/24 16:26:19.284
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 04/19/24 16:26:24.309
  STEP: recreating EndpointSlices after they've been deleted @ 04/19/24 16:26:29.332
  Apr 19 16:26:29.379: INFO: EndpointSlice for Service endpointslice-903/example-named-port not found
  Apr 19 16:26:39.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-903" for this suite. @ 04/19/24 16:26:39.433
â€¢ [30.402 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 04/19/24 16:26:39.463
  Apr 19 16:26:39.463: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 16:26:39.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:26:39.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:26:39.513
  STEP: Creating configMap with name projected-configmap-test-volume-2cdd45c4-0c87-4587-8f4d-4a256665ec61 @ 04/19/24 16:26:39.553
  STEP: Creating a pod to test consume configMaps @ 04/19/24 16:26:39.578
  STEP: Saw pod success @ 04/19/24 16:26:43.657
  Apr 19 16:26:43.667: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-projected-configmaps-fc363c08-9091-4350-bb0f-d970d486fcd8 container agnhost-container: <nil>
  STEP: delete the pod @ 04/19/24 16:26:43.72
  Apr 19 16:26:43.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2498" for this suite. @ 04/19/24 16:26:43.782
â€¢ [4.340 seconds]
------------------------------
SSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 04/19/24 16:26:43.807
  Apr 19 16:26:43.807: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename security-context-test @ 04/19/24 16:26:43.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:26:43.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:26:43.857
  Apr 19 16:26:47.918: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8935" for this suite. @ 04/19/24 16:26:47.933
â€¢ [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 04/19/24 16:26:47.97
  Apr 19 16:26:47.970: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename crd-webhook @ 04/19/24 16:26:47.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:26:48.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:26:48.058
  STEP: Setting up server cert @ 04/19/24 16:26:48.065
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 04/19/24 16:26:48.977
  STEP: Deploying the custom resource conversion webhook pod @ 04/19/24 16:26:48.994
  STEP: Wait for the deployment to be ready @ 04/19/24 16:26:49.021
  Apr 19 16:26:49.049: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/19/24 16:26:51.083
  STEP: Verifying the service has paired with the endpoint @ 04/19/24 16:26:51.109
  Apr 19 16:26:52.109: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Apr 19 16:26:52.123: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Creating a v1 custom resource @ 04/19/24 16:26:54.987
  STEP: v2 custom resource should be converted @ 04/19/24 16:26:55.001
  Apr 19 16:26:55.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-9734" for this suite. @ 04/19/24 16:26:55.696
â€¢ [7.744 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 04/19/24 16:26:55.709
  Apr 19 16:26:55.709: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/19/24 16:26:55.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:26:55.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:26:55.757
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 04/19/24 16:26:55.761
  Apr 19 16:26:55.763: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 04/19/24 16:27:03.103
  Apr 19 16:27:03.104: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 16:27:04.934: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 16:27:12.300: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2710" for this suite. @ 04/19/24 16:27:12.333
â€¢ [16.650 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 04/19/24 16:27:12.371
  Apr 19 16:27:12.371: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename endpointslicemirroring @ 04/19/24 16:27:12.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:27:12.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:27:12.419
  STEP: mirroring a new custom Endpoint @ 04/19/24 16:27:12.454
  Apr 19 16:27:12.480: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 04/19/24 16:27:14.496
  STEP: mirroring deletion of a custom Endpoint @ 04/19/24 16:27:14.52
  Apr 19 16:27:14.545: INFO: Waiting for 0 EndpointSlices to exist, got 1
  Apr 19 16:27:16.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-5802" for this suite. @ 04/19/24 16:27:16.569
â€¢ [4.225 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 04/19/24 16:27:16.599
  Apr 19 16:27:16.599: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename job @ 04/19/24 16:27:16.603
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:27:16.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:27:16.67
  STEP: Creating Indexed job @ 04/19/24 16:27:16.678
  STEP: Ensuring job reaches completions @ 04/19/24 16:27:16.688
  STEP: Ensuring pods with index for job exist @ 04/19/24 16:27:24.7
  Apr 19 16:27:24.713: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3262" for this suite. @ 04/19/24 16:27:24.725
â€¢ [8.143 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 04/19/24 16:27:24.745
  Apr 19 16:27:24.745: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/19/24 16:27:24.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:27:24.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:27:24.792
  STEP: create the container to handle the HTTPGet hook request. @ 04/19/24 16:27:24.813
  STEP: create the pod with lifecycle hook @ 04/19/24 16:27:26.867
  STEP: delete the pod with lifecycle hook @ 04/19/24 16:27:28.913
  STEP: check prestop hook @ 04/19/24 16:27:32.961
  Apr 19 16:27:32.981: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-31" for this suite. @ 04/19/24 16:27:32.993
â€¢ [8.261 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 04/19/24 16:27:33.006
  Apr 19 16:27:33.006: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename resourcequota @ 04/19/24 16:27:33.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:27:33.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:27:33.044
  STEP: Counting existing ResourceQuota @ 04/19/24 16:27:33.053
  STEP: Creating a ResourceQuota @ 04/19/24 16:27:38.06
  STEP: Ensuring resource quota status is calculated @ 04/19/24 16:27:38.077
  STEP: Creating a Service @ 04/19/24 16:27:40.083
  STEP: Creating a NodePort Service @ 04/19/24 16:27:40.12
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 04/19/24 16:27:40.166
  STEP: Ensuring resource quota status captures service creation @ 04/19/24 16:27:40.198
  STEP: Deleting Services @ 04/19/24 16:27:42.206
  STEP: Ensuring resource quota status released usage @ 04/19/24 16:27:42.295
  Apr 19 16:27:44.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4542" for this suite. @ 04/19/24 16:27:44.323
â€¢ [11.338 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 04/19/24 16:27:44.359
  Apr 19 16:27:44.359: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename emptydir @ 04/19/24 16:27:44.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:27:44.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:27:44.409
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 04/19/24 16:27:44.419
  STEP: Saw pod success @ 04/19/24 16:27:48.474
  Apr 19 16:27:48.485: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-e6dd5766-1c9e-4fb3-924f-0d9e32ecec91 container test-container: <nil>
  STEP: delete the pod @ 04/19/24 16:27:48.508
  Apr 19 16:27:48.545: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8300" for this suite. @ 04/19/24 16:27:48.56
â€¢ [4.222 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 04/19/24 16:27:48.585
  Apr 19 16:27:48.585: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename configmap @ 04/19/24 16:27:48.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:27:48.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:27:48.633
  STEP: Creating configMap with name configmap-test-volume-map-fc89b540-e892-4029-b290-e30f3a97c88a @ 04/19/24 16:27:48.641
  STEP: Creating a pod to test consume configMaps @ 04/19/24 16:27:48.655
  STEP: Saw pod success @ 04/19/24 16:27:52.715
  Apr 19 16:27:52.723: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-configmaps-13288277-04b8-4c5d-a2e1-fd4174078d1e container agnhost-container: <nil>
  STEP: delete the pod @ 04/19/24 16:27:52.743
  Apr 19 16:27:52.775: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7469" for this suite. @ 04/19/24 16:27:52.785
â€¢ [4.214 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 04/19/24 16:27:52.8
  Apr 19 16:27:52.800: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename watch @ 04/19/24 16:27:52.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:27:52.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:27:52.844
  STEP: creating a watch on configmaps with a certain label @ 04/19/24 16:27:52.85
  STEP: creating a new configmap @ 04/19/24 16:27:52.857
  STEP: modifying the configmap once @ 04/19/24 16:27:52.867
  STEP: changing the label value of the configmap @ 04/19/24 16:27:52.883
  STEP: Expecting to observe a delete notification for the watched object @ 04/19/24 16:27:52.897
  Apr 19 16:27:52.898: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7059  70a1e842-3732-4d1d-80b5-ae18c68f7f06 18676 0 2024-04-19 16:27:52 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-19 16:27:52 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 19 16:27:52.898: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7059  70a1e842-3732-4d1d-80b5-ae18c68f7f06 18677 0 2024-04-19 16:27:52 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-19 16:27:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 19 16:27:52.899: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7059  70a1e842-3732-4d1d-80b5-ae18c68f7f06 18678 0 2024-04-19 16:27:52 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-19 16:27:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 04/19/24 16:27:52.899
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 04/19/24 16:27:52.913
  STEP: changing the label value of the configmap back @ 04/19/24 16:28:02.914
  STEP: modifying the configmap a third time @ 04/19/24 16:28:02.941
  STEP: deleting the configmap @ 04/19/24 16:28:02.964
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 04/19/24 16:28:02.982
  Apr 19 16:28:02.982: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7059  70a1e842-3732-4d1d-80b5-ae18c68f7f06 18714 0 2024-04-19 16:27:52 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-19 16:28:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 19 16:28:02.983: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7059  70a1e842-3732-4d1d-80b5-ae18c68f7f06 18715 0 2024-04-19 16:27:52 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-19 16:28:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 19 16:28:02.984: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7059  70a1e842-3732-4d1d-80b5-ae18c68f7f06 18716 0 2024-04-19 16:27:52 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-04-19 16:28:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 19 16:28:02.985: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7059" for this suite. @ 04/19/24 16:28:02.998
â€¢ [10.211 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 04/19/24 16:28:03.016
  Apr 19 16:28:03.016: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename secrets @ 04/19/24 16:28:03.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:28:03.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:28:03.061
  Apr 19 16:28:03.142: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2077" for this suite. @ 04/19/24 16:28:03.15
â€¢ [0.150 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 04/19/24 16:28:03.171
  Apr 19 16:28:03.171: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename conformance-tests @ 04/19/24 16:28:03.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:28:03.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:28:03.201
  STEP: Getting node addresses @ 04/19/24 16:28:03.206
  Apr 19 16:28:03.206: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Apr 19 16:28:03.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-7739" for this suite. @ 04/19/24 16:28:03.225
â€¢ [0.066 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 04/19/24 16:28:03.239
  Apr 19 16:28:03.239: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename runtimeclass @ 04/19/24 16:28:03.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:28:03.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:28:03.268
  STEP: Deleting RuntimeClass runtimeclass-3426-delete-me @ 04/19/24 16:28:03.281
  STEP: Waiting for the RuntimeClass to disappear @ 04/19/24 16:28:03.292
  Apr 19 16:28:03.311: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3426" for this suite. @ 04/19/24 16:28:03.321
â€¢ [0.096 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 04/19/24 16:28:03.336
  Apr 19 16:28:03.336: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/19/24 16:28:03.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:28:03.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:28:03.367
  STEP: set up a multi version CRD @ 04/19/24 16:28:03.373
  Apr 19 16:28:03.374: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: rename a version @ 04/19/24 16:28:08.062
  STEP: check the new version name is served @ 04/19/24 16:28:08.095
  STEP: check the old version name is removed @ 04/19/24 16:28:09.571
  STEP: check the other version is not changed @ 04/19/24 16:28:10.438
  Apr 19 16:28:14.061: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8578" for this suite. @ 04/19/24 16:28:14.086
â€¢ [10.767 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 04/19/24 16:28:14.105
  Apr 19 16:28:14.105: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename replicaset @ 04/19/24 16:28:14.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:28:14.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:28:14.156
  STEP: Create a ReplicaSet @ 04/19/24 16:28:14.163
  STEP: Verify that the required pods have come up @ 04/19/24 16:28:14.175
  Apr 19 16:28:14.193: INFO: Pod name sample-pod: Found 0 pods out of 3
  Apr 19 16:28:19.208: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 04/19/24 16:28:19.209
  Apr 19 16:28:19.218: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 04/19/24 16:28:19.218
  STEP: DeleteCollection of the ReplicaSets @ 04/19/24 16:28:19.224
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 04/19/24 16:28:19.242
  Apr 19 16:28:19.251: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2070" for this suite. @ 04/19/24 16:28:19.262
â€¢ [5.173 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 04/19/24 16:28:19.278
  Apr 19 16:28:19.278: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename subpath @ 04/19/24 16:28:19.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:28:19.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:28:19.37
  STEP: Setting up data @ 04/19/24 16:28:19.376
  STEP: Creating pod pod-subpath-test-configmap-5k6j @ 04/19/24 16:28:19.391
  STEP: Creating a pod to test atomic-volume-subpath @ 04/19/24 16:28:19.391
  STEP: Saw pod success @ 04/19/24 16:28:43.557
  Apr 19 16:28:43.567: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-subpath-test-configmap-5k6j container test-container-subpath-configmap-5k6j: <nil>
  STEP: delete the pod @ 04/19/24 16:28:43.604
  STEP: Deleting pod pod-subpath-test-configmap-5k6j @ 04/19/24 16:28:43.649
  Apr 19 16:28:43.649: INFO: Deleting pod "pod-subpath-test-configmap-5k6j" in namespace "subpath-5748"
  Apr 19 16:28:43.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5748" for this suite. @ 04/19/24 16:28:43.666
â€¢ [24.415 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 04/19/24 16:28:43.699
  Apr 19 16:28:43.699: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/19/24 16:28:43.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:28:43.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:28:43.749
  Apr 19 16:28:43.753: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 16:28:47.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1066" for this suite. @ 04/19/24 16:28:47.237
â€¢ [3.564 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:961
  STEP: Creating a kubernetes client @ 04/19/24 16:28:47.269
  Apr 19 16:28:47.269: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename statefulset @ 04/19/24 16:28:47.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:28:47.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:28:47.322
  STEP: Creating service test in namespace statefulset-3586 @ 04/19/24 16:28:47.332
  Apr 19 16:28:47.374: INFO: Found 0 stateful pods, waiting for 1
  Apr 19 16:28:57.385: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 04/19/24 16:28:57.405
  W0419 16:28:57.431651      14 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Apr 19 16:28:57.458: INFO: Found 1 stateful pods, waiting for 2
  Apr 19 16:29:07.467: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 19 16:29:07.468: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 04/19/24 16:29:07.481
  STEP: Delete all of the StatefulSets @ 04/19/24 16:29:07.488
  STEP: Verify that StatefulSets have been deleted @ 04/19/24 16:29:07.506
  Apr 19 16:29:07.513: INFO: Deleting all statefulset in ns statefulset-3586
  Apr 19 16:29:07.537: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3586" for this suite. @ 04/19/24 16:29:07.549
â€¢ [20.304 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 04/19/24 16:29:07.575
  Apr 19 16:29:07.575: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename runtimeclass @ 04/19/24 16:29:07.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:29:07.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:29:07.648
  Apr 19 16:29:09.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-989" for this suite. @ 04/19/24 16:29:09.724
â€¢ [2.164 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 04/19/24 16:29:09.74
  Apr 19 16:29:09.740: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/19/24 16:29:09.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:29:09.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:29:09.779
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 04/19/24 16:29:09.784
  Apr 19 16:29:09.786: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 16:29:11.576: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 16:29:19.058: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7386" for this suite. @ 04/19/24 16:29:19.095
â€¢ [9.374 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 04/19/24 16:29:19.136
  Apr 19 16:29:19.136: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename aggregator @ 04/19/24 16:29:19.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:29:19.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:29:19.172
  Apr 19 16:29:19.182: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Registering the sample API server. @ 04/19/24 16:29:19.186
  Apr 19 16:29:20.059: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Apr 19 16:29:20.124: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  Apr 19 16:29:22.217: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:29:24.225: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:29:26.225: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:29:28.231: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:29:30.228: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:29:32.228: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:29:34.228: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:29:36.229: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:29:38.237: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:29:40.231: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:29:42.228: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:29:44.230: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:29:46.229: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-5769b9d9dd\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:29:48.381: INFO: Waited 129.293054ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 04/19/24 16:29:48.478
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 04/19/24 16:29:48.486
  STEP: List APIServices @ 04/19/24 16:29:48.506
  Apr 19 16:29:48.519: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 04/19/24 16:29:48.52
  Apr 19 16:29:48.551: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 04/19/24 16:29:48.553
  Apr 19 16:29:48.573: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.April, 19, 16, 29, 48, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 04/19/24 16:29:48.573
  Apr 19 16:29:48.584: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-04-19 16:29:48 +0000 UTC Passed all checks passed}
  Apr 19 16:29:48.584: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 19 16:29:48.584: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 04/19/24 16:29:48.584
  Apr 19 16:29:48.603: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-2108637699" @ 04/19/24 16:29:48.607
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 04/19/24 16:29:48.629
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 04/19/24 16:29:48.645
  STEP: Patch APIService Status @ 04/19/24 16:29:48.656
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 04/19/24 16:29:48.673
  Apr 19 16:29:48.685: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-04-19 16:29:48 +0000 UTC Passed all checks passed}
  Apr 19 16:29:48.686: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 19 16:29:48.687: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Apr 19 16:29:48.688: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 04/19/24 16:29:48.689
  STEP: Confirm that the generated APIService has been deleted @ 04/19/24 16:29:48.7
  Apr 19 16:29:48.700: INFO: Requesting list of APIServices to confirm quantity
  Apr 19 16:29:48.712: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Apr 19 16:29:48.712: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Apr 19 16:29:48.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-5688" for this suite. @ 04/19/24 16:29:49.003
â€¢ [29.879 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 04/19/24 16:29:49.018
  Apr 19 16:29:49.019: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename secrets @ 04/19/24 16:29:49.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:29:49.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:29:49.117
  STEP: Creating secret with name secret-test-8c2414f7-b793-4d1c-88c0-223dcf8a0a82 @ 04/19/24 16:29:49.121
  STEP: Creating a pod to test consume secrets @ 04/19/24 16:29:49.13
  STEP: Saw pod success @ 04/19/24 16:29:53.177
  Apr 19 16:29:53.187: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-secrets-3845e989-0af8-4918-a993-8f3b346001f2 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/19/24 16:29:53.211
  Apr 19 16:29:53.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9124" for this suite. @ 04/19/24 16:29:53.263
â€¢ [4.261 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 04/19/24 16:29:53.295
  Apr 19 16:29:53.295: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename controllerrevisions @ 04/19/24 16:29:53.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:29:53.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:29:53.353
  STEP: Creating DaemonSet "e2e-czsps-daemon-set" @ 04/19/24 16:29:53.414
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/19/24 16:29:53.425
  Apr 19 16:29:53.450: INFO: Number of nodes with available pods controlled by daemonset e2e-czsps-daemon-set: 0
  Apr 19 16:29:53.450: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  Apr 19 16:29:54.467: INFO: Number of nodes with available pods controlled by daemonset e2e-czsps-daemon-set: 0
  Apr 19 16:29:54.467: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  Apr 19 16:29:55.467: INFO: Number of nodes with available pods controlled by daemonset e2e-czsps-daemon-set: 3
  Apr 19 16:29:55.468: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-czsps-daemon-set
  STEP: Confirm DaemonSet "e2e-czsps-daemon-set" successfully created with "daemonset-name=e2e-czsps-daemon-set" label @ 04/19/24 16:29:55.475
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-czsps-daemon-set" @ 04/19/24 16:29:55.491
  Apr 19 16:29:55.497: INFO: Located ControllerRevision: "e2e-czsps-daemon-set-6bd755d956"
  STEP: Patching ControllerRevision "e2e-czsps-daemon-set-6bd755d956" @ 04/19/24 16:29:55.505
  Apr 19 16:29:55.517: INFO: e2e-czsps-daemon-set-6bd755d956 has been patched
  STEP: Create a new ControllerRevision @ 04/19/24 16:29:55.518
  Apr 19 16:29:55.527: INFO: Created ControllerRevision: e2e-czsps-daemon-set-7449c4567d
  STEP: Confirm that there are two ControllerRevisions @ 04/19/24 16:29:55.528
  Apr 19 16:29:55.528: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 19 16:29:55.535: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-czsps-daemon-set-6bd755d956" @ 04/19/24 16:29:55.535
  STEP: Confirm that there is only one ControllerRevision @ 04/19/24 16:29:55.548
  Apr 19 16:29:55.548: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 19 16:29:55.558: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-czsps-daemon-set-7449c4567d" @ 04/19/24 16:29:55.567
  Apr 19 16:29:55.590: INFO: e2e-czsps-daemon-set-7449c4567d has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 04/19/24 16:29:55.59
  W0419 16:29:55.616956      14 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 04/19/24 16:29:55.617
  Apr 19 16:29:55.617: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 19 16:29:56.628: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 19 16:29:56.636: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-czsps-daemon-set-7449c4567d=updated" @ 04/19/24 16:29:56.636
  STEP: Confirm that there is only one ControllerRevision @ 04/19/24 16:29:56.655
  Apr 19 16:29:56.655: INFO: Requesting list of ControllerRevisions to confirm quantity
  Apr 19 16:29:56.661: INFO: Found 1 ControllerRevisions
  Apr 19 16:29:56.666: INFO: ControllerRevision "e2e-czsps-daemon-set-8595fc6f95" has revision 3
  STEP: Deleting DaemonSet "e2e-czsps-daemon-set" @ 04/19/24 16:29:56.672
  STEP: deleting DaemonSet.extensions e2e-czsps-daemon-set in namespace controllerrevisions-8009, will wait for the garbage collector to delete the pods @ 04/19/24 16:29:56.673
  Apr 19 16:29:56.741: INFO: Deleting DaemonSet.extensions e2e-czsps-daemon-set took: 12.262765ms
  Apr 19 16:29:56.841: INFO: Terminating DaemonSet.extensions e2e-czsps-daemon-set pods took: 100.411203ms
  Apr 19 16:29:59.751: INFO: Number of nodes with available pods controlled by daemonset e2e-czsps-daemon-set: 0
  Apr 19 16:29:59.751: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-czsps-daemon-set
  Apr 19 16:29:59.758: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"19461"},"items":null}

  Apr 19 16:29:59.770: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"19461"},"items":null}

  Apr 19 16:29:59.813: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-8009" for this suite. @ 04/19/24 16:29:59.823
â€¢ [6.543 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 04/19/24 16:29:59.842
  Apr 19 16:29:59.842: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename emptydir-wrapper @ 04/19/24 16:29:59.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:29:59.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:29:59.89
  STEP: Creating 50 configmaps @ 04/19/24 16:29:59.899
  STEP: Creating RC which spawns configmap-volume pods @ 04/19/24 16:30:00.538
  Apr 19 16:30:00.569: INFO: Pod name wrapped-volume-race-a7cd52c2-466b-487e-bc9a-041380f73260: Found 0 pods out of 5
  Apr 19 16:30:05.590: INFO: Pod name wrapped-volume-race-a7cd52c2-466b-487e-bc9a-041380f73260: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/19/24 16:30:05.59
  STEP: Creating RC which spawns configmap-volume pods @ 04/19/24 16:30:05.646
  Apr 19 16:30:05.674: INFO: Pod name wrapped-volume-race-58df13a0-52c1-480e-8caf-7f9ccc45249d: Found 0 pods out of 5
  Apr 19 16:30:10.713: INFO: Pod name wrapped-volume-race-58df13a0-52c1-480e-8caf-7f9ccc45249d: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/19/24 16:30:10.713
  STEP: Creating RC which spawns configmap-volume pods @ 04/19/24 16:30:10.808
  Apr 19 16:30:10.886: INFO: Pod name wrapped-volume-race-91d1a833-5acd-4e60-9bb7-95db9184c426: Found 1 pods out of 5
  Apr 19 16:30:15.918: INFO: Pod name wrapped-volume-race-91d1a833-5acd-4e60-9bb7-95db9184c426: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 04/19/24 16:30:15.918
  Apr 19 16:30:16.046: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-91d1a833-5acd-4e60-9bb7-95db9184c426 in namespace emptydir-wrapper-7543, will wait for the garbage collector to delete the pods @ 04/19/24 16:30:16.06
  Apr 19 16:30:16.144: INFO: Deleting ReplicationController wrapped-volume-race-91d1a833-5acd-4e60-9bb7-95db9184c426 took: 21.462353ms
  Apr 19 16:30:16.245: INFO: Terminating ReplicationController wrapped-volume-race-91d1a833-5acd-4e60-9bb7-95db9184c426 pods took: 100.58208ms
  STEP: deleting ReplicationController wrapped-volume-race-58df13a0-52c1-480e-8caf-7f9ccc45249d in namespace emptydir-wrapper-7543, will wait for the garbage collector to delete the pods @ 04/19/24 16:30:18.347
  Apr 19 16:30:18.434: INFO: Deleting ReplicationController wrapped-volume-race-58df13a0-52c1-480e-8caf-7f9ccc45249d took: 20.778271ms
  Apr 19 16:30:18.534: INFO: Terminating ReplicationController wrapped-volume-race-58df13a0-52c1-480e-8caf-7f9ccc45249d pods took: 100.285911ms
  STEP: deleting ReplicationController wrapped-volume-race-a7cd52c2-466b-487e-bc9a-041380f73260 in namespace emptydir-wrapper-7543, will wait for the garbage collector to delete the pods @ 04/19/24 16:30:20.235
  Apr 19 16:30:20.317: INFO: Deleting ReplicationController wrapped-volume-race-a7cd52c2-466b-487e-bc9a-041380f73260 took: 18.060417ms
  Apr 19 16:30:20.518: INFO: Terminating ReplicationController wrapped-volume-race-a7cd52c2-466b-487e-bc9a-041380f73260 pods took: 201.144356ms
  STEP: Cleaning up the configMaps @ 04/19/24 16:30:22.72
  STEP: Destroying namespace "emptydir-wrapper-7543" for this suite. @ 04/19/24 16:30:23.305
â€¢ [23.475 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 04/19/24 16:30:23.332
  Apr 19 16:30:23.332: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename sched-preemption @ 04/19/24 16:30:23.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:30:23.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:30:23.365
  Apr 19 16:30:23.392: INFO: Waiting up to 1m0s for all nodes to be ready
  Apr 19 16:31:23.462: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/19/24 16:31:23.475
  Apr 19 16:31:23.539: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Apr 19 16:31:23.551: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Apr 19 16:31:23.644: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Apr 19 16:31:23.673: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Apr 19 16:31:23.734: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Apr 19 16:31:23.757: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/19/24 16:31:23.757
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 04/19/24 16:31:25.813
  Apr 19 16:31:29.913: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-167" for this suite. @ 04/19/24 16:31:30.012
â€¢ [66.700 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 04/19/24 16:31:30.056
  Apr 19 16:31:30.057: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename security-context-test @ 04/19/24 16:31:30.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:31:30.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:31:30.109
  Apr 19 16:31:36.270: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4869" for this suite. @ 04/19/24 16:31:36.297
â€¢ [6.257 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 04/19/24 16:31:36.318
  Apr 19 16:31:36.318: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename endpointslice @ 04/19/24 16:31:36.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:31:36.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:31:36.384
  STEP: getting /apis @ 04/19/24 16:31:36.391
  STEP: getting /apis/discovery.k8s.io @ 04/19/24 16:31:36.399
  STEP: getting /apis/discovery.k8s.iov1 @ 04/19/24 16:31:36.402
  STEP: creating @ 04/19/24 16:31:36.405
  STEP: getting @ 04/19/24 16:31:36.435
  STEP: listing @ 04/19/24 16:31:36.443
  STEP: watching @ 04/19/24 16:31:36.449
  Apr 19 16:31:36.449: INFO: starting watch
  STEP: cluster-wide listing @ 04/19/24 16:31:36.451
  STEP: cluster-wide watching @ 04/19/24 16:31:36.461
  Apr 19 16:31:36.461: INFO: starting watch
  STEP: patching @ 04/19/24 16:31:36.463
  STEP: updating @ 04/19/24 16:31:36.479
  Apr 19 16:31:36.492: INFO: waiting for watch events with expected annotations
  Apr 19 16:31:36.493: INFO: saw patched and updated annotations
  STEP: deleting @ 04/19/24 16:31:36.494
  STEP: deleting a collection @ 04/19/24 16:31:36.516
  Apr 19 16:31:36.542: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8995" for this suite. @ 04/19/24 16:31:36.554
â€¢ [0.253 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 04/19/24 16:31:36.571
  Apr 19 16:31:36.571: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename csistoragecapacity @ 04/19/24 16:31:36.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:31:36.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:31:36.619
  STEP: getting /apis @ 04/19/24 16:31:36.655
  STEP: getting /apis/storage.k8s.io @ 04/19/24 16:31:36.663
  STEP: getting /apis/storage.k8s.io/v1 @ 04/19/24 16:31:36.665
  STEP: creating @ 04/19/24 16:31:36.667
  STEP: watching @ 04/19/24 16:31:36.721
  Apr 19 16:31:36.721: INFO: starting watch
  STEP: getting @ 04/19/24 16:31:36.752
  STEP: listing in namespace @ 04/19/24 16:31:36.761
  STEP: listing across namespaces @ 04/19/24 16:31:36.772
  STEP: patching @ 04/19/24 16:31:36.788
  STEP: updating @ 04/19/24 16:31:36.795
  Apr 19 16:31:36.806: INFO: waiting for watch events with expected annotations in namespace
  Apr 19 16:31:36.806: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 04/19/24 16:31:36.807
  STEP: deleting a collection @ 04/19/24 16:31:36.831
  Apr 19 16:31:36.869: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-9527" for this suite. @ 04/19/24 16:31:36.883
â€¢ [0.329 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 04/19/24 16:31:36.915
  Apr 19 16:31:36.915: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename tables @ 04/19/24 16:31:36.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:31:36.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:31:36.995
  Apr 19 16:31:37.006: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-5818" for this suite. @ 04/19/24 16:31:37.023
â€¢ [0.128 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 04/19/24 16:31:37.046
  Apr 19 16:31:37.046: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename downward-api @ 04/19/24 16:31:37.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:31:37.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:31:37.089
  STEP: Creating a pod to test downward API volume plugin @ 04/19/24 16:31:37.095
  STEP: Saw pod success @ 04/19/24 16:31:41.147
  Apr 19 16:31:41.158: INFO: Trying to get logs from node eixo7oojiese-3 pod downwardapi-volume-ddd22845-f18b-4b6b-816d-a33ffcb9b0df container client-container: <nil>
  STEP: delete the pod @ 04/19/24 16:31:41.18
  Apr 19 16:31:41.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-326" for this suite. @ 04/19/24 16:31:41.247
â€¢ [4.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 04/19/24 16:31:41.269
  Apr 19 16:31:41.269: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename dns @ 04/19/24 16:31:41.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:31:41.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:31:41.345
  STEP: Creating a test headless service @ 04/19/24 16:31:41.356
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4675.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-4675.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4675.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-4675.svc.cluster.local;sleep 1; done
   @ 04/19/24 16:31:41.376
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4675.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-4675.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4675.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-4675.svc.cluster.local;sleep 1; done
   @ 04/19/24 16:31:41.376
  STEP: creating a pod to probe DNS @ 04/19/24 16:31:41.376
  STEP: submitting the pod to kubernetes @ 04/19/24 16:31:41.377
  STEP: retrieving the pod @ 04/19/24 16:31:43.427
  STEP: looking for the results for each expected name from probers @ 04/19/24 16:31:43.435
  Apr 19 16:31:43.453: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:43.461: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:43.469: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:43.477: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:43.484: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:43.492: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:43.499: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:43.506: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:43.507: INFO: Lookups using dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4675.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4675.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local jessie_udp@dns-test-service-2.dns-4675.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4675.svc.cluster.local]

  Apr 19 16:31:43.520: INFO: Pod client logs for webserver: 
  Apr 19 16:31:43.533: INFO: Pod client logs for querier: 
  Apr 19 16:31:43.545: INFO: Pod client logs for jessie-querier: 
  Apr 19 16:31:48.556: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:48.563: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:48.573: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:48.582: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:48.591: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:48.599: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:48.611: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:48.621: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:48.621: INFO: Lookups using dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4675.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4675.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local jessie_udp@dns-test-service-2.dns-4675.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4675.svc.cluster.local]

  Apr 19 16:31:48.641: INFO: Pod client logs for webserver: 
  Apr 19 16:31:48.653: INFO: Pod client logs for querier: 
  Apr 19 16:31:48.674: INFO: Pod client logs for jessie-querier: 
  Apr 19 16:31:53.558: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:53.570: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:53.581: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:53.593: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:53.606: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:53.618: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:53.628: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:53.640: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:53.640: INFO: Lookups using dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4675.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4675.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local jessie_udp@dns-test-service-2.dns-4675.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4675.svc.cluster.local]

  Apr 19 16:31:53.658: INFO: Pod client logs for webserver: 
  Apr 19 16:31:53.702: INFO: Pod client logs for querier: 
  Apr 19 16:31:53.716: INFO: Pod client logs for jessie-querier: 
  Apr 19 16:31:58.560: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:58.573: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:58.591: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:58.608: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:58.624: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:58.638: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:58.648: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:58.660: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:31:58.660: INFO: Lookups using dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4675.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4675.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local jessie_udp@dns-test-service-2.dns-4675.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4675.svc.cluster.local]

  Apr 19 16:31:58.678: INFO: Pod client logs for webserver: 
  Apr 19 16:31:58.699: INFO: Pod client logs for querier: 
  Apr 19 16:31:58.725: INFO: Pod client logs for jessie-querier: 
  Apr 19 16:32:03.560: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:32:03.569: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:32:03.582: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:32:03.591: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:32:03.600: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:32:03.610: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:32:03.620: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:32:03.628: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:32:03.629: INFO: Lookups using dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4675.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4675.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local jessie_udp@dns-test-service-2.dns-4675.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4675.svc.cluster.local]

  Apr 19 16:32:03.648: INFO: Pod client logs for webserver: 
  Apr 19 16:32:03.662: INFO: Pod client logs for querier: 
  Apr 19 16:32:03.682: INFO: Pod client logs for jessie-querier: 
  Apr 19 16:32:08.559: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:32:08.570: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:32:08.584: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:32:08.594: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:32:08.605: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:32:08.616: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:32:08.622: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:32:08.630: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:32:08.631: INFO: Lookups using dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local wheezy_udp@dns-test-service-2.dns-4675.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4675.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local jessie_udp@dns-test-service-2.dns-4675.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4675.svc.cluster.local]

  Apr 19 16:32:08.645: INFO: Pod client logs for webserver: 
  Apr 19 16:32:08.657: INFO: Pod client logs for querier: 
  Apr 19 16:32:08.672: INFO: Pod client logs for jessie-querier: 
  Apr 19 16:32:13.616: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:32:13.632: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:32:13.643: INFO: Unable to read jessie_udp@dns-test-service-2.dns-4675.svc.cluster.local from pod dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d: the server could not find the requested resource (get pods dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d)
  Apr 19 16:32:13.654: INFO: Lookups using dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d failed for: [jessie_udp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4675.svc.cluster.local jessie_udp@dns-test-service-2.dns-4675.svc.cluster.local]

  Apr 19 16:32:13.671: INFO: Pod client logs for webserver: 
  Apr 19 16:32:13.753: INFO: Pod client logs for querier: 
  Apr 19 16:32:13.766: INFO: Pod client logs for jessie-querier: 
  Apr 19 16:32:18.654: INFO: DNS probes using dns-4675/dns-test-2a41c824-5c88-4843-a8a4-5b9a9493440d succeeded

  Apr 19 16:32:18.655: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/19/24 16:32:18.673
  STEP: deleting the test headless service @ 04/19/24 16:32:18.736
  STEP: Destroying namespace "dns-4675" for this suite. @ 04/19/24 16:32:18.765
â€¢ [37.510 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 04/19/24 16:32:18.78
  Apr 19 16:32:18.780: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename downward-api @ 04/19/24 16:32:18.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:32:18.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:32:18.823
  STEP: Creating a pod to test downward api env vars @ 04/19/24 16:32:18.829
  STEP: Saw pod success @ 04/19/24 16:32:22.873
  Apr 19 16:32:22.881: INFO: Trying to get logs from node eixo7oojiese-3 pod downward-api-50da02f6-eab5-4fee-b991-91b3689c2353 container dapi-container: <nil>
  STEP: delete the pod @ 04/19/24 16:32:22.907
  Apr 19 16:32:22.947: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7675" for this suite. @ 04/19/24 16:32:22.962
â€¢ [4.198 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 04/19/24 16:32:22.981
  Apr 19 16:32:22.981: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename gc @ 04/19/24 16:32:22.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:32:23.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:32:23.034
  Apr 19 16:32:23.111: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"4d998c76-c51f-4d56-80e8-07feb0704697", Controller:(*bool)(0xc00298ce1e), BlockOwnerDeletion:(*bool)(0xc00298ce1f)}}
  Apr 19 16:32:23.125: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"dd4556f5-64aa-4757-88fc-37e7280fd8b8", Controller:(*bool)(0xc00419bb56), BlockOwnerDeletion:(*bool)(0xc00419bb57)}}
  Apr 19 16:32:23.135: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"a2ff296a-52fe-41d6-8779-1aa1db8f6742", Controller:(*bool)(0xc00298d0a6), BlockOwnerDeletion:(*bool)(0xc00298d0a7)}}
  Apr 19 16:32:28.154: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-680" for this suite. @ 04/19/24 16:32:28.171
â€¢ [5.209 seconds]
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 04/19/24 16:32:28.191
  Apr 19 16:32:28.191: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename downward-api @ 04/19/24 16:32:28.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:32:28.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:32:28.254
  STEP: Creating a pod to test downward API volume plugin @ 04/19/24 16:32:28.263
  STEP: Saw pod success @ 04/19/24 16:32:32.31
  Apr 19 16:32:32.319: INFO: Trying to get logs from node eixo7oojiese-3 pod downwardapi-volume-74ccc90c-b6ca-4526-bc5a-95f61e61e046 container client-container: <nil>
  STEP: delete the pod @ 04/19/24 16:32:32.34
  Apr 19 16:32:32.383: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8949" for this suite. @ 04/19/24 16:32:32.396
â€¢ [4.224 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 04/19/24 16:32:32.43
  Apr 19 16:32:32.430: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename resourcequota @ 04/19/24 16:32:32.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:32:32.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:32:32.489
  STEP: Counting existing ResourceQuota @ 04/19/24 16:32:49.508
  STEP: Creating a ResourceQuota @ 04/19/24 16:32:54.519
  STEP: Ensuring resource quota status is calculated @ 04/19/24 16:32:54.539
  STEP: Creating a ConfigMap @ 04/19/24 16:32:56.55
  STEP: Ensuring resource quota status captures configMap creation @ 04/19/24 16:32:56.576
  STEP: Deleting a ConfigMap @ 04/19/24 16:32:58.596
  STEP: Ensuring resource quota status released usage @ 04/19/24 16:32:58.618
  Apr 19 16:33:00.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1550" for this suite. @ 04/19/24 16:33:00.646
â€¢ [28.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 04/19/24 16:33:00.684
  Apr 19 16:33:00.684: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename pods @ 04/19/24 16:33:00.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:33:00.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:33:00.742
  STEP: creating the pod @ 04/19/24 16:33:00.751
  STEP: setting up watch @ 04/19/24 16:33:00.753
  STEP: submitting the pod to kubernetes @ 04/19/24 16:33:00.864
  STEP: verifying the pod is in kubernetes @ 04/19/24 16:33:00.892
  STEP: verifying pod creation was observed @ 04/19/24 16:33:00.908
  STEP: deleting the pod gracefully @ 04/19/24 16:33:02.944
  STEP: verifying pod deletion was observed @ 04/19/24 16:33:02.97
  Apr 19 16:33:03.798: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-188" for this suite. @ 04/19/24 16:33:03.812
â€¢ [3.149 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 04/19/24 16:33:03.843
  Apr 19 16:33:03.843: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename downward-api @ 04/19/24 16:33:03.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:33:03.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:33:03.897
  STEP: Creating a pod to test downward API volume plugin @ 04/19/24 16:33:03.908
  STEP: Saw pod success @ 04/19/24 16:33:07.976
  Apr 19 16:33:07.986: INFO: Trying to get logs from node eixo7oojiese-3 pod downwardapi-volume-cbd33817-0db3-4cfc-a086-43ad28d0e53a container client-container: <nil>
  STEP: delete the pod @ 04/19/24 16:33:08.007
  Apr 19 16:33:08.098: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3966" for this suite. @ 04/19/24 16:33:08.112
â€¢ [4.290 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 04/19/24 16:33:08.14
  Apr 19 16:33:08.140: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename svcaccounts @ 04/19/24 16:33:08.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:33:08.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:33:08.186
  STEP: Creating ServiceAccount "e2e-sa-zwd2l"  @ 04/19/24 16:33:08.195
  Apr 19 16:33:08.210: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-zwd2l"  @ 04/19/24 16:33:08.21
  Apr 19 16:33:08.229: INFO: AutomountServiceAccountToken: true
  Apr 19 16:33:08.231: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2503" for this suite. @ 04/19/24 16:33:08.244
â€¢ [0.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 04/19/24 16:33:08.301
  Apr 19 16:33:08.302: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename runtimeclass @ 04/19/24 16:33:08.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:33:08.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:33:08.355
  Apr 19 16:33:08.383: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7795" for this suite. @ 04/19/24 16:33:08.393
â€¢ [0.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 04/19/24 16:33:08.426
  Apr 19 16:33:08.426: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename cronjob @ 04/19/24 16:33:08.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:33:08.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:33:08.479
  STEP: Creating a ForbidConcurrent cronjob @ 04/19/24 16:33:08.491
  STEP: Ensuring a job is scheduled @ 04/19/24 16:33:08.511
  STEP: Ensuring exactly one is scheduled @ 04/19/24 16:34:00.523
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 04/19/24 16:34:00.531
  STEP: Ensuring no more jobs are scheduled @ 04/19/24 16:34:00.545
  STEP: Removing cronjob @ 04/19/24 16:39:00.57
  Apr 19 16:39:00.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6075" for this suite. @ 04/19/24 16:39:00.625
â€¢ [352.218 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 04/19/24 16:39:00.653
  Apr 19 16:39:00.653: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename gc @ 04/19/24 16:39:00.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:39:00.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:39:00.719
  STEP: create the rc @ 04/19/24 16:39:00.742
  W0419 16:39:00.755154      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 04/19/24 16:39:06.77
  STEP: wait for the rc to be deleted @ 04/19/24 16:39:06.797
  Apr 19 16:39:07.892: INFO: 80 pods remaining
  Apr 19 16:39:07.892: INFO: 80 pods has nil DeletionTimestamp
  Apr 19 16:39:07.892: INFO: 
  Apr 19 16:39:08.873: INFO: 71 pods remaining
  Apr 19 16:39:08.873: INFO: 70 pods has nil DeletionTimestamp
  Apr 19 16:39:08.874: INFO: 
  Apr 19 16:39:09.830: INFO: 60 pods remaining
  Apr 19 16:39:09.830: INFO: 60 pods has nil DeletionTimestamp
  Apr 19 16:39:09.830: INFO: 
  Apr 19 16:39:10.825: INFO: 40 pods remaining
  Apr 19 16:39:10.825: INFO: 40 pods has nil DeletionTimestamp
  Apr 19 16:39:10.825: INFO: 
  Apr 19 16:39:11.854: INFO: 34 pods remaining
  Apr 19 16:39:11.855: INFO: 31 pods has nil DeletionTimestamp
  Apr 19 16:39:11.855: INFO: 
  Apr 19 16:39:12.811: INFO: 20 pods remaining
  Apr 19 16:39:12.812: INFO: 20 pods has nil DeletionTimestamp
  Apr 19 16:39:12.812: INFO: 
  STEP: Gathering metrics @ 04/19/24 16:39:13.821
  Apr 19 16:39:14.260: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 19 16:39:14.266: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9794" for this suite. @ 04/19/24 16:39:14.28
â€¢ [13.644 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 04/19/24 16:39:14.304
  Apr 19 16:39:14.304: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename emptydir @ 04/19/24 16:39:14.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:39:14.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:39:14.351
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 04/19/24 16:39:14.359
  STEP: Saw pod success @ 04/19/24 16:39:18.422
  Apr 19 16:39:18.432: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-3dc5eadf-a134-42e0-b60d-21e857f542df container test-container: <nil>
  STEP: delete the pod @ 04/19/24 16:39:18.461
  Apr 19 16:39:18.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9756" for this suite. @ 04/19/24 16:39:18.505
â€¢ [4.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 04/19/24 16:39:18.535
  Apr 19 16:39:18.535: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/19/24 16:39:18.538
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:39:18.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:39:18.583
  Apr 19 16:39:18.590: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/19/24 16:39:20.284
  Apr 19 16:39:20.285: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-3345 --namespace=crd-publish-openapi-3345 create -f -'
  Apr 19 16:39:21.180: INFO: stderr: ""
  Apr 19 16:39:21.180: INFO: stdout: "e2e-test-crd-publish-openapi-463-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Apr 19 16:39:21.180: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-3345 --namespace=crd-publish-openapi-3345 delete e2e-test-crd-publish-openapi-463-crds test-cr'
  Apr 19 16:39:21.442: INFO: stderr: ""
  Apr 19 16:39:21.442: INFO: stdout: "e2e-test-crd-publish-openapi-463-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Apr 19 16:39:21.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-3345 --namespace=crd-publish-openapi-3345 apply -f -'
  Apr 19 16:39:21.801: INFO: stderr: ""
  Apr 19 16:39:21.801: INFO: stdout: "e2e-test-crd-publish-openapi-463-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Apr 19 16:39:21.802: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-3345 --namespace=crd-publish-openapi-3345 delete e2e-test-crd-publish-openapi-463-crds test-cr'
  Apr 19 16:39:21.976: INFO: stderr: ""
  Apr 19 16:39:21.976: INFO: stdout: "e2e-test-crd-publish-openapi-463-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 04/19/24 16:39:21.977
  Apr 19 16:39:21.977: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-3345 explain e2e-test-crd-publish-openapi-463-crds'
  Apr 19 16:39:22.907: INFO: stderr: ""
  Apr 19 16:39:22.907: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-463-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Apr 19 16:39:24.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3345" for this suite. @ 04/19/24 16:39:24.604
â€¢ [6.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 04/19/24 16:39:24.626
  Apr 19 16:39:24.626: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename watch @ 04/19/24 16:39:24.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:39:24.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:39:24.659
  STEP: creating a watch on configmaps with label A @ 04/19/24 16:39:24.664
  STEP: creating a watch on configmaps with label B @ 04/19/24 16:39:24.666
  STEP: creating a watch on configmaps with label A or B @ 04/19/24 16:39:24.668
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 04/19/24 16:39:24.67
  Apr 19 16:39:24.679: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6440  f3c80164-c922-4bc6-9f0a-02bc09476ecf 23018 0 2024-04-19 16:39:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-19 16:39:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 19 16:39:24.679: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6440  f3c80164-c922-4bc6-9f0a-02bc09476ecf 23018 0 2024-04-19 16:39:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-19 16:39:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 04/19/24 16:39:24.68
  Apr 19 16:39:24.695: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6440  f3c80164-c922-4bc6-9f0a-02bc09476ecf 23021 0 2024-04-19 16:39:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-19 16:39:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 19 16:39:24.696: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6440  f3c80164-c922-4bc6-9f0a-02bc09476ecf 23021 0 2024-04-19 16:39:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-19 16:39:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 04/19/24 16:39:24.697
  Apr 19 16:39:24.710: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6440  f3c80164-c922-4bc6-9f0a-02bc09476ecf 23024 0 2024-04-19 16:39:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-19 16:39:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 19 16:39:24.711: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6440  f3c80164-c922-4bc6-9f0a-02bc09476ecf 23024 0 2024-04-19 16:39:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-19 16:39:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 04/19/24 16:39:24.711
  Apr 19 16:39:24.721: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6440  f3c80164-c922-4bc6-9f0a-02bc09476ecf 23025 0 2024-04-19 16:39:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-19 16:39:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 19 16:39:24.721: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-6440  f3c80164-c922-4bc6-9f0a-02bc09476ecf 23025 0 2024-04-19 16:39:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-04-19 16:39:24 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 04/19/24 16:39:24.721
  Apr 19 16:39:24.728: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6440  7f8be340-c347-424e-82d6-2f4b45f9eb01 23027 0 2024-04-19 16:39:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-19 16:39:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 19 16:39:24.728: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6440  7f8be340-c347-424e-82d6-2f4b45f9eb01 23027 0 2024-04-19 16:39:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-19 16:39:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 04/19/24 16:39:34.732
  Apr 19 16:39:34.754: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6440  7f8be340-c347-424e-82d6-2f4b45f9eb01 23064 0 2024-04-19 16:39:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-19 16:39:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 19 16:39:34.756: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-6440  7f8be340-c347-424e-82d6-2f4b45f9eb01 23064 0 2024-04-19 16:39:24 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-04-19 16:39:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 19 16:39:44.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6440" for this suite. @ 04/19/24 16:39:44.776
â€¢ [20.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 04/19/24 16:39:44.809
  Apr 19 16:39:44.809: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename webhook @ 04/19/24 16:39:44.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:39:44.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:39:44.864
  STEP: Setting up server cert @ 04/19/24 16:39:44.925
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/19/24 16:39:45.917
  STEP: Deploying the webhook pod @ 04/19/24 16:39:45.942
  STEP: Wait for the deployment to be ready @ 04/19/24 16:39:45.969
  Apr 19 16:39:45.995: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  Apr 19 16:39:48.084: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 19, 16, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 39, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 39, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:39:50.102: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 19, 16, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 39, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 39, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:39:52.101: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 19, 16, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 39, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 39, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:39:54.094: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 19, 16, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 39, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 39, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:39:56.098: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 19, 16, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 39, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 39, 46, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 39, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 04/19/24 16:39:58.096
  STEP: Verifying the service has paired with the endpoint @ 04/19/24 16:39:58.131
  Apr 19 16:39:59.131: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 19 16:39:59.148: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1400-crds.webhook.example.com via the AdmissionRegistration API @ 04/19/24 16:39:59.693
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/19/24 16:39:59.733
  Apr 19 16:40:01.870: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-657" for this suite. @ 04/19/24 16:40:02.528
  STEP: Destroying namespace "webhook-markers-2133" for this suite. @ 04/19/24 16:40:02.548
â€¢ [17.751 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 04/19/24 16:40:02.571
  Apr 19 16:40:02.571: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename secrets @ 04/19/24 16:40:02.577
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:40:02.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:40:02.613
  STEP: creating secret secrets-2920/secret-test-7f100043-eb96-4a85-a6d1-3e966df7beb3 @ 04/19/24 16:40:02.62
  STEP: Creating a pod to test consume secrets @ 04/19/24 16:40:02.632
  STEP: Saw pod success @ 04/19/24 16:40:06.682
  Apr 19 16:40:06.690: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-configmaps-befc8c99-4d0a-4cd6-b491-a31afcbcd7e2 container env-test: <nil>
  STEP: delete the pod @ 04/19/24 16:40:06.742
  Apr 19 16:40:06.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2920" for this suite. @ 04/19/24 16:40:06.795
â€¢ [4.242 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 04/19/24 16:40:06.833
  Apr 19 16:40:06.833: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename limitrange @ 04/19/24 16:40:06.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:40:06.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:40:06.876
  STEP: Creating LimitRange "e2e-limitrange-rdt6p" in namespace "limitrange-9449" @ 04/19/24 16:40:06.883
  STEP: Creating another limitRange in another namespace @ 04/19/24 16:40:06.9
  Apr 19 16:40:06.931: INFO: Namespace "e2e-limitrange-rdt6p-6382" created
  Apr 19 16:40:06.931: INFO: Creating LimitRange "e2e-limitrange-rdt6p" in namespace "e2e-limitrange-rdt6p-6382"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-rdt6p" @ 04/19/24 16:40:06.944
  Apr 19 16:40:06.950: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-rdt6p" in "limitrange-9449" namespace @ 04/19/24 16:40:06.951
  Apr 19 16:40:06.966: INFO: LimitRange "e2e-limitrange-rdt6p" has been patched
  STEP: Delete LimitRange "e2e-limitrange-rdt6p" by Collection with labelSelector: "e2e-limitrange-rdt6p=patched" @ 04/19/24 16:40:06.967
  STEP: Confirm that the limitRange "e2e-limitrange-rdt6p" has been deleted @ 04/19/24 16:40:06.985
  Apr 19 16:40:06.986: INFO: Requesting list of LimitRange to confirm quantity
  Apr 19 16:40:06.995: INFO: Found 0 LimitRange with label "e2e-limitrange-rdt6p=patched"
  Apr 19 16:40:06.996: INFO: LimitRange "e2e-limitrange-rdt6p" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-rdt6p" @ 04/19/24 16:40:06.996
  Apr 19 16:40:07.003: INFO: Found 1 limitRange
  Apr 19 16:40:07.004: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-9449" for this suite. @ 04/19/24 16:40:07.017
  STEP: Destroying namespace "e2e-limitrange-rdt6p-6382" for this suite. @ 04/19/24 16:40:07.038
â€¢ [0.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 04/19/24 16:40:07.077
  Apr 19 16:40:07.077: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename services @ 04/19/24 16:40:07.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:40:07.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:40:07.117
  STEP: creating service in namespace services-8120 @ 04/19/24 16:40:07.125
  STEP: creating service affinity-clusterip in namespace services-8120 @ 04/19/24 16:40:07.125
  STEP: creating replication controller affinity-clusterip in namespace services-8120 @ 04/19/24 16:40:07.143
  I0419 16:40:07.165200      14 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-8120, replica count: 3
  I0419 16:40:10.221216      14 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 19 16:40:10.243: INFO: Creating new exec pod
  Apr 19 16:40:13.296: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-8120 exec execpod-affinitytlrjx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Apr 19 16:40:13.690: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Apr 19 16:40:13.690: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 19 16:40:13.691: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-8120 exec execpod-affinitytlrjx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.37.102 80'
  Apr 19 16:40:13.972: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.37.102 80\nConnection to 10.233.37.102 80 port [tcp/http] succeeded!\n"
  Apr 19 16:40:13.972: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 19 16:40:13.973: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-8120 exec execpod-affinitytlrjx -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.37.102:80/ ; done'
  Apr 19 16:40:14.475: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.37.102:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.37.102:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.37.102:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.37.102:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.37.102:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.37.102:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.37.102:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.37.102:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.37.102:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.37.102:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.37.102:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.37.102:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.37.102:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.37.102:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.37.102:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.37.102:80/\n"
  Apr 19 16:40:14.475: INFO: stdout: "\naffinity-clusterip-mtfsb\naffinity-clusterip-mtfsb\naffinity-clusterip-mtfsb\naffinity-clusterip-mtfsb\naffinity-clusterip-mtfsb\naffinity-clusterip-mtfsb\naffinity-clusterip-mtfsb\naffinity-clusterip-mtfsb\naffinity-clusterip-mtfsb\naffinity-clusterip-mtfsb\naffinity-clusterip-mtfsb\naffinity-clusterip-mtfsb\naffinity-clusterip-mtfsb\naffinity-clusterip-mtfsb\naffinity-clusterip-mtfsb\naffinity-clusterip-mtfsb"
  Apr 19 16:40:14.475: INFO: Received response from host: affinity-clusterip-mtfsb
  Apr 19 16:40:14.475: INFO: Received response from host: affinity-clusterip-mtfsb
  Apr 19 16:40:14.475: INFO: Received response from host: affinity-clusterip-mtfsb
  Apr 19 16:40:14.475: INFO: Received response from host: affinity-clusterip-mtfsb
  Apr 19 16:40:14.475: INFO: Received response from host: affinity-clusterip-mtfsb
  Apr 19 16:40:14.475: INFO: Received response from host: affinity-clusterip-mtfsb
  Apr 19 16:40:14.475: INFO: Received response from host: affinity-clusterip-mtfsb
  Apr 19 16:40:14.475: INFO: Received response from host: affinity-clusterip-mtfsb
  Apr 19 16:40:14.475: INFO: Received response from host: affinity-clusterip-mtfsb
  Apr 19 16:40:14.475: INFO: Received response from host: affinity-clusterip-mtfsb
  Apr 19 16:40:14.475: INFO: Received response from host: affinity-clusterip-mtfsb
  Apr 19 16:40:14.475: INFO: Received response from host: affinity-clusterip-mtfsb
  Apr 19 16:40:14.475: INFO: Received response from host: affinity-clusterip-mtfsb
  Apr 19 16:40:14.475: INFO: Received response from host: affinity-clusterip-mtfsb
  Apr 19 16:40:14.475: INFO: Received response from host: affinity-clusterip-mtfsb
  Apr 19 16:40:14.475: INFO: Received response from host: affinity-clusterip-mtfsb
  Apr 19 16:40:14.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 19 16:40:14.485: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-8120, will wait for the garbage collector to delete the pods @ 04/19/24 16:40:14.513
  Apr 19 16:40:14.584: INFO: Deleting ReplicationController affinity-clusterip took: 13.810051ms
  Apr 19 16:40:14.686: INFO: Terminating ReplicationController affinity-clusterip pods took: 102.011511ms
  STEP: Destroying namespace "services-8120" for this suite. @ 04/19/24 16:40:17.828
â€¢ [10.763 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 04/19/24 16:40:17.84
  Apr 19 16:40:17.840: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename replication-controller @ 04/19/24 16:40:17.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:40:17.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:40:17.874
  STEP: Creating ReplicationController "e2e-rc-b85v9" @ 04/19/24 16:40:17.879
  Apr 19 16:40:17.889: INFO: Get Replication Controller "e2e-rc-b85v9" to confirm replicas
  Apr 19 16:40:18.897: INFO: Get Replication Controller "e2e-rc-b85v9" to confirm replicas
  Apr 19 16:40:18.908: INFO: Found 1 replicas for "e2e-rc-b85v9" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-b85v9" @ 04/19/24 16:40:18.909
  STEP: Updating a scale subresource @ 04/19/24 16:40:18.918
  STEP: Verifying replicas where modified for replication controller "e2e-rc-b85v9" @ 04/19/24 16:40:18.937
  Apr 19 16:40:18.937: INFO: Get Replication Controller "e2e-rc-b85v9" to confirm replicas
  Apr 19 16:40:19.960: INFO: Get Replication Controller "e2e-rc-b85v9" to confirm replicas
  Apr 19 16:40:19.980: INFO: Found 2 replicas for "e2e-rc-b85v9" replication controller
  Apr 19 16:40:19.981: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6902" for this suite. @ 04/19/24 16:40:20.027
â€¢ [2.207 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 04/19/24 16:40:20.055
  Apr 19 16:40:20.055: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename deployment @ 04/19/24 16:40:20.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:40:20.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:40:20.095
  Apr 19 16:40:20.102: INFO: Creating deployment "test-recreate-deployment"
  Apr 19 16:40:20.115: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Apr 19 16:40:20.151: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  Apr 19 16:40:22.166: INFO: Waiting deployment "test-recreate-deployment" to complete
  Apr 19 16:40:22.171: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Apr 19 16:40:22.194: INFO: Updating deployment test-recreate-deployment
  Apr 19 16:40:22.194: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Apr 19 16:40:22.345: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1176",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ccae8cbe-b26a-45c5-9811-1fe2be79e857",
      ResourceVersion: (string) (len=5) "23446",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849141620,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141620,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 19 16:40:22.374: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1176",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "953586f6-1adf-4959-84ab-7863f5cf8e46",
      ResourceVersion: (string) (len=5) "23444",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849141622,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "ccae8cbe-b26a-45c5-9811-1fe2be79e857",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 63 61 65 38 63  62 65 2d 62 32 36 61 2d  |\"ccae8cbe-b26a-|
              00000120  34 35 63 35 2d 39 38 31  31 2d 31 66 65 32 62 65  |45c5-9811-1fe2be|
              00000130  37 39 65 38 35 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |79e857\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 19 16:40:22.376: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Apr 19 16:40:22.376: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-5cf87b5b86",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1176",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "13aa64f9-8dc3-48ea-b6ea-21f8e771e766",
      ResourceVersion: (string) (len=5) "23434",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849141620,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "ccae8cbe-b26a-45c5-9811-1fe2be79e857",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 63 61 65 38 63  62 65 2d 62 32 36 61 2d  |\"ccae8cbe-b26a-|
              00000120  34 35 63 35 2d 39 38 31  31 2d 31 66 65 32 62 65  |45c5-9811-1fe2be|
              00000130  37 39 65 38 35 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |79e857\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5cf87b5b86"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 19 16:40:22.411: INFO: Pod "test-recreate-deployment-76fb77d45-57qqq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-57qqq",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-1176",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fb8987fe-4961-4225-9ea4-d192df2c2cf4",
      ResourceVersion: (string) (len=5) "23445",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849141622,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "953586f6-1adf-4959-84ab-7863f5cf8e46",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 35  33 35 38 36 66 36 2d 31  |d\":\"953586f6-1|
              00000090  61 64 66 2d 34 39 35 39  2d 38 34 61 62 2d 37 38  |adf-4959-84ab-78|
              000000a0  36 33 66 35 63 66 38 65  34 36 5c 22 7d 22 3a 7b  |63f5cf8e46\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fskjg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fskjg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.129",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849141622,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 16:40:22.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1176" for this suite. @ 04/19/24 16:40:22.434
â€¢ [2.394 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 04/19/24 16:40:22.456
  Apr 19 16:40:22.456: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename job @ 04/19/24 16:40:22.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:40:22.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:40:22.483
  STEP: Creating a job @ 04/19/24 16:40:22.488
  STEP: Ensuring active pods == parallelism @ 04/19/24 16:40:22.498
  STEP: Orphaning one of the Job's Pods @ 04/19/24 16:40:24.512
  Apr 19 16:40:25.068: INFO: Successfully updated pod "adopt-release-mfw2b"
  STEP: Checking that the Job readopts the Pod @ 04/19/24 16:40:25.068
  STEP: Removing the labels from the Job's Pod @ 04/19/24 16:40:27.083
  Apr 19 16:40:27.610: INFO: Successfully updated pod "adopt-release-mfw2b"
  STEP: Checking that the Job releases the Pod @ 04/19/24 16:40:27.61
  Apr 19 16:40:29.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7698" for this suite. @ 04/19/24 16:40:29.639
â€¢ [7.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 04/19/24 16:40:29.675
  Apr 19 16:40:29.675: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename container-runtime @ 04/19/24 16:40:29.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:40:29.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:40:29.73
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 04/19/24 16:40:29.752
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 04/19/24 16:40:45.944
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 04/19/24 16:40:45.96
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 04/19/24 16:40:45.982
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 04/19/24 16:40:45.982
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 04/19/24 16:40:46.042
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 04/19/24 16:40:49.083
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 04/19/24 16:40:50.103
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 04/19/24 16:40:50.123
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 04/19/24 16:40:50.124
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 04/19/24 16:40:50.183
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 04/19/24 16:40:51.204
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 04/19/24 16:40:53.235
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 04/19/24 16:40:53.253
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 04/19/24 16:40:53.253
  Apr 19 16:40:53.290: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5180" for this suite. @ 04/19/24 16:40:53.34
â€¢ [23.685 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 04/19/24 16:40:53.367
  Apr 19 16:40:53.368: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename subpath @ 04/19/24 16:40:53.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:40:53.407
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:40:53.416
  STEP: Setting up data @ 04/19/24 16:40:53.428
  STEP: Creating pod pod-subpath-test-downwardapi-nxvh @ 04/19/24 16:40:53.454
  STEP: Creating a pod to test atomic-volume-subpath @ 04/19/24 16:40:53.455
  STEP: Saw pod success @ 04/19/24 16:41:17.641
  Apr 19 16:41:17.650: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-subpath-test-downwardapi-nxvh container test-container-subpath-downwardapi-nxvh: <nil>
  STEP: delete the pod @ 04/19/24 16:41:17.684
  STEP: Deleting pod pod-subpath-test-downwardapi-nxvh @ 04/19/24 16:41:17.716
  Apr 19 16:41:17.716: INFO: Deleting pod "pod-subpath-test-downwardapi-nxvh" in namespace "subpath-5994"
  Apr 19 16:41:17.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5994" for this suite. @ 04/19/24 16:41:17.737
â€¢ [24.384 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 04/19/24 16:41:17.759
  Apr 19 16:41:17.759: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename deployment @ 04/19/24 16:41:17.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:41:17.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:41:17.805
  Apr 19 16:41:17.828: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Apr 19 16:41:22.847: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/19/24 16:41:22.847
  Apr 19 16:41:22.848: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Apr 19 16:41:24.859: INFO: Creating deployment "test-rollover-deployment"
  Apr 19 16:41:24.881: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Apr 19 16:41:26.909: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Apr 19 16:41:26.928: INFO: Ensure that both replica sets have 1 created replica
  Apr 19 16:41:26.951: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Apr 19 16:41:26.977: INFO: Updating deployment test-rollover-deployment
  Apr 19 16:41:26.977: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Apr 19 16:41:29.004: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Apr 19 16:41:29.019: INFO: Make sure deployment "test-rollover-deployment" is complete
  Apr 19 16:41:29.036: INFO: all replica sets need to contain the pod-template-hash label
  Apr 19 16:41:29.036: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 41, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 41, 24, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 41, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 41, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:41:31.061: INFO: all replica sets need to contain the pod-template-hash label
  Apr 19 16:41:31.062: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 41, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 41, 24, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 41, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 41, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:41:33.062: INFO: all replica sets need to contain the pod-template-hash label
  Apr 19 16:41:33.062: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 41, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 41, 24, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 41, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 41, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:41:35.058: INFO: all replica sets need to contain the pod-template-hash label
  Apr 19 16:41:35.059: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 41, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 41, 24, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 41, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 41, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:41:37.056: INFO: all replica sets need to contain the pod-template-hash label
  Apr 19 16:41:37.056: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 41, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 41, 24, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 41, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 41, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-68774655d5\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:41:39.055: INFO: 
  Apr 19 16:41:39.055: INFO: Ensure that both old replica sets have no replicas
  Apr 19 16:41:39.083: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1229",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b8b3adf4-179d-4c1b-873d-aa61b50484cf",
      ResourceVersion: (string) (len=5) "23900",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849141684,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141686,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141684,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141684,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141684,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-68774655d5\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 19 16:41:39.108: INFO: New ReplicaSet "test-rollover-deployment-68774655d5" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-68774655d5",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1229",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dffd532a-9c30-4ae5-b1ee-7d95e99f60e8",
      ResourceVersion: (string) (len=5) "23890",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849141686,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "b8b3adf4-179d-4c1b-873d-aa61b50484cf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141687,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 38 62 33 61 64  66 34 2d 31 37 39 64 2d  |\"b8b3adf4-179d-|
              00000120  34 63 31 62 2d 38 37 33  64 2d 61 61 36 31 62 35  |4c1b-873d-aa61b5|
              00000130  30 34 38 34 63 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0484cf\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 19 16:41:39.113: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Apr 19 16:41:39.114: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1229",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dc78eaa4-e300-4dae-b3bb-df6778b742d6",
      ResourceVersion: (string) (len=5) "23899",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849141677,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "b8b3adf4-179d-4c1b-873d-aa61b50484cf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141677,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141697,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  62 38 62 33 61 64 66 34  2d 31 37 39 64 2d 34 63  |b8b3adf4-179d-4c|
              000000c0  31 62 2d 38 37 33 64 2d  61 61 36 31 62 35 30 34  |1b-873d-aa61b504|
              000000d0  38 34 63 66 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |84cf\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141698,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 19 16:41:39.122: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1229",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0876e0d3-6511-4154-a420-c69d9aa3c32b",
      ResourceVersion: (string) (len=5) "23858",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849141684,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "b8b3adf4-179d-4c1b-873d-aa61b50484cf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141687,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 38 62 33 61 64  66 34 2d 31 37 39 64 2d  |\"b8b3adf4-179d-|
              00000120  34 63 31 62 2d 38 37 33  64 2d 61 61 36 31 62 35  |4c1b-873d-aa61b5|
              00000130  30 34 38 34 63 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0484cf\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141687,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 19 16:41:39.139: INFO: Pod "test-rollover-deployment-68774655d5-b7v2r" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-68774655d5-b7v2r",
      GenerateName: (string) (len=36) "test-rollover-deployment-68774655d5-",
      Namespace: (string) (len=15) "deployment-1229",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f845b5b-5f86-45c7-82eb-e4d879f5ae47",
      ResourceVersion: (string) (len=5) "23869",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849141687,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "68774655d5",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-68774655d5",
          UID: (types.UID) (len=36) "dffd532a-9c30-4ae5-b1ee-7d95e99f60e8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141687,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 64 66  66 64 35 33 32 61 2d 39  |d\":\"dffd532a-9|
              00000090  63 33 30 2d 34 61 65 35  2d 62 31 65 65 2d 37 64  |c30-4ae5-b1ee-7d|
              000000a0  39 35 65 39 39 66 36 30  65 38 5c 22 7d 22 3a 7b  |95e99f60e8\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141687,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=519) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 37 30 5c 22 7d 22  |10.233.66.70\"}"|
              000001e0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              000001f0  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000200  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wsfmh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wsfmh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141687,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141687,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141687,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849141687,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.129",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=12) "10.233.66.70",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.233.66.70"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849141687,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849141687,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a",
          ContainerID: (string) (len=72) "cri-o://f6eb2c050aa97c402452d3905f179708d1125d3038235e884ab8530d9c80a45f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 16:41:39.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1229" for this suite. @ 04/19/24 16:41:39.155
â€¢ [21.416 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 04/19/24 16:41:39.178
  Apr 19 16:41:39.178: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/19/24 16:41:39.181
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:41:39.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:41:39.223
  STEP: creating a target pod @ 04/19/24 16:41:39.231
  STEP: adding an ephemeral container @ 04/19/24 16:41:41.279
  STEP: checking pod container endpoints @ 04/19/24 16:41:43.342
  Apr 19 16:41:43.342: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-8806 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 16:41:43.342: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 16:41:43.345: INFO: ExecWithOptions: Clientset creation
  Apr 19 16:41:43.345: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-8806/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Apr 19 16:41:43.522: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 04/19/24 16:41:43.539
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 04/19/24 16:41:43.551
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 04/19/24 16:41:43.583
  Apr 19 16:41:43.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-8806" for this suite. @ 04/19/24 16:41:43.605
â€¢ [4.440 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 04/19/24 16:41:43.62
  Apr 19 16:41:43.620: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename resourcequota @ 04/19/24 16:41:43.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:41:43.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:41:43.667
  STEP: Counting existing ResourceQuota @ 04/19/24 16:41:43.673
  STEP: Creating a ResourceQuota @ 04/19/24 16:41:48.683
  STEP: Ensuring resource quota status is calculated @ 04/19/24 16:41:48.698
  STEP: Creating a ReplicationController @ 04/19/24 16:41:50.709
  STEP: Ensuring resource quota status captures replication controller creation @ 04/19/24 16:41:50.739
  STEP: Deleting a ReplicationController @ 04/19/24 16:41:52.753
  STEP: Ensuring resource quota status released usage @ 04/19/24 16:41:52.768
  Apr 19 16:41:54.777: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1438" for this suite. @ 04/19/24 16:41:54.789
â€¢ [11.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 04/19/24 16:41:54.824
  Apr 19 16:41:54.824: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename downward-api @ 04/19/24 16:41:54.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:41:54.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:41:54.882
  STEP: Creating the pod @ 04/19/24 16:41:54.89
  Apr 19 16:41:57.499: INFO: Successfully updated pod "annotationupdate9ae9d0a3-8a3d-4765-9d7b-c9376ad87c9a"
  Apr 19 16:41:59.540: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4313" for this suite. @ 04/19/24 16:41:59.555
â€¢ [4.750 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 04/19/24 16:41:59.595
  Apr 19 16:41:59.595: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename pods @ 04/19/24 16:41:59.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:41:59.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:41:59.646
  STEP: creating pod @ 04/19/24 16:41:59.655
  Apr 19 16:42:01.727: INFO: Pod pod-hostip-c3b9412c-4490-4ecc-a11f-6292e0e23355 has hostIP: 192.168.121.129
  Apr 19 16:42:01.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6210" for this suite. @ 04/19/24 16:42:01.738
â€¢ [2.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 04/19/24 16:42:01.76
  Apr 19 16:42:01.760: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename kubelet-test @ 04/19/24 16:42:01.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:42:01.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:42:01.816
  Apr 19 16:42:03.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4980" for this suite. @ 04/19/24 16:42:03.903
â€¢ [2.161 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 04/19/24 16:42:03.923
  Apr 19 16:42:03.923: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename pods @ 04/19/24 16:42:03.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:42:03.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:42:03.975
  STEP: Create set of pods @ 04/19/24 16:42:03.982
  Apr 19 16:42:04.007: INFO: created test-pod-1
  Apr 19 16:42:04.037: INFO: created test-pod-2
  Apr 19 16:42:04.073: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 04/19/24 16:42:04.073
  STEP: waiting for all pods to be deleted @ 04/19/24 16:42:06.273
  Apr 19 16:42:06.281: INFO: Pod quantity 3 is different from expected quantity 0
  Apr 19 16:42:07.295: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5410" for this suite. @ 04/19/24 16:42:07.303
â€¢ [3.402 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 04/19/24 16:42:07.327
  Apr 19 16:42:07.327: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename daemonsets @ 04/19/24 16:42:07.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:42:07.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:42:07.359
  STEP: Creating simple DaemonSet "daemon-set" @ 04/19/24 16:42:07.41
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/19/24 16:42:07.418
  Apr 19 16:42:07.438: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 16:42:07.438: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  Apr 19 16:42:08.463: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Apr 19 16:42:08.463: INFO: Node eixo7oojiese-2 is running 0 daemon pod, expected 1
  Apr 19 16:42:09.457: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 19 16:42:09.457: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 04/19/24 16:42:09.467
  Apr 19 16:42:09.482: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 04/19/24 16:42:09.482
  Apr 19 16:42:09.500: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 04/19/24 16:42:09.5
  Apr 19 16:42:09.507: INFO: Observed &DaemonSet event: ADDED
  Apr 19 16:42:09.507: INFO: Observed &DaemonSet event: MODIFIED
  Apr 19 16:42:09.508: INFO: Observed &DaemonSet event: MODIFIED
  Apr 19 16:42:09.509: INFO: Observed &DaemonSet event: MODIFIED
  Apr 19 16:42:09.510: INFO: Observed &DaemonSet event: MODIFIED
  Apr 19 16:42:09.511: INFO: Observed &DaemonSet event: MODIFIED
  Apr 19 16:42:09.511: INFO: Found daemon set daemon-set in namespace daemonsets-7205 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 19 16:42:09.511: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 04/19/24 16:42:09.512
  STEP: watching for the daemon set status to be patched @ 04/19/24 16:42:09.527
  Apr 19 16:42:09.536: INFO: Observed &DaemonSet event: ADDED
  Apr 19 16:42:09.537: INFO: Observed &DaemonSet event: MODIFIED
  Apr 19 16:42:09.538: INFO: Observed &DaemonSet event: MODIFIED
  Apr 19 16:42:09.539: INFO: Observed &DaemonSet event: MODIFIED
  Apr 19 16:42:09.540: INFO: Observed &DaemonSet event: MODIFIED
  Apr 19 16:42:09.541: INFO: Observed &DaemonSet event: MODIFIED
  Apr 19 16:42:09.541: INFO: Observed daemon set daemon-set in namespace daemonsets-7205 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Apr 19 16:42:09.542: INFO: Observed &DaemonSet event: MODIFIED
  Apr 19 16:42:09.542: INFO: Found daemon set daemon-set in namespace daemonsets-7205 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Apr 19 16:42:09.543: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 04/19/24 16:42:09.55
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7205, will wait for the garbage collector to delete the pods @ 04/19/24 16:42:09.55
  Apr 19 16:42:09.636: INFO: Deleting DaemonSet.extensions daemon-set took: 25.194723ms
  Apr 19 16:42:09.737: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.073153ms
  Apr 19 16:42:12.345: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 16:42:12.345: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 19 16:42:12.349: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24220"},"items":null}

  Apr 19 16:42:12.355: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24220"},"items":null}

  Apr 19 16:42:12.383: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7205" for this suite. @ 04/19/24 16:42:12.391
â€¢ [5.079 seconds]
------------------------------
SS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 04/19/24 16:42:12.406
  Apr 19 16:42:12.407: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename disruption @ 04/19/24 16:42:12.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:42:12.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:42:12.447
  STEP: Creating a pdb that targets all three pods in a test replica set @ 04/19/24 16:42:12.454
  STEP: Waiting for the pdb to be processed @ 04/19/24 16:42:12.466
  STEP: First trying to evict a pod which shouldn't be evictable @ 04/19/24 16:42:14.519
  STEP: Waiting for all pods to be running @ 04/19/24 16:42:14.519
  Apr 19 16:42:14.527: INFO: pods: 0 < 3
  Apr 19 16:42:16.541: INFO: running pods: 2 < 3
  STEP: locating a running pod @ 04/19/24 16:42:18.542
  STEP: Updating the pdb to allow a pod to be evicted @ 04/19/24 16:42:18.571
  STEP: Waiting for the pdb to be processed @ 04/19/24 16:42:18.598
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/19/24 16:42:20.614
  STEP: Waiting for all pods to be running @ 04/19/24 16:42:20.616
  STEP: Waiting for the pdb to observed all healthy pods @ 04/19/24 16:42:20.626
  STEP: Patching the pdb to disallow a pod to be evicted @ 04/19/24 16:42:20.678
  STEP: Waiting for the pdb to be processed @ 04/19/24 16:42:20.744
  STEP: Waiting for all pods to be running @ 04/19/24 16:42:22.776
  STEP: locating a running pod @ 04/19/24 16:42:22.787
  STEP: Deleting the pdb to allow a pod to be evicted @ 04/19/24 16:42:22.816
  STEP: Waiting for the pdb to be deleted @ 04/19/24 16:42:22.84
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 04/19/24 16:42:22.862
  STEP: Waiting for all pods to be running @ 04/19/24 16:42:22.862
  Apr 19 16:42:22.909: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6919" for this suite. @ 04/19/24 16:42:22.921
â€¢ [10.539 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 04/19/24 16:42:22.948
  Apr 19 16:42:22.948: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename namespaces @ 04/19/24 16:42:22.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:42:22.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:42:22.993
  STEP: Creating namespace "e2e-ns-hlmp7" @ 04/19/24 16:42:22.997
  Apr 19 16:42:23.019: INFO: Namespace "e2e-ns-hlmp7-1498" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-hlmp7-1498" @ 04/19/24 16:42:23.019
  Apr 19 16:42:23.036: INFO: Namespace "e2e-ns-hlmp7-1498" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-hlmp7-1498" @ 04/19/24 16:42:23.036
  Apr 19 16:42:23.051: INFO: Namespace "e2e-ns-hlmp7-1498" has []v1.FinalizerName{"kubernetes"}
  Apr 19 16:42:23.051: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9420" for this suite. @ 04/19/24 16:42:23.06
  STEP: Destroying namespace "e2e-ns-hlmp7-1498" for this suite. @ 04/19/24 16:42:23.071
â€¢ [0.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 04/19/24 16:42:23.102
  Apr 19 16:42:23.102: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename var-expansion @ 04/19/24 16:42:23.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:42:23.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:42:23.132
  STEP: creating the pod @ 04/19/24 16:42:23.138
  STEP: waiting for pod running @ 04/19/24 16:42:23.152
  STEP: creating a file in subpath @ 04/19/24 16:42:25.175
  Apr 19 16:42:25.183: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-7178 PodName:var-expansion-c7edb7a3-03be-4f89-8574-17d99a633060 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 16:42:25.183: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 16:42:25.185: INFO: ExecWithOptions: Clientset creation
  Apr 19 16:42:25.185: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-7178/pods/var-expansion-c7edb7a3-03be-4f89-8574-17d99a633060/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 04/19/24 16:42:25.304
  Apr 19 16:42:25.311: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-7178 PodName:var-expansion-c7edb7a3-03be-4f89-8574-17d99a633060 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 16:42:25.311: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 16:42:25.313: INFO: ExecWithOptions: Clientset creation
  Apr 19 16:42:25.313: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-7178/pods/var-expansion-c7edb7a3-03be-4f89-8574-17d99a633060/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 04/19/24 16:42:25.466
  Apr 19 16:42:26.006: INFO: Successfully updated pod "var-expansion-c7edb7a3-03be-4f89-8574-17d99a633060"
  STEP: waiting for annotated pod running @ 04/19/24 16:42:26.006
  STEP: deleting the pod gracefully @ 04/19/24 16:42:26.017
  Apr 19 16:42:26.018: INFO: Deleting pod "var-expansion-c7edb7a3-03be-4f89-8574-17d99a633060" in namespace "var-expansion-7178"
  Apr 19 16:42:26.043: INFO: Wait up to 5m0s for pod "var-expansion-c7edb7a3-03be-4f89-8574-17d99a633060" to be fully deleted
  Apr 19 16:42:58.294: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7178" for this suite. @ 04/19/24 16:42:58.313
â€¢ [35.236 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 04/19/24 16:42:58.342
  Apr 19 16:42:58.342: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/19/24 16:42:58.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:42:58.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:42:58.394
  Apr 19 16:42:58.401: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 04/19/24 16:43:00.27
  Apr 19 16:43:00.271: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-6955 --namespace=crd-publish-openapi-6955 create -f -'
  Apr 19 16:43:01.515: INFO: stderr: ""
  Apr 19 16:43:01.515: INFO: stdout: "e2e-test-crd-publish-openapi-1051-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Apr 19 16:43:01.516: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-6955 --namespace=crd-publish-openapi-6955 delete e2e-test-crd-publish-openapi-1051-crds test-cr'
  Apr 19 16:43:01.717: INFO: stderr: ""
  Apr 19 16:43:01.717: INFO: stdout: "e2e-test-crd-publish-openapi-1051-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Apr 19 16:43:01.718: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-6955 --namespace=crd-publish-openapi-6955 apply -f -'
  Apr 19 16:43:02.116: INFO: stderr: ""
  Apr 19 16:43:02.116: INFO: stdout: "e2e-test-crd-publish-openapi-1051-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Apr 19 16:43:02.117: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-6955 --namespace=crd-publish-openapi-6955 delete e2e-test-crd-publish-openapi-1051-crds test-cr'
  Apr 19 16:43:02.321: INFO: stderr: ""
  Apr 19 16:43:02.321: INFO: stdout: "e2e-test-crd-publish-openapi-1051-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 04/19/24 16:43:02.321
  Apr 19 16:43:02.322: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=crd-publish-openapi-6955 explain e2e-test-crd-publish-openapi-1051-crds'
  Apr 19 16:43:02.686: INFO: stderr: ""
  Apr 19 16:43:02.686: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-1051-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Apr 19 16:43:04.491: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6955" for this suite. @ 04/19/24 16:43:04.517
â€¢ [6.197 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 04/19/24 16:43:04.541
  Apr 19 16:43:04.541: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename webhook @ 04/19/24 16:43:04.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:43:04.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:43:04.604
  STEP: Setting up server cert @ 04/19/24 16:43:04.666
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/19/24 16:43:05.257
  STEP: Deploying the webhook pod @ 04/19/24 16:43:05.275
  STEP: Wait for the deployment to be ready @ 04/19/24 16:43:05.299
  Apr 19 16:43:05.330: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 04/19/24 16:43:07.362
  STEP: Verifying the service has paired with the endpoint @ 04/19/24 16:43:07.406
  Apr 19 16:43:08.407: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 04/19/24 16:43:08.43
  STEP: create a namespace for the webhook @ 04/19/24 16:43:08.475
  STEP: create a configmap should be unconditionally rejected by the webhook @ 04/19/24 16:43:08.514
  Apr 19 16:43:08.581: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4606" for this suite. @ 04/19/24 16:43:08.669
  STEP: Destroying namespace "webhook-markers-1899" for this suite. @ 04/19/24 16:43:08.683
  STEP: Destroying namespace "fail-closed-namespace-8071" for this suite. @ 04/19/24 16:43:08.694
â€¢ [4.169 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 04/19/24 16:43:08.71
  Apr 19 16:43:08.711: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename daemonsets @ 04/19/24 16:43:08.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:43:08.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:43:08.744
  STEP: Creating simple DaemonSet "daemon-set" @ 04/19/24 16:43:08.777
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/19/24 16:43:08.786
  Apr 19 16:43:08.800: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 16:43:08.800: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  Apr 19 16:43:09.816: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 19 16:43:09.816: INFO: Node eixo7oojiese-2 is running 0 daemon pod, expected 1
  Apr 19 16:43:10.819: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 19 16:43:10.820: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 04/19/24 16:43:10.826
  Apr 19 16:43:10.878: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 19 16:43:10.879: INFO: Node eixo7oojiese-2 is running 0 daemon pod, expected 1
  Apr 19 16:43:11.906: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 19 16:43:11.906: INFO: Node eixo7oojiese-2 is running 0 daemon pod, expected 1
  Apr 19 16:43:12.901: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 19 16:43:12.901: INFO: Node eixo7oojiese-2 is running 0 daemon pod, expected 1
  Apr 19 16:43:13.903: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 19 16:43:13.903: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/19/24 16:43:13.911
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3148, will wait for the garbage collector to delete the pods @ 04/19/24 16:43:13.912
  Apr 19 16:43:13.980: INFO: Deleting DaemonSet.extensions daemon-set took: 9.717299ms
  Apr 19 16:43:14.082: INFO: Terminating DaemonSet.extensions daemon-set pods took: 102.746785ms
  Apr 19 16:43:16.595: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 16:43:16.596: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 19 16:43:16.608: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24730"},"items":null}

  Apr 19 16:43:16.618: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24730"},"items":null}

  Apr 19 16:43:16.652: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3148" for this suite. @ 04/19/24 16:43:16.669
â€¢ [7.975 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 04/19/24 16:43:16.687
  Apr 19 16:43:16.687: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename namespaces @ 04/19/24 16:43:16.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:43:16.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:43:16.738
  STEP: Creating a test namespace @ 04/19/24 16:43:16.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:43:16.78
  STEP: Creating a service in the namespace @ 04/19/24 16:43:16.786
  STEP: Deleting the namespace @ 04/19/24 16:43:16.81
  STEP: Waiting for the namespace to be removed. @ 04/19/24 16:43:16.842
  STEP: Recreating the namespace @ 04/19/24 16:43:22.853
  STEP: Verifying there is no service in the namespace @ 04/19/24 16:43:22.894
  Apr 19 16:43:22.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8227" for this suite. @ 04/19/24 16:43:22.917
  STEP: Destroying namespace "nsdeletetest-325" for this suite. @ 04/19/24 16:43:22.937
  Apr 19 16:43:22.946: INFO: Namespace nsdeletetest-325 was already deleted
  STEP: Destroying namespace "nsdeletetest-2936" for this suite. @ 04/19/24 16:43:22.946
â€¢ [6.279 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 04/19/24 16:43:22.971
  Apr 19 16:43:22.971: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename downward-api @ 04/19/24 16:43:22.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:43:23.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:43:23.021
  STEP: Creating a pod to test downward api env vars @ 04/19/24 16:43:23.029
  STEP: Saw pod success @ 04/19/24 16:43:27.085
  Apr 19 16:43:27.095: INFO: Trying to get logs from node eixo7oojiese-3 pod downward-api-ffa7179f-3db9-4eb7-8d5f-a387292a1ecc container dapi-container: <nil>
  STEP: delete the pod @ 04/19/24 16:43:27.139
  Apr 19 16:43:27.180: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8452" for this suite. @ 04/19/24 16:43:27.194
â€¢ [4.241 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 04/19/24 16:43:27.213
  Apr 19 16:43:27.213: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 04/19/24 16:43:27.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:43:27.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:43:27.28
  STEP: creating a target pod @ 04/19/24 16:43:27.29
  STEP: adding an ephemeral container @ 04/19/24 16:43:29.344
  STEP: checking pod container endpoints @ 04/19/24 16:43:31.391
  Apr 19 16:43:31.391: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4859 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 16:43:31.392: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 16:43:31.394: INFO: ExecWithOptions: Clientset creation
  Apr 19 16:43:31.395: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-4859/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Apr 19 16:43:31.521: INFO: Exec stderr: ""
  Apr 19 16:43:31.535: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4859" for this suite. @ 04/19/24 16:43:31.551
â€¢ [4.354 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 04/19/24 16:43:31.569
  Apr 19 16:43:31.569: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename secrets @ 04/19/24 16:43:31.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:43:31.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:43:31.617
  STEP: creating a secret @ 04/19/24 16:43:31.623
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 04/19/24 16:43:31.632
  STEP: patching the secret @ 04/19/24 16:43:31.64
  STEP: deleting the secret using a LabelSelector @ 04/19/24 16:43:31.658
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 04/19/24 16:43:31.676
  Apr 19 16:43:31.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-603" for this suite. @ 04/19/24 16:43:31.699
â€¢ [0.157 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 04/19/24 16:43:31.73
  Apr 19 16:43:31.730: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename webhook @ 04/19/24 16:43:31.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:43:31.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:43:31.769
  STEP: Setting up server cert @ 04/19/24 16:43:31.817
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/19/24 16:43:32.732
  STEP: Deploying the webhook pod @ 04/19/24 16:43:32.744
  STEP: Wait for the deployment to be ready @ 04/19/24 16:43:32.773
  Apr 19 16:43:32.791: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Apr 19 16:43:34.822: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 19, 16, 43, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 43, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 43, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 43, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:43:36.837: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 19, 16, 43, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 43, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 43, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 43, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:43:38.836: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 19, 16, 43, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 43, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 43, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 43, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:43:40.841: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 19, 16, 43, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 43, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 43, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 43, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Apr 19 16:43:42.835: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.April, 19, 16, 43, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 43, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 43, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 43, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7c55c7d74c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 04/19/24 16:43:44.855
  STEP: Verifying the service has paired with the endpoint @ 04/19/24 16:43:44.905
  Apr 19 16:43:45.905: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 19 16:43:45.930: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3382-crds.webhook.example.com via the AdmissionRegistration API @ 04/19/24 16:43:46.467
  STEP: Creating a custom resource that should be mutated by the webhook @ 04/19/24 16:43:46.513
  Apr 19 16:43:48.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6200" for this suite. @ 04/19/24 16:43:49.59
  STEP: Destroying namespace "webhook-markers-8057" for this suite. @ 04/19/24 16:43:49.623
â€¢ [17.917 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 04/19/24 16:43:49.651
  Apr 19 16:43:49.651: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 16:43:49.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:43:49.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:43:49.726
  STEP: Creating projection with secret that has name projected-secret-test-e7132aa1-2769-49ba-ae50-730ed66708c5 @ 04/19/24 16:43:49.73
  STEP: Creating a pod to test consume secrets @ 04/19/24 16:43:49.739
  STEP: Saw pod success @ 04/19/24 16:43:53.787
  Apr 19 16:43:53.798: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-projected-secrets-86980eb0-4b13-4731-b0a7-f5368c8a99f8 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/19/24 16:43:53.826
  Apr 19 16:43:53.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6925" for this suite. @ 04/19/24 16:43:53.877
â€¢ [4.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 04/19/24 16:43:53.918
  Apr 19 16:43:53.918: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename job @ 04/19/24 16:43:53.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:43:53.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:43:53.968
  STEP: Creating a job @ 04/19/24 16:43:53.975
  STEP: Ensuring job reaches completions @ 04/19/24 16:43:53.987
  Apr 19 16:44:04.018: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7014" for this suite. @ 04/19/24 16:44:04.068
â€¢ [10.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 04/19/24 16:44:04.096
  Apr 19 16:44:04.096: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename pods @ 04/19/24 16:44:04.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:44:04.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:44:04.138
  STEP: Create a pod @ 04/19/24 16:44:04.145
  STEP: patching /status @ 04/19/24 16:44:06.179
  Apr 19 16:44:06.205: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Apr 19 16:44:06.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1786" for this suite. @ 04/19/24 16:44:06.23
â€¢ [2.161 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 04/19/24 16:44:06.262
  Apr 19 16:44:06.262: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename endpointslice @ 04/19/24 16:44:06.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:44:06.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:44:06.321
  Apr 19 16:44:06.357: INFO: Endpoints addresses: [192.168.121.127 192.168.121.83] , ports: [6443]
  Apr 19 16:44:06.357: INFO: EndpointSlices addresses: [192.168.121.127 192.168.121.83] , ports: [6443]
  Apr 19 16:44:06.358: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2130" for this suite. @ 04/19/24 16:44:06.382
â€¢ [0.137 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 04/19/24 16:44:06.401
  Apr 19 16:44:06.401: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename dns @ 04/19/24 16:44:06.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:44:06.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:44:06.457
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8738.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-8738.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 04/19/24 16:44:06.463
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8738.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-8738.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 04/19/24 16:44:06.463
  STEP: creating a pod to probe /etc/hosts @ 04/19/24 16:44:06.463
  STEP: submitting the pod to kubernetes @ 04/19/24 16:44:06.463
  STEP: retrieving the pod @ 04/19/24 16:44:08.514
  STEP: looking for the results for each expected name from probers @ 04/19/24 16:44:08.524
  Apr 19 16:44:08.585: INFO: Unable to read jessie_hosts@dns-querier-1 from pod dns-8738/dns-test-447ab9fc-2358-4f99-9f59-6b28cb741664: the server could not find the requested resource (get pods dns-test-447ab9fc-2358-4f99-9f59-6b28cb741664)
  Apr 19 16:44:08.585: INFO: Lookups using dns-8738/dns-test-447ab9fc-2358-4f99-9f59-6b28cb741664 failed for: [jessie_hosts@dns-querier-1]

  Apr 19 16:44:08.602: INFO: Pod client logs for webserver: 
  Apr 19 16:44:08.622: INFO: Pod client logs for querier: 
  Apr 19 16:44:08.645: INFO: Pod client logs for jessie-querier: 
  Apr 19 16:44:13.719: INFO: Unable to read jessie_hosts@dns-querier-1 from pod dns-8738/dns-test-447ab9fc-2358-4f99-9f59-6b28cb741664: the server could not find the requested resource (get pods dns-test-447ab9fc-2358-4f99-9f59-6b28cb741664)
  Apr 19 16:44:13.719: INFO: Lookups using dns-8738/dns-test-447ab9fc-2358-4f99-9f59-6b28cb741664 failed for: [jessie_hosts@dns-querier-1]

  Apr 19 16:44:13.742: INFO: Pod client logs for webserver: 
  Apr 19 16:44:13.764: INFO: Pod client logs for querier: 
  Apr 19 16:44:13.785: INFO: Pod client logs for jessie-querier: 
  Apr 19 16:44:18.680: INFO: DNS probes using dns-8738/dns-test-447ab9fc-2358-4f99-9f59-6b28cb741664 succeeded

  Apr 19 16:44:18.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/19/24 16:44:18.689
  STEP: Destroying namespace "dns-8738" for this suite. @ 04/19/24 16:44:18.716
â€¢ [12.334 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 04/19/24 16:44:18.737
  Apr 19 16:44:18.737: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename secrets @ 04/19/24 16:44:18.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:44:18.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:44:18.797
  STEP: Creating secret with name secret-test-c6f2d6cd-c466-47aa-941d-3c965da1713e @ 04/19/24 16:44:18.801
  STEP: Creating a pod to test consume secrets @ 04/19/24 16:44:18.809
  STEP: Saw pod success @ 04/19/24 16:44:22.853
  Apr 19 16:44:22.859: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-secrets-9826db6e-c661-4c35-a650-237ac638e991 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/19/24 16:44:22.882
  Apr 19 16:44:22.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2418" for this suite. @ 04/19/24 16:44:22.929
â€¢ [4.212 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 04/19/24 16:44:22.953
  Apr 19 16:44:22.953: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename replication-controller @ 04/19/24 16:44:22.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:44:23.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:44:23.016
  STEP: creating a ReplicationController @ 04/19/24 16:44:23.034
  STEP: waiting for RC to be added @ 04/19/24 16:44:23.046
  STEP: waiting for available Replicas @ 04/19/24 16:44:23.046
  STEP: patching ReplicationController @ 04/19/24 16:44:24.393
  STEP: waiting for RC to be modified @ 04/19/24 16:44:24.416
  STEP: patching ReplicationController status @ 04/19/24 16:44:24.417
  STEP: waiting for RC to be modified @ 04/19/24 16:44:24.432
  STEP: waiting for available Replicas @ 04/19/24 16:44:24.434
  STEP: fetching ReplicationController status @ 04/19/24 16:44:24.442
  STEP: patching ReplicationController scale @ 04/19/24 16:44:24.451
  STEP: waiting for RC to be modified @ 04/19/24 16:44:24.471
  STEP: waiting for ReplicationController's scale to be the max amount @ 04/19/24 16:44:24.471
  STEP: fetching ReplicationController; ensuring that it's patched @ 04/19/24 16:44:25.797
  STEP: updating ReplicationController status @ 04/19/24 16:44:25.809
  STEP: waiting for RC to be modified @ 04/19/24 16:44:25.824
  STEP: listing all ReplicationControllers @ 04/19/24 16:44:25.825
  STEP: checking that ReplicationController has expected values @ 04/19/24 16:44:25.848
  STEP: deleting ReplicationControllers by collection @ 04/19/24 16:44:25.848
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 04/19/24 16:44:25.871
  Apr 19 16:44:25.933: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0419 16:44:25.934073      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-3331" for this suite. @ 04/19/24 16:44:25.945
â€¢ [3.014 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 04/19/24 16:44:25.973
  Apr 19 16:44:25.973: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename configmap @ 04/19/24 16:44:25.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:44:26.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:44:26.018
  STEP: Creating configMap with name configmap-test-volume-0eb5dccf-92fa-4b86-8672-909cd854c9dd @ 04/19/24 16:44:26.026
  STEP: Creating a pod to test consume configMaps @ 04/19/24 16:44:26.038
  E0419 16:44:26.935008      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:27.934850      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:28.935360      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:29.935761      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 16:44:30.076
  Apr 19 16:44:30.087: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-configmaps-c07e0d6b-3d55-4316-8f68-345c067ac376 container configmap-volume-test: <nil>
  STEP: delete the pod @ 04/19/24 16:44:30.114
  Apr 19 16:44:30.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2568" for this suite. @ 04/19/24 16:44:30.186
â€¢ [4.233 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 04/19/24 16:44:30.21
  Apr 19 16:44:30.211: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 16:44:30.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:44:30.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:44:30.272
  STEP: Creating configMap with name projected-configmap-test-volume-map-ebbd3c4f-85e3-4295-a30f-012bcf0dadd8 @ 04/19/24 16:44:30.279
  STEP: Creating a pod to test consume configMaps @ 04/19/24 16:44:30.29
  E0419 16:44:30.935839      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:31.936089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:32.937872      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:33.938473      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 16:44:34.347
  Apr 19 16:44:34.355: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-projected-configmaps-9d22ff07-976a-4d8f-9d2e-17c3d6f4eddc container agnhost-container: <nil>
  STEP: delete the pod @ 04/19/24 16:44:34.378
  Apr 19 16:44:34.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3727" for this suite. @ 04/19/24 16:44:34.436
â€¢ [4.246 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 04/19/24 16:44:34.462
  Apr 19 16:44:34.462: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename sched-pred @ 04/19/24 16:44:34.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:44:34.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:44:34.518
  Apr 19 16:44:34.523: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Apr 19 16:44:34.559: INFO: Waiting for terminating namespaces to be deleted...
  Apr 19 16:44:34.571: INFO: 
  Logging pods the apiserver thinks is on node eixo7oojiese-1 before test
  Apr 19 16:44:34.585: INFO: coredns-5dd5756b68-5bdmv from kube-system started at 2024-04-19 16:04:04 +0000 UTC (1 container statuses recorded)
  Apr 19 16:44:34.585: INFO: 	Container coredns ready: true, restart count 0
  Apr 19 16:44:34.585: INFO: kube-addon-manager-eixo7oojiese-1 from kube-system started at 2024-04-19 15:38:19 +0000 UTC (1 container statuses recorded)
  Apr 19 16:44:34.585: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Apr 19 16:44:34.585: INFO: kube-apiserver-eixo7oojiese-1 from kube-system started at 2024-04-19 15:38:19 +0000 UTC (1 container statuses recorded)
  Apr 19 16:44:34.585: INFO: 	Container kube-apiserver ready: true, restart count 1
  Apr 19 16:44:34.585: INFO: kube-controller-manager-eixo7oojiese-1 from kube-system started at 2024-04-19 15:38:19 +0000 UTC (1 container statuses recorded)
  Apr 19 16:44:34.585: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Apr 19 16:44:34.585: INFO: kube-flannel-ds-w6gb8 from kube-system started at 2024-04-19 15:31:52 +0000 UTC (1 container statuses recorded)
  Apr 19 16:44:34.585: INFO: 	Container kube-flannel ready: true, restart count 1
  Apr 19 16:44:34.585: INFO: kube-proxy-2xwhq from kube-system started at 2024-04-19 15:26:10 +0000 UTC (1 container statuses recorded)
  Apr 19 16:44:34.585: INFO: 	Container kube-proxy ready: true, restart count 1
  Apr 19 16:44:34.585: INFO: kube-scheduler-eixo7oojiese-1 from kube-system started at 2024-04-19 15:38:19 +0000 UTC (1 container statuses recorded)
  Apr 19 16:44:34.585: INFO: 	Container kube-scheduler ready: true, restart count 1
  Apr 19 16:44:34.585: INFO: sonobuoy-systemd-logs-daemon-set-b366af8c5db04861-m7ssp from sonobuoy started at 2024-04-19 15:39:22 +0000 UTC (2 container statuses recorded)
  Apr 19 16:44:34.585: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 19 16:44:34.585: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 19 16:44:34.585: INFO: 
  Logging pods the apiserver thinks is on node eixo7oojiese-2 before test
  Apr 19 16:44:34.606: INFO: coredns-5dd5756b68-4mqrq from kube-system started at 2024-04-19 16:04:04 +0000 UTC (1 container statuses recorded)
  Apr 19 16:44:34.607: INFO: 	Container coredns ready: true, restart count 0
  Apr 19 16:44:34.607: INFO: kube-addon-manager-eixo7oojiese-2 from kube-system started at 2024-04-19 15:33:54 +0000 UTC (1 container statuses recorded)
  Apr 19 16:44:34.608: INFO: 	Container kube-addon-manager ready: true, restart count 1
  Apr 19 16:44:34.608: INFO: kube-apiserver-eixo7oojiese-2 from kube-system started at 2024-04-19 15:33:54 +0000 UTC (1 container statuses recorded)
  Apr 19 16:44:34.609: INFO: 	Container kube-apiserver ready: true, restart count 1
  Apr 19 16:44:34.609: INFO: kube-controller-manager-eixo7oojiese-2 from kube-system started at 2024-04-19 15:33:54 +0000 UTC (1 container statuses recorded)
  Apr 19 16:44:34.610: INFO: 	Container kube-controller-manager ready: true, restart count 1
  Apr 19 16:44:34.610: INFO: kube-flannel-ds-pcsbj from kube-system started at 2024-04-19 15:31:52 +0000 UTC (1 container statuses recorded)
  Apr 19 16:44:34.611: INFO: 	Container kube-flannel ready: true, restart count 1
  Apr 19 16:44:34.611: INFO: kube-proxy-g7s86 from kube-system started at 2024-04-19 15:26:58 +0000 UTC (1 container statuses recorded)
  Apr 19 16:44:34.612: INFO: 	Container kube-proxy ready: true, restart count 1
  Apr 19 16:44:34.612: INFO: kube-scheduler-eixo7oojiese-2 from kube-system started at 2024-04-19 15:33:54 +0000 UTC (1 container statuses recorded)
  Apr 19 16:44:34.613: INFO: 	Container kube-scheduler ready: true, restart count 1
  Apr 19 16:44:34.613: INFO: sonobuoy-systemd-logs-daemon-set-b366af8c5db04861-wh5lb from sonobuoy started at 2024-04-19 15:39:22 +0000 UTC (2 container statuses recorded)
  Apr 19 16:44:34.615: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 19 16:44:34.615: INFO: 	Container systemd-logs ready: true, restart count 0
  Apr 19 16:44:34.615: INFO: 
  Logging pods the apiserver thinks is on node eixo7oojiese-3 before test
  Apr 19 16:44:34.636: INFO: kube-flannel-ds-qfg6v from kube-system started at 2024-04-19 16:04:29 +0000 UTC (1 container statuses recorded)
  Apr 19 16:44:34.636: INFO: 	Container kube-flannel ready: true, restart count 0
  Apr 19 16:44:34.637: INFO: kube-proxy-bf9lq from kube-system started at 2024-04-19 15:27:22 +0000 UTC (1 container statuses recorded)
  Apr 19 16:44:34.637: INFO: 	Container kube-proxy ready: true, restart count 1
  Apr 19 16:44:34.637: INFO: sonobuoy from sonobuoy started at 2024-04-19 15:39:14 +0000 UTC (1 container statuses recorded)
  Apr 19 16:44:34.637: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Apr 19 16:44:34.638: INFO: sonobuoy-e2e-job-589bb66d96224712 from sonobuoy started at 2024-04-19 15:39:22 +0000 UTC (2 container statuses recorded)
  Apr 19 16:44:34.639: INFO: 	Container e2e ready: true, restart count 0
  Apr 19 16:44:34.640: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 19 16:44:34.640: INFO: sonobuoy-systemd-logs-daemon-set-b366af8c5db04861-j649g from sonobuoy started at 2024-04-19 15:39:22 +0000 UTC (2 container statuses recorded)
  Apr 19 16:44:34.640: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Apr 19 16:44:34.640: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 04/19/24 16:44:34.642
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17c7bc2aab342096], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling..] @ 04/19/24 16:44:34.706
  E0419 16:44:34.939439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:44:35.714: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4627" for this suite. @ 04/19/24 16:44:35.73
â€¢ [1.283 seconds]
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 04/19/24 16:44:35.747
  Apr 19 16:44:35.747: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename services @ 04/19/24 16:44:35.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:44:35.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:44:35.79
  STEP: creating an Endpoint @ 04/19/24 16:44:35.801
  STEP: waiting for available Endpoint @ 04/19/24 16:44:35.812
  STEP: listing all Endpoints @ 04/19/24 16:44:35.815
  STEP: updating the Endpoint @ 04/19/24 16:44:35.824
  STEP: fetching the Endpoint @ 04/19/24 16:44:35.836
  STEP: patching the Endpoint @ 04/19/24 16:44:35.842
  STEP: fetching the Endpoint @ 04/19/24 16:44:35.856
  STEP: deleting the Endpoint by Collection @ 04/19/24 16:44:35.86
  STEP: waiting for Endpoint deletion @ 04/19/24 16:44:35.873
  STEP: fetching the Endpoint @ 04/19/24 16:44:35.877
  Apr 19 16:44:35.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-920" for this suite. @ 04/19/24 16:44:35.894
â€¢ [0.159 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 04/19/24 16:44:35.906
  Apr 19 16:44:35.906: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename resourcequota @ 04/19/24 16:44:35.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:44:35.936
  E0419 16:44:35.940170      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:44:35.943
  STEP: Creating resourceQuota "e2e-rq-status-n4jc2" @ 04/19/24 16:44:35.961
  Apr 19 16:44:35.980: INFO: Resource quota "e2e-rq-status-n4jc2" reports spec: hard cpu limit of 500m
  Apr 19 16:44:35.981: INFO: Resource quota "e2e-rq-status-n4jc2" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-n4jc2" /status @ 04/19/24 16:44:35.981
  STEP: Confirm /status for "e2e-rq-status-n4jc2" resourceQuota via watch @ 04/19/24 16:44:35.994
  Apr 19 16:44:35.996: INFO: observed resourceQuota "e2e-rq-status-n4jc2" in namespace "resourcequota-2357" with hard status: v1.ResourceList(nil)
  Apr 19 16:44:35.997: INFO: Found resourceQuota "e2e-rq-status-n4jc2" in namespace "resourcequota-2357" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Apr 19 16:44:35.997: INFO: ResourceQuota "e2e-rq-status-n4jc2" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 04/19/24 16:44:36.02
  Apr 19 16:44:36.043: INFO: Resource quota "e2e-rq-status-n4jc2" reports spec: hard cpu limit of 1
  Apr 19 16:44:36.043: INFO: Resource quota "e2e-rq-status-n4jc2" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-n4jc2" /status @ 04/19/24 16:44:36.043
  STEP: Confirm /status for "e2e-rq-status-n4jc2" resourceQuota via watch @ 04/19/24 16:44:36.057
  Apr 19 16:44:36.060: INFO: observed resourceQuota "e2e-rq-status-n4jc2" in namespace "resourcequota-2357" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Apr 19 16:44:36.060: INFO: Found resourceQuota "e2e-rq-status-n4jc2" in namespace "resourcequota-2357" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Apr 19 16:44:36.060: INFO: ResourceQuota "e2e-rq-status-n4jc2" /status was patched
  STEP: Get "e2e-rq-status-n4jc2" /status @ 04/19/24 16:44:36.06
  Apr 19 16:44:36.067: INFO: Resourcequota "e2e-rq-status-n4jc2" reports status: hard cpu of 1
  Apr 19 16:44:36.068: INFO: Resourcequota "e2e-rq-status-n4jc2" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-n4jc2" /status before checking Spec is unchanged @ 04/19/24 16:44:36.073
  Apr 19 16:44:36.089: INFO: Resourcequota "e2e-rq-status-n4jc2" reports status: hard cpu of 2
  Apr 19 16:44:36.089: INFO: Resourcequota "e2e-rq-status-n4jc2" reports status: hard memory of 2Gi
  Apr 19 16:44:36.092: INFO: Found resourceQuota "e2e-rq-status-n4jc2" in namespace "resourcequota-2357" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  E0419 16:44:36.941299      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:37.942612      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:38.942790      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:39.943621      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:40.943483      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:41.943708      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:42.944776      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:43.944965      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:44.945167      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:45.945371      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:46.945990      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:47.946346      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:48.947169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:49.946997      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:50.947057      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:51.947220      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:52.947627      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:53.948052      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:54.948017      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:55.948279      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:56.949320      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:57.949699      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:58.949857      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:44:59.954752      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:00.953149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:01.953342      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:02.955200      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:03.955394      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:04.955485      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:05.955646      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:06.956542      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:07.956507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:08.961672      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:09.958586      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:10.958666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:11.970637      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:12.963971      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:13.963973      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:14.964689      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:15.964720      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:16.965768      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:17.966322      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:18.966060      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:19.966501      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:20.967264      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:21.968009      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:22.969032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:23.975977      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:24.972738      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:25.973048      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:26.974490      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:27.974912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:28.975831      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:29.975899      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:30.976149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:31.976477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:32.977707      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:33.977530      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:34.978634      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:35.978917      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:36.979830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:37.980225      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:38.981153      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:39.982228      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:40.982337      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:41.983321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:42.983657      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:43.983979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:44.984544      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:45.985194      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:46.985963      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:47.986140      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:48.987241      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:49.987723      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:50.987956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:51.988615      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:52.993302      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:53.993738      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:54.994308      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:55.994688      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:56.994741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:57.995970      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:58.996556      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:45:59.997054      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:00.997485      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:01.997937      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:02.998602      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:03.998672      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:04.998780      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:05.999276      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:06.999629      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:08.000008      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:09.000539      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:10.001135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:11.001689      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:12.001875      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:13.002211      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:14.002512      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:15.002833      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:16.003037      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:17.003291      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:18.003590      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:19.003968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:20.004162      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:21.004306      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:22.005472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:23.006177      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:24.006362      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:25.006705      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:26.007113      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:27.007831      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:28.008088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:29.008183      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:30.008299      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:31.009094      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:32.010529      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:33.010986      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:34.011560      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:35.011748      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:36.012354      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:37.013003      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:38.014103      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:39.015281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:40.015580      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:41.015752      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:42.016531      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:43.016654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:44.016730      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:45.020804      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:46.017820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:47.018636      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:48.019621      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:49.020591      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:50.021510      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:51.021718      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:52.022653      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:53.023238      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:54.024348      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:55.025033      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:56.025850      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:57.025917      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:58.026747      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:46:59.027739      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:00.028963      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:01.029813      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:02.030728      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:03.031101      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:04.031394      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:05.031801      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:06.032700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:07.034345      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:08.034569      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:09.034819      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:10.035591      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:11.036116      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:12.036273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:13.037738      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:14.037204      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:15.038210      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:16.038058      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:17.038136      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:18.046000      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:19.040439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:20.040546      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:21.040678      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:22.042278      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:23.042071      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:24.044076      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:25.042706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:26.043133      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:27.043926      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:28.053815      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:29.051317      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:30.051274      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:31.051383      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:32.051493      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:33.051778      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:34.051962      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:35.052204      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:36.052450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:37.053012      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:38.053915      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:39.055631      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:40.053769      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:41.053905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:42.054309      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:43.054651      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:44.054943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:45.056985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:46.057874      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:47.058492      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:48.058803      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:49.059089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:50.060717      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:51.060999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:52.061195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:53.061386      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:54.061757      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:55.061998      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:56.062990      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:57.063138      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:58.063475      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:47:59.063795      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:00.064149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:01.065039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:02.065122      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:03.065364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:04.066024      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:05.066180      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:06.066620      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:48:06.115: INFO: ResourceQuota "e2e-rq-status-n4jc2" Spec was unchanged and /status reset
  Apr 19 16:48:06.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2357" for this suite. @ 04/19/24 16:48:06.13
â€¢ [210.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 04/19/24 16:48:06.169
  Apr 19 16:48:06.169: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 16:48:06.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:48:06.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:48:06.225
  STEP: Creating projection with secret that has name projected-secret-test-48033222-36ff-4977-9c34-1ae107d103e7 @ 04/19/24 16:48:06.232
  STEP: Creating a pod to test consume secrets @ 04/19/24 16:48:06.242
  E0419 16:48:07.067473      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:08.067720      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:09.067712      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:10.068789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 16:48:10.285
  Apr 19 16:48:10.293: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-projected-secrets-8696b292-5f5c-4bfa-abd6-a5cf1122a145 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/19/24 16:48:10.323
  Apr 19 16:48:10.350: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5951" for this suite. @ 04/19/24 16:48:10.359
â€¢ [4.207 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 04/19/24 16:48:10.383
  Apr 19 16:48:10.383: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 16:48:10.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:48:10.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:48:10.43
  STEP: Creating projection with secret that has name projected-secret-test-map-88d98d5e-8125-4fef-9efa-992689ecd66a @ 04/19/24 16:48:10.438
  STEP: Creating a pod to test consume secrets @ 04/19/24 16:48:10.455
  E0419 16:48:11.070179      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:12.070691      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:13.071664      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:14.072563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 16:48:14.501
  Apr 19 16:48:14.510: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-projected-secrets-73141a1e-9df4-4c50-95f8-161710ebb223 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 04/19/24 16:48:14.531
  Apr 19 16:48:14.572: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9162" for this suite. @ 04/19/24 16:48:14.588
â€¢ [4.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 04/19/24 16:48:14.634
  Apr 19 16:48:14.634: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename webhook @ 04/19/24 16:48:14.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:48:14.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:48:14.686
  STEP: Setting up server cert @ 04/19/24 16:48:14.746
  E0419 16:48:15.073082      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/19/24 16:48:16.024
  STEP: Deploying the webhook pod @ 04/19/24 16:48:16.048
  E0419 16:48:16.073851      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 04/19/24 16:48:16.082
  Apr 19 16:48:16.114: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:0, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 48, 16, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 48, 16, 0, time.Local), Reason:"NewReplicaSetCreated", Message:"Created new replica set \"sample-webhook-deployment-7c55c7d74c\""}}, CollisionCount:(*int32)(nil)}
  E0419 16:48:17.074459      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:18.074764      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/19/24 16:48:18.127
  STEP: Verifying the service has paired with the endpoint @ 04/19/24 16:48:18.152
  E0419 16:48:19.075355      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:48:19.153: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 04/19/24 16:48:19.172
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/19/24 16:48:19.23
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 04/19/24 16:48:19.246
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/19/24 16:48:19.266
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 04/19/24 16:48:19.289
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/19/24 16:48:19.307
  Apr 19 16:48:19.330: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9643" for this suite. @ 04/19/24 16:48:19.435
  STEP: Destroying namespace "webhook-markers-2192" for this suite. @ 04/19/24 16:48:19.458
â€¢ [4.834 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 04/19/24 16:48:19.476
  Apr 19 16:48:19.476: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename svcaccounts @ 04/19/24 16:48:19.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:48:19.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:48:19.512
  Apr 19 16:48:19.519: INFO: Got root ca configmap in namespace "svcaccounts-2843"
  Apr 19 16:48:19.531: INFO: Deleted root ca configmap in namespace "svcaccounts-2843"
  STEP: waiting for a new root ca configmap created @ 04/19/24 16:48:20.032
  Apr 19 16:48:20.040: INFO: Recreated root ca configmap in namespace "svcaccounts-2843"
  Apr 19 16:48:20.052: INFO: Updated root ca configmap in namespace "svcaccounts-2843"
  E0419 16:48:20.076176      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for the root ca configmap reconciled @ 04/19/24 16:48:20.554
  Apr 19 16:48:20.567: INFO: Reconciled root ca configmap in namespace "svcaccounts-2843"
  Apr 19 16:48:20.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2843" for this suite. @ 04/19/24 16:48:20.58
â€¢ [1.123 seconds]
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 04/19/24 16:48:20.626
  Apr 19 16:48:20.627: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename deployment @ 04/19/24 16:48:20.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:48:20.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:48:20.74
  STEP: creating a Deployment @ 04/19/24 16:48:20.756
  STEP: waiting for Deployment to be created @ 04/19/24 16:48:20.763
  STEP: waiting for all Replicas to be Ready @ 04/19/24 16:48:20.767
  Apr 19 16:48:20.771: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 19 16:48:20.771: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 19 16:48:20.781: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 19 16:48:20.781: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 19 16:48:20.810: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 19 16:48:20.811: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 19 16:48:20.914: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Apr 19 16:48:20.914: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E0419 16:48:21.077081      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:48:21.537: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Apr 19 16:48:21.537: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Apr 19 16:48:21.947: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 04/19/24 16:48:21.948
  Apr 19 16:48:21.983: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 04/19/24 16:48:21.984
  Apr 19 16:48:21.991: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 0
  Apr 19 16:48:21.992: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 0
  Apr 19 16:48:21.993: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 0
  Apr 19 16:48:21.993: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 0
  Apr 19 16:48:21.994: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 0
  Apr 19 16:48:21.996: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 0
  Apr 19 16:48:21.997: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 0
  Apr 19 16:48:21.998: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 0
  Apr 19 16:48:21.999: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 1
  Apr 19 16:48:22.000: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 1
  Apr 19 16:48:22.001: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 2
  Apr 19 16:48:22.002: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 2
  Apr 19 16:48:22.003: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 2
  Apr 19 16:48:22.004: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 2
  Apr 19 16:48:22.004: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 2
  Apr 19 16:48:22.005: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 2
  Apr 19 16:48:22.022: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 2
  Apr 19 16:48:22.022: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 2
  E0419 16:48:22.077515      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:48:22.090: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 1
  Apr 19 16:48:22.090: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 1
  Apr 19 16:48:22.108: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 1
  Apr 19 16:48:22.108: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 1
  E0419 16:48:23.078736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:48:23.633: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 2
  Apr 19 16:48:23.633: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 2
  Apr 19 16:48:23.688: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 1
  STEP: listing Deployments @ 04/19/24 16:48:23.688
  Apr 19 16:48:23.694: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 04/19/24 16:48:23.694
  Apr 19 16:48:23.724: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 04/19/24 16:48:23.724
  Apr 19 16:48:23.738: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 19 16:48:23.762: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 19 16:48:23.819: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 19 16:48:23.907: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 19 16:48:23.924: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E0419 16:48:24.080365      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:48:24.605: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 19 16:48:24.658: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 19 16:48:24.719: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Apr 19 16:48:24.744: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E0419 16:48:25.080482      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:48:26.010: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 04/19/24 16:48:26.078
  E0419 16:48:26.081297      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: fetching the DeploymentStatus @ 04/19/24 16:48:26.091
  Apr 19 16:48:26.102: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 1
  Apr 19 16:48:26.102: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 1
  Apr 19 16:48:26.102: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 1
  Apr 19 16:48:26.103: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 1
  Apr 19 16:48:26.103: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 1
  Apr 19 16:48:26.103: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 2
  Apr 19 16:48:26.103: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 2
  Apr 19 16:48:26.104: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 2
  Apr 19 16:48:26.104: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 2
  Apr 19 16:48:26.104: INFO: observed Deployment test-deployment in namespace deployment-8875 with ReadyReplicas 3
  STEP: deleting the Deployment @ 04/19/24 16:48:26.104
  Apr 19 16:48:26.127: INFO: observed event type MODIFIED
  Apr 19 16:48:26.127: INFO: observed event type MODIFIED
  Apr 19 16:48:26.127: INFO: observed event type MODIFIED
  Apr 19 16:48:26.127: INFO: observed event type MODIFIED
  Apr 19 16:48:26.127: INFO: observed event type MODIFIED
  Apr 19 16:48:26.128: INFO: observed event type MODIFIED
  Apr 19 16:48:26.128: INFO: observed event type MODIFIED
  Apr 19 16:48:26.128: INFO: observed event type MODIFIED
  Apr 19 16:48:26.128: INFO: observed event type MODIFIED
  Apr 19 16:48:26.129: INFO: observed event type MODIFIED
  Apr 19 16:48:26.129: INFO: observed event type MODIFIED
  Apr 19 16:48:26.129: INFO: observed event type MODIFIED
  Apr 19 16:48:26.130: INFO: observed event type MODIFIED
  Apr 19 16:48:26.139: INFO: Log out all the ReplicaSets if there is no deployment created
  Apr 19 16:48:26.146: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8875",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dde9a079-7e71-4f32-8152-94f212cc6d95",
      ResourceVersion: (string) (len=5) "26142",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849142102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "289aa0c6-edbe-46e1-9b1d-1936290de13b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 38 39 61  61 30 63 36 2d 65 64 62  |":\"289aa0c6-edb|
              00000130  65 2d 34 36 65 31 2d 39  62 31 64 2d 31 39 33 36  |e-46e1-9b1d-1936|
              00000140  32 39 30 64 65 31 33 62  5c 22 7d 22 3a 7b 7d 7d  |290de13b\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142106,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Apr 19 16:48:26.160: INFO: pod: "test-deployment-64fd565c98-ftcgb":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-ftcgb",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-8875",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "72eb9333-2a18-4b9e-afdc-e91df157a839",
      ResourceVersion: (string) (len=5) "26137",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849142102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849142108,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "dde9a079-7e71-4f32-8152-94f212cc6d95",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  64 64 65 39 61 30 37 39  |uid\":\"dde9a079|
              000000a0  2d 37 65 37 31 2d 34 66  33 32 2d 38 31 35 32 2d  |-7e71-4f32-8152-|
              000000b0  39 34 66 32 31 32 63 63  36 64 39 35 5c 22 7d 22  |94f212cc6d95\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142103,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 31 30 30 5c 22 7d  |10.233.66.100\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8nk2w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8nk2w",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142103,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142103,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142102,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.129",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.66.100",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.100"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849142102,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849142102,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=72) "cri-o://39a76861e38f34925107c1ac15de04e4e338721a0463e07e8ac33b772238d868",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 19 16:48:26.164: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8875",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c63c534e-f919-4b59-99a3-06d9a924ee87",
      ResourceVersion: (string) (len=5) "26132",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849142103,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "289aa0c6-edbe-46e1-9b1d-1936290de13b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 38 39 61  61 30 63 36 2d 65 64 62  |":\"289aa0c6-edb|
              00000130  65 2d 34 36 65 31 2d 39  62 31 64 2d 31 39 33 36  |e-46e1-9b1d-1936|
              00000140  32 39 30 64 65 31 33 62  5c 22 7d 22 3a 7b 7d 7d  |290de13b\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Apr 19 16:48:26.175: INFO: pod: "test-deployment-79ff746c4-pgzh8":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-pgzh8",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-8875",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1075f372-fa77-47db-b8a1-c5a5504e55df",
      ResourceVersion: (string) (len=5) "26150",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849142104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849142107,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "c63c534e-f919-4b59-99a3-06d9a924ee87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 36 33 63 35 33 34 65  |uid\":\"c63c534e|
              000000a0  2d 66 39 31 39 2d 34 62  35 39 2d 39 39 61 33 2d  |-f919-4b59-99a3-|
              000000b0  30 36 64 39 61 39 32 34  65 65 38 37 5c 22 7d 22  |06d9a924ee87\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  35 2e 31 35 39 5c 22 7d  |10.233.65.159\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xmmcw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xmmcw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142105,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.127",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.65.159",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.65.159"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849142104,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849142105,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://710bbf2beb8f84422ac1e31acd36b587638254a490a3a26c69e2bcfdd8c5faea",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 19 16:48:26.180: INFO: pod: "test-deployment-79ff746c4-wzg65":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-wzg65",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-8875",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "36e9141f-f6ff-46e4-8260-cbf8fedd7f85",
      ResourceVersion: (string) (len=5) "26080",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849142103,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "c63c534e-f919-4b59-99a3-06d9a924ee87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142103,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 36 33 63 35 33 34 65  |uid\":\"c63c534e|
              000000a0  2d 66 39 31 39 2d 34 62  35 39 2d 39 39 61 33 2d  |-f919-4b59-99a3-|
              000000b0  30 36 64 39 61 39 32 34  65 65 38 37 5c 22 7d 22  |06d9a924ee87\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 31 30 31 5c 22 7d  |10.233.66.101\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2ztgs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2ztgs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142103,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142104,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142103,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.129",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.66.101",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.101"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849142103,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849142104,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://bafb0eccaabc3a6a43c96b0c0977abf00ede89146a3c6036a47cd284e308dd2a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Apr 19 16:48:26.184: INFO: ReplicaSet "test-deployment-7fcc79b8c7":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-7fcc79b8c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8875",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "439db710-d644-49a0-851a-67aa0d2709bd",
      ResourceVersion: (string) (len=5) "26046",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849142100,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "289aa0c6-edbe-46e1-9b1d-1936290de13b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142103,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 32 38 39 61  61 30 63 36 2d 65 64 62  |":\"289aa0c6-edb|
              00000130  65 2d 34 36 65 31 2d 39  62 31 64 2d 31 39 33 36  |e-46e1-9b1d-1936|
              00000140  32 39 30 64 65 31 33 62  5c 22 7d 22 3a 7b 7d 7d  |290de13b\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142103,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7fcc79b8c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Apr 19 16:48:26.194: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8875" for this suite. @ 04/19/24 16:48:26.201
â€¢ [5.590 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 04/19/24 16:48:26.216
  Apr 19 16:48:26.216: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename webhook @ 04/19/24 16:48:26.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:48:26.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:48:26.244
  STEP: Setting up server cert @ 04/19/24 16:48:26.28
  E0419 16:48:27.081732      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/19/24 16:48:27.087
  STEP: Deploying the webhook pod @ 04/19/24 16:48:27.1
  STEP: Wait for the deployment to be ready @ 04/19/24 16:48:27.126
  Apr 19 16:48:27.158: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0419 16:48:28.082561      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:29.083616      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/19/24 16:48:29.185
  STEP: Verifying the service has paired with the endpoint @ 04/19/24 16:48:29.213
  E0419 16:48:30.084326      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:48:30.215: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/19/24 16:48:30.232
  STEP: create a pod @ 04/19/24 16:48:30.27
  E0419 16:48:31.084612      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:32.084384      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 04/19/24 16:48:32.317
  Apr 19 16:48:32.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=webhook-9399 attach --namespace=webhook-9399 to-be-attached-pod -i -c=container1'
  Apr 19 16:48:32.553: INFO: rc: 1
  Apr 19 16:48:32.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9399" for this suite. @ 04/19/24 16:48:32.674
  STEP: Destroying namespace "webhook-markers-3487" for this suite. @ 04/19/24 16:48:32.716
â€¢ [6.513 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 04/19/24 16:48:32.73
  Apr 19 16:48:32.730: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename crd-watch @ 04/19/24 16:48:32.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:48:32.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:48:32.781
  Apr 19 16:48:32.787: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  E0419 16:48:33.084691      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:34.084800      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:35.085919      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 04/19/24 16:48:35.463
  Apr 19 16:48:35.474: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-19T16:48:35Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-19T16:48:35Z]] name:name1 resourceVersion:26298 uid:4d103f76-badf-4b07-94ee-cef855ebd827] num:map[num1:9223372036854775807 num2:1000000]]}
  E0419 16:48:36.086250      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:37.087198      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:38.087611      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:39.088567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:40.089177      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:41.089776      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:42.089895      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:43.090610      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:44.091020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:45.091179      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 04/19/24 16:48:45.475
  Apr 19 16:48:45.491: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-19T16:48:45Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-19T16:48:45Z]] name:name2 resourceVersion:26341 uid:9bd9feac-71da-4cbb-9e5a-90e9130f1ed4] num:map[num1:9223372036854775807 num2:1000000]]}
  E0419 16:48:46.092059      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:47.093171      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:48.093725      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:49.093816      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:50.094786      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:51.095629      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:52.095746      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:53.096278      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:54.096931      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:55.097389      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 04/19/24 16:48:55.492
  Apr 19 16:48:55.508: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-19T16:48:35Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-19T16:48:55Z]] name:name1 resourceVersion:26359 uid:4d103f76-badf-4b07-94ee-cef855ebd827] num:map[num1:9223372036854775807 num2:1000000]]}
  E0419 16:48:56.098159      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:57.099756      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:58.099790      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:48:59.099886      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:00.099886      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:01.100149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:02.100459      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:03.101056      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:04.101887      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:05.102820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 04/19/24 16:49:05.509
  Apr 19 16:49:05.527: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-19T16:48:45Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-19T16:49:05Z]] name:name2 resourceVersion:26378 uid:9bd9feac-71da-4cbb-9e5a-90e9130f1ed4] num:map[num1:9223372036854775807 num2:1000000]]}
  E0419 16:49:06.104510      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:07.105092      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:08.105910      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:09.106790      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:10.107322      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:11.107518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:12.107903      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:13.108983      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:14.109093      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:15.109948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 04/19/24 16:49:15.529
  Apr 19 16:49:15.548: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-19T16:48:35Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-19T16:48:55Z]] name:name1 resourceVersion:26396 uid:4d103f76-badf-4b07-94ee-cef855ebd827] num:map[num1:9223372036854775807 num2:1000000]]}
  E0419 16:49:16.111089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:17.111830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:18.112181      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:19.112314      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:20.113356      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:21.113825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:22.113879      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:23.114201      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:24.114572      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:25.115711      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 04/19/24 16:49:25.549
  Apr 19 16:49:25.572: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-04-19T16:48:45Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-04-19T16:49:05Z]] name:name2 resourceVersion:26414 uid:9bd9feac-71da-4cbb-9e5a-90e9130f1ed4] num:map[num1:9223372036854775807 num2:1000000]]}
  E0419 16:49:26.116627      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:27.116851      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:28.118273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:29.118881      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:30.119057      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:31.119517      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:32.119710      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:33.120113      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:34.120285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:35.120921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:49:36.110: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0419 16:49:36.121331      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-watch-1389" for this suite. @ 04/19/24 16:49:36.128
â€¢ [63.423 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 04/19/24 16:49:36.156
  Apr 19 16:49:36.156: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename downward-api @ 04/19/24 16:49:36.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:49:36.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:49:36.211
  STEP: Creating a pod to test downward API volume plugin @ 04/19/24 16:49:36.221
  E0419 16:49:37.123175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:38.122733      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:39.124061      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:40.124086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 16:49:40.293
  Apr 19 16:49:40.302: INFO: Trying to get logs from node eixo7oojiese-3 pod downwardapi-volume-372a7de9-7568-4e70-aeb4-c5c2bb5c783e container client-container: <nil>
  STEP: delete the pod @ 04/19/24 16:49:40.333
  Apr 19 16:49:40.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1092" for this suite. @ 04/19/24 16:49:40.388
â€¢ [4.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 04/19/24 16:49:40.409
  Apr 19 16:49:40.409: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename kubelet-test @ 04/19/24 16:49:40.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:49:40.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:49:40.473
  Apr 19 16:49:40.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7548" for this suite. @ 04/19/24 16:49:40.56
â€¢ [0.162 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 04/19/24 16:49:40.572
  Apr 19 16:49:40.572: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename field-validation @ 04/19/24 16:49:40.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:49:40.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:49:40.624
  STEP: apply creating a deployment @ 04/19/24 16:49:40.629
  Apr 19 16:49:40.633: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5099" for this suite. @ 04/19/24 16:49:40.668
â€¢ [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 04/19/24 16:49:40.68
  Apr 19 16:49:40.680: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename taint-single-pod @ 04/19/24 16:49:40.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:49:40.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:49:40.719
  Apr 19 16:49:40.724: INFO: Waiting up to 1m0s for all nodes to be ready
  E0419 16:49:41.125089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:42.125908      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:43.127177      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:44.127838      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:45.128270      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:46.129133      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:47.130371      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:48.131139      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:49.132061      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:50.132205      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:51.132429      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:52.133611      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:53.133963      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:54.135171      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:55.135342      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:56.135833      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:57.135929      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:58.136906      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:49:59.137364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:00.137968      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:01.138827      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:02.140092      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:03.141154      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:04.141877      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:05.142113      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:06.142600      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:07.143764      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:08.144294      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:09.144997      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:10.145484      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:11.145829      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:12.145972      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:13.146191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:14.146557      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:15.147167      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:16.147602      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:17.148645      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:18.149400      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:19.149228      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:20.150089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:21.150231      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:22.150747      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:23.150961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:24.151538      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:25.151828      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:26.152675      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:27.153063      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:28.153217      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:29.153374      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:30.153653      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:31.154774      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:32.154808      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:33.154995      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:34.155889      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:35.156064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:36.157965      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:37.157733      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:38.158577      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:39.158820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:40.158915      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:50:40.765: INFO: Waiting for terminating namespaces to be deleted...
  Apr 19 16:50:40.775: INFO: Starting informer...
  STEP: Starting pod... @ 04/19/24 16:50:40.775
  Apr 19 16:50:41.016: INFO: Pod is running on eixo7oojiese-3. Tainting Node
  STEP: Trying to apply a taint on the Node @ 04/19/24 16:50:41.016
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/19/24 16:50:41.041
  STEP: Waiting short time to make sure Pod is queued for deletion @ 04/19/24 16:50:41.063
  Apr 19 16:50:41.063: INFO: Pod wasn't evicted. Proceeding
  Apr 19 16:50:41.063: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 04/19/24 16:50:41.093
  STEP: Waiting some time to make sure that toleration time passed. @ 04/19/24 16:50:41.101
  E0419 16:50:41.159258      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:42.159642      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:43.159735      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:44.159911      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:45.160315      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:46.160641      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:47.160759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:48.160986      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:49.161385      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:50.161730      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:51.162095      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:52.162282      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:53.162530      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:54.163158      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:55.163223      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:56.163851      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:57.163876      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:58.164221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:50:59.165203      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:00.164891      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:01.166799      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:02.167160      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:03.167528      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:04.167850      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:05.168070      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:06.168377      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:07.168629      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:08.168885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:09.169385      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:10.169746      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:11.170825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:12.171429      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:13.171899      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:14.172219      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:15.172792      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:16.173375      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:17.174033      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:18.174317      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:19.174918      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:20.175501      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:21.175961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:22.176777      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:23.177347      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:24.177852      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:25.178581      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:26.178909      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:27.180098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:28.180472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:29.180749      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:30.181128      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:31.181525      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:32.181871      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:33.181860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:34.182547      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:35.182810      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:36.183427      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:37.183579      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:38.183956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:39.184265      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:40.184588      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:41.184849      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:42.185365      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:43.185964      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:44.185659      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:45.185932      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:46.186286      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:47.186977      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:48.187729      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:49.188230      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:50.188748      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:51.189299      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:52.189449      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:53.191071      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:54.190916      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:55.191208      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:51:56.102: INFO: Pod wasn't evicted. Test successful
  Apr 19 16:51:56.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-7731" for this suite. @ 04/19/24 16:51:56.113
â€¢ [135.449 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 04/19/24 16:51:56.136
  Apr 19 16:51:56.137: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename events @ 04/19/24 16:51:56.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:51:56.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:51:56.18
  STEP: Create set of events @ 04/19/24 16:51:56.185
  E0419 16:51:56.191518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:51:56.199: INFO: created test-event-1
  Apr 19 16:51:56.208: INFO: created test-event-2
  Apr 19 16:51:56.215: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 04/19/24 16:51:56.216
  STEP: delete collection of events @ 04/19/24 16:51:56.222
  Apr 19 16:51:56.223: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 04/19/24 16:51:56.265
  Apr 19 16:51:56.265: INFO: requesting list of events to confirm quantity
  Apr 19 16:51:56.272: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8192" for this suite. @ 04/19/24 16:51:56.28
â€¢ [0.157 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 04/19/24 16:51:56.297
  Apr 19 16:51:56.297: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename replication-controller @ 04/19/24 16:51:56.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:51:56.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:51:56.345
  STEP: Creating replication controller my-hostname-basic-80eee65c-b437-461a-91f8-d4fe40dd3ace @ 04/19/24 16:51:56.351
  Apr 19 16:51:56.370: INFO: Pod name my-hostname-basic-80eee65c-b437-461a-91f8-d4fe40dd3ace: Found 0 pods out of 1
  E0419 16:51:57.191774      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:58.192304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:51:59.192548      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:00.193066      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:01.192999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:52:01.377: INFO: Pod name my-hostname-basic-80eee65c-b437-461a-91f8-d4fe40dd3ace: Found 1 pods out of 1
  Apr 19 16:52:01.377: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-80eee65c-b437-461a-91f8-d4fe40dd3ace" are running
  Apr 19 16:52:01.384: INFO: Pod "my-hostname-basic-80eee65c-b437-461a-91f8-d4fe40dd3ace-49cv6" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-19 16:51:56 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-19 16:51:57 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-19 16:51:57 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-04-19 16:51:56 +0000 UTC Reason: Message:}])
  Apr 19 16:52:01.385: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 04/19/24 16:52:01.385
  Apr 19 16:52:01.408: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3384" for this suite. @ 04/19/24 16:52:01.418
â€¢ [5.131 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 04/19/24 16:52:01.429
  Apr 19 16:52:01.429: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename gc @ 04/19/24 16:52:01.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:52:01.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:52:01.471
  STEP: create the deployment @ 04/19/24 16:52:01.476
  W0419 16:52:01.487494      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/19/24 16:52:01.488
  STEP: delete the deployment @ 04/19/24 16:52:02.002
  STEP: wait for all rs to be garbage collected @ 04/19/24 16:52:02.014
  STEP: expected 0 pods, got 2 pods @ 04/19/24 16:52:02.029
  STEP: expected 0 rs, got 1 rs @ 04/19/24 16:52:02.045
  E0419 16:52:02.193622      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/19/24 16:52:02.563
  Apr 19 16:52:02.799: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 19 16:52:02.800: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3999" for this suite. @ 04/19/24 16:52:02.808
â€¢ [1.390 seconds]
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 04/19/24 16:52:02.82
  Apr 19 16:52:02.820: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename proxy @ 04/19/24 16:52:02.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:52:02.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:52:02.876
  STEP: starting an echo server on multiple ports @ 04/19/24 16:52:02.899
  STEP: creating replication controller proxy-service-z8qlq in namespace proxy-4547 @ 04/19/24 16:52:02.9
  I0419 16:52:02.934893      14 runners.go:197] Created replication controller with name: proxy-service-z8qlq, namespace: proxy-4547, replica count: 1
  E0419 16:52:03.194559      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0419 16:52:03.985912      14 runners.go:197] proxy-service-z8qlq Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E0419 16:52:04.197649      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0419 16:52:04.986585      14 runners.go:197] proxy-service-z8qlq Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 19 16:52:04.996: INFO: setup took 2.116049033s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 04/19/24 16:52:04.997
  Apr 19 16:52:05.009: INFO: (0) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 11.503592ms)
  Apr 19 16:52:05.016: INFO: (0) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 17.733123ms)
  Apr 19 16:52:05.020: INFO: (0) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 21.15525ms)
  Apr 19 16:52:05.023: INFO: (0) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">test<... (200; 24.61263ms)
  Apr 19 16:52:05.024: INFO: (0) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname1/proxy/: foo (200; 25.248303ms)
  Apr 19 16:52:05.024: INFO: (0) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 25.044951ms)
  Apr 19 16:52:05.040: INFO: (0) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname1/proxy/: foo (200; 41.075985ms)
  Apr 19 16:52:05.040: INFO: (0) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/rewriteme">test</a> (200; 41.164302ms)
  Apr 19 16:52:05.040: INFO: (0) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">... (200; 41.644571ms)
  Apr 19 16:52:05.041: INFO: (0) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname2/proxy/: bar (200; 41.929588ms)
  Apr 19 16:52:05.042: INFO: (0) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname2/proxy/: bar (200; 42.765199ms)
  Apr 19 16:52:05.045: INFO: (0) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname1/proxy/: tls baz (200; 45.982697ms)
  Apr 19 16:52:05.045: INFO: (0) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname2/proxy/: tls qux (200; 45.797345ms)
  Apr 19 16:52:05.045: INFO: (0) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:462/proxy/: tls qux (200; 46.575087ms)
  Apr 19 16:52:05.046: INFO: (0) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:460/proxy/: tls baz (200; 47.241623ms)
  Apr 19 16:52:05.046: INFO: (0) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/tlsrewritem... (200; 49.049994ms)
  Apr 19 16:52:05.066: INFO: (1) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 18.180668ms)
  Apr 19 16:52:05.066: INFO: (1) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 18.473857ms)
  Apr 19 16:52:05.066: INFO: (1) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/tlsrewritem... (200; 18.17847ms)
  Apr 19 16:52:05.066: INFO: (1) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:460/proxy/: tls baz (200; 17.250623ms)
  Apr 19 16:52:05.069: INFO: (1) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/rewriteme">test</a> (200; 18.746563ms)
  Apr 19 16:52:05.070: INFO: (1) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:462/proxy/: tls qux (200; 21.044429ms)
  Apr 19 16:52:05.070: INFO: (1) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname2/proxy/: bar (200; 22.769592ms)
  Apr 19 16:52:05.071: INFO: (1) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 20.360039ms)
  Apr 19 16:52:05.071: INFO: (1) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname1/proxy/: foo (200; 23.079842ms)
  Apr 19 16:52:05.071: INFO: (1) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 20.291204ms)
  Apr 19 16:52:05.071: INFO: (1) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">... (200; 22.734457ms)
  Apr 19 16:52:05.073: INFO: (1) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">test<... (200; 22.197467ms)
  Apr 19 16:52:05.074: INFO: (1) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname1/proxy/: foo (200; 25.504106ms)
  Apr 19 16:52:05.075: INFO: (1) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname2/proxy/: bar (200; 25.571875ms)
  Apr 19 16:52:05.077: INFO: (1) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname2/proxy/: tls qux (200; 27.232828ms)
  Apr 19 16:52:05.078: INFO: (1) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname1/proxy/: tls baz (200; 29.729714ms)
  Apr 19 16:52:05.105: INFO: (2) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">... (200; 27.251343ms)
  Apr 19 16:52:05.105: INFO: (2) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname2/proxy/: bar (200; 27.550692ms)
  Apr 19 16:52:05.109: INFO: (2) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 31.098284ms)
  Apr 19 16:52:05.109: INFO: (2) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname2/proxy/: bar (200; 31.307922ms)
  Apr 19 16:52:05.110: INFO: (2) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/rewriteme">test</a> (200; 30.940332ms)
  Apr 19 16:52:05.110: INFO: (2) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:460/proxy/: tls baz (200; 30.961197ms)
  Apr 19 16:52:05.110: INFO: (2) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 31.986677ms)
  Apr 19 16:52:05.110: INFO: (2) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 32.383453ms)
  Apr 19 16:52:05.113: INFO: (2) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/tlsrewritem... (200; 34.159646ms)
  Apr 19 16:52:05.116: INFO: (2) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname1/proxy/: foo (200; 37.22653ms)
  Apr 19 16:52:05.121: INFO: (2) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname1/proxy/: foo (200; 42.049547ms)
  Apr 19 16:52:05.121: INFO: (2) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">test<... (200; 42.073755ms)
  Apr 19 16:52:05.121: INFO: (2) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 42.528429ms)
  Apr 19 16:52:05.121: INFO: (2) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:462/proxy/: tls qux (200; 42.522437ms)
  Apr 19 16:52:05.123: INFO: (2) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname2/proxy/: tls qux (200; 44.66507ms)
  Apr 19 16:52:05.124: INFO: (2) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname1/proxy/: tls baz (200; 45.557817ms)
  Apr 19 16:52:05.153: INFO: (3) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname2/proxy/: tls qux (200; 28.458275ms)
  Apr 19 16:52:05.168: INFO: (3) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 42.264659ms)
  Apr 19 16:52:05.168: INFO: (3) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname1/proxy/: foo (200; 41.818916ms)
  Apr 19 16:52:05.168: INFO: (3) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname1/proxy/: tls baz (200; 41.424605ms)
  Apr 19 16:52:05.168: INFO: (3) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 41.049027ms)
  Apr 19 16:52:05.168: INFO: (3) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:460/proxy/: tls baz (200; 40.993021ms)
  Apr 19 16:52:05.168: INFO: (3) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:462/proxy/: tls qux (200; 40.977148ms)
  Apr 19 16:52:05.168: INFO: (3) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname1/proxy/: foo (200; 40.96219ms)
  Apr 19 16:52:05.168: INFO: (3) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname2/proxy/: bar (200; 40.949225ms)
  Apr 19 16:52:05.168: INFO: (3) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">test<... (200; 40.943077ms)
  Apr 19 16:52:05.168: INFO: (3) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">... (200; 40.935147ms)
  Apr 19 16:52:05.168: INFO: (3) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 40.911824ms)
  Apr 19 16:52:05.168: INFO: (3) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname2/proxy/: bar (200; 40.871833ms)
  Apr 19 16:52:05.168: INFO: (3) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 43.26223ms)
  Apr 19 16:52:05.169: INFO: (3) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/rewriteme">test</a> (200; 41.577929ms)
  Apr 19 16:52:05.168: INFO: (3) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/tlsrewritem... (200; 41.979695ms)
  Apr 19 16:52:05.192: INFO: (4) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 22.50822ms)
  Apr 19 16:52:05.193: INFO: (4) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:462/proxy/: tls qux (200; 22.723871ms)
  Apr 19 16:52:05.193: INFO: (4) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 22.721433ms)
  Apr 19 16:52:05.194: INFO: (4) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">... (200; 23.988717ms)
  Apr 19 16:52:05.195: INFO: (4) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname2/proxy/: bar (200; 25.366277ms)
  E0419 16:52:05.195802      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:52:05.196: INFO: (4) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname2/proxy/: bar (200; 25.860018ms)
  Apr 19 16:52:05.199: INFO: (4) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">test<... (200; 29.846776ms)
  Apr 19 16:52:05.202: INFO: (4) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 31.63787ms)
  Apr 19 16:52:05.202: INFO: (4) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/rewriteme">test</a> (200; 32.320107ms)
  Apr 19 16:52:05.202: INFO: (4) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/tlsrewritem... (200; 32.440604ms)
  Apr 19 16:52:05.203: INFO: (4) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:460/proxy/: tls baz (200; 33.011206ms)
  Apr 19 16:52:05.204: INFO: (4) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname1/proxy/: foo (200; 33.68571ms)
  Apr 19 16:52:05.204: INFO: (4) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname2/proxy/: tls qux (200; 33.662156ms)
  Apr 19 16:52:05.204: INFO: (4) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 33.637314ms)
  Apr 19 16:52:05.204: INFO: (4) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname1/proxy/: foo (200; 33.966967ms)
  Apr 19 16:52:05.204: INFO: (4) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname1/proxy/: tls baz (200; 33.951006ms)
  Apr 19 16:52:05.228: INFO: (5) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 22.150723ms)
  Apr 19 16:52:05.230: INFO: (5) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/rewriteme">test</a> (200; 24.288796ms)
  Apr 19 16:52:05.230: INFO: (5) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 23.933138ms)
  Apr 19 16:52:05.230: INFO: (5) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">test<... (200; 23.875821ms)
  Apr 19 16:52:05.230: INFO: (5) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">... (200; 24.112895ms)
  Apr 19 16:52:05.230: INFO: (5) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 24.997847ms)
  Apr 19 16:52:05.230: INFO: (5) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/tlsrewritem... (200; 24.695954ms)
  Apr 19 16:52:05.232: INFO: (5) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname1/proxy/: foo (200; 26.215218ms)
  Apr 19 16:52:05.232: INFO: (5) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:462/proxy/: tls qux (200; 25.716ms)
  Apr 19 16:52:05.233: INFO: (5) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 25.886809ms)
  Apr 19 16:52:05.235: INFO: (5) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:460/proxy/: tls baz (200; 28.283881ms)
  Apr 19 16:52:05.238: INFO: (5) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname2/proxy/: bar (200; 30.732954ms)
  Apr 19 16:52:05.238: INFO: (5) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname1/proxy/: tls baz (200; 32.294474ms)
  Apr 19 16:52:05.239: INFO: (5) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname1/proxy/: foo (200; 32.263637ms)
  Apr 19 16:52:05.242: INFO: (5) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname2/proxy/: bar (200; 35.181976ms)
  Apr 19 16:52:05.242: INFO: (5) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname2/proxy/: tls qux (200; 35.11508ms)
  Apr 19 16:52:05.262: INFO: (6) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 19.10471ms)
  Apr 19 16:52:05.262: INFO: (6) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 17.300426ms)
  Apr 19 16:52:05.264: INFO: (6) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 20.04124ms)
  Apr 19 16:52:05.268: INFO: (6) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">... (200; 23.371256ms)
  Apr 19 16:52:05.269: INFO: (6) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:460/proxy/: tls baz (200; 25.763323ms)
  Apr 19 16:52:05.271: INFO: (6) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 28.879293ms)
  Apr 19 16:52:05.271: INFO: (6) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">test<... (200; 26.585586ms)
  Apr 19 16:52:05.272: INFO: (6) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname2/proxy/: bar (200; 28.986809ms)
  Apr 19 16:52:05.273: INFO: (6) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:462/proxy/: tls qux (200; 29.639142ms)
  Apr 19 16:52:05.273: INFO: (6) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname2/proxy/: bar (200; 29.946593ms)
  Apr 19 16:52:05.273: INFO: (6) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname1/proxy/: foo (200; 29.216731ms)
  Apr 19 16:52:05.273: INFO: (6) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/tlsrewritem... (200; 29.465193ms)
  Apr 19 16:52:05.274: INFO: (6) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/rewriteme">test</a> (200; 30.000565ms)
  Apr 19 16:52:05.274: INFO: (6) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname1/proxy/: foo (200; 31.061565ms)
  Apr 19 16:52:05.275: INFO: (6) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname1/proxy/: tls baz (200; 30.548976ms)
  Apr 19 16:52:05.276: INFO: (6) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname2/proxy/: tls qux (200; 32.532697ms)
  Apr 19 16:52:05.289: INFO: (7) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 12.665284ms)
  Apr 19 16:52:05.289: INFO: (7) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">test<... (200; 12.921892ms)
  Apr 19 16:52:05.300: INFO: (7) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 23.234339ms)
  Apr 19 16:52:05.303: INFO: (7) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 25.486349ms)
  Apr 19 16:52:05.303: INFO: (7) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:460/proxy/: tls baz (200; 26.096921ms)
  Apr 19 16:52:05.303: INFO: (7) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:462/proxy/: tls qux (200; 26.076211ms)
  Apr 19 16:52:05.305: INFO: (7) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/rewriteme">test</a> (200; 28.29192ms)
  Apr 19 16:52:05.305: INFO: (7) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname1/proxy/: foo (200; 28.130687ms)
  Apr 19 16:52:05.306: INFO: (7) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 28.414973ms)
  Apr 19 16:52:05.306: INFO: (7) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname2/proxy/: tls qux (200; 29.38787ms)
  Apr 19 16:52:05.307: INFO: (7) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname2/proxy/: bar (200; 30.321301ms)
  Apr 19 16:52:05.308: INFO: (7) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname1/proxy/: tls baz (200; 30.851729ms)
  Apr 19 16:52:05.308: INFO: (7) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/tlsrewritem... (200; 31.076403ms)
  Apr 19 16:52:05.308: INFO: (7) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">... (200; 31.94587ms)
  Apr 19 16:52:05.309: INFO: (7) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname2/proxy/: bar (200; 31.983383ms)
  Apr 19 16:52:05.309: INFO: (7) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname1/proxy/: foo (200; 31.934929ms)
  Apr 19 16:52:05.339: INFO: (8) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/rewriteme">test</a> (200; 27.879776ms)
  Apr 19 16:52:05.339: INFO: (8) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 29.031415ms)
  Apr 19 16:52:05.339: INFO: (8) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:460/proxy/: tls baz (200; 28.945243ms)
  Apr 19 16:52:05.339: INFO: (8) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:462/proxy/: tls qux (200; 28.242259ms)
  Apr 19 16:52:05.344: INFO: (8) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">test<... (200; 33.645644ms)
  Apr 19 16:52:05.344: INFO: (8) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 33.997472ms)
  Apr 19 16:52:05.344: INFO: (8) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname2/proxy/: tls qux (200; 33.488284ms)
  Apr 19 16:52:05.344: INFO: (8) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 33.975769ms)
  Apr 19 16:52:05.344: INFO: (8) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 33.500352ms)
  Apr 19 16:52:05.345: INFO: (8) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">... (200; 35.23514ms)
  Apr 19 16:52:05.346: INFO: (8) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname2/proxy/: bar (200; 35.841303ms)
  Apr 19 16:52:05.346: INFO: (8) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/tlsrewritem... (200; 36.122249ms)
  Apr 19 16:52:05.346: INFO: (8) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname2/proxy/: bar (200; 35.968136ms)
  Apr 19 16:52:05.347: INFO: (8) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname1/proxy/: foo (200; 35.878489ms)
  Apr 19 16:52:05.347: INFO: (8) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname1/proxy/: tls baz (200; 36.909169ms)
  Apr 19 16:52:05.347: INFO: (8) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname1/proxy/: foo (200; 37.272775ms)
  Apr 19 16:52:05.355: INFO: (9) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 7.499325ms)
  Apr 19 16:52:05.361: INFO: (9) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 13.547051ms)
  Apr 19 16:52:05.362: INFO: (9) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:462/proxy/: tls qux (200; 14.065119ms)
  Apr 19 16:52:05.363: INFO: (9) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/tlsrewritem... (200; 15.048135ms)
  Apr 19 16:52:05.363: INFO: (9) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname2/proxy/: bar (200; 14.980467ms)
  Apr 19 16:52:05.364: INFO: (9) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname2/proxy/: bar (200; 16.492472ms)
  Apr 19 16:52:05.364: INFO: (9) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 16.304152ms)
  Apr 19 16:52:05.364: INFO: (9) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">... (200; 16.669071ms)
  Apr 19 16:52:05.366: INFO: (9) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:460/proxy/: tls baz (200; 18.918838ms)
  Apr 19 16:52:05.366: INFO: (9) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 18.076737ms)
  Apr 19 16:52:05.367: INFO: (9) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/rewriteme">test</a> (200; 18.343654ms)
  Apr 19 16:52:05.367: INFO: (9) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname1/proxy/: foo (200; 19.544428ms)
  Apr 19 16:52:05.369: INFO: (9) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname1/proxy/: foo (200; 20.714462ms)
  Apr 19 16:52:05.373: INFO: (9) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">test<... (200; 24.58575ms)
  Apr 19 16:52:05.373: INFO: (9) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname2/proxy/: tls qux (200; 24.784974ms)
  Apr 19 16:52:05.374: INFO: (9) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname1/proxy/: tls baz (200; 26.765317ms)
  Apr 19 16:52:05.395: INFO: (10) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 20.252115ms)
  Apr 19 16:52:05.396: INFO: (10) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 20.782899ms)
  Apr 19 16:52:05.396: INFO: (10) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 20.230345ms)
  Apr 19 16:52:05.399: INFO: (10) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 23.904947ms)
  Apr 19 16:52:05.399: INFO: (10) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/tlsrewritem... (200; 23.718935ms)
  Apr 19 16:52:05.399: INFO: (10) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">... (200; 23.677579ms)
  Apr 19 16:52:05.399: INFO: (10) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">test<... (200; 23.679452ms)
  Apr 19 16:52:05.399: INFO: (10) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/rewriteme">test</a> (200; 23.698532ms)
  Apr 19 16:52:05.399: INFO: (10) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname1/proxy/: tls baz (200; 24.065611ms)
  Apr 19 16:52:05.402: INFO: (10) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:462/proxy/: tls qux (200; 26.523738ms)
  Apr 19 16:52:05.402: INFO: (10) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:460/proxy/: tls baz (200; 26.923964ms)
  Apr 19 16:52:05.402: INFO: (10) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname2/proxy/: bar (200; 26.667478ms)
  Apr 19 16:52:05.402: INFO: (10) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname1/proxy/: foo (200; 27.372905ms)
  Apr 19 16:52:05.403: INFO: (10) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname1/proxy/: foo (200; 27.195171ms)
  Apr 19 16:52:05.403: INFO: (10) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname2/proxy/: tls qux (200; 28.427098ms)
  Apr 19 16:52:05.408: INFO: (10) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname2/proxy/: bar (200; 32.506776ms)
  Apr 19 16:52:05.420: INFO: (11) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 11.822448ms)
  Apr 19 16:52:05.426: INFO: (11) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">... (200; 17.227579ms)
  Apr 19 16:52:05.434: INFO: (11) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:462/proxy/: tls qux (200; 25.072843ms)
  Apr 19 16:52:05.434: INFO: (11) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/tlsrewritem... (200; 25.799012ms)
  Apr 19 16:52:05.435: INFO: (11) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 26.165999ms)
  Apr 19 16:52:05.435: INFO: (11) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname1/proxy/: foo (200; 26.443872ms)
  Apr 19 16:52:05.436: INFO: (11) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname1/proxy/: tls baz (200; 27.383741ms)
  Apr 19 16:52:05.436: INFO: (11) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:460/proxy/: tls baz (200; 26.950829ms)
  Apr 19 16:52:05.436: INFO: (11) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">test<... (200; 27.270706ms)
  Apr 19 16:52:05.437: INFO: (11) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname2/proxy/: bar (200; 28.169478ms)
  Apr 19 16:52:05.438: INFO: (11) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/rewriteme">test</a> (200; 28.551275ms)
  Apr 19 16:52:05.438: INFO: (11) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 29.563785ms)
  Apr 19 16:52:05.438: INFO: (11) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname2/proxy/: bar (200; 30.562524ms)
  Apr 19 16:52:05.439: INFO: (11) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname1/proxy/: foo (200; 30.093584ms)
  Apr 19 16:52:05.441: INFO: (11) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 32.290268ms)
  Apr 19 16:52:05.441: INFO: (11) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname2/proxy/: tls qux (200; 32.614855ms)
  Apr 19 16:52:05.455: INFO: (12) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:462/proxy/: tls qux (200; 13.052565ms)
  Apr 19 16:52:05.455: INFO: (12) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 13.005824ms)
  Apr 19 16:52:05.458: INFO: (12) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 15.364992ms)
  Apr 19 16:52:05.464: INFO: (12) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">... (200; 21.819549ms)
  Apr 19 16:52:05.464: INFO: (12) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/rewriteme">test</a> (200; 21.377247ms)
  Apr 19 16:52:05.464: INFO: (12) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 21.283266ms)
  Apr 19 16:52:05.465: INFO: (12) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 22.147511ms)
  Apr 19 16:52:05.465: INFO: (12) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname2/proxy/: tls qux (200; 21.841586ms)
  Apr 19 16:52:05.465: INFO: (12) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname1/proxy/: foo (200; 22.67888ms)
  Apr 19 16:52:05.469: INFO: (12) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">test<... (200; 26.597889ms)
  Apr 19 16:52:05.469: INFO: (12) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:460/proxy/: tls baz (200; 26.340221ms)
  Apr 19 16:52:05.469: INFO: (12) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname1/proxy/: tls baz (200; 27.325163ms)
  Apr 19 16:52:05.469: INFO: (12) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/tlsrewritem... (200; 26.776721ms)
  Apr 19 16:52:05.470: INFO: (12) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname2/proxy/: bar (200; 27.48452ms)
  Apr 19 16:52:05.471: INFO: (12) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname1/proxy/: foo (200; 28.938729ms)
  Apr 19 16:52:05.472: INFO: (12) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname2/proxy/: bar (200; 28.82553ms)
  Apr 19 16:52:05.491: INFO: (13) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 19.026782ms)
  Apr 19 16:52:05.502: INFO: (13) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 29.775971ms)
  Apr 19 16:52:05.502: INFO: (13) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">... (200; 29.158576ms)
  Apr 19 16:52:05.502: INFO: (13) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/tlsrewritem... (200; 29.142648ms)
  Apr 19 16:52:05.502: INFO: (13) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:460/proxy/: tls baz (200; 29.269688ms)
  Apr 19 16:52:05.502: INFO: (13) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:462/proxy/: tls qux (200; 29.180611ms)
  Apr 19 16:52:05.502: INFO: (13) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/rewriteme">test</a> (200; 29.800552ms)
  Apr 19 16:52:05.502: INFO: (13) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">test<... (200; 30.495079ms)
  Apr 19 16:52:05.503: INFO: (13) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname2/proxy/: bar (200; 30.378921ms)
  Apr 19 16:52:05.503: INFO: (13) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 29.915911ms)
  Apr 19 16:52:05.506: INFO: (13) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname2/proxy/: bar (200; 32.798743ms)
  Apr 19 16:52:05.506: INFO: (13) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname1/proxy/: foo (200; 33.183788ms)
  Apr 19 16:52:05.506: INFO: (13) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 33.38494ms)
  Apr 19 16:52:05.507: INFO: (13) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname2/proxy/: tls qux (200; 34.335315ms)
  Apr 19 16:52:05.507: INFO: (13) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname1/proxy/: tls baz (200; 34.118858ms)
  Apr 19 16:52:05.507: INFO: (13) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname1/proxy/: foo (200; 34.125622ms)
  Apr 19 16:52:05.523: INFO: (14) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:462/proxy/: tls qux (200; 12.699745ms)
  Apr 19 16:52:05.524: INFO: (14) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 11.583033ms)
  Apr 19 16:52:05.524: INFO: (14) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 12.827895ms)
  Apr 19 16:52:05.524: INFO: (14) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:460/proxy/: tls baz (200; 13.739205ms)
  Apr 19 16:52:05.524: INFO: (14) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/rewriteme">test</a> (200; 12.085364ms)
  Apr 19 16:52:05.531: INFO: (14) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 18.557858ms)
  Apr 19 16:52:05.531: INFO: (14) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">... (200; 19.142328ms)
  Apr 19 16:52:05.532: INFO: (14) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname2/proxy/: tls qux (200; 20.462993ms)
  Apr 19 16:52:05.533: INFO: (14) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/tlsrewritem... (200; 20.474051ms)
  Apr 19 16:52:05.535: INFO: (14) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">test<... (200; 22.977295ms)
  Apr 19 16:52:05.536: INFO: (14) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname2/proxy/: bar (200; 24.324439ms)
  Apr 19 16:52:05.537: INFO: (14) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname1/proxy/: foo (200; 25.586702ms)
  Apr 19 16:52:05.537: INFO: (14) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname2/proxy/: bar (200; 26.834405ms)
  Apr 19 16:52:05.538: INFO: (14) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname1/proxy/: foo (200; 27.080488ms)
  Apr 19 16:52:05.539: INFO: (14) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 26.309138ms)
  Apr 19 16:52:05.554: INFO: (14) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname1/proxy/: tls baz (200; 42.568885ms)
  Apr 19 16:52:05.593: INFO: (15) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 38.765256ms)
  Apr 19 16:52:05.594: INFO: (15) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 38.655423ms)
  Apr 19 16:52:05.594: INFO: (15) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:462/proxy/: tls qux (200; 40.067169ms)
  Apr 19 16:52:05.597: INFO: (15) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname1/proxy/: foo (200; 41.977823ms)
  Apr 19 16:52:05.598: INFO: (15) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">... (200; 42.456266ms)
  Apr 19 16:52:05.598: INFO: (15) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">test<... (200; 42.617008ms)
  Apr 19 16:52:05.600: INFO: (15) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/tlsrewritem... (200; 44.414837ms)
  Apr 19 16:52:05.600: INFO: (15) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:460/proxy/: tls baz (200; 43.830845ms)
  Apr 19 16:52:05.601: INFO: (15) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 44.706315ms)
  Apr 19 16:52:05.602: INFO: (15) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 46.667851ms)
  Apr 19 16:52:05.602: INFO: (15) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/rewriteme">test</a> (200; 46.384241ms)
  Apr 19 16:52:05.602: INFO: (15) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname1/proxy/: foo (200; 46.930286ms)
  Apr 19 16:52:05.603: INFO: (15) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname2/proxy/: bar (200; 48.03989ms)
  Apr 19 16:52:05.603: INFO: (15) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname2/proxy/: bar (200; 47.372826ms)
  Apr 19 16:52:05.603: INFO: (15) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname2/proxy/: tls qux (200; 48.175851ms)
  Apr 19 16:52:05.603: INFO: (15) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname1/proxy/: tls baz (200; 48.503591ms)
  Apr 19 16:52:05.619: INFO: (16) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 13.827635ms)
  Apr 19 16:52:05.623: INFO: (16) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">... (200; 17.178868ms)
  Apr 19 16:52:05.626: INFO: (16) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">test<... (200; 20.351982ms)
  Apr 19 16:52:05.627: INFO: (16) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/tlsrewritem... (200; 21.227806ms)
  Apr 19 16:52:05.627: INFO: (16) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/rewriteme">test</a> (200; 21.308966ms)
  Apr 19 16:52:05.628: INFO: (16) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:462/proxy/: tls qux (200; 21.748929ms)
  Apr 19 16:52:05.628: INFO: (16) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 22.109341ms)
  Apr 19 16:52:05.628: INFO: (16) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 22.801802ms)
  Apr 19 16:52:05.641: INFO: (16) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname1/proxy/: foo (200; 35.811936ms)
  Apr 19 16:52:05.642: INFO: (16) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname1/proxy/: tls baz (200; 36.059031ms)
  Apr 19 16:52:05.642: INFO: (16) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname2/proxy/: bar (200; 36.439086ms)
  Apr 19 16:52:05.643: INFO: (16) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:460/proxy/: tls baz (200; 36.715423ms)
  Apr 19 16:52:05.643: INFO: (16) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname1/proxy/: foo (200; 36.792269ms)
  Apr 19 16:52:05.643: INFO: (16) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 37.456185ms)
  Apr 19 16:52:05.643: INFO: (16) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname2/proxy/: bar (200; 38.11519ms)
  Apr 19 16:52:05.647: INFO: (16) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname2/proxy/: tls qux (200; 40.526395ms)
  Apr 19 16:52:05.662: INFO: (17) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:462/proxy/: tls qux (200; 15.751264ms)
  Apr 19 16:52:05.664: INFO: (17) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">... (200; 16.370093ms)
  Apr 19 16:52:05.664: INFO: (17) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 15.946638ms)
  Apr 19 16:52:05.665: INFO: (17) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 16.437009ms)
  Apr 19 16:52:05.665: INFO: (17) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 17.684565ms)
  Apr 19 16:52:05.667: INFO: (17) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/rewriteme">test</a> (200; 17.860111ms)
  Apr 19 16:52:05.668: INFO: (17) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">test<... (200; 18.854642ms)
  Apr 19 16:52:05.668: INFO: (17) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname1/proxy/: tls baz (200; 20.423405ms)
  Apr 19 16:52:05.668: INFO: (17) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 18.917078ms)
  Apr 19 16:52:05.672: INFO: (17) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname2/proxy/: bar (200; 22.969788ms)
  Apr 19 16:52:05.689: INFO: (17) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/tlsrewritem... (200; 40.309959ms)
  Apr 19 16:52:05.693: INFO: (17) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname2/proxy/: bar (200; 44.521041ms)
  Apr 19 16:52:05.693: INFO: (17) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname1/proxy/: foo (200; 46.25845ms)
  Apr 19 16:52:05.694: INFO: (17) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:460/proxy/: tls baz (200; 45.255293ms)
  Apr 19 16:52:05.696: INFO: (17) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname2/proxy/: tls qux (200; 47.026365ms)
  Apr 19 16:52:05.699: INFO: (17) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname1/proxy/: foo (200; 50.496195ms)
  Apr 19 16:52:05.709: INFO: (18) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">test<... (200; 10.509653ms)
  Apr 19 16:52:05.713: INFO: (18) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">... (200; 13.829924ms)
  Apr 19 16:52:05.713: INFO: (18) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 14.23786ms)
  Apr 19 16:52:05.714: INFO: (18) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/rewriteme">test</a> (200; 15.335548ms)
  Apr 19 16:52:05.715: INFO: (18) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 16.030497ms)
  Apr 19 16:52:05.715: INFO: (18) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 16.432368ms)
  Apr 19 16:52:05.717: INFO: (18) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 18.32143ms)
  Apr 19 16:52:05.718: INFO: (18) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:460/proxy/: tls baz (200; 18.38408ms)
  Apr 19 16:52:05.720: INFO: (18) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:462/proxy/: tls qux (200; 20.385462ms)
  Apr 19 16:52:05.720: INFO: (18) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname1/proxy/: foo (200; 20.967583ms)
  Apr 19 16:52:05.720: INFO: (18) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname2/proxy/: bar (200; 20.977995ms)
  Apr 19 16:52:05.720: INFO: (18) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname2/proxy/: tls qux (200; 21.095464ms)
  Apr 19 16:52:05.722: INFO: (18) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/tlsrewritem... (200; 23.05472ms)
  Apr 19 16:52:05.722: INFO: (18) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname2/proxy/: bar (200; 23.226277ms)
  Apr 19 16:52:05.725: INFO: (18) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname1/proxy/: tls baz (200; 25.530433ms)
  Apr 19 16:52:05.725: INFO: (18) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname1/proxy/: foo (200; 26.103093ms)
  Apr 19 16:52:05.736: INFO: (19) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 9.763228ms)
  Apr 19 16:52:05.736: INFO: (19) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:160/proxy/: foo (200; 9.895172ms)
  Apr 19 16:52:05.742: INFO: (19) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 15.690569ms)
  Apr 19 16:52:05.742: INFO: (19) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4/proxy/rewriteme">test</a> (200; 15.69535ms)
  Apr 19 16:52:05.742: INFO: (19) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:443/proxy/tlsrewritem... (200; 16.288122ms)
  Apr 19 16:52:05.743: INFO: (19) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:460/proxy/: tls baz (200; 16.369064ms)
  Apr 19 16:52:05.743: INFO: (19) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">... (200; 16.608056ms)
  Apr 19 16:52:05.743: INFO: (19) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname2/proxy/: tls qux (200; 17.628856ms)
  Apr 19 16:52:05.745: INFO: (19) /api/v1/namespaces/proxy-4547/pods/http:proxy-service-z8qlq-77lg4:162/proxy/: bar (200; 18.780881ms)
  Apr 19 16:52:05.746: INFO: (19) /api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/: <a href="/api/v1/namespaces/proxy-4547/pods/proxy-service-z8qlq-77lg4:1080/proxy/rewriteme">test<... (200; 19.853409ms)
  Apr 19 16:52:05.746: INFO: (19) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname1/proxy/: foo (200; 19.594528ms)
  Apr 19 16:52:05.749: INFO: (19) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname1/proxy/: foo (200; 22.30391ms)
  Apr 19 16:52:05.750: INFO: (19) /api/v1/namespaces/proxy-4547/services/https:proxy-service-z8qlq:tlsportname1/proxy/: tls baz (200; 24.027103ms)
  Apr 19 16:52:05.753: INFO: (19) /api/v1/namespaces/proxy-4547/services/http:proxy-service-z8qlq:portname2/proxy/: bar (200; 26.031308ms)
  Apr 19 16:52:05.755: INFO: (19) /api/v1/namespaces/proxy-4547/pods/https:proxy-service-z8qlq-77lg4:462/proxy/: tls qux (200; 27.839484ms)
  Apr 19 16:52:05.755: INFO: (19) /api/v1/namespaces/proxy-4547/services/proxy-service-z8qlq:portname2/proxy/: bar (200; 28.15421ms)
  Apr 19 16:52:05.756: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-z8qlq in namespace proxy-4547, will wait for the garbage collector to delete the pods @ 04/19/24 16:52:05.766
  Apr 19 16:52:05.835: INFO: Deleting ReplicationController proxy-service-z8qlq took: 12.551636ms
  Apr 19 16:52:05.935: INFO: Terminating ReplicationController proxy-service-z8qlq pods took: 100.463879ms
  E0419 16:52:06.197285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:07.198849      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "proxy-4547" for this suite. @ 04/19/24 16:52:07.838
â€¢ [5.031 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 04/19/24 16:52:07.853
  Apr 19 16:52:07.853: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename svcaccounts @ 04/19/24 16:52:07.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:52:07.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:52:07.901
  E0419 16:52:08.197617      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:09.198389      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 04/19/24 16:52:09.969
  Apr 19 16:52:09.969: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-289 pod-service-account-e860161f-47d5-4576-a008-a73e85ad46ec -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  E0419 16:52:10.198871      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 04/19/24 16:52:10.295
  Apr 19 16:52:10.296: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-289 pod-service-account-e860161f-47d5-4576-a008-a73e85ad46ec -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 04/19/24 16:52:10.608
  Apr 19 16:52:10.608: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-289 pod-service-account-e860161f-47d5-4576-a008-a73e85ad46ec -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Apr 19 16:52:10.902: INFO: Got root ca configmap in namespace "svcaccounts-289"
  Apr 19 16:52:10.908: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-289" for this suite. @ 04/19/24 16:52:10.915
â€¢ [3.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 04/19/24 16:52:10.935
  Apr 19 16:52:10.935: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename kubectl-logs @ 04/19/24 16:52:10.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:52:10.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:52:10.975
  STEP: creating an pod @ 04/19/24 16:52:10.98
  Apr 19 16:52:10.981: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-logs-9617 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Apr 19 16:52:11.145: INFO: stderr: ""
  Apr 19 16:52:11.145: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 04/19/24 16:52:11.145
  Apr 19 16:52:11.146: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0419 16:52:11.199582      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:12.200399      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:52:13.164: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 04/19/24 16:52:13.164
  Apr 19 16:52:13.165: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-logs-9617 logs logs-generator logs-generator'
  E0419 16:52:13.201300      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:52:13.367: INFO: stderr: ""
  Apr 19 16:52:13.367: INFO: stdout: "I0419 16:52:11.863876       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/qvb 251\nI0419 16:52:12.063391       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/fvx 417\nI0419 16:52:12.264070       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/tps 446\nI0419 16:52:12.463796       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/wg9s 478\nI0419 16:52:12.663154       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/j6lz 281\nI0419 16:52:12.863878       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/7qd 444\nI0419 16:52:13.063437       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/ft4 478\nI0419 16:52:13.263671       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/mtq 337\n"
  STEP: limiting log lines @ 04/19/24 16:52:13.367
  Apr 19 16:52:13.367: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-logs-9617 logs logs-generator logs-generator --tail=1'
  Apr 19 16:52:13.513: INFO: stderr: ""
  Apr 19 16:52:13.513: INFO: stdout: "I0419 16:52:13.463247       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/gml 264\n"
  Apr 19 16:52:13.513: INFO: got output "I0419 16:52:13.463247       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/gml 264\n"
  STEP: limiting log bytes @ 04/19/24 16:52:13.513
  Apr 19 16:52:13.514: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-logs-9617 logs logs-generator logs-generator --limit-bytes=1'
  Apr 19 16:52:13.706: INFO: stderr: ""
  Apr 19 16:52:13.706: INFO: stdout: "I"
  Apr 19 16:52:13.706: INFO: got output "I"
  STEP: exposing timestamps @ 04/19/24 16:52:13.706
  Apr 19 16:52:13.707: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-logs-9617 logs logs-generator logs-generator --tail=1 --timestamps'
  Apr 19 16:52:13.873: INFO: stderr: ""
  Apr 19 16:52:13.873: INFO: stdout: "2024-04-19T16:52:13.863114542Z I0419 16:52:13.863027       1 logs_generator.go:76] 10 POST /api/v1/namespaces/default/pods/knkj 296\n"
  Apr 19 16:52:13.873: INFO: got output "2024-04-19T16:52:13.863114542Z I0419 16:52:13.863027       1 logs_generator.go:76] 10 POST /api/v1/namespaces/default/pods/knkj 296\n"
  STEP: restricting to a time range @ 04/19/24 16:52:13.873
  E0419 16:52:14.201560      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:15.201855      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:16.202632      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:52:16.374: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-logs-9617 logs logs-generator logs-generator --since=1s'
  Apr 19 16:52:16.547: INFO: stderr: ""
  Apr 19 16:52:16.547: INFO: stdout: "I0419 16:52:15.663728       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/cmg 224\nI0419 16:52:15.863077       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/grv 332\nI0419 16:52:16.063563       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/t2kd 372\nI0419 16:52:16.264501       1 logs_generator.go:76] 22 POST /api/v1/namespaces/kube-system/pods/knl 424\nI0419 16:52:16.463035       1 logs_generator.go:76] 23 GET /api/v1/namespaces/default/pods/f2t 563\n"
  Apr 19 16:52:16.547: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-logs-9617 logs logs-generator logs-generator --since=24h'
  Apr 19 16:52:16.730: INFO: stderr: ""
  Apr 19 16:52:16.730: INFO: stdout: "I0419 16:52:11.863876       1 logs_generator.go:76] 0 GET /api/v1/namespaces/ns/pods/qvb 251\nI0419 16:52:12.063391       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/fvx 417\nI0419 16:52:12.264070       1 logs_generator.go:76] 2 GET /api/v1/namespaces/default/pods/tps 446\nI0419 16:52:12.463796       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/wg9s 478\nI0419 16:52:12.663154       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/j6lz 281\nI0419 16:52:12.863878       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/7qd 444\nI0419 16:52:13.063437       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/ft4 478\nI0419 16:52:13.263671       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/mtq 337\nI0419 16:52:13.463247       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/gml 264\nI0419 16:52:13.663626       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/7ff 267\nI0419 16:52:13.863027       1 logs_generator.go:76] 10 POST /api/v1/namespaces/default/pods/knkj 296\nI0419 16:52:14.063744       1 logs_generator.go:76] 11 GET /api/v1/namespaces/default/pods/7t8 544\nI0419 16:52:14.263066       1 logs_generator.go:76] 12 GET /api/v1/namespaces/kube-system/pods/542 256\nI0419 16:52:14.463713       1 logs_generator.go:76] 13 POST /api/v1/namespaces/kube-system/pods/lx4m 316\nI0419 16:52:14.663142       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/fp4 247\nI0419 16:52:14.863674       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/j47g 356\nI0419 16:52:15.063084       1 logs_generator.go:76] 16 GET /api/v1/namespaces/kube-system/pods/v5hl 451\nI0419 16:52:15.264905       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/ns/pods/vdb 540\nI0419 16:52:15.463141       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/vrg7 277\nI0419 16:52:15.663728       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/cmg 224\nI0419 16:52:15.863077       1 logs_generator.go:76] 20 GET /api/v1/namespaces/default/pods/grv 332\nI0419 16:52:16.063563       1 logs_generator.go:76] 21 POST /api/v1/namespaces/ns/pods/t2kd 372\nI0419 16:52:16.264501       1 logs_generator.go:76] 22 POST /api/v1/namespaces/kube-system/pods/knl 424\nI0419 16:52:16.463035       1 logs_generator.go:76] 23 GET /api/v1/namespaces/default/pods/f2t 563\nI0419 16:52:16.664117       1 logs_generator.go:76] 24 POST /api/v1/namespaces/default/pods/9gxd 584\n"
  Apr 19 16:52:16.731: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-logs-9617 delete pod logs-generator'
  E0419 16:52:17.202921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:52:17.951: INFO: stderr: ""
  Apr 19 16:52:17.951: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Apr 19 16:52:17.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-9617" for this suite. @ 04/19/24 16:52:17.962
â€¢ [7.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 04/19/24 16:52:17.986
  Apr 19 16:52:17.986: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename namespaces @ 04/19/24 16:52:17.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:52:18.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:52:18.037
  STEP: creating a Namespace @ 04/19/24 16:52:18.044
  STEP: patching the Namespace @ 04/19/24 16:52:18.083
  STEP: get the Namespace and ensuring it has the label @ 04/19/24 16:52:18.093
  Apr 19 16:52:18.101: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1333" for this suite. @ 04/19/24 16:52:18.112
  STEP: Destroying namespace "nspatchtest-1bfc828c-dc74-4c3f-9adf-9221b29ae8da-5838" for this suite. @ 04/19/24 16:52:18.126
â€¢ [0.159 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 04/19/24 16:52:18.145
  Apr 19 16:52:18.146: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename security-context @ 04/19/24 16:52:18.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:52:18.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:52:18.189
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 04/19/24 16:52:18.193
  E0419 16:52:18.202976      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:19.203744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:20.203793      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:21.204371      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:22.204933      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 16:52:22.241
  Apr 19 16:52:22.249: INFO: Trying to get logs from node eixo7oojiese-3 pod security-context-b97fb9da-b8ce-40f6-95de-f8d11c52f323 container test-container: <nil>
  STEP: delete the pod @ 04/19/24 16:52:22.265
  Apr 19 16:52:22.302: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-5960" for this suite. @ 04/19/24 16:52:22.317
â€¢ [4.189 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 04/19/24 16:52:22.337
  Apr 19 16:52:22.337: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename field-validation @ 04/19/24 16:52:22.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:52:22.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:52:22.383
  Apr 19 16:52:22.395: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  E0419 16:52:23.205841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:24.206451      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0419 16:52:25.179030      14 warnings.go:70] unknown field "alpha"
  W0419 16:52:25.179117      14 warnings.go:70] unknown field "beta"
  W0419 16:52:25.179135      14 warnings.go:70] unknown field "delta"
  W0419 16:52:25.179159      14 warnings.go:70] unknown field "epsilon"
  W0419 16:52:25.179375      14 warnings.go:70] unknown field "gamma"
  E0419 16:52:25.206731      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:52:25.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8601" for this suite. @ 04/19/24 16:52:25.812
â€¢ [3.494 seconds]
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 04/19/24 16:52:25.832
  Apr 19 16:52:25.832: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename containers @ 04/19/24 16:52:25.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:52:25.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:52:25.89
  E0419 16:52:26.207862      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:27.208514      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:52:27.960: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8118" for this suite. @ 04/19/24 16:52:27.971
â€¢ [2.152 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 04/19/24 16:52:27.987
  Apr 19 16:52:27.987: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename cronjob @ 04/19/24 16:52:27.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:52:28.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:52:28.057
  STEP: Creating a suspended cronjob @ 04/19/24 16:52:28.061
  STEP: Ensuring no jobs are scheduled @ 04/19/24 16:52:28.071
  E0419 16:52:28.208882      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:29.209015      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:30.209499      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:31.210321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:32.211384      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:33.212104      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:34.212745      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:35.213673      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:36.214131      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:37.215035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:38.215976      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:39.217058      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:40.217620      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:41.217970      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:42.218570      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:43.219134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:44.220041      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:45.220399      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:46.221478      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:47.222203      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:48.222766      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:49.222984      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:50.223499      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:51.224175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:52.224313      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:53.224777      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:54.225935      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:55.226709      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:56.226821      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:57.227560      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:58.227709      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:52:59.228871      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:00.229830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:01.230979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:02.231622      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:03.232710      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:04.233544      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:05.234763      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:06.235669      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:07.236660      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:08.237187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:09.238079      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:10.238364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:11.238834      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:12.239944      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:13.240300      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:14.241303      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:15.241657      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:16.242322      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:17.242612      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:18.242917      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:19.243074      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:20.243385      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:21.244269      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:22.244390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:23.244866      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:24.245332      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:25.246674      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:26.246675      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:27.247524      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:28.248066      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:29.249025      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:30.249157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:31.249326      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:32.249450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:33.250031      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:34.250643      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:35.251462      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:36.252149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:37.254140      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:38.254815      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:39.255226      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:40.255364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:41.255699      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:42.256804      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:43.259452      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:44.259729      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:45.260916      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:46.261088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:47.261466      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:48.262611      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:49.262755      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:50.263925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:51.266782      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:52.265295      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:53.265528      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:54.265684      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:55.266064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:56.266234      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:57.266586      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:58.267314      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:53:59.267731      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:00.267818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:01.268151      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:02.269375      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:03.269572      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:04.269716      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:05.270890      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:06.270719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:07.271592      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:08.272516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:09.273267      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:10.273233      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:11.273570      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:12.274135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:13.275162      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:14.275305      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:15.275636      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:16.276260      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:17.276937      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:18.277166      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:19.277519      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:20.277818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:21.278050      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:22.278834      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:23.279176      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:24.280132      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:25.280658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:26.281315      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:27.281825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:28.282738      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:29.283905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:30.284631      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:31.285285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:32.285468      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:33.285849      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:34.286537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:35.286920      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:36.287085      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:37.287798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:38.288210      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:39.288772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:40.289100      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:41.289812      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:42.290608      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:43.291176      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:44.291830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:45.292381      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:46.293195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:47.293134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:48.293932      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:49.294934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:50.296288      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:51.296433      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:52.296530      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:53.297320      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:54.297747      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:55.297501      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:56.298789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:57.299062      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:58.300170      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:54:59.300342      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:00.300643      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:01.301519      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:02.302699      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:03.302772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:04.303027      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:05.303907      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:06.304127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:07.304451      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:08.304495      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:09.304847      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:10.305601      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:11.306849      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:12.307531      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:13.307729      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:14.308043      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:15.309133      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:16.309748      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:17.310202      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:18.310828      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:19.311888      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:20.312852      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:21.313576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:22.313941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:23.314563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:24.314616      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:25.315332      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:26.315983      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:27.316851      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:28.317718      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:29.318015      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:30.318156      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:31.319327      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:32.320448      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:33.320687      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:34.320912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:35.322065      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:36.322243      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:37.322366      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:38.322825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:39.323897      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:40.324896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:41.325572      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:42.326487      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:43.326838      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:44.327746      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:45.328647      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:46.329376      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:47.329549      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:48.330347      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:49.331452      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:50.332221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:51.333207      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:52.333554      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:53.333707      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:54.334100      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:55.334342      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:56.335038      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:57.336165      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:58.336139      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:55:59.336482      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:00.337394      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:01.338472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:02.339191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:03.340065      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:04.340195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:05.340660      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:06.341556      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:07.342200      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:08.342663      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:09.343303      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:10.344239      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:11.345095      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:12.345189      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:13.345544      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:14.345770      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:15.346702      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:16.347357      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:17.347825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:18.348690      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:19.349506      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:20.350097      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:21.350931      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:22.351794      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:23.352678      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:24.352373      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:25.352534      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:26.353482      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:27.353755      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:28.353856      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:29.353985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:30.354688      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:31.355149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:32.355273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:33.355544      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:34.356150      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:35.357330      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:36.358346      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:37.358541      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:38.359725      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:39.359986      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:40.360971      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:41.361210      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:42.361281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:43.362052      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:44.362306      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:45.363142      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:46.364006      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:47.364573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:48.365155      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:49.365595      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:50.365711      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:51.365821      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:52.366218      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:53.366958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:54.367455      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:55.367744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:56.368794      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:57.368495      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:58.369341      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:56:59.369562      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:00.369903      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:01.370681      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:02.370823      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:03.371891      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:04.372570      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:05.372852      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:06.373116      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:07.373873      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:08.374761      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:09.376283      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:10.377417      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:11.378646      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:12.378780      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:13.379020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:14.379314      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:15.380487      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:16.381469      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:17.381762      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:18.382729      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:19.383617      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:20.384660      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:21.384785      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:22.385647      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:23.386557      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:24.387509      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:25.388534      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:26.389239      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:27.389588      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 04/19/24 16:57:28.084
  STEP: Removing cronjob @ 04/19/24 16:57:28.091
  Apr 19 16:57:28.107: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3081" for this suite. @ 04/19/24 16:57:28.115
â€¢ [300.142 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 04/19/24 16:57:28.131
  Apr 19 16:57:28.131: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename emptydir @ 04/19/24 16:57:28.135
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:57:28.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:57:28.17
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/19/24 16:57:28.175
  E0419 16:57:28.390757      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:29.390918      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:30.390990      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:31.392245      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 16:57:32.234
  Apr 19 16:57:32.245: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-e8cbec8f-e335-4e40-9310-9139b8b56b99 container test-container: <nil>
  STEP: delete the pod @ 04/19/24 16:57:32.282
  Apr 19 16:57:32.312: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7681" for this suite. @ 04/19/24 16:57:32.322
â€¢ [4.204 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 04/19/24 16:57:32.34
  Apr 19 16:57:32.340: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename resourcequota @ 04/19/24 16:57:32.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:57:32.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:57:32.385
  STEP: Counting existing ResourceQuota @ 04/19/24 16:57:32.391
  E0419 16:57:32.391759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:33.391977      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:34.392281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:35.392282      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:36.393076      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:37.392828      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/19/24 16:57:37.399
  STEP: Ensuring resource quota status is calculated @ 04/19/24 16:57:37.408
  E0419 16:57:38.393788      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:39.395533      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 04/19/24 16:57:39.422
  STEP: Ensuring resource quota status captures replicaset creation @ 04/19/24 16:57:39.452
  E0419 16:57:40.395577      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:41.395766      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 04/19/24 16:57:41.461
  STEP: Ensuring resource quota status released usage @ 04/19/24 16:57:41.476
  E0419 16:57:42.396069      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:43.396642      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:57:43.488: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-375" for this suite. @ 04/19/24 16:57:43.506
â€¢ [11.187 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 04/19/24 16:57:43.528
  Apr 19 16:57:43.529: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename limitrange @ 04/19/24 16:57:43.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:57:43.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:57:43.594
  STEP: Creating a LimitRange @ 04/19/24 16:57:43.605
  STEP: Setting up watch @ 04/19/24 16:57:43.605
  STEP: Submitting a LimitRange @ 04/19/24 16:57:43.715
  STEP: Verifying LimitRange creation was observed @ 04/19/24 16:57:43.734
  STEP: Fetching the LimitRange to ensure it has proper values @ 04/19/24 16:57:43.735
  Apr 19 16:57:43.745: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Apr 19 16:57:43.745: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 04/19/24 16:57:43.745
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 04/19/24 16:57:43.762
  Apr 19 16:57:43.775: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Apr 19 16:57:43.776: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 04/19/24 16:57:43.776
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 04/19/24 16:57:43.792
  Apr 19 16:57:43.803: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Apr 19 16:57:43.804: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 04/19/24 16:57:43.805
  STEP: Failing to create a Pod with more than max resources @ 04/19/24 16:57:43.811
  STEP: Updating a LimitRange @ 04/19/24 16:57:43.816
  STEP: Verifying LimitRange updating is effective @ 04/19/24 16:57:43.826
  E0419 16:57:44.397015      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:45.396939      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 04/19/24 16:57:45.841
  STEP: Failing to create a Pod with more than max resources @ 04/19/24 16:57:45.856
  STEP: Deleting a LimitRange @ 04/19/24 16:57:45.862
  STEP: Verifying the LimitRange was deleted @ 04/19/24 16:57:45.883
  E0419 16:57:46.398559      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:47.400418      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:48.398231      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:49.398553      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:50.398824      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:57:50.899: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 04/19/24 16:57:50.899
  Apr 19 16:57:50.918: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2934" for this suite. @ 04/19/24 16:57:50.935
â€¢ [7.418 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 04/19/24 16:57:50.954
  Apr 19 16:57:50.954: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename secrets @ 04/19/24 16:57:50.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:57:50.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:57:50.995
  STEP: Creating secret with name secret-test-map-345d489a-2979-44d3-98b9-721f258b5768 @ 04/19/24 16:57:51.001
  STEP: Creating a pod to test consume secrets @ 04/19/24 16:57:51.01
  E0419 16:57:51.399723      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:52.401176      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:53.401166      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:54.401872      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 16:57:55.058
  Apr 19 16:57:55.069: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-secrets-f68c0f59-6d64-4225-be91-a21bb0f989d0 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/19/24 16:57:55.093
  Apr 19 16:57:55.132: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-454" for this suite. @ 04/19/24 16:57:55.144
â€¢ [4.202 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 04/19/24 16:57:55.158
  Apr 19 16:57:55.158: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename webhook @ 04/19/24 16:57:55.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:57:55.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:57:55.203
  STEP: Setting up server cert @ 04/19/24 16:57:55.251
  E0419 16:57:55.401944      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/19/24 16:57:55.921
  STEP: Deploying the webhook pod @ 04/19/24 16:57:55.94
  STEP: Wait for the deployment to be ready @ 04/19/24 16:57:55.964
  Apr 19 16:57:55.977: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0419 16:57:56.404580      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:57:57.406289      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/19/24 16:57:58.008
  STEP: Verifying the service has paired with the endpoint @ 04/19/24 16:57:58.038
  E0419 16:57:58.407489      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:57:59.039: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/19/24 16:57:59.206
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/19/24 16:57:59.28
  STEP: Deleting the collection of validation webhooks @ 04/19/24 16:57:59.33
  E0419 16:57:59.407459      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 04/19/24 16:57:59.45
  Apr 19 16:57:59.474: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2905" for this suite. @ 04/19/24 16:57:59.576
  STEP: Destroying namespace "webhook-markers-8307" for this suite. @ 04/19/24 16:57:59.588
â€¢ [4.442 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 04/19/24 16:57:59.627
  Apr 19 16:57:59.627: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename webhook @ 04/19/24 16:57:59.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:57:59.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:57:59.676
  STEP: Setting up server cert @ 04/19/24 16:57:59.715
  E0419 16:58:00.408530      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/19/24 16:58:01.025
  STEP: Deploying the webhook pod @ 04/19/24 16:58:01.034
  STEP: Wait for the deployment to be ready @ 04/19/24 16:58:01.062
  Apr 19 16:58:01.086: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0419 16:58:01.408956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:02.409173      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/19/24 16:58:03.12
  STEP: Verifying the service has paired with the endpoint @ 04/19/24 16:58:03.146
  E0419 16:58:03.409899      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:58:04.147: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Apr 19 16:58:04.158: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  E0419 16:58:04.411031      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 04/19/24 16:58:04.68
  STEP: Creating a custom resource that should be denied by the webhook @ 04/19/24 16:58:04.731
  E0419 16:58:05.411250      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:06.411342      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 04/19/24 16:58:06.871
  STEP: Updating the custom resource with disallowed data should be denied @ 04/19/24 16:58:06.889
  STEP: Deleting the custom resource should be denied @ 04/19/24 16:58:06.911
  STEP: Remove the offending key and value from the custom resource data @ 04/19/24 16:58:06.924
  STEP: Deleting the updated custom resource should be successful @ 04/19/24 16:58:06.943
  Apr 19 16:58:06.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0419 16:58:07.411607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-970" for this suite. @ 04/19/24 16:58:07.604
  STEP: Destroying namespace "webhook-markers-1259" for this suite. @ 04/19/24 16:58:07.628
â€¢ [8.018 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 04/19/24 16:58:07.65
  Apr 19 16:58:07.650: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename gc @ 04/19/24 16:58:07.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:58:07.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:58:07.711
  STEP: create the deployment @ 04/19/24 16:58:07.72
  W0419 16:58:07.732170      14 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 04/19/24 16:58:07.732
  STEP: delete the deployment @ 04/19/24 16:58:08.256
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 04/19/24 16:58:08.267
  E0419 16:58:08.412694      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 04/19/24 16:58:08.826
  Apr 19 16:58:09.091: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Apr 19 16:58:09.098: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1919" for this suite. @ 04/19/24 16:58:09.108
â€¢ [1.472 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 04/19/24 16:58:09.128
  Apr 19 16:58:09.128: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename deployment @ 04/19/24 16:58:09.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:58:09.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:58:09.167
  STEP: creating a Deployment @ 04/19/24 16:58:09.187
  Apr 19 16:58:09.188: INFO: Creating simple deployment test-deployment-cwptn
  Apr 19 16:58:09.216: INFO: deployment "test-deployment-cwptn" doesn't have the required revision set
  E0419 16:58:09.413633      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:10.414218      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 04/19/24 16:58:11.254
  Apr 19 16:58:11.265: INFO: Deployment test-deployment-cwptn has Conditions: [{Available True 2024-04-19 16:58:10 +0000 UTC 2024-04-19 16:58:10 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-04-19 16:58:10 +0000 UTC 2024-04-19 16:58:09 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-cwptn-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 04/19/24 16:58:11.265
  Apr 19 16:58:11.293: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 58, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 58, 10, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.April, 19, 16, 58, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.April, 19, 16, 58, 9, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-cwptn-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 04/19/24 16:58:11.294
  Apr 19 16:58:11.299: INFO: Observed &Deployment event: ADDED
  Apr 19 16:58:11.300: INFO: Observed Deployment test-deployment-cwptn in namespace deployment-7436 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-19 16:58:09 +0000 UTC 2024-04-19 16:58:09 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-cwptn-5d576bd769"}
  Apr 19 16:58:11.301: INFO: Observed &Deployment event: MODIFIED
  Apr 19 16:58:11.302: INFO: Observed Deployment test-deployment-cwptn in namespace deployment-7436 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-19 16:58:09 +0000 UTC 2024-04-19 16:58:09 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-cwptn-5d576bd769"}
  Apr 19 16:58:11.303: INFO: Observed Deployment test-deployment-cwptn in namespace deployment-7436 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-19 16:58:09 +0000 UTC 2024-04-19 16:58:09 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 19 16:58:11.304: INFO: Observed &Deployment event: MODIFIED
  Apr 19 16:58:11.305: INFO: Observed Deployment test-deployment-cwptn in namespace deployment-7436 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-19 16:58:09 +0000 UTC 2024-04-19 16:58:09 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 19 16:58:11.305: INFO: Observed Deployment test-deployment-cwptn in namespace deployment-7436 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-19 16:58:09 +0000 UTC 2024-04-19 16:58:09 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-cwptn-5d576bd769" is progressing.}
  Apr 19 16:58:11.307: INFO: Observed &Deployment event: MODIFIED
  Apr 19 16:58:11.308: INFO: Observed Deployment test-deployment-cwptn in namespace deployment-7436 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-19 16:58:10 +0000 UTC 2024-04-19 16:58:10 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 19 16:58:11.309: INFO: Observed Deployment test-deployment-cwptn in namespace deployment-7436 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-19 16:58:10 +0000 UTC 2024-04-19 16:58:09 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-cwptn-5d576bd769" has successfully progressed.}
  Apr 19 16:58:11.310: INFO: Observed &Deployment event: MODIFIED
  Apr 19 16:58:11.311: INFO: Observed Deployment test-deployment-cwptn in namespace deployment-7436 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-19 16:58:10 +0000 UTC 2024-04-19 16:58:10 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 19 16:58:11.312: INFO: Observed Deployment test-deployment-cwptn in namespace deployment-7436 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-19 16:58:10 +0000 UTC 2024-04-19 16:58:09 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-cwptn-5d576bd769" has successfully progressed.}
  Apr 19 16:58:11.312: INFO: Found Deployment test-deployment-cwptn in namespace deployment-7436 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 19 16:58:11.313: INFO: Deployment test-deployment-cwptn has an updated status
  STEP: patching the Statefulset Status @ 04/19/24 16:58:11.314
  Apr 19 16:58:11.315: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 19 16:58:11.335: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 04/19/24 16:58:11.335
  Apr 19 16:58:11.340: INFO: Observed &Deployment event: ADDED
  Apr 19 16:58:11.341: INFO: Observed deployment test-deployment-cwptn in namespace deployment-7436 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-19 16:58:09 +0000 UTC 2024-04-19 16:58:09 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-cwptn-5d576bd769"}
  Apr 19 16:58:11.343: INFO: Observed &Deployment event: MODIFIED
  Apr 19 16:58:11.343: INFO: Observed deployment test-deployment-cwptn in namespace deployment-7436 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-19 16:58:09 +0000 UTC 2024-04-19 16:58:09 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-cwptn-5d576bd769"}
  Apr 19 16:58:11.343: INFO: Observed deployment test-deployment-cwptn in namespace deployment-7436 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-19 16:58:09 +0000 UTC 2024-04-19 16:58:09 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 19 16:58:11.344: INFO: Observed &Deployment event: MODIFIED
  Apr 19 16:58:11.344: INFO: Observed deployment test-deployment-cwptn in namespace deployment-7436 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-04-19 16:58:09 +0000 UTC 2024-04-19 16:58:09 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Apr 19 16:58:11.344: INFO: Observed deployment test-deployment-cwptn in namespace deployment-7436 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-19 16:58:09 +0000 UTC 2024-04-19 16:58:09 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-cwptn-5d576bd769" is progressing.}
  Apr 19 16:58:11.344: INFO: Observed &Deployment event: MODIFIED
  Apr 19 16:58:11.345: INFO: Observed deployment test-deployment-cwptn in namespace deployment-7436 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-19 16:58:10 +0000 UTC 2024-04-19 16:58:10 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 19 16:58:11.345: INFO: Observed deployment test-deployment-cwptn in namespace deployment-7436 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-19 16:58:10 +0000 UTC 2024-04-19 16:58:09 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-cwptn-5d576bd769" has successfully progressed.}
  Apr 19 16:58:11.346: INFO: Observed &Deployment event: MODIFIED
  Apr 19 16:58:11.346: INFO: Observed deployment test-deployment-cwptn in namespace deployment-7436 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-04-19 16:58:10 +0000 UTC 2024-04-19 16:58:10 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Apr 19 16:58:11.346: INFO: Observed deployment test-deployment-cwptn in namespace deployment-7436 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-04-19 16:58:10 +0000 UTC 2024-04-19 16:58:09 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-cwptn-5d576bd769" has successfully progressed.}
  Apr 19 16:58:11.346: INFO: Observed deployment test-deployment-cwptn in namespace deployment-7436 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 19 16:58:11.346: INFO: Observed &Deployment event: MODIFIED
  Apr 19 16:58:11.346: INFO: Found deployment test-deployment-cwptn in namespace deployment-7436 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Apr 19 16:58:11.346: INFO: Deployment test-deployment-cwptn has a patched status
  Apr 19 16:58:11.359: INFO: Deployment "test-deployment-cwptn":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-cwptn",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2a53669f-9204-4413-9d9f-a9ce52be3366",
      ResourceVersion: (string) (len=5) "28030",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849142689,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142689,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142691,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-cwptn-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 19 16:58:11.378: INFO: New ReplicaSet "test-deployment-cwptn-5d576bd769" of Deployment "test-deployment-cwptn":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-cwptn-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "72fec085-da90-4efa-9e3e-155dc6d073c1",
      ResourceVersion: (string) (len=5) "28024",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849142689,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-cwptn",
          UID: (types.UID) (len=36) "2a53669f-9204-4413-9d9f-a9ce52be3366",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142689,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 32 61 35  |k:{\"uid\":\"2a5|
              00000120  33 36 36 39 66 2d 39 32  30 34 2d 34 34 31 33 2d  |3669f-9204-4413-|
              00000130  39 64 39 66 2d 61 39 63  65 35 32 62 65 33 33 36  |9d9f-a9ce52be336|
              00000140  36 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |6\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 19 16:58:11.394: INFO: Pod "test-deployment-cwptn-5d576bd769-fkmwf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-cwptn-5d576bd769-fkmwf",
      GenerateName: (string) (len=33) "test-deployment-cwptn-5d576bd769-",
      Namespace: (string) (len=15) "deployment-7436",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "197c5172-670f-4c76-9346-9a80d60b29d1",
      ResourceVersion: (string) (len=5) "28023",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849142689,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-cwptn-5d576bd769",
          UID: (types.UID) (len=36) "72fec085-da90-4efa-9e3e-155dc6d073c1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142689,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 37 32 66 65 63 30 38  35 2d 64 61 39 30 2d 34  |"72fec085-da90-4|
              000000a0  65 66 61 2d 39 65 33 65  2d 31 35 35 64 63 36 64  |efa-9e3e-155dc6d|
              000000b0  30 37 33 63 31 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |073c1\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 31 31 39 5c 22 7d  |10.233.66.119\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c9s7v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c9s7v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142689,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142690,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849142689,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.129",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.66.119",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.119"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849142689,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849142689,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://f526b6a69b17dc238c52702e1434cc167f024b52f0564d69bf3af2c5a49fee2e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 16:58:11.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0419 16:58:11.414230      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "deployment-7436" for this suite. @ 04/19/24 16:58:11.421
â€¢ [2.308 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:901
  STEP: Creating a kubernetes client @ 04/19/24 16:58:11.439
  Apr 19 16:58:11.439: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename statefulset @ 04/19/24 16:58:11.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:58:11.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:58:11.494
  STEP: Creating service test in namespace statefulset-3872 @ 04/19/24 16:58:11.504
  STEP: Creating statefulset ss in namespace statefulset-3872 @ 04/19/24 16:58:11.52
  Apr 19 16:58:11.545: INFO: Found 0 stateful pods, waiting for 1
  E0419 16:58:12.415164      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:13.415174      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:14.415832      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:15.416064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:16.416817      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:17.417273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:18.417507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:19.417741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:20.418075      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:21.418351      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:58:21.556: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 04/19/24 16:58:21.573
  STEP: updating a scale subresource @ 04/19/24 16:58:21.58
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/19/24 16:58:21.591
  STEP: Patch a scale subresource @ 04/19/24 16:58:21.6
  STEP: verifying the statefulset Spec.Replicas was modified @ 04/19/24 16:58:21.617
  Apr 19 16:58:21.626: INFO: Deleting all statefulset in ns statefulset-3872
  Apr 19 16:58:21.637: INFO: Scaling statefulset ss to 0
  E0419 16:58:22.419010      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:23.420020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:24.420923      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:25.421735      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:26.422875      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:27.423228      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:28.423579      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:29.424209      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:30.424327      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:31.425551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:58:31.713: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 19 16:58:31.721: INFO: Deleting statefulset ss
  Apr 19 16:58:31.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3872" for this suite. @ 04/19/24 16:58:31.768
â€¢ [20.347 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 04/19/24 16:58:31.796
  Apr 19 16:58:31.796: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename configmap @ 04/19/24 16:58:31.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:58:31.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:58:31.834
  STEP: Creating configMap configmap-2879/configmap-test-48bceaa2-f52b-4041-87bf-b6377061c24b @ 04/19/24 16:58:31.84
  STEP: Creating a pod to test consume configMaps @ 04/19/24 16:58:31.847
  E0419 16:58:32.425175      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:33.425888      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 16:58:33.879
  Apr 19 16:58:33.890: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-configmaps-cccc0d6b-e043-49b7-9a51-2615ecb4dab2 container env-test: <nil>
  STEP: delete the pod @ 04/19/24 16:58:33.914
  Apr 19 16:58:33.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2879" for this suite. @ 04/19/24 16:58:33.985
â€¢ [2.210 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 04/19/24 16:58:34.008
  Apr 19 16:58:34.008: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename daemonsets @ 04/19/24 16:58:34.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:58:34.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:58:34.069
  Apr 19 16:58:34.146: INFO: Create a RollingUpdate DaemonSet
  Apr 19 16:58:34.163: INFO: Check that daemon pods launch on every node of the cluster
  Apr 19 16:58:34.191: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 16:58:34.192: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  E0419 16:58:34.426392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:58:35.223: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 16:58:35.224: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  E0419 16:58:35.428444      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:58:36.223: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 19 16:58:36.223: INFO: Node eixo7oojiese-3 is running 0 daemon pod, expected 1
  E0419 16:58:36.428633      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:58:37.214: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 19 16:58:37.214: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Apr 19 16:58:37.214: INFO: Update the DaemonSet to trigger a rollout
  Apr 19 16:58:37.231: INFO: Updating DaemonSet daemon-set
  E0419 16:58:37.428778      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:58:38.275: INFO: Roll back the DaemonSet before rollout is complete
  Apr 19 16:58:38.310: INFO: Updating DaemonSet daemon-set
  Apr 19 16:58:38.310: INFO: Make sure DaemonSet rollback is complete
  Apr 19 16:58:38.329: INFO: Wrong image for pod: daemon-set-7qcml. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Apr 19 16:58:38.331: INFO: Pod daemon-set-7qcml is not available
  E0419 16:58:38.429717      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:39.431115      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:40.432017      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:41.432438      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:42.433144      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:43.434220      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:58:44.354: INFO: Pod daemon-set-5422v is not available
  STEP: Deleting DaemonSet "daemon-set" @ 04/19/24 16:58:44.377
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5124, will wait for the garbage collector to delete the pods @ 04/19/24 16:58:44.378
  E0419 16:58:44.434917      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:58:44.457: INFO: Deleting DaemonSet.extensions daemon-set took: 20.092448ms
  Apr 19 16:58:44.558: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.011835ms
  E0419 16:58:45.435717      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:58:45.866: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 16:58:45.867: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 19 16:58:45.880: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28355"},"items":null}

  Apr 19 16:58:45.892: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28355"},"items":null}

  Apr 19 16:58:45.936: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5124" for this suite. @ 04/19/24 16:58:45.951
â€¢ [11.961 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 04/19/24 16:58:45.973
  Apr 19 16:58:45.973: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename init-container @ 04/19/24 16:58:45.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:58:46.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:58:46.026
  STEP: creating the pod @ 04/19/24 16:58:46.036
  Apr 19 16:58:46.037: INFO: PodSpec: initContainers in spec.initContainers
  E0419 16:58:46.437079      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:47.437266      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:48.438753      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:49.438689      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:50.438973      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:58:50.914: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-184" for this suite. @ 04/19/24 16:58:50.923
â€¢ [4.965 seconds]
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 04/19/24 16:58:50.938
  Apr 19 16:58:50.938: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename kubectl @ 04/19/24 16:58:50.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:58:50.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:58:50.991
  STEP: creating a replication controller @ 04/19/24 16:58:51.001
  Apr 19 16:58:51.003: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-7694 create -f -'
  E0419 16:58:51.439162      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:58:52.378: INFO: stderr: ""
  Apr 19 16:58:52.378: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 04/19/24 16:58:52.379
  Apr 19 16:58:52.379: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-7694 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0419 16:58:52.440586      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:58:52.567: INFO: stderr: ""
  Apr 19 16:58:52.567: INFO: stdout: "update-demo-nautilus-fsfqf update-demo-nautilus-v52fl "
  Apr 19 16:58:52.567: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-7694 get pods update-demo-nautilus-fsfqf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 19 16:58:52.721: INFO: stderr: ""
  Apr 19 16:58:52.721: INFO: stdout: ""
  Apr 19 16:58:52.721: INFO: update-demo-nautilus-fsfqf is created but not running
  E0419 16:58:53.440546      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:54.441196      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:55.441363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:56.442305      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:58:57.442622      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:58:57.721: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-7694 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Apr 19 16:58:57.886: INFO: stderr: ""
  Apr 19 16:58:57.886: INFO: stdout: "update-demo-nautilus-fsfqf update-demo-nautilus-v52fl "
  Apr 19 16:58:57.886: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-7694 get pods update-demo-nautilus-fsfqf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 19 16:58:58.030: INFO: stderr: ""
  Apr 19 16:58:58.030: INFO: stdout: "true"
  Apr 19 16:58:58.030: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-7694 get pods update-demo-nautilus-fsfqf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Apr 19 16:58:58.183: INFO: stderr: ""
  Apr 19 16:58:58.183: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 19 16:58:58.183: INFO: validating pod update-demo-nautilus-fsfqf
  Apr 19 16:58:58.209: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 19 16:58:58.209: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 19 16:58:58.209: INFO: update-demo-nautilus-fsfqf is verified up and running
  Apr 19 16:58:58.210: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-7694 get pods update-demo-nautilus-v52fl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Apr 19 16:58:58.357: INFO: stderr: ""
  Apr 19 16:58:58.357: INFO: stdout: "true"
  Apr 19 16:58:58.357: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-7694 get pods update-demo-nautilus-v52fl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0419 16:58:58.442743      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:58:58.512: INFO: stderr: ""
  Apr 19 16:58:58.512: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Apr 19 16:58:58.512: INFO: validating pod update-demo-nautilus-v52fl
  Apr 19 16:58:58.527: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Apr 19 16:58:58.527: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Apr 19 16:58:58.528: INFO: update-demo-nautilus-v52fl is verified up and running
  STEP: using delete to clean up resources @ 04/19/24 16:58:58.528
  Apr 19 16:58:58.528: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-7694 delete --grace-period=0 --force -f -'
  Apr 19 16:58:58.678: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 19 16:58:58.678: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Apr 19 16:58:58.678: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-7694 get rc,svc -l name=update-demo --no-headers'
  Apr 19 16:58:58.872: INFO: stderr: "No resources found in kubectl-7694 namespace.\n"
  Apr 19 16:58:58.872: INFO: stdout: ""
  Apr 19 16:58:58.873: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-7694 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 19 16:58:59.057: INFO: stderr: ""
  Apr 19 16:58:59.057: INFO: stdout: ""
  Apr 19 16:58:59.057: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7694" for this suite. @ 04/19/24 16:58:59.066
â€¢ [8.139 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 04/19/24 16:58:59.078
  Apr 19 16:58:59.078: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename replication-controller @ 04/19/24 16:58:59.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:58:59.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:58:59.117
  Apr 19 16:58:59.124: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  E0419 16:58:59.443661      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 04/19/24 16:59:00.154
  STEP: Checking rc "condition-test" has the desired failure condition set @ 04/19/24 16:59:00.169
  E0419 16:59:00.445246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 04/19/24 16:59:01.188
  Apr 19 16:59:01.221: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 04/19/24 16:59:01.221
  E0419 16:59:01.445925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:02.244: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3926" for this suite. @ 04/19/24 16:59:02.263
â€¢ [3.220 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 04/19/24 16:59:02.302
  Apr 19 16:59:02.302: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename discovery @ 04/19/24 16:59:02.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:59:02.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:59:02.344
  STEP: Setting up server cert @ 04/19/24 16:59:02.351
  E0419 16:59:02.446290      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:03.446564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/api/v1" @ 04/19/24 16:59:03.595
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 04/19/24 16:59:03.604
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 04/19/24 16:59:03.606
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 04/19/24 16:59:03.609
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 04/19/24 16:59:03.614
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 04/19/24 16:59:03.616
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 04/19/24 16:59:03.619
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 04/19/24 16:59:03.621
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 04/19/24 16:59:03.624
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 04/19/24 16:59:03.626
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 04/19/24 16:59:03.632
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 04/19/24 16:59:03.635
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 04/19/24 16:59:03.638
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 04/19/24 16:59:03.641
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 04/19/24 16:59:03.644
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 04/19/24 16:59:03.648
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 04/19/24 16:59:03.65
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 04/19/24 16:59:03.653
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 04/19/24 16:59:03.655
  Apr 19 16:59:03.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-304" for this suite. @ 04/19/24 16:59:03.669
â€¢ [1.382 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 04/19/24 16:59:03.691
  Apr 19 16:59:03.691: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename kubectl @ 04/19/24 16:59:03.693
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:59:03.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:59:03.731
  STEP: Starting the proxy @ 04/19/24 16:59:03.738
  Apr 19 16:59:03.740: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-3504 proxy --unix-socket=/tmp/kubectl-proxy-unix3469575512/test'
  STEP: retrieving proxy /api/ output @ 04/19/24 16:59:03.84
  Apr 19 16:59:03.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3504" for this suite. @ 04/19/24 16:59:03.851
â€¢ [0.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 04/19/24 16:59:03.869
  Apr 19 16:59:03.869: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename proxy @ 04/19/24 16:59:03.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:59:03.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:59:03.901
  Apr 19 16:59:03.906: INFO: Creating pod...
  E0419 16:59:04.446783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:05.447358      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:05.936: INFO: Creating service...
  Apr 19 16:59:05.960: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4551/pods/agnhost/proxy/some/path/with/DELETE
  Apr 19 16:59:05.984: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 19 16:59:05.984: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4551/pods/agnhost/proxy/some/path/with/GET
  Apr 19 16:59:05.996: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Apr 19 16:59:05.996: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4551/pods/agnhost/proxy/some/path/with/HEAD
  Apr 19 16:59:06.007: INFO: http.Client request:HEAD | StatusCode:200
  Apr 19 16:59:06.007: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4551/pods/agnhost/proxy/some/path/with/OPTIONS
  Apr 19 16:59:06.019: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 19 16:59:06.019: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4551/pods/agnhost/proxy/some/path/with/PATCH
  Apr 19 16:59:06.029: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 19 16:59:06.029: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4551/pods/agnhost/proxy/some/path/with/POST
  Apr 19 16:59:06.038: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 19 16:59:06.040: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4551/pods/agnhost/proxy/some/path/with/PUT
  Apr 19 16:59:06.049: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 19 16:59:06.049: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4551/services/test-service/proxy/some/path/with/DELETE
  Apr 19 16:59:06.060: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 19 16:59:06.060: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4551/services/test-service/proxy/some/path/with/GET
  Apr 19 16:59:06.070: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Apr 19 16:59:06.070: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4551/services/test-service/proxy/some/path/with/HEAD
  Apr 19 16:59:06.080: INFO: http.Client request:HEAD | StatusCode:200
  Apr 19 16:59:06.080: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4551/services/test-service/proxy/some/path/with/OPTIONS
  Apr 19 16:59:06.090: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 19 16:59:06.090: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4551/services/test-service/proxy/some/path/with/PATCH
  Apr 19 16:59:06.101: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 19 16:59:06.102: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4551/services/test-service/proxy/some/path/with/POST
  Apr 19 16:59:06.113: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 19 16:59:06.113: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-4551/services/test-service/proxy/some/path/with/PUT
  Apr 19 16:59:06.123: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 19 16:59:06.124: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4551" for this suite. @ 04/19/24 16:59:06.134
â€¢ [2.277 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:750
  STEP: Creating a kubernetes client @ 04/19/24 16:59:06.147
  Apr 19 16:59:06.147: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename statefulset @ 04/19/24 16:59:06.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:59:06.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:59:06.183
  STEP: Creating service test in namespace statefulset-7104 @ 04/19/24 16:59:06.189
  STEP: Creating stateful set ss in namespace statefulset-7104 @ 04/19/24 16:59:06.2
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7104 @ 04/19/24 16:59:06.211
  Apr 19 16:59:06.218: INFO: Found 0 stateful pods, waiting for 1
  E0419 16:59:06.448020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:07.448635      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:08.448851      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:09.449854      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:10.449492      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:11.449956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:12.450239      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:13.450396      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:14.451553      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:15.451750      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:16.229: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 04/19/24 16:59:16.23
  Apr 19 16:59:16.242: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=statefulset-7104 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0419 16:59:16.452537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:16.594: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 19 16:59:16.594: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 19 16:59:16.594: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 19 16:59:16.601: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0419 16:59:17.452905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:18.453252      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:19.453381      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:20.453899      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:21.454089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:22.454183      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:23.454605      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:24.454952      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:25.455218      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:26.456257      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:26.607: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 19 16:59:26.608: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 19 16:59:26.647: INFO: POD   NODE            PHASE    GRACE  CONDITIONS
  Apr 19 16:59:26.647: INFO: ss-0  eixo7oojiese-3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:06 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:17 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:06 +0000 UTC  }]
  Apr 19 16:59:26.647: INFO: 
  Apr 19 16:59:26.647: INFO: StatefulSet ss has not reached scale 3, at 1
  E0419 16:59:27.456616      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:27.666: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.989802475s
  E0419 16:59:28.457225      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:28.681: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.970121143s
  E0419 16:59:29.457215      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:29.691: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.955726762s
  E0419 16:59:30.458074      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:30.703: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.945243697s
  E0419 16:59:31.458337      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:31.716: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.933283392s
  E0419 16:59:32.460042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:32.730: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.918715364s
  E0419 16:59:33.459644      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:33.742: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.90567032s
  E0419 16:59:34.459989      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:34.752: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.893444156s
  E0419 16:59:35.461197      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:35.765: INFO: Verifying statefulset ss doesn't scale past 3 for another 884.788883ms
  E0419 16:59:36.462116      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7104 @ 04/19/24 16:59:36.767
  Apr 19 16:59:36.780: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=statefulset-7104 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 19 16:59:37.149: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 19 16:59:37.149: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 19 16:59:37.149: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 19 16:59:37.154: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=statefulset-7104 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Apr 19 16:59:37.445: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Apr 19 16:59:37.445: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 19 16:59:37.445: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 19 16:59:37.446: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=statefulset-7104 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0419 16:59:37.463166      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:37.839: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Apr 19 16:59:37.839: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 19 16:59:37.839: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Apr 19 16:59:37.849: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 19 16:59:37.849: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 19 16:59:37.850: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 04/19/24 16:59:37.851
  Apr 19 16:59:37.860: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=statefulset-7104 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 19 16:59:38.189: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 19 16:59:38.189: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 19 16:59:38.189: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 19 16:59:38.191: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=statefulset-7104 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0419 16:59:38.463764      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:38.517: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 19 16:59:38.517: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 19 16:59:38.517: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 19 16:59:38.518: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=statefulset-7104 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 19 16:59:38.866: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 19 16:59:38.866: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 19 16:59:38.866: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Apr 19 16:59:38.866: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Apr 19 16:59:38.874: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0419 16:59:39.463869      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:40.464803      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:41.465025      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:42.465423      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:43.465902      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:44.466867      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:45.467464      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:46.468356      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:47.469279      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 16:59:48.473768      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:48.906: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Apr 19 16:59:48.907: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Apr 19 16:59:48.907: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Apr 19 16:59:48.956: INFO: POD   NODE            PHASE    GRACE  CONDITIONS
  Apr 19 16:59:48.956: INFO: ss-0  eixo7oojiese-3  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:06 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:38 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:06 +0000 UTC  }]
  Apr 19 16:59:48.957: INFO: ss-1  eixo7oojiese-2  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:26 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:26 +0000 UTC  }]
  Apr 19 16:59:48.957: INFO: ss-2  eixo7oojiese-1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:26 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:39 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:26 +0000 UTC  }]
  Apr 19 16:59:48.957: INFO: 
  Apr 19 16:59:48.957: INFO: StatefulSet ss has not reached scale 0, at 3
  E0419 16:59:49.472080      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:49.964: INFO: POD   NODE            PHASE      GRACE  CONDITIONS
  Apr 19 16:59:49.965: INFO: ss-0  eixo7oojiese-3  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:06 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:38 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:38 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:06 +0000 UTC  }]
  Apr 19 16:59:49.965: INFO: ss-1  eixo7oojiese-2  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:26 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:39 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:39 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-04-19 16:59:26 +0000 UTC  }]
  Apr 19 16:59:49.965: INFO: 
  Apr 19 16:59:49.965: INFO: StatefulSet ss has not reached scale 0, at 2
  E0419 16:59:50.472700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:50.983: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.981060122s
  E0419 16:59:51.473317      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:52.056: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.961184493s
  E0419 16:59:52.474257      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:53.063: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.889513219s
  E0419 16:59:53.475279      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:54.073: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.881978724s
  E0419 16:59:54.474937      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:55.084: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.872323642s
  E0419 16:59:55.475294      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:56.095: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.861510216s
  E0419 16:59:56.476717      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:57.102: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.851433152s
  E0419 16:59:57.477578      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:58.112: INFO: Verifying statefulset ss doesn't scale past 0 for another 843.154435ms
  E0419 16:59:58.477520      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7104 @ 04/19/24 16:59:59.114
  Apr 19 16:59:59.127: INFO: Scaling statefulset ss to 0
  Apr 19 16:59:59.159: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 19 16:59:59.168: INFO: Deleting all statefulset in ns statefulset-7104
  Apr 19 16:59:59.187: INFO: Scaling statefulset ss to 0
  Apr 19 16:59:59.222: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 19 16:59:59.234: INFO: Deleting statefulset ss
  Apr 19 16:59:59.281: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7104" for this suite. @ 04/19/24 16:59:59.302
â€¢ [53.174 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 04/19/24 16:59:59.33
  Apr 19 16:59:59.330: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename kubectl @ 04/19/24 16:59:59.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:59:59.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:59:59.387
  STEP: validating cluster-info @ 04/19/24 16:59:59.398
  Apr 19 16:59:59.398: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-7334 cluster-info'
  E0419 16:59:59.478016      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 16:59:59.597: INFO: stderr: ""
  Apr 19 16:59:59.597: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.233.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Apr 19 16:59:59.597: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7334" for this suite. @ 04/19/24 16:59:59.609
â€¢ [0.300 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 04/19/24 16:59:59.642
  Apr 19 16:59:59.642: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename downward-api @ 04/19/24 16:59:59.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 16:59:59.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 16:59:59.683
  STEP: Creating a pod to test downward api env vars @ 04/19/24 16:59:59.688
  E0419 17:00:00.478489      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:01.478846      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:02.478919      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:03.479272      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:00:03.737
  Apr 19 17:00:03.744: INFO: Trying to get logs from node eixo7oojiese-3 pod downward-api-fe550f3c-769b-4788-8fc2-53a378b99992 container dapi-container: <nil>
  STEP: delete the pod @ 04/19/24 17:00:03.761
  Apr 19 17:00:03.793: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6817" for this suite. @ 04/19/24 17:00:03.805
â€¢ [4.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 04/19/24 17:00:03.825
  Apr 19 17:00:03.825: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename server-version @ 04/19/24 17:00:03.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:00:03.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:00:03.866
  STEP: Request ServerVersion @ 04/19/24 17:00:03.872
  STEP: Confirm major version @ 04/19/24 17:00:03.874
  Apr 19 17:00:03.875: INFO: Major version: 1
  STEP: Confirm minor version @ 04/19/24 17:00:03.875
  Apr 19 17:00:03.876: INFO: cleanMinorVersion: 28
  Apr 19 17:00:03.877: INFO: Minor version: 28
  Apr 19 17:00:03.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-1025" for this suite. @ 04/19/24 17:00:03.893
â€¢ [0.081 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1030
  STEP: Creating a kubernetes client @ 04/19/24 17:00:03.907
  Apr 19 17:00:03.907: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename statefulset @ 04/19/24 17:00:03.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:00:03.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:00:03.956
  STEP: Creating service test in namespace statefulset-3032 @ 04/19/24 17:00:03.968
  STEP: Creating statefulset ss in namespace statefulset-3032 @ 04/19/24 17:00:04.039
  Apr 19 17:00:04.061: INFO: Found 0 stateful pods, waiting for 1
  E0419 17:00:04.479742      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:05.480640      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:06.481539      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:07.481581      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:08.482599      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:09.483432      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:10.484955      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:11.485965      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:12.486493      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:13.486721      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:00:14.071: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 04/19/24 17:00:14.088
  STEP: Getting /status @ 04/19/24 17:00:14.107
  Apr 19 17:00:14.121: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 04/19/24 17:00:14.121
  Apr 19 17:00:14.150: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 04/19/24 17:00:14.151
  Apr 19 17:00:14.157: INFO: Observed &StatefulSet event: ADDED
  Apr 19 17:00:14.157: INFO: Found Statefulset ss in namespace statefulset-3032 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Apr 19 17:00:14.158: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 04/19/24 17:00:14.159
  Apr 19 17:00:14.159: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Apr 19 17:00:14.176: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 04/19/24 17:00:14.176
  Apr 19 17:00:14.184: INFO: Observed &StatefulSet event: ADDED
  Apr 19 17:00:14.184: INFO: Deleting all statefulset in ns statefulset-3032
  Apr 19 17:00:14.193: INFO: Scaling statefulset ss to 0
  E0419 17:00:14.487636      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:15.488429      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:16.488750      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:17.488971      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:18.489202      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:19.489842      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:20.489826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:21.490040      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:22.490110      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:23.490371      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:00:24.245: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 19 17:00:24.255: INFO: Deleting statefulset ss
  Apr 19 17:00:24.299: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3032" for this suite. @ 04/19/24 17:00:24.315
â€¢ [20.423 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 04/19/24 17:00:24.333
  Apr 19 17:00:24.333: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 17:00:24.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:00:24.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:00:24.387
  STEP: Creating a pod to test downward API volume plugin @ 04/19/24 17:00:24.396
  E0419 17:00:24.490517      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:25.490764      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:00:26.439
  Apr 19 17:00:26.443: INFO: Trying to get logs from node eixo7oojiese-3 pod downwardapi-volume-365b3562-d209-4c6c-97f3-c26cdc8cefc7 container client-container: <nil>
  STEP: delete the pod @ 04/19/24 17:00:26.456
  Apr 19 17:00:26.486: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0419 17:00:26.492284      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "projected-1737" for this suite. @ 04/19/24 17:00:26.498
â€¢ [2.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 04/19/24 17:00:26.512
  Apr 19 17:00:26.512: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 17:00:26.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:00:26.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:00:26.545
  STEP: Creating configMap with name configmap-projected-all-test-volume-f5672813-e0fb-46c3-ac08-77c9542f0d5c @ 04/19/24 17:00:26.549
  STEP: Creating secret with name secret-projected-all-test-volume-9c32eb85-3387-4123-a747-ebe03b8fbef0 @ 04/19/24 17:00:26.557
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 04/19/24 17:00:26.565
  E0419 17:00:27.494022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:28.494120      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:00:28.613
  Apr 19 17:00:28.622: INFO: Trying to get logs from node eixo7oojiese-3 pod projected-volume-9c980239-82ca-49b7-931b-f85dbf4d5c2c container projected-all-volume-test: <nil>
  STEP: delete the pod @ 04/19/24 17:00:28.643
  Apr 19 17:00:28.681: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7162" for this suite. @ 04/19/24 17:00:28.702
â€¢ [2.209 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:320
  STEP: Creating a kubernetes client @ 04/19/24 17:00:28.723
  Apr 19 17:00:28.723: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename statefulset @ 04/19/24 17:00:28.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:00:28.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:00:28.777
  STEP: Creating service test in namespace statefulset-7354 @ 04/19/24 17:00:28.785
  STEP: Creating a new StatefulSet @ 04/19/24 17:00:28.798
  Apr 19 17:00:28.816: INFO: Found 0 stateful pods, waiting for 3
  E0419 17:00:29.495109      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:30.495877      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:31.496481      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:32.497770      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:33.497943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:34.498047      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:35.498499      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:36.499463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:37.500915      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:38.505811      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:00:38.828: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Apr 19 17:00:38.828: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Apr 19 17:00:38.828: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Apr 19 17:00:38.872: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=statefulset-7354 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 19 17:00:39.228: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 19 17:00:39.228: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 19 17:00:39.228: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0419 17:00:39.501418      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:40.501503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:41.502251      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:42.502469      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:43.503004      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:44.503202      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:45.503492      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:46.504705      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:47.504981      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:48.505134      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 04/19/24 17:00:49.267
  Apr 19 17:00:49.302: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 04/19/24 17:00:49.303
  E0419 17:00:49.505706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:50.506573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:51.506940      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:52.507245      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:53.508355      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:54.508488      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:55.509000      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:56.509399      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:57.510614      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:00:58.510982      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 04/19/24 17:00:59.351
  Apr 19 17:00:59.363: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=statefulset-7354 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0419 17:00:59.511531      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:00:59.755: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 19 17:00:59.755: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 19 17:00:59.755: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0419 17:01:00.513797      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:01.513496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:02.513665      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:03.514047      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:04.514142      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:05.515488      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:06.516230      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:07.517327      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:08.517939      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:09.518530      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 04/19/24 17:01:09.809
  Apr 19 17:01:09.810: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=statefulset-7354 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Apr 19 17:01:10.167: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Apr 19 17:01:10.167: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Apr 19 17:01:10.167: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0419 17:01:10.519288      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:11.519846      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:12.520756      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:13.521045      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:14.521944      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:15.521907      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:16.522339      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:17.522823      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:18.523570      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:19.524195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:01:20.251: INFO: Updating stateful set ss2
  E0419 17:01:20.525107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:21.525336      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:22.525474      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:23.525842      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:24.526276      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:25.526603      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:26.527296      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:27.527563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:28.528045      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:29.528595      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 04/19/24 17:01:30.31
  Apr 19 17:01:30.321: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=statefulset-7354 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0419 17:01:30.529029      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:01:30.669: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Apr 19 17:01:30.669: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Apr 19 17:01:30.669: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0419 17:01:31.529379      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:32.529706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:33.530036      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:34.530179      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:35.530326      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:36.531439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:37.532407      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:38.533138      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:39.533901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:40.534080      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:01:40.739: INFO: Deleting all statefulset in ns statefulset-7354
  Apr 19 17:01:40.750: INFO: Scaling statefulset ss2 to 0
  E0419 17:01:41.534484      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:42.535359      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:43.535210      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:44.535421      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:45.535798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:46.536912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:47.537124      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:48.538147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:49.538571      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:50.539362      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:01:50.836: INFO: Waiting for statefulset status.replicas updated to 0
  Apr 19 17:01:50.847: INFO: Deleting statefulset ss2
  Apr 19 17:01:50.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7354" for this suite. @ 04/19/24 17:01:50.903
â€¢ [82.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 04/19/24 17:01:50.922
  Apr 19 17:01:50.922: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename container-runtime @ 04/19/24 17:01:50.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:01:50.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:01:50.968
  STEP: create the container @ 04/19/24 17:01:50.974
  W0419 17:01:50.994086      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 04/19/24 17:01:50.995
  E0419 17:01:51.539513      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:52.540041      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/19/24 17:01:53.067
  STEP: the container should be terminated @ 04/19/24 17:01:53.079
  STEP: the termination message should be set @ 04/19/24 17:01:53.079
  Apr 19 17:01:53.080: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 04/19/24 17:01:53.08
  Apr 19 17:01:53.106: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-884" for this suite. @ 04/19/24 17:01:53.128
â€¢ [2.225 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 04/19/24 17:01:53.153
  Apr 19 17:01:53.153: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename services @ 04/19/24 17:01:53.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:01:53.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:01:53.214
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9726 @ 04/19/24 17:01:53.221
  STEP: changing the ExternalName service to type=ClusterIP @ 04/19/24 17:01:53.235
  STEP: creating replication controller externalname-service in namespace services-9726 @ 04/19/24 17:01:53.265
  I0419 17:01:53.286925      14 runners.go:197] Created replication controller with name: externalname-service, namespace: services-9726, replica count: 2
  E0419 17:01:53.540208      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:54.541478      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:55.542646      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0419 17:01:56.338814      14 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 19 17:01:56.339: INFO: Creating new exec pod
  E0419 17:01:56.543037      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:57.548580      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:01:58.556553      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:01:59.374: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-9726 exec execpodh2z62 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0419 17:01:59.547414      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:01:59.800: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 19 17:01:59.800: INFO: stdout: "externalname-service-2g8vz"
  Apr 19 17:01:59.800: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-9726 exec execpodh2z62 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.10.47 80'
  Apr 19 17:02:00.166: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.10.47 80\nConnection to 10.233.10.47 80 port [tcp/http] succeeded!\n"
  Apr 19 17:02:00.166: INFO: stdout: "externalname-service-2g8vz"
  Apr 19 17:02:00.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 19 17:02:00.181: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-9726" for this suite. @ 04/19/24 17:02:00.257
â€¢ [7.120 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 04/19/24 17:02:00.274
  Apr 19 17:02:00.274: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename sched-preemption @ 04/19/24 17:02:00.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:02:00.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:02:00.316
  Apr 19 17:02:00.351: INFO: Waiting up to 1m0s for all nodes to be ready
  E0419 17:02:00.547592      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:01.548813      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:02.549834      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:03.550058      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:04.550062      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:05.551135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:06.551036      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:07.551507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:08.552408      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:09.553392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:10.553515      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:11.554127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:12.555157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:13.555747      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:14.556390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:15.556811      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:16.557728      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:17.558986      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:18.559473      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:19.560560      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:20.561483      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:21.562671      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:22.562809      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:23.563133      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:24.563255      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:25.563856      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:26.564458      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:27.565573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:28.565759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:29.566173      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:30.566993      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:31.569239      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:32.570323      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:33.570827      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:34.570992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:35.571747      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:36.572450      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:37.572726      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:38.572834      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:39.576006      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:40.577038      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:41.577304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:42.577470      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:43.577783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:44.578508      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:45.578693      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:46.579227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:47.579807      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:48.580467      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:49.580789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:50.581654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:51.582912      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:52.583483      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:53.584601      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:54.585439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:55.585739      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:56.586561      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:57.587214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:58.588075      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:02:59.588474      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:03:00.407: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 04/19/24 17:03:00.414
  Apr 19 17:03:00.414: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename sched-preemption-path @ 04/19/24 17:03:00.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:03:00.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:03:00.469
  Apr 19 17:03:00.506: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Apr 19 17:03:00.513: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Apr 19 17:03:00.558: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0419 17:03:00.588539      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:03:00.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1272" for this suite. @ 04/19/24 17:03:00.723
  STEP: Destroying namespace "sched-preemption-4664" for this suite. @ 04/19/24 17:03:00.737
â€¢ [60.477 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 04/19/24 17:03:00.76
  Apr 19 17:03:00.760: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename secrets @ 04/19/24 17:03:00.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:03:00.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:03:00.801
  STEP: Creating secret with name secret-test-0e519d13-b98a-4b5a-8494-10e07d746acb @ 04/19/24 17:03:00.808
  STEP: Creating a pod to test consume secrets @ 04/19/24 17:03:00.817
  E0419 17:03:01.589908      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:02.589700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:03.590591      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:04.590606      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:03:04.86
  Apr 19 17:03:04.873: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-secrets-fa1448eb-d9ec-452f-89b5-5ebff8d35a37 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/19/24 17:03:04.946
  Apr 19 17:03:04.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9955" for this suite. @ 04/19/24 17:03:04.993
â€¢ [4.247 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 04/19/24 17:03:05.038
  Apr 19 17:03:05.038: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename subpath @ 04/19/24 17:03:05.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:03:05.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:03:05.074
  STEP: Setting up data @ 04/19/24 17:03:05.079
  STEP: Creating pod pod-subpath-test-secret-8x7b @ 04/19/24 17:03:05.097
  STEP: Creating a pod to test atomic-volume-subpath @ 04/19/24 17:03:05.097
  E0419 17:03:05.591704      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:06.593009      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:07.593275      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:08.594269      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:09.594303      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:10.595295      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:11.595746      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:12.595904      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:13.596551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:14.596943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:15.596980      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:16.597966      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:17.598158      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:18.598519      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:19.598941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:20.600763      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:21.600235      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:22.600901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:23.601289      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:24.601706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:25.601712      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:26.602124      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:27.603220      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:28.603736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:03:29.254
  Apr 19 17:03:29.265: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-subpath-test-secret-8x7b container test-container-subpath-secret-8x7b: <nil>
  STEP: delete the pod @ 04/19/24 17:03:29.303
  STEP: Deleting pod pod-subpath-test-secret-8x7b @ 04/19/24 17:03:29.354
  Apr 19 17:03:29.354: INFO: Deleting pod "pod-subpath-test-secret-8x7b" in namespace "subpath-6766"
  Apr 19 17:03:29.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6766" for this suite. @ 04/19/24 17:03:29.386
â€¢ [24.371 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 04/19/24 17:03:29.413
  Apr 19 17:03:29.414: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename cronjob @ 04/19/24 17:03:29.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:03:29.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:03:29.468
  STEP: Creating a cronjob @ 04/19/24 17:03:29.478
  STEP: Ensuring more than one job is running at a time @ 04/19/24 17:03:29.497
  E0419 17:03:29.604454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:30.606224      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:31.605663      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:32.606099      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:33.606604      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:34.607538      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:35.608304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:36.609216      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:37.610204      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:38.610720      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:39.611648      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:40.612458      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:41.612562      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:42.614212      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:43.613752      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:44.614020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:45.614269      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:46.637214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:47.622736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:48.625435      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:49.625576      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:50.628207      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:51.627632      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:52.627795      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:53.628539      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:54.628914      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:55.629108      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:56.629405      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:57.630514      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:58.630942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:03:59.631692      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:00.632146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:01.633316      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:02.633737      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:03.634172      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:04.635973      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:05.636822      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:06.637931      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:07.638680      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:08.639555      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:09.639689      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:10.640052      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:11.640860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:12.641112      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:13.641195      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:14.642069      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:15.641873      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:16.642873      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:17.643526      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:18.643931      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:19.644846      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:20.645979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:21.646147      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:22.646871      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:23.647491      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:24.648798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:25.649321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:26.650619      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:27.650762      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:28.651088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:29.651293      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:30.652523      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:31.653214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:32.653571      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:33.659640      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:34.659869      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:35.660574      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:36.661331      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:37.661302      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:38.661636      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:39.662836      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:40.665925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:41.663024      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:42.663235      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:43.664591      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:44.664872      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:45.664902      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:46.665678      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:47.670594      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:48.667503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:49.670025      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:50.669596      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:51.669455      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:52.670527      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:53.671123      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:54.670826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:55.671334      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:56.671870      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:57.673342      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:58.673448      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:04:59.673572      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:00.673976      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 04/19/24 17:05:01.513
  STEP: Removing cronjob @ 04/19/24 17:05:01.525
  Apr 19 17:05:01.543: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-413" for this suite. @ 04/19/24 17:05:01.558
â€¢ [92.186 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 04/19/24 17:05:01.601
  Apr 19 17:05:01.601: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename runtimeclass @ 04/19/24 17:05:01.609
  E0419 17:05:01.674736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:05:01.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:05:01.716
  STEP: getting /apis @ 04/19/24 17:05:01.719
  STEP: getting /apis/node.k8s.io @ 04/19/24 17:05:01.727
  STEP: getting /apis/node.k8s.io/v1 @ 04/19/24 17:05:01.729
  STEP: creating @ 04/19/24 17:05:01.73
  STEP: watching @ 04/19/24 17:05:01.765
  Apr 19 17:05:01.765: INFO: starting watch
  STEP: getting @ 04/19/24 17:05:01.776
  STEP: listing @ 04/19/24 17:05:01.78
  STEP: patching @ 04/19/24 17:05:01.786
  STEP: updating @ 04/19/24 17:05:01.795
  Apr 19 17:05:01.803: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 04/19/24 17:05:01.803
  STEP: deleting a collection @ 04/19/24 17:05:01.824
  Apr 19 17:05:01.864: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3642" for this suite. @ 04/19/24 17:05:01.872
â€¢ [0.283 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 04/19/24 17:05:01.887
  Apr 19 17:05:01.887: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename daemonsets @ 04/19/24 17:05:01.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:05:01.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:05:01.921
  Apr 19 17:05:01.966: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/19/24 17:05:01.979
  Apr 19 17:05:02.003: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 17:05:02.004: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  E0419 17:05:02.674867      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:03.029: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 17:05:03.029: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  E0419 17:05:03.676086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:04.071: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 19 17:05:04.071: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 04/19/24 17:05:04.113
  STEP: Check that daemon pods images are updated. @ 04/19/24 17:05:04.156
  Apr 19 17:05:04.173: INFO: Wrong image for pod: daemon-set-mvn8l. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 19 17:05:04.174: INFO: Wrong image for pod: daemon-set-xjc4h. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0419 17:05:04.676504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:05.197: INFO: Wrong image for pod: daemon-set-mvn8l. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 19 17:05:05.198: INFO: Wrong image for pod: daemon-set-xjc4h. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0419 17:05:05.676850      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:06.197: INFO: Wrong image for pod: daemon-set-mvn8l. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Apr 19 17:05:06.197: INFO: Pod daemon-set-nwh9r is not available
  Apr 19 17:05:06.197: INFO: Wrong image for pod: daemon-set-xjc4h. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0419 17:05:06.677617      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:07.193: INFO: Pod daemon-set-qf4t9 is not available
  Apr 19 17:05:07.193: INFO: Wrong image for pod: daemon-set-xjc4h. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0419 17:05:07.678539      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:08.196: INFO: Pod daemon-set-qf4t9 is not available
  Apr 19 17:05:08.196: INFO: Wrong image for pod: daemon-set-xjc4h. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  E0419 17:05:08.678651      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:09.194: INFO: Pod daemon-set-n7qql is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 04/19/24 17:05:09.204
  Apr 19 17:05:09.229: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 19 17:05:09.230: INFO: Node eixo7oojiese-3 is running 0 daemon pod, expected 1
  E0419 17:05:09.680381      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:10.246: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 19 17:05:10.246: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 04/19/24 17:05:10.276
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3086, will wait for the garbage collector to delete the pods @ 04/19/24 17:05:10.277
  Apr 19 17:05:10.357: INFO: Deleting DaemonSet.extensions daemon-set took: 22.162952ms
  Apr 19 17:05:10.459: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.576627ms
  E0419 17:05:10.680973      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:11.681587      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:12.066: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 17:05:12.066: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 19 17:05:12.074: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"30391"},"items":null}

  Apr 19 17:05:12.080: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"30391"},"items":null}

  Apr 19 17:05:12.117: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3086" for this suite. @ 04/19/24 17:05:12.128
â€¢ [10.258 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 04/19/24 17:05:12.148
  Apr 19 17:05:12.148: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename proxy @ 04/19/24 17:05:12.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:05:12.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:05:12.199
  Apr 19 17:05:12.208: INFO: Creating pod...
  E0419 17:05:12.682143      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:13.682772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:14.250: INFO: Creating service...
  Apr 19 17:05:14.282: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6760/pods/agnhost/proxy?method=DELETE
  Apr 19 17:05:14.303: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 19 17:05:14.303: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6760/pods/agnhost/proxy?method=OPTIONS
  Apr 19 17:05:14.317: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 19 17:05:14.317: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6760/pods/agnhost/proxy?method=PATCH
  Apr 19 17:05:14.327: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 19 17:05:14.327: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6760/pods/agnhost/proxy?method=POST
  Apr 19 17:05:14.340: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 19 17:05:14.340: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6760/pods/agnhost/proxy?method=PUT
  Apr 19 17:05:14.349: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 19 17:05:14.349: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6760/services/e2e-proxy-test-service/proxy?method=DELETE
  Apr 19 17:05:14.361: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Apr 19 17:05:14.361: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6760/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Apr 19 17:05:14.371: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Apr 19 17:05:14.371: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6760/services/e2e-proxy-test-service/proxy?method=PATCH
  Apr 19 17:05:14.378: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Apr 19 17:05:14.378: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6760/services/e2e-proxy-test-service/proxy?method=POST
  Apr 19 17:05:14.386: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Apr 19 17:05:14.387: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6760/services/e2e-proxy-test-service/proxy?method=PUT
  Apr 19 17:05:14.395: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Apr 19 17:05:14.395: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6760/pods/agnhost/proxy?method=GET
  Apr 19 17:05:14.400: INFO: http.Client request:GET StatusCode:301
  Apr 19 17:05:14.400: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6760/services/e2e-proxy-test-service/proxy?method=GET
  Apr 19 17:05:14.408: INFO: http.Client request:GET StatusCode:301
  Apr 19 17:05:14.408: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6760/pods/agnhost/proxy?method=HEAD
  Apr 19 17:05:14.412: INFO: http.Client request:HEAD StatusCode:301
  Apr 19 17:05:14.413: INFO: Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-6760/services/e2e-proxy-test-service/proxy?method=HEAD
  Apr 19 17:05:14.422: INFO: http.Client request:HEAD StatusCode:301
  Apr 19 17:05:14.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6760" for this suite. @ 04/19/24 17:05:14.431
â€¢ [2.295 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 04/19/24 17:05:14.445
  Apr 19 17:05:14.445: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename emptydir @ 04/19/24 17:05:14.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:05:14.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:05:14.499
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 04/19/24 17:05:14.506
  E0419 17:05:14.683740      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:15.684686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:16.685119      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:17.685601      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:05:18.561
  Apr 19 17:05:18.574: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-73d9d6ce-8e8e-43cc-892c-d07e5724ec29 container test-container: <nil>
  STEP: delete the pod @ 04/19/24 17:05:18.622
  Apr 19 17:05:18.661: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2648" for this suite. @ 04/19/24 17:05:18.672
  E0419 17:05:18.686902      14 retrywatcher.go:129] "Watch failed" err="context canceled"
â€¢ [4.248 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 04/19/24 17:05:18.694
  Apr 19 17:05:18.695: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename var-expansion @ 04/19/24 17:05:18.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:05:18.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:05:18.751
  STEP: Creating a pod to test env composition @ 04/19/24 17:05:18.76
  E0419 17:05:19.687038      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:20.687383      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:21.687513      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:22.688277      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:05:22.822
  Apr 19 17:05:22.830: INFO: Trying to get logs from node eixo7oojiese-3 pod var-expansion-7a17671e-dd17-4cd4-9190-c68e5890cf68 container dapi-container: <nil>
  STEP: delete the pod @ 04/19/24 17:05:22.853
  Apr 19 17:05:22.882: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1553" for this suite. @ 04/19/24 17:05:22.894
â€¢ [4.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 04/19/24 17:05:22.911
  Apr 19 17:05:22.911: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename ingress @ 04/19/24 17:05:22.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:05:22.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:05:22.954
  STEP: getting /apis @ 04/19/24 17:05:22.961
  STEP: getting /apis/networking.k8s.io @ 04/19/24 17:05:22.971
  STEP: getting /apis/networking.k8s.iov1 @ 04/19/24 17:05:22.974
  STEP: creating @ 04/19/24 17:05:22.978
  STEP: getting @ 04/19/24 17:05:23.008
  STEP: listing @ 04/19/24 17:05:23.014
  STEP: watching @ 04/19/24 17:05:23.022
  Apr 19 17:05:23.022: INFO: starting watch
  STEP: cluster-wide listing @ 04/19/24 17:05:23.025
  STEP: cluster-wide watching @ 04/19/24 17:05:23.033
  Apr 19 17:05:23.033: INFO: starting watch
  STEP: patching @ 04/19/24 17:05:23.035
  STEP: updating @ 04/19/24 17:05:23.055
  Apr 19 17:05:23.072: INFO: waiting for watch events with expected annotations
  Apr 19 17:05:23.072: INFO: saw patched and updated annotations
  STEP: patching /status @ 04/19/24 17:05:23.072
  STEP: updating /status @ 04/19/24 17:05:23.087
  STEP: get /status @ 04/19/24 17:05:23.101
  STEP: deleting @ 04/19/24 17:05:23.109
  STEP: deleting a collection @ 04/19/24 17:05:23.13
  Apr 19 17:05:23.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-4923" for this suite. @ 04/19/24 17:05:23.173
â€¢ [0.275 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 04/19/24 17:05:23.188
  Apr 19 17:05:23.188: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename container-probe @ 04/19/24 17:05:23.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:05:23.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:05:23.231
  STEP: Creating pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223 @ 04/19/24 17:05:23.235
  E0419 17:05:23.688348      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:24.688364      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/19/24 17:05:25.265
  Apr 19 17:05:25.271: INFO: Initial restart count of pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 is 0
  Apr 19 17:05:25.276: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:05:25.688859      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:26.689957      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:27.289: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:05:27.690101      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:28.690093      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:29.302: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:05:29.691205      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:30.692062      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:31.314: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:05:31.692203      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:32.696568      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:33.326: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:05:33.694165      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:34.695371      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:35.341: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:05:35.694338      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:36.696507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:37.352: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:05:37.695629      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:38.696144      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:39.370: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:05:39.696863      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:40.701285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:41.385: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:05:41.697452      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:42.698475      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:43.399: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:05:43.699221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:44.699168      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:45.408: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:05:45.698960      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:46.699664      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:47.420: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:05:47.700221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:48.700776      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:49.439: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:05:49.703325      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:50.704232      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:51.448: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:05:51.704771      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:52.705719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:53.462: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:05:53.706722      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:54.707814      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:55.472: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:05:55.709005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:56.709892      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:57.484: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:05:57.710541      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:05:58.711380      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:05:59.503: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:05:59.711156      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:00.711335      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:01.516: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:01.711524      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:02.712334      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:03.527: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:03.712805      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:04.713673      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:05.538: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:05.713826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:06.714471      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:07.551: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:07.714705      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:08.715650      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:09.565: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:09.716275      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:10.716709      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:11.578: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:11.717853      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:12.718900      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:13.591: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:13.720034      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:14.720820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:15.606: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:15.721379      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:16.722139      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:17.614: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:17.722615      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:18.723396      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:19.627: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:19.723920      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:20.724693      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:21.634: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:21.725590      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:22.725801      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:23.647: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:23.726734      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:24.727969      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:25.657: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:25.728395      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:26.728646      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:27.667: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:27.728910      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:28.738609      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:29.679: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:29.735792      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:30.736376      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:31.690: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:31.773303      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:32.749873      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:33.710: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:33.750033      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:34.750457      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:35.731: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:35.750931      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:36.752014      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:37.755363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:37.758: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:38.754312      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:39.753395      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:39.770: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:40.753820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:41.755037      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:41.781: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:42.755058      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:43.756783      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:43.795: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:44.756202      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:45.756653      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:45.812: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:46.757357      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:47.758026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:47.820: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:48.758592      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:49.758869      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:49.832: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:50.759661      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:51.760275      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:51.845: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:52.760916      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:53.761312      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:53.859: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:54.761665      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:55.762333      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:55.869: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:56.763165      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:57.763945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:57.880: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:06:58.764102      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:06:59.764689      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:06:59.895: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:00.765380      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:01.766187      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:01.910: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:02.766140      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:03.766786      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:03.924: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:04.767123      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:05.767072      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:05.936: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:06.767270      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:07.767948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:07.947: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:08.768189      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:09.768468      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:09.961: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:10.768762      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:11.769117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:11.974: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:12.769860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:13.770164      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:13.985: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:14.770786      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:15.771831      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:15.995: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:16.772097      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:17.773415      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:18.008: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:18.774843      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:19.775221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:20.062: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:20.775294      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:21.775489      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:22.070: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:22.775630      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:23.776408      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:24.080: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:24.776876      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:25.777152      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:26.090: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:26.777172      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:27.777865      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:28.101: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:28.778488      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:29.778729      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:30.115: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:30.779026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:31.780057      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:32.124: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:32.780841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:33.781340      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:34.134: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:34.781522      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:35.782831      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:36.143: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:36.782660      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:37.782907      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:38.157: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:38.783972      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:39.784372      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:40.166: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:40.784626      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:41.785534      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:42.177: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:42.786445      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:43.787370      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:44.185: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:44.787668      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:45.788034      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:46.197: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:46.788638      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:47.789661      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:48.204: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:48.789841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:49.790022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:50.218: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:50.790291      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:51.790779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:52.225: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:52.790861      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:53.791849      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:54.255: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:54.792268      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:55.792398      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:56.265: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:56.793201      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:57.793408      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:07:58.276: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:07:58.793700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:07:59.794502      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:00.285: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:00.795193      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:01.795313      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:02.296: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:02.795517      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:03.795898      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:04.308: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:04.796285      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:05.797402      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:06.320: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:06.797476      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:07.797756      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:08.330: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:08.798789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:09.799035      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:10.342: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:10.799398      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:11.799699      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:12.374: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:12.802311      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:13.802596      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:14.385: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:14.803262      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:15.804176      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:16.395: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:16.804022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:17.804848      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:18.405: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:18.804993      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:19.806028      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:20.419: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:20.807108      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:21.807650      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:22.428: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:22.808084      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:23.808389      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:24.440: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:24.808624      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:25.809416      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:26.449: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:26.809185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:27.809906      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:28.461: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:28.810008      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:29.811072      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:30.473: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:30.811676      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:31.813092      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:32.486: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:32.813088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:33.813977      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:34.500: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:34.815030      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:35.815705      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:36.513: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:36.816701      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:37.818591      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:38.527: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:38.817541      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:39.818735      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:40.539: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:40.818763      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:41.823515      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:42.550: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:42.820075      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:43.820863      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:44.560: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:44.821039      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:45.821255      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:46.572: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:46.823260      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:47.823015      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:48.582: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:48.824234      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:49.824983      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:50.595: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:50.826163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:51.826999      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:52.608: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:52.827439      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:53.828682      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:54.619: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:54.828701      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:55.829237      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:56.627: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:56.829189      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:57.829966      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:08:58.644: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:08:58.830270      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:08:59.830992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:09:00.660: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:09:00.830733      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:01.832335      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:09:02.671: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:09:02.832776      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:03.833544      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:09:04.684: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:09:04.834071      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:05.834695      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:09:06.699: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:09:06.834636      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:07.834893      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:09:08.712: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:09:08.835897      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:09.836597      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:09:10.721: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:09:10.836830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:11.838163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:09:12.733: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:09:12.837940      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:13.838796      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:09:14.744: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:09:14.839153      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:15.839928      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:09:16.757: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:09:16.840971      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:17.841778      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:09:18.767: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:09:18.842607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:19.843313      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:09:20.780: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:09:20.843860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:21.845467      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:09:22.789: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:09:22.846105      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:23.846259      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:09:24.801: INFO: Get pod liveness-09f766e7-b72c-4265-afc3-8159c9269ae7 in namespace container-probe-4223
  E0419 17:09:24.847272      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:25.847886      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:09:26.803: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/19/24 17:09:26.823
  E0419 17:09:26.847860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "container-probe-4223" for this suite. @ 04/19/24 17:09:26.865
â€¢ [243.708 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 04/19/24 17:09:26.901
  Apr 19 17:09:26.901: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename init-container @ 04/19/24 17:09:26.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:09:26.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:09:26.975
  STEP: creating the pod @ 04/19/24 17:09:26.984
  Apr 19 17:09:26.985: INFO: PodSpec: initContainers in spec.initContainers
  E0419 17:09:27.847997      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:28.848499      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:29.848851      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:09:30.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4204" for this suite. @ 04/19/24 17:09:30.499
â€¢ [3.618 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 04/19/24 17:09:30.521
  Apr 19 17:09:30.521: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename watch @ 04/19/24 17:09:30.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:09:30.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:09:30.584
  STEP: creating a new configmap @ 04/19/24 17:09:30.594
  STEP: modifying the configmap once @ 04/19/24 17:09:30.608
  STEP: modifying the configmap a second time @ 04/19/24 17:09:30.629
  STEP: deleting the configmap @ 04/19/24 17:09:30.65
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 04/19/24 17:09:30.666
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 04/19/24 17:09:30.67
  Apr 19 17:09:30.671: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4885  4c253df6-2b52-4322-b3f8-b2eed19f1896 31024 0 2024-04-19 17:09:30 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-04-19 17:09:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 19 17:09:30.671: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4885  4c253df6-2b52-4322-b3f8-b2eed19f1896 31025 0 2024-04-19 17:09:30 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-04-19 17:09:30 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Apr 19 17:09:30.672: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4885" for this suite. @ 04/19/24 17:09:30.684
â€¢ [0.177 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 04/19/24 17:09:30.7
  Apr 19 17:09:30.700: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename containers @ 04/19/24 17:09:30.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:09:30.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:09:30.749
  STEP: Creating a pod to test override all @ 04/19/24 17:09:30.755
  E0419 17:09:30.850146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:31.851173      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:32.851635      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:33.852463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:09:34.843
  Apr 19 17:09:34.851: INFO: Trying to get logs from node eixo7oojiese-3 pod client-containers-0e2b5797-a713-4c9f-bbce-e72f2e177e9d container agnhost-container: <nil>
  E0419 17:09:34.852566      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 04/19/24 17:09:34.899
  Apr 19 17:09:34.941: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1833" for this suite. @ 04/19/24 17:09:34.951
â€¢ [4.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 04/19/24 17:09:34.97
  Apr 19 17:09:34.970: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename downward-api @ 04/19/24 17:09:34.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:09:35.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:09:35.012
  STEP: Creating a pod to test downward API volume plugin @ 04/19/24 17:09:35.019
  E0419 17:09:35.852621      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:36.854135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:37.854488      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:38.854947      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:09:39.067
  Apr 19 17:09:39.076: INFO: Trying to get logs from node eixo7oojiese-3 pod downwardapi-volume-86e038b6-8e4a-45b6-8a51-c5b47fe2c643 container client-container: <nil>
  STEP: delete the pod @ 04/19/24 17:09:39.099
  Apr 19 17:09:39.144: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8201" for this suite. @ 04/19/24 17:09:39.152
â€¢ [4.198 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 04/19/24 17:09:39.171
  Apr 19 17:09:39.172: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename configmap @ 04/19/24 17:09:39.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:09:39.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:09:39.223
  STEP: Creating configMap that has name configmap-test-emptyKey-d7aa0e25-2b1d-4e65-99e7-6658e540862e @ 04/19/24 17:09:39.231
  Apr 19 17:09:39.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-955" for this suite. @ 04/19/24 17:09:39.246
â€¢ [0.088 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 04/19/24 17:09:39.263
  Apr 19 17:09:39.263: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename deployment @ 04/19/24 17:09:39.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:09:39.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:09:39.311
  Apr 19 17:09:39.319: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Apr 19 17:09:39.340: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0419 17:09:39.855226      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:40.856273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:41.859606      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:42.859153      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:43.860250      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:09:44.350: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/19/24 17:09:44.35
  Apr 19 17:09:44.350: INFO: Creating deployment "test-rolling-update-deployment"
  Apr 19 17:09:44.358: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Apr 19 17:09:44.370: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0419 17:09:44.861105      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:45.861795      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:09:46.392: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Apr 19 17:09:46.399: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Apr 19 17:09:46.433: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1565",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cc97e9e8-790d-423e-8e0c-541243881cf9",
      ResourceVersion: (string) (len=5) "31177",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849143384,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143385,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143385,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-7ddb77f68b\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 19 17:09:46.485: INFO: New ReplicaSet "test-rolling-update-deployment-7ddb77f68b" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1565",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "212f5fde-b2f0-44ce-9844-f479bf4fe9be",
      ResourceVersion: (string) (len=5) "31166",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849143384,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "cc97e9e8-790d-423e-8e0c-541243881cf9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 63 39 37 65 39  65 38 2d 37 39 30 64 2d  |\"cc97e9e8-790d-|
              00000120  34 32 33 65 2d 38 65 30  63 2d 35 34 31 32 34 33  |423e-8e0c-541243|
              00000130  38 38 31 63 66 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |881cf9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143385,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 19 17:09:46.487: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Apr 19 17:09:46.488: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1565",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5dd4ab12-acc2-4181-9f4c-a36ea7d13552",
      ResourceVersion: (string) (len=5) "31176",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849143379,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "cc97e9e8-790d-423e-8e0c-541243881cf9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143379,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143385,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 63 63 39 37 65 39 65  |"uid\":\"cc97e9e|
              000000b0  38 2d 37 39 30 64 2d 34  32 33 65 2d 38 65 30 63  |8-790d-423e-8e0c|
              000000c0  2d 35 34 31 32 34 33 38  38 31 63 66 39 5c 22 7d  |-541243881cf9\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143385,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 19 17:09:46.501: INFO: Pod "test-rolling-update-deployment-7ddb77f68b-nstff" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-7ddb77f68b-nstff",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-7ddb77f68b-",
      Namespace: (string) (len=15) "deployment-1565",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7a617c11-4c46-4f8f-b631-0375dbd7b14c",
      ResourceVersion: (string) (len=5) "31165",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849143384,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7ddb77f68b"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-7ddb77f68b",
          UID: (types.UID) (len=36) "212f5fde-b2f0-44ce-9844-f479bf4fe9be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 31  32 66 35 66 64 65 2d 62  |d\":\"212f5fde-b|
              00000090  32 66 30 2d 34 34 63 65  2d 39 38 34 34 2d 66 34  |2f0-44ce-9844-f4|
              000000a0  37 39 62 66 34 66 65 39  62 65 5c 22 7d 22 3a 7b  |79bf4fe9be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143385,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 31 35 34 5c 22 7d  |10.233.66.154\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f26g2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f26g2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143385,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143385,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143384,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.129",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.66.154",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.154"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849143384,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849143385,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a",
          ContainerID: (string) (len=72) "cri-o://eaaf6b41fc4d3d5ae71e0179ddb2375ad7fe8f2b1bba3a3b465c7307ffe05604",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 17:09:46.504: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1565" for this suite. @ 04/19/24 17:09:46.517
â€¢ [7.267 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 04/19/24 17:09:46.533
  Apr 19 17:09:46.534: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename container-probe @ 04/19/24 17:09:46.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:09:46.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:09:46.581
  E0419 17:09:46.862629      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:47.863057      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:48.864032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:49.865486      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:50.866320      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:51.867535      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:52.867579      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:53.867867      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:54.869208      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:55.869350      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:56.870530      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:57.871124      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:58.871741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:09:59.871573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:00.871666      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:01.872036      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:02.872310      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:03.873148      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:04.873692      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:05.874084      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:06.874668      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:07.875403      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:08.875381      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:09.876477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:10.877347      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:11.877840      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:12.878850      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:13.879700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:14.879789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:15.880911      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:16.881078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:17.881840      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:18.883013      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:19.901643      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:20.896017      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:21.888383      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:22.894634      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:23.893111      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:24.893321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:25.893626      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:26.894643      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:27.895341      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:28.895688      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:29.895701      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:30.896093      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:31.896843      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:32.896990      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:33.897644      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:34.897818      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:35.899665      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:36.900378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:37.900761      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:38.901304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:39.901398      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:40.902190      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:41.903100      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:42.903667      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:43.904575      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:44.905583      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:45.905198      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:10:46.615: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1630" for this suite. @ 04/19/24 17:10:46.635
â€¢ [60.123 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 04/19/24 17:10:46.659
  Apr 19 17:10:46.659: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename pods @ 04/19/24 17:10:46.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:10:46.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:10:46.724
  Apr 19 17:10:46.736: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: creating the pod @ 04/19/24 17:10:46.741
  STEP: submitting the pod to kubernetes @ 04/19/24 17:10:46.742
  E0419 17:10:46.906260      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:47.906717      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:48.907320      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:10:48.927: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-958" for this suite. @ 04/19/24 17:10:48.939
â€¢ [2.296 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 04/19/24 17:10:48.962
  Apr 19 17:10:48.963: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename events @ 04/19/24 17:10:48.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:10:49.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:10:49.014
  STEP: creating a test event @ 04/19/24 17:10:49.019
  STEP: listing events in all namespaces @ 04/19/24 17:10:49.033
  STEP: listing events in test namespace @ 04/19/24 17:10:49.047
  STEP: listing events with field selection filtering on source @ 04/19/24 17:10:49.055
  STEP: listing events with field selection filtering on reportingController @ 04/19/24 17:10:49.062
  STEP: getting the test event @ 04/19/24 17:10:49.068
  STEP: patching the test event @ 04/19/24 17:10:49.073
  STEP: getting the test event @ 04/19/24 17:10:49.094
  STEP: updating the test event @ 04/19/24 17:10:49.099
  STEP: getting the test event @ 04/19/24 17:10:49.111
  STEP: deleting the test event @ 04/19/24 17:10:49.117
  STEP: listing events in all namespaces @ 04/19/24 17:10:49.137
  STEP: listing events in test namespace @ 04/19/24 17:10:49.167
  Apr 19 17:10:49.186: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3193" for this suite. @ 04/19/24 17:10:49.201
â€¢ [0.255 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 04/19/24 17:10:49.218
  Apr 19 17:10:49.218: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename webhook @ 04/19/24 17:10:49.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:10:49.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:10:49.258
  STEP: Setting up server cert @ 04/19/24 17:10:49.302
  E0419 17:10:49.908024      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/19/24 17:10:50.264
  STEP: Deploying the webhook pod @ 04/19/24 17:10:50.286
  STEP: Wait for the deployment to be ready @ 04/19/24 17:10:50.329
  Apr 19 17:10:50.350: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0419 17:10:50.921684      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:51.913220      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/19/24 17:10:52.379
  STEP: Verifying the service has paired with the endpoint @ 04/19/24 17:10:52.397
  E0419 17:10:52.913497      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:10:53.398: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 04/19/24 17:10:53.432
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 04/19/24 17:10:53.435
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 04/19/24 17:10:53.435
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 04/19/24 17:10:53.435
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 04/19/24 17:10:53.439
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/19/24 17:10:53.44
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 04/19/24 17:10:53.443
  Apr 19 17:10:53.443: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2761" for this suite. @ 04/19/24 17:10:53.561
  STEP: Destroying namespace "webhook-markers-7330" for this suite. @ 04/19/24 17:10:53.582
â€¢ [4.374 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 04/19/24 17:10:53.602
  Apr 19 17:10:53.602: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename configmap @ 04/19/24 17:10:53.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:10:53.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:10:53.652
  STEP: Creating configMap with name configmap-test-volume-map-4445ecef-c002-48b9-9373-9d006f703c3e @ 04/19/24 17:10:53.656
  STEP: Creating a pod to test consume configMaps @ 04/19/24 17:10:53.666
  E0419 17:10:53.913840      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:54.914127      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:55.916441      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:56.916639      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:10:57.743
  Apr 19 17:10:57.753: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-configmaps-0e3dd973-ab2c-4586-b033-a8e609b60a08 container agnhost-container: <nil>
  STEP: delete the pod @ 04/19/24 17:10:57.776
  Apr 19 17:10:57.807: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-653" for this suite. @ 04/19/24 17:10:57.818
â€¢ [4.232 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 04/19/24 17:10:57.847
  Apr 19 17:10:57.847: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename var-expansion @ 04/19/24 17:10:57.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:10:57.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:10:57.885
  E0419 17:10:57.922288      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:10:58.923357      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:10:59.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0419 17:10:59.924114      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:10:59.931: INFO: Deleting pod "var-expansion-98cc32db-271b-4b49-8e49-58bd5f2beaf6" in namespace "var-expansion-7382"
  Apr 19 17:10:59.947: INFO: Wait up to 5m0s for pod "var-expansion-98cc32db-271b-4b49-8e49-58bd5f2beaf6" to be fully deleted
  E0419 17:11:00.924449      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:01.924584      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-7382" for this suite. @ 04/19/24 17:11:01.98
â€¢ [4.152 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 04/19/24 17:11:02.001
  Apr 19 17:11:02.001: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename disruption @ 04/19/24 17:11:02.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:11:02.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:11:02.059
  STEP: Waiting for the pdb to be processed @ 04/19/24 17:11:02.075
  E0419 17:11:02.925776      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:03.925308      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 04/19/24 17:11:04.151
  Apr 19 17:11:04.160: INFO: running pods: 0 < 3
  E0419 17:11:04.925507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:05.926200      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:11:06.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4987" for this suite. @ 04/19/24 17:11:06.182
â€¢ [4.192 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 04/19/24 17:11:06.192
  Apr 19 17:11:06.192: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename emptydir @ 04/19/24 17:11:06.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:11:06.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:11:06.231
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 04/19/24 17:11:06.235
  E0419 17:11:06.926897      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:07.927559      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:11:08.274
  Apr 19 17:11:08.285: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-eaf735df-796b-4999-b944-edf576455e9a container test-container: <nil>
  STEP: delete the pod @ 04/19/24 17:11:08.304
  Apr 19 17:11:08.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7054" for this suite. @ 04/19/24 17:11:08.354
â€¢ [2.176 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 04/19/24 17:11:08.371
  Apr 19 17:11:08.371: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename init-container @ 04/19/24 17:11:08.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:11:08.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:11:08.415
  STEP: creating the pod @ 04/19/24 17:11:08.423
  Apr 19 17:11:08.424: INFO: PodSpec: initContainers in spec.initContainers
  E0419 17:11:08.928129      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:09.928606      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:10.928791      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:11.929589      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:12.929775      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:13.930376      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:14.930609      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:15.930916      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:16.931477      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:17.932723      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:18.959693      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:19.949406      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:20.949897      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:21.953119      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:22.953741      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:23.952405      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:24.952608      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:25.952947      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:26.955611      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:27.955235      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:28.954814      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:29.955598      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:30.956001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:31.958303      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:32.958374      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:33.957198      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:34.958983      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:35.962283      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:36.960293      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:37.960689      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:38.961033      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:39.963910      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:40.964620      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:41.965947      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:42.966181      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:43.966592      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:44.967026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:45.967616      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:46.968065      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:47.968451      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:48.968600      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:49.969398      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:50.970467      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:51.971482      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:52.972254      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:53.972762      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:11:54.399: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-7f23d1be-3068-4983-ab35-fbaf2d72683b", GenerateName:"", Namespace:"init-container-2132", SelfLink:"", UID:"cca659c0-2c4e-4bf6-9d94-49c681075451", ResourceVersion:"31729", Generation:0, CreationTimestamp:time.Date(2024, time.April, 19, 17, 11, 8, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"423976873"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 19, 17, 11, 8, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005cfc8e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.April, 19, 17, 11, 54, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005cfceb8), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-tx562", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc003ba8640), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-tx562", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-tx562", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-tx562", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc005599470), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"eixo7oojiese-3", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00342e0e0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc005599500)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc005599520)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc005599528), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00559952c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc005905260), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 19, 17, 11, 8, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 19, 17, 11, 8, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 19, 17, 11, 8, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.April, 19, 17, 11, 8, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.121.129", HostIPs:[]v1.HostIP(nil), PodIP:"10.233.66.164", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.233.66.164"}}, StartTime:time.Date(2024, time.April, 19, 17, 11, 8, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00342e2a0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00342e310)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"cri-o://f00fdc1fda2d788e8eefcbcba6607243c6f0a65e3a60c24c8f68fa46208dc599", Started:(*bool)(0xc0055995cf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003ba86c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc0055995d5), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc003ba86a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc0055995a4), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Apr 19 17:11:54.402: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2132" for this suite. @ 04/19/24 17:11:54.417
â€¢ [46.058 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 04/19/24 17:11:54.431
  Apr 19 17:11:54.431: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename secrets @ 04/19/24 17:11:54.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:11:54.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:11:54.483
  STEP: Creating projection with secret that has name secret-emptykey-test-022ec6c0-02cd-40c5-b813-4621a4d99a7f @ 04/19/24 17:11:54.487
  Apr 19 17:11:54.490: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2801" for this suite. @ 04/19/24 17:11:54.501
â€¢ [0.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 04/19/24 17:11:54.533
  Apr 19 17:11:54.533: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename configmap @ 04/19/24 17:11:54.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:11:54.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:11:54.574
  STEP: Creating configMap with name configmap-test-upd-c98696d5-9b28-4237-a67b-5c3a4f8bd247 @ 04/19/24 17:11:54.593
  STEP: Creating the pod @ 04/19/24 17:11:54.601
  E0419 17:11:54.974012      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:55.974723      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 04/19/24 17:11:56.638
  STEP: Waiting for pod with binary data @ 04/19/24 17:11:56.667
  Apr 19 17:11:56.685: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3122" for this suite. @ 04/19/24 17:11:56.698
â€¢ [2.183 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 04/19/24 17:11:56.72
  Apr 19 17:11:56.721: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename var-expansion @ 04/19/24 17:11:56.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:11:56.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:11:56.779
  E0419 17:11:56.974700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:57.975281      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:11:58.849: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 19 17:11:58.870: INFO: Deleting pod "var-expansion-bb24a582-4a3d-49fb-8c87-0d22a8b034e2" in namespace "var-expansion-3147"
  Apr 19 17:11:58.891: INFO: Wait up to 5m0s for pod "var-expansion-bb24a582-4a3d-49fb-8c87-0d22a8b034e2" to be fully deleted
  E0419 17:11:58.975653      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:11:59.975876      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-3147" for this suite. @ 04/19/24 17:12:00.908
â€¢ [4.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 04/19/24 17:12:00.94
  Apr 19 17:12:00.940: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename secrets @ 04/19/24 17:12:00.944
  E0419 17:12:00.976192      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:12:00.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:12:00.994
  STEP: Creating secret with name secret-test-map-15a6d46c-a393-4e2c-8fda-6da3112e103e @ 04/19/24 17:12:01
  STEP: Creating a pod to test consume secrets @ 04/19/24 17:12:01.009
  E0419 17:12:01.977015      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:02.978262      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:03.977860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:04.978309      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:12:05.052
  Apr 19 17:12:05.061: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-secrets-e09c0891-5b5f-4376-ba0a-0400086764d8 container secret-volume-test: <nil>
  STEP: delete the pod @ 04/19/24 17:12:05.076
  Apr 19 17:12:05.117: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9180" for this suite. @ 04/19/24 17:12:05.128
â€¢ [4.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 04/19/24 17:12:05.145
  Apr 19 17:12:05.145: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename webhook @ 04/19/24 17:12:05.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:12:05.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:12:05.181
  STEP: Setting up server cert @ 04/19/24 17:12:05.225
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/19/24 17:12:05.89
  STEP: Deploying the webhook pod @ 04/19/24 17:12:05.912
  STEP: Wait for the deployment to be ready @ 04/19/24 17:12:05.938
  Apr 19 17:12:05.958: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0419 17:12:05.978932      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:06.979441      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:07.979991      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/19/24 17:12:07.989
  STEP: Verifying the service has paired with the endpoint @ 04/19/24 17:12:08.01
  E0419 17:12:08.981323      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:12:09.011: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 04/19/24 17:12:09.033
  STEP: create a pod that should be denied by the webhook @ 04/19/24 17:12:09.081
  STEP: create a pod that causes the webhook to hang @ 04/19/24 17:12:09.11
  E0419 17:12:09.983282      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:10.982928      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:11.982943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:12.983017      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:13.983289      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:14.983546      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:15.983565      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:16.983958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:17.984313      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:18.984648      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create a configmap that should be denied by the webhook @ 04/19/24 17:12:19.128
  STEP: create a configmap that should be admitted by the webhook @ 04/19/24 17:12:19.16
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/19/24 17:12:19.187
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 04/19/24 17:12:19.212
  STEP: create a namespace that bypass the webhook @ 04/19/24 17:12:19.225
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 04/19/24 17:12:19.27
  Apr 19 17:12:19.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7097" for this suite. @ 04/19/24 17:12:19.395
  STEP: Destroying namespace "webhook-markers-4095" for this suite. @ 04/19/24 17:12:19.415
  STEP: Destroying namespace "exempted-namespace-6228" for this suite. @ 04/19/24 17:12:19.434
â€¢ [14.307 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 04/19/24 17:12:19.46
  Apr 19 17:12:19.460: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename podtemplate @ 04/19/24 17:12:19.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:12:19.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:12:19.503
  Apr 19 17:12:19.559: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6476" for this suite. @ 04/19/24 17:12:19.567
â€¢ [0.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 04/19/24 17:12:19.582
  Apr 19 17:12:19.583: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename watch @ 04/19/24 17:12:19.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:12:19.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:12:19.624
  STEP: getting a starting resourceVersion @ 04/19/24 17:12:19.63
  STEP: starting a background goroutine to produce watch events @ 04/19/24 17:12:19.635
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 04/19/24 17:12:19.635
  E0419 17:12:19.985464      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:20.986058      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:21.986684      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:12:22.403: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2975" for this suite. @ 04/19/24 17:12:22.457
â€¢ [2.922 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 04/19/24 17:12:22.526
  Apr 19 17:12:22.526: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename pod-network-test @ 04/19/24 17:12:22.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:12:22.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:12:22.562
  STEP: Performing setup for networking test in namespace pod-network-test-1398 @ 04/19/24 17:12:22.569
  STEP: creating a selector @ 04/19/24 17:12:22.569
  STEP: Creating the service pods in kubernetes @ 04/19/24 17:12:22.57
  Apr 19 17:12:22.570: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0419 17:12:22.987072      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:23.988075      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:24.988271      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:25.988836      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:26.989094      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:27.989956      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:28.990552      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:29.990992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:30.991979      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:31.992611      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:32.993709      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:33.994660      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:34.995256      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:35.996154      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:36.997015      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:37.997406      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:38.997772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:39.998309      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:40.998518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:41.999472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:42.999606      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:43.999724      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 04/19/24 17:12:44.81
  E0419 17:12:45.000923      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:46.001472      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:12:46.860: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Apr 19 17:12:46.860: INFO: Breadth first check of 10.233.64.158 on host 192.168.121.83...
  Apr 19 17:12:46.870: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.170:9080/dial?request=hostname&protocol=http&host=10.233.64.158&port=8083&tries=1'] Namespace:pod-network-test-1398 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 17:12:46.870: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 17:12:46.872: INFO: ExecWithOptions: Clientset creation
  Apr 19 17:12:46.872: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-1398/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.170%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.64.158%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E0419 17:12:47.002493      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:12:47.050: INFO: Waiting for responses: map[]
  Apr 19 17:12:47.050: INFO: reached 10.233.64.158 after 0/1 tries
  Apr 19 17:12:47.050: INFO: Breadth first check of 10.233.65.170 on host 192.168.121.127...
  Apr 19 17:12:47.059: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.170:9080/dial?request=hostname&protocol=http&host=10.233.65.170&port=8083&tries=1'] Namespace:pod-network-test-1398 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 17:12:47.059: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 17:12:47.060: INFO: ExecWithOptions: Clientset creation
  Apr 19 17:12:47.060: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-1398/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.170%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.65.170%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 19 17:12:47.173: INFO: Waiting for responses: map[]
  Apr 19 17:12:47.173: INFO: reached 10.233.65.170 after 0/1 tries
  Apr 19 17:12:47.173: INFO: Breadth first check of 10.233.66.169 on host 192.168.121.129...
  Apr 19 17:12:47.182: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.66.170:9080/dial?request=hostname&protocol=http&host=10.233.66.169&port=8083&tries=1'] Namespace:pod-network-test-1398 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 17:12:47.182: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 17:12:47.184: INFO: ExecWithOptions: Clientset creation
  Apr 19 17:12:47.184: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-1398/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.66.170%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.66.169%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Apr 19 17:12:47.348: INFO: Waiting for responses: map[]
  Apr 19 17:12:47.348: INFO: reached 10.233.66.169 after 0/1 tries
  Apr 19 17:12:47.348: INFO: Going to retry 0 out of 3 pods....
  Apr 19 17:12:47.349: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1398" for this suite. @ 04/19/24 17:12:47.361
â€¢ [24.850 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 04/19/24 17:12:47.378
  Apr 19 17:12:47.379: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 04/19/24 17:12:47.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:12:47.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:12:47.449
  STEP: Setting up the test @ 04/19/24 17:12:47.455
  STEP: Creating hostNetwork=false pod @ 04/19/24 17:12:47.456
  E0419 17:12:48.002893      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:49.004011      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 04/19/24 17:12:49.496
  E0419 17:12:50.004263      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:51.004694      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 04/19/24 17:12:51.551
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 04/19/24 17:12:51.552
  Apr 19 17:12:51.552: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7764 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 17:12:51.553: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 17:12:51.557: INFO: ExecWithOptions: Clientset creation
  Apr 19 17:12:51.558: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7764/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 19 17:12:51.729: INFO: Exec stderr: ""
  Apr 19 17:12:51.729: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7764 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 17:12:51.729: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 17:12:51.739: INFO: ExecWithOptions: Clientset creation
  Apr 19 17:12:51.740: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7764/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 19 17:12:51.849: INFO: Exec stderr: ""
  Apr 19 17:12:51.849: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7764 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 17:12:51.850: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 17:12:51.852: INFO: ExecWithOptions: Clientset creation
  Apr 19 17:12:51.852: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7764/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 19 17:12:51.970: INFO: Exec stderr: ""
  Apr 19 17:12:51.970: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7764 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 17:12:51.971: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 17:12:51.973: INFO: ExecWithOptions: Clientset creation
  Apr 19 17:12:51.974: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7764/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  E0419 17:12:52.005584      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:12:52.148: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 04/19/24 17:12:52.148
  Apr 19 17:12:52.148: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7764 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 17:12:52.148: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 17:12:52.150: INFO: ExecWithOptions: Clientset creation
  Apr 19 17:12:52.150: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7764/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Apr 19 17:12:52.294: INFO: Exec stderr: ""
  Apr 19 17:12:52.295: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7764 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 17:12:52.295: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 17:12:52.298: INFO: ExecWithOptions: Clientset creation
  Apr 19 17:12:52.298: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7764/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Apr 19 17:12:52.409: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 04/19/24 17:12:52.41
  Apr 19 17:12:52.410: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7764 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 17:12:52.411: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 17:12:52.413: INFO: ExecWithOptions: Clientset creation
  Apr 19 17:12:52.414: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7764/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 19 17:12:52.691: INFO: Exec stderr: ""
  Apr 19 17:12:52.691: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7764 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 17:12:52.691: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 17:12:52.694: INFO: ExecWithOptions: Clientset creation
  Apr 19 17:12:52.694: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7764/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Apr 19 17:12:52.905: INFO: Exec stderr: ""
  Apr 19 17:12:52.905: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-7764 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 17:12:52.905: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 17:12:52.909: INFO: ExecWithOptions: Clientset creation
  Apr 19 17:12:52.909: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7764/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  E0419 17:12:53.006578      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:12:53.020: INFO: Exec stderr: ""
  Apr 19 17:12:53.021: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-7764 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 17:12:53.021: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 17:12:53.023: INFO: ExecWithOptions: Clientset creation
  Apr 19 17:12:53.023: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-7764/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Apr 19 17:12:53.142: INFO: Exec stderr: ""
  Apr 19 17:12:53.143: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-7764" for this suite. @ 04/19/24 17:12:53.156
â€¢ [5.790 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 04/19/24 17:12:53.171
  Apr 19 17:12:53.171: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename services @ 04/19/24 17:12:53.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:12:53.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:12:53.204
  STEP: creating service multi-endpoint-test in namespace services-8505 @ 04/19/24 17:12:53.209
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8505 to expose endpoints map[] @ 04/19/24 17:12:53.232
  Apr 19 17:12:53.262: INFO: successfully validated that service multi-endpoint-test in namespace services-8505 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-8505 @ 04/19/24 17:12:53.262
  E0419 17:12:54.007733      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:55.007849      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8505 to expose endpoints map[pod1:[100]] @ 04/19/24 17:12:55.307
  Apr 19 17:12:55.337: INFO: successfully validated that service multi-endpoint-test in namespace services-8505 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-8505 @ 04/19/24 17:12:55.338
  E0419 17:12:56.008608      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:57.008664      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8505 to expose endpoints map[pod1:[100] pod2:[101]] @ 04/19/24 17:12:57.386
  Apr 19 17:12:57.433: INFO: successfully validated that service multi-endpoint-test in namespace services-8505 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 04/19/24 17:12:57.434
  Apr 19 17:12:57.434: INFO: Creating new exec pod
  E0419 17:12:58.009006      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:12:59.010772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:00.009675      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:13:00.468: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-8505 exec execpod4x9qf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Apr 19 17:13:00.880: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Apr 19 17:13:00.882: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 19 17:13:00.883: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-8505 exec execpod4x9qf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.47.202 80'
  E0419 17:13:01.011042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:13:01.167: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.47.202 80\nConnection to 10.233.47.202 80 port [tcp/http] succeeded!\n"
  Apr 19 17:13:01.167: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 19 17:13:01.168: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-8505 exec execpod4x9qf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Apr 19 17:13:01.465: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Apr 19 17:13:01.465: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Apr 19 17:13:01.465: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-8505 exec execpod4x9qf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.47.202 81'
  Apr 19 17:13:01.777: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.47.202 81\nConnection to 10.233.47.202 81 port [tcp/*] succeeded!\n"
  Apr 19 17:13:01.777: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-8505 @ 04/19/24 17:13:01.777
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8505 to expose endpoints map[pod2:[101]] @ 04/19/24 17:13:01.838
  E0419 17:13:02.010879      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:13:02.904: INFO: successfully validated that service multi-endpoint-test in namespace services-8505 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-8505 @ 04/19/24 17:13:02.904
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8505 to expose endpoints map[] @ 04/19/24 17:13:02.971
  Apr 19 17:13:02.999: INFO: successfully validated that service multi-endpoint-test in namespace services-8505 exposes endpoints map[]
  Apr 19 17:13:03.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0419 17:13:03.011427      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-8505" for this suite. @ 04/19/24 17:13:03.066
â€¢ [9.909 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 04/19/24 17:13:03.089
  Apr 19 17:13:03.089: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename resourcequota @ 04/19/24 17:13:03.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:13:03.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:13:03.123
  STEP: Creating a ResourceQuota with terminating scope @ 04/19/24 17:13:03.127
  STEP: Ensuring ResourceQuota status is calculated @ 04/19/24 17:13:03.134
  E0419 17:13:04.030000      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:05.019994      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 04/19/24 17:13:05.148
  STEP: Ensuring ResourceQuota status is calculated @ 04/19/24 17:13:05.162
  E0419 17:13:06.020525      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:07.021323      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 04/19/24 17:13:07.172
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 04/19/24 17:13:07.2
  E0419 17:13:08.021719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:09.022798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 04/19/24 17:13:09.215
  E0419 17:13:10.023038      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:11.023223      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/19/24 17:13:11.225
  STEP: Ensuring resource quota status released the pod usage @ 04/19/24 17:13:11.258
  E0419 17:13:12.023563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:13.023709      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 04/19/24 17:13:13.271
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 04/19/24 17:13:13.302
  E0419 17:13:14.024357      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:15.025078      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 04/19/24 17:13:15.313
  E0419 17:13:16.025854      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:17.026246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/19/24 17:13:17.33
  STEP: Ensuring resource quota status released the pod usage @ 04/19/24 17:13:17.372
  E0419 17:13:18.026616      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:19.026501      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:13:19.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8520" for this suite. @ 04/19/24 17:13:19.398
â€¢ [16.325 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 04/19/24 17:13:19.418
  Apr 19 17:13:19.419: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename services @ 04/19/24 17:13:19.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:13:19.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:13:19.471
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3092 @ 04/19/24 17:13:19.48
  STEP: changing the ExternalName service to type=NodePort @ 04/19/24 17:13:19.495
  STEP: creating replication controller externalname-service in namespace services-3092 @ 04/19/24 17:13:19.539
  I0419 17:13:19.557660      14 runners.go:197] Created replication controller with name: externalname-service, namespace: services-3092, replica count: 2
  E0419 17:13:20.026496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:21.026690      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:22.027721      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0419 17:13:22.609434      14 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 19 17:13:22.609: INFO: Creating new exec pod
  E0419 17:13:23.028069      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:24.028574      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:25.029556      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:13:25.678: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-3092 exec execpodw5f64 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  E0419 17:13:26.029792      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:13:26.035: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Apr 19 17:13:26.035: INFO: stdout: "externalname-service-r88w9"
  Apr 19 17:13:26.036: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-3092 exec execpodw5f64 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.4.180 80'
  Apr 19 17:13:26.350: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.4.180 80\nConnection to 10.233.4.180 80 port [tcp/http] succeeded!\n"
  Apr 19 17:13:26.350: INFO: stdout: "externalname-service-r88w9"
  Apr 19 17:13:26.351: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-3092 exec execpodw5f64 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.129 30566'
  Apr 19 17:13:26.677: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.129 30566\nConnection to 192.168.121.129 30566 port [tcp/*] succeeded!\n"
  Apr 19 17:13:26.677: INFO: stdout: "externalname-service-r88w9"
  Apr 19 17:13:26.679: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-3092 exec execpodw5f64 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.83 30566'
  Apr 19 17:13:26.965: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.83 30566\nConnection to 192.168.121.83 30566 port [tcp/*] succeeded!\n"
  Apr 19 17:13:26.965: INFO: stdout: "externalname-service-r88w9"
  Apr 19 17:13:26.965: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 19 17:13:26.978: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-3092" for this suite. @ 04/19/24 17:13:27.026
  E0419 17:13:27.030735      14 retrywatcher.go:129] "Watch failed" err="context canceled"
â€¢ [7.619 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 04/19/24 17:13:27.041
  Apr 19 17:13:27.041: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename field-validation @ 04/19/24 17:13:27.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:13:27.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:13:27.098
  STEP: apply creating a deployment @ 04/19/24 17:13:27.103
  Apr 19 17:13:27.105: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8582" for this suite. @ 04/19/24 17:13:27.136
â€¢ [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 04/19/24 17:13:27.163
  Apr 19 17:13:27.163: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 04/19/24 17:13:27.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:13:27.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:13:27.195
  STEP: create the container to handle the HTTPGet hook request. @ 04/19/24 17:13:27.207
  E0419 17:13:28.031302      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:29.032141      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 04/19/24 17:13:29.253
  E0419 17:13:30.032354      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:31.033320      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 04/19/24 17:13:31.295
  E0419 17:13:32.033875      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:33.034714      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 04/19/24 17:13:33.329
  Apr 19 17:13:33.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5049" for this suite. @ 04/19/24 17:13:33.372
â€¢ [6.228 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 04/19/24 17:13:33.397
  Apr 19 17:13:33.397: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename configmap @ 04/19/24 17:13:33.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:13:33.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:13:33.431
  STEP: creating a ConfigMap @ 04/19/24 17:13:33.437
  STEP: fetching the ConfigMap @ 04/19/24 17:13:33.446
  STEP: patching the ConfigMap @ 04/19/24 17:13:33.451
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 04/19/24 17:13:33.461
  STEP: deleting the ConfigMap by collection with a label selector @ 04/19/24 17:13:33.469
  STEP: listing all ConfigMaps in test namespace @ 04/19/24 17:13:33.482
  Apr 19 17:13:33.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1786" for this suite. @ 04/19/24 17:13:33.496
â€¢ [0.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 04/19/24 17:13:33.524
  Apr 19 17:13:33.524: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename pods @ 04/19/24 17:13:33.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:13:33.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:13:33.565
  Apr 19 17:13:33.570: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: creating the pod @ 04/19/24 17:13:33.574
  STEP: submitting the pod to kubernetes @ 04/19/24 17:13:33.575
  E0419 17:13:34.034861      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:35.036788      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:13:35.739: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8425" for this suite. @ 04/19/24 17:13:35.757
â€¢ [2.249 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 04/19/24 17:13:35.775
  Apr 19 17:13:35.776: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename emptydir @ 04/19/24 17:13:35.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:13:35.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:13:35.821
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 04/19/24 17:13:35.833
  E0419 17:13:36.036998      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:37.038276      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:38.037933      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:39.037354      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:13:39.886
  Apr 19 17:13:39.896: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-5d2ebc95-7795-476a-88f8-be24f0ac095b container test-container: <nil>
  STEP: delete the pod @ 04/19/24 17:13:39.94
  Apr 19 17:13:39.993: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5760" for this suite. @ 04/19/24 17:13:40.004
  E0419 17:13:40.038048      14 retrywatcher.go:129] "Watch failed" err="context canceled"
â€¢ [4.290 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 04/19/24 17:13:40.078
  Apr 19 17:13:40.078: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename container-probe @ 04/19/24 17:13:40.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:13:40.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:13:40.123
  STEP: Creating pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296 @ 04/19/24 17:13:40.135
  E0419 17:13:41.038860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:42.040019      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/19/24 17:13:42.175
  Apr 19 17:13:42.183: INFO: Initial restart count of pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 is 0
  Apr 19 17:13:42.194: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:13:43.040525      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:44.040971      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:13:44.206: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:13:45.041217      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:46.041146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:13:46.218: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:13:47.041719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:48.044356      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:13:48.232: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:13:49.043283      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:50.043466      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:13:50.241: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:13:51.044348      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:52.045267      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:13:52.249: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:13:53.045433      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:54.045825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:13:54.261: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:13:55.046024      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:56.046313      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:13:56.277: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:13:57.046644      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:13:58.047369      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:13:58.289: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:13:59.047752      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:00.048431      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:14:00.303: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:14:01.048643      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:02.049756      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:14:02.311: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:14:03.049945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:04.050563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:14:04.327: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:14:05.050639      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:06.051240      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:14:06.337: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:14:07.051451      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:08.052460      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:14:08.350: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:14:09.052706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:10.053830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:14:10.361: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:14:11.054763      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:12.054905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:14:12.372: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:14:13.055981      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:14.056240      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:14:14.384: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:14:15.056519      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:16.056840      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:14:16.398: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:14:17.057141      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:18.057402      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:14:18.412: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:14:19.058081      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:20.058473      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:14:20.419: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:14:21.058759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:22.059098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:14:22.430: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:14:23.059715      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:24.059865      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:14:24.442: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:14:25.060086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:26.060574      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:14:26.452: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:14:27.060662      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:28.060820      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:14:28.462: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:14:29.061551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:30.062107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:14:30.474: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  E0419 17:14:31.062387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:32.063694      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:14:32.482: INFO: Get pod busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 in namespace container-probe-8296
  Apr 19 17:14:32.482: INFO: Restart count of pod container-probe-8296/busybox-5ca48b70-6cdc-48e8-a098-cb83b1d37c33 is now 1 (50.29883543s elapsed)
  Apr 19 17:14:32.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/19/24 17:14:32.493
  STEP: Destroying namespace "container-probe-8296" for this suite. @ 04/19/24 17:14:32.538
â€¢ [52.478 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 04/19/24 17:14:32.557
  Apr 19 17:14:32.557: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename deployment @ 04/19/24 17:14:32.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:14:32.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:14:32.611
  Apr 19 17:14:32.617: INFO: Creating simple deployment test-new-deployment
  Apr 19 17:14:32.648: INFO: deployment "test-new-deployment" doesn't have the required revision set
  E0419 17:14:33.064795      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:34.064790      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 04/19/24 17:14:34.692
  STEP: updating a scale subresource @ 04/19/24 17:14:34.706
  STEP: verifying the deployment Spec.Replicas was modified @ 04/19/24 17:14:34.724
  STEP: Patch a scale subresource @ 04/19/24 17:14:34.736
  Apr 19 17:14:34.792: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8605",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "49009661-be13-4604-9e9d-62c583807c39",
      ResourceVersion: (string) (len=5) "32807",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849143672,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143672,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143673,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143673,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143673,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143673,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143672,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 19 17:14:34.811: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8605",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4e05af3c-feaa-4e64-9728-f7c78ed69dab",
      ResourceVersion: (string) (len=5) "32811",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849143672,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "49009661-be13-4604-9e9d-62c583807c39",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 39 30 30 39 36  36 31 2d 62 65 31 33 2d  |\"49009661-be13-|
              00000120  34 36 30 34 2d 39 65 39  64 2d 36 32 63 35 38 33  |4604-9e9d-62c583|
              00000130  38 30 37 63 33 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |807c39\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 19 17:14:34.825: INFO: Pod "test-new-deployment-557759b7c7-spdzk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-spdzk",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8605",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "206608b4-feae-49ec-aa17-8a2ab5fafa7a",
      ResourceVersion: (string) (len=5) "32810",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849143674,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4e05af3c-feaa-4e64-9728-f7c78ed69dab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 65  30 35 61 66 33 63 2d 66  |d\":\"4e05af3c-f|
              00000090  65 61 61 2d 34 65 36 34  2d 39 37 32 38 2d 66 37  |eaa-4e64-9728-f7|
              000000a0  63 37 38 65 64 36 39 64  61 62 5c 22 7d 22 3a 7b  |c78ed69dab\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-srpz6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-srpz6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143674,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 17:14:34.833: INFO: Pod "test-new-deployment-557759b7c7-sw9kh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-sw9kh",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-8605",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b1a6abf2-6ca9-44c2-a293-2e0de274f1cd",
      ResourceVersion: (string) (len=5) "32799",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849143672,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "4e05af3c-feaa-4e64-9728-f7c78ed69dab",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143672,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 65  30 35 61 66 33 63 2d 66  |d\":\"4e05af3c-f|
              00000090  65 61 61 2d 34 65 36 34  2d 39 37 32 38 2d 66 37  |eaa-4e64-9728-f7|
              000000a0  63 37 38 65 64 36 39 64  61 62 5c 22 7d 22 3a 7b  |c78ed69dab\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143673,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 31 37 38 5c 22 7d  |10.233.66.178\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qq8sh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qq8sh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143672,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143673,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143673,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143672,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.129",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.66.178",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.178"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849143672,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849143673,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://a05879f1d50950765918f4af62d2c0dd8fcba22b38e5a550d0981e17fe9d7236",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 17:14:34.837: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8605" for this suite. @ 04/19/24 17:14:34.853
â€¢ [2.313 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 04/19/24 17:14:34.871
  Apr 19 17:14:34.871: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 17:14:34.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:14:34.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:14:34.925
  STEP: Creating a pod to test downward API volume plugin @ 04/19/24 17:14:34.93
  E0419 17:14:35.065709      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:36.066217      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:37.067022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:38.067799      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:14:38.973
  Apr 19 17:14:38.983: INFO: Trying to get logs from node eixo7oojiese-3 pod downwardapi-volume-d3562dcf-c0a7-4b8f-bd45-e626b7bfe49e container client-container: <nil>
  STEP: delete the pod @ 04/19/24 17:14:39.013
  Apr 19 17:14:39.056: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0419 17:14:39.068189      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "projected-1255" for this suite. @ 04/19/24 17:14:39.069
â€¢ [4.218 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 04/19/24 17:14:39.089
  Apr 19 17:14:39.089: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 17:14:39.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:14:39.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:14:39.143
  STEP: Creating configMap with name projected-configmap-test-volume-map-19f7fe1b-f780-45b4-a0c6-f7d9e3ac9641 @ 04/19/24 17:14:39.151
  STEP: Creating a pod to test consume configMaps @ 04/19/24 17:14:39.168
  E0419 17:14:40.068217      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:41.068418      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:42.068646      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:43.072699      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:14:43.251
  Apr 19 17:14:43.261: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-projected-configmaps-1288ec6e-43bb-4e3e-ab09-bfa3bd4abdc5 container agnhost-container: <nil>
  STEP: delete the pod @ 04/19/24 17:14:43.278
  Apr 19 17:14:43.319: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2539" for this suite. @ 04/19/24 17:14:43.326
â€¢ [4.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 04/19/24 17:14:43.345
  Apr 19 17:14:43.345: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename downward-api @ 04/19/24 17:14:43.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:14:43.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:14:43.395
  STEP: Creating a pod to test downward API volume plugin @ 04/19/24 17:14:43.402
  E0419 17:14:44.069535      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:45.069605      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:46.070173      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:47.070942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:14:47.45
  Apr 19 17:14:47.459: INFO: Trying to get logs from node eixo7oojiese-3 pod downwardapi-volume-7886cbb5-3b7a-4faa-9033-1227036832f7 container client-container: <nil>
  STEP: delete the pod @ 04/19/24 17:14:47.478
  Apr 19 17:14:47.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9276" for this suite. @ 04/19/24 17:14:47.529
â€¢ [4.202 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 04/19/24 17:14:47.55
  Apr 19 17:14:47.551: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename sched-preemption @ 04/19/24 17:14:47.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:14:47.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:14:47.614
  Apr 19 17:14:47.663: INFO: Waiting up to 1m0s for all nodes to be ready
  E0419 17:14:48.071907      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:49.072791      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:50.073131      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:51.074266      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:52.074610      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:53.074802      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:54.075700      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:55.075859      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:56.077012      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:57.077124      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:58.077226      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:14:59.077567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:00.079749      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:01.081001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:02.080149      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:03.082185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:04.081739      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:05.084423      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:06.086385      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:07.086889      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:08.087980      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:09.089306      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:10.090512      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:11.090795      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:12.091080      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:13.091806      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:14.092672      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:15.096719      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:16.099414      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:17.099606      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:18.100658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:19.100966      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:20.101444      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:21.101572      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:22.101933      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:23.102383      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:24.103132      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:25.103265      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:26.104128      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:27.104989      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:28.106171      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:29.106917      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:30.107385      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:31.108414      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:32.109047      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:33.109416      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:34.110665      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:35.110848      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:36.112022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:37.112860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:38.112570      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:39.113192      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:40.113223      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:41.113648      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:42.114388      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:43.114965      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:44.115685      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:45.115972      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:46.116250      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:47.116539      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:15:47.729: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 04/19/24 17:15:47.738
  Apr 19 17:15:47.787: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Apr 19 17:15:47.800: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Apr 19 17:15:47.866: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Apr 19 17:15:47.876: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Apr 19 17:15:47.927: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Apr 19 17:15:47.954: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 04/19/24 17:15:47.955
  E0419 17:15:48.117661      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:49.118607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 04/19/24 17:15:50.049
  E0419 17:15:50.119109      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:51.120861      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:52.122073      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:53.122504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:54.122583      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:15:54.208: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2650" for this suite. @ 04/19/24 17:15:54.351
â€¢ [66.817 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 04/19/24 17:15:54.394
  Apr 19 17:15:54.394: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename pods @ 04/19/24 17:15:54.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:15:54.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:15:54.467
  STEP: creating the pod @ 04/19/24 17:15:54.473
  STEP: submitting the pod to kubernetes @ 04/19/24 17:15:54.474
  W0419 17:15:54.491402      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0419 17:15:55.123961      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:56.127766      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 04/19/24 17:15:56.525
  STEP: updating the pod @ 04/19/24 17:15:56.537
  Apr 19 17:15:57.070: INFO: Successfully updated pod "pod-update-activedeadlineseconds-55185067-c548-4995-b56f-f1a5e53ba12b"
  E0419 17:15:57.126485      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:58.127277      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:15:59.127986      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:00.133850      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:01.132119      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:16:01.186: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3410" for this suite. @ 04/19/24 17:16:01.196
â€¢ [6.813 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 04/19/24 17:16:01.216
  Apr 19 17:16:01.216: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename resourcequota @ 04/19/24 17:16:01.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:16:01.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:16:01.291
  STEP: Creating a ResourceQuota with best effort scope @ 04/19/24 17:16:01.295
  STEP: Ensuring ResourceQuota status is calculated @ 04/19/24 17:16:01.303
  E0419 17:16:02.132424      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:03.133129      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 04/19/24 17:16:03.312
  STEP: Ensuring ResourceQuota status is calculated @ 04/19/24 17:16:03.328
  E0419 17:16:04.133273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:05.133635      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 04/19/24 17:16:05.339
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 04/19/24 17:16:05.374
  E0419 17:16:06.133664      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:07.134123      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 04/19/24 17:16:07.385
  E0419 17:16:08.134174      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:09.134640      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/19/24 17:16:09.393
  STEP: Ensuring resource quota status released the pod usage @ 04/19/24 17:16:09.421
  E0419 17:16:10.134896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:11.135267      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 04/19/24 17:16:11.429
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 04/19/24 17:16:11.459
  E0419 17:16:12.135531      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:13.135888      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 04/19/24 17:16:13.468
  E0419 17:16:14.135958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:15.136766      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/19/24 17:16:15.478
  STEP: Ensuring resource quota status released the pod usage @ 04/19/24 17:16:15.515
  E0419 17:16:16.136546      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:17.137074      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:16:17.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5157" for this suite. @ 04/19/24 17:16:17.533
â€¢ [16.335 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 04/19/24 17:16:17.561
  Apr 19 17:16:17.562: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 17:16:17.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:16:17.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:16:17.616
  STEP: Creating a pod to test downward API volume plugin @ 04/19/24 17:16:17.623
  E0419 17:16:18.137786      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:19.138902      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:20.138696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:21.139203      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:16:21.737
  Apr 19 17:16:21.745: INFO: Trying to get logs from node eixo7oojiese-3 pod downwardapi-volume-970be9e9-60d2-409c-be6d-8331baf3192f container client-container: <nil>
  STEP: delete the pod @ 04/19/24 17:16:21.778
  Apr 19 17:16:21.829: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2264" for this suite. @ 04/19/24 17:16:21.856
â€¢ [4.310 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 04/19/24 17:16:21.878
  Apr 19 17:16:21.878: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename services @ 04/19/24 17:16:21.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:16:21.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:16:21.914
  STEP: creating service nodeport-test with type=NodePort in namespace services-1537 @ 04/19/24 17:16:21.92
  STEP: creating replication controller nodeport-test in namespace services-1537 @ 04/19/24 17:16:21.947
  I0419 17:16:21.962385      14 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-1537, replica count: 2
  E0419 17:16:22.139086      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:23.139278      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:24.139350      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0419 17:16:25.020612      14 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 19 17:16:25.021: INFO: Creating new exec pod
  E0419 17:16:25.140162      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:26.140696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:27.141098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:16:28.076: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-1537 exec execpodh8tzt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  E0419 17:16:28.141708      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:16:28.440: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Apr 19 17:16:28.440: INFO: stdout: ""
  E0419 17:16:29.142388      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:16:29.441: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-1537 exec execpodh8tzt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Apr 19 17:16:29.798: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Apr 19 17:16:29.798: INFO: stdout: "nodeport-test-stdt4"
  Apr 19 17:16:29.799: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-1537 exec execpodh8tzt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.2.65 80'
  Apr 19 17:16:30.093: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.2.65 80\nConnection to 10.233.2.65 80 port [tcp/http] succeeded!\n"
  Apr 19 17:16:30.094: INFO: stdout: "nodeport-test-stdt4"
  Apr 19 17:16:30.094: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-1537 exec execpodh8tzt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.129 32125'
  E0419 17:16:30.143191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:16:30.373: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.129 32125\nConnection to 192.168.121.129 32125 port [tcp/*] succeeded!\n"
  Apr 19 17:16:30.373: INFO: stdout: ""
  E0419 17:16:31.143363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:16:31.374: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-1537 exec execpodh8tzt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.129 32125'
  Apr 19 17:16:31.740: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.129 32125\nConnection to 192.168.121.129 32125 port [tcp/*] succeeded!\n"
  Apr 19 17:16:31.741: INFO: stdout: "nodeport-test-2zn86"
  Apr 19 17:16:31.742: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=services-1537 exec execpodh8tzt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.121.83 32125'
  Apr 19 17:16:32.098: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.121.83 32125\nConnection to 192.168.121.83 32125 port [tcp/*] succeeded!\n"
  Apr 19 17:16:32.098: INFO: stdout: "nodeport-test-2zn86"
  Apr 19 17:16:32.098: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1537" for this suite. @ 04/19/24 17:16:32.108
â€¢ [10.243 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 04/19/24 17:16:32.121
  Apr 19 17:16:32.121: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename svc-latency @ 04/19/24 17:16:32.126
  E0419 17:16:32.144964      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:16:32.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:16:32.166
  Apr 19 17:16:32.172: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-781 @ 04/19/24 17:16:32.175
  I0419 17:16:32.187492      14 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-781, replica count: 1
  E0419 17:16:33.145893      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0419 17:16:33.239787      14 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0419 17:16:34.146150      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0419 17:16:34.241483      14 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Apr 19 17:16:34.374: INFO: Created: latency-svc-pcr8w
  Apr 19 17:16:34.391: INFO: Got endpoints: latency-svc-pcr8w [50.017196ms]
  Apr 19 17:16:34.414: INFO: Created: latency-svc-x5qbs
  Apr 19 17:16:34.425: INFO: Got endpoints: latency-svc-x5qbs [33.634345ms]
  Apr 19 17:16:34.434: INFO: Created: latency-svc-gqht2
  Apr 19 17:16:34.450: INFO: Created: latency-svc-mp7lp
  Apr 19 17:16:34.450: INFO: Got endpoints: latency-svc-gqht2 [57.424047ms]
  Apr 19 17:16:34.459: INFO: Created: latency-svc-lt8rn
  Apr 19 17:16:34.459: INFO: Got endpoints: latency-svc-mp7lp [65.425761ms]
  Apr 19 17:16:34.469: INFO: Got endpoints: latency-svc-lt8rn [74.686442ms]
  Apr 19 17:16:34.475: INFO: Created: latency-svc-8h9z2
  Apr 19 17:16:34.483: INFO: Created: latency-svc-xpbb7
  Apr 19 17:16:34.487: INFO: Got endpoints: latency-svc-8h9z2 [94.07991ms]
  Apr 19 17:16:34.494: INFO: Created: latency-svc-w8ngm
  Apr 19 17:16:34.497: INFO: Got endpoints: latency-svc-xpbb7 [101.958454ms]
  Apr 19 17:16:34.511: INFO: Got endpoints: latency-svc-w8ngm [114.962229ms]
  Apr 19 17:16:34.511: INFO: Created: latency-svc-ndt4c
  Apr 19 17:16:34.526: INFO: Got endpoints: latency-svc-ndt4c [129.535108ms]
  Apr 19 17:16:34.527: INFO: Created: latency-svc-28927
  Apr 19 17:16:34.535: INFO: Created: latency-svc-8q64q
  Apr 19 17:16:34.543: INFO: Got endpoints: latency-svc-28927 [147.522172ms]
  Apr 19 17:16:34.547: INFO: Got endpoints: latency-svc-8q64q [150.316137ms]
  Apr 19 17:16:34.551: INFO: Created: latency-svc-l9nz2
  Apr 19 17:16:34.563: INFO: Got endpoints: latency-svc-l9nz2 [165.656083ms]
  Apr 19 17:16:34.565: INFO: Created: latency-svc-zhvfw
  Apr 19 17:16:34.577: INFO: Created: latency-svc-jnvh6
  Apr 19 17:16:34.586: INFO: Got endpoints: latency-svc-zhvfw [188.306505ms]
  Apr 19 17:16:34.592: INFO: Created: latency-svc-h6lbw
  Apr 19 17:16:34.594: INFO: Got endpoints: latency-svc-jnvh6 [196.860713ms]
  Apr 19 17:16:34.609: INFO: Created: latency-svc-jkspf
  Apr 19 17:16:34.612: INFO: Created: latency-svc-9d9lf
  Apr 19 17:16:34.617: INFO: Got endpoints: latency-svc-jkspf [219.719568ms]
  Apr 19 17:16:34.625: INFO: Created: latency-svc-gjlnh
  Apr 19 17:16:34.628: INFO: Got endpoints: latency-svc-h6lbw [230.002914ms]
  Apr 19 17:16:34.634: INFO: Got endpoints: latency-svc-9d9lf [207.069758ms]
  Apr 19 17:16:34.639: INFO: Created: latency-svc-4wlzt
  Apr 19 17:16:34.640: INFO: Got endpoints: latency-svc-gjlnh [187.743033ms]
  Apr 19 17:16:34.647: INFO: Created: latency-svc-7wxhl
  Apr 19 17:16:34.656: INFO: Created: latency-svc-2k4rd
  Apr 19 17:16:34.659: INFO: Got endpoints: latency-svc-4wlzt [199.474149ms]
  Apr 19 17:16:34.664: INFO: Got endpoints: latency-svc-7wxhl [194.977219ms]
  Apr 19 17:16:34.666: INFO: Created: latency-svc-xq5fh
  Apr 19 17:16:34.678: INFO: Created: latency-svc-9sz2c
  Apr 19 17:16:34.683: INFO: Got endpoints: latency-svc-2k4rd [195.608597ms]
  Apr 19 17:16:34.698: INFO: Created: latency-svc-qmkrw
  Apr 19 17:16:34.702: INFO: Got endpoints: latency-svc-xq5fh [205.143928ms]
  Apr 19 17:16:34.705: INFO: Got endpoints: latency-svc-9sz2c [194.269543ms]
  Apr 19 17:16:34.715: INFO: Got endpoints: latency-svc-qmkrw [189.296516ms]
  Apr 19 17:16:34.730: INFO: Created: latency-svc-vmg82
  Apr 19 17:16:34.738: INFO: Created: latency-svc-6p7ml
  Apr 19 17:16:34.747: INFO: Got endpoints: latency-svc-vmg82 [204.311123ms]
  Apr 19 17:16:34.754: INFO: Got endpoints: latency-svc-6p7ml [206.459275ms]
  Apr 19 17:16:34.754: INFO: Created: latency-svc-ntnpk
  Apr 19 17:16:34.764: INFO: Got endpoints: latency-svc-ntnpk [201.288526ms]
  Apr 19 17:16:34.773: INFO: Created: latency-svc-n9dfc
  Apr 19 17:16:34.777: INFO: Got endpoints: latency-svc-n9dfc [191.415752ms]
  Apr 19 17:16:34.778: INFO: Created: latency-svc-5hzpc
  Apr 19 17:16:34.797: INFO: Created: latency-svc-kc7v9
  Apr 19 17:16:34.800: INFO: Got endpoints: latency-svc-5hzpc [205.821707ms]
  Apr 19 17:16:34.802: INFO: Got endpoints: latency-svc-kc7v9 [184.524158ms]
  Apr 19 17:16:34.817: INFO: Created: latency-svc-c6rc5
  Apr 19 17:16:34.825: INFO: Got endpoints: latency-svc-c6rc5 [197.592859ms]
  Apr 19 17:16:34.827: INFO: Created: latency-svc-lp5wl
  Apr 19 17:16:34.835: INFO: Got endpoints: latency-svc-lp5wl [201.268963ms]
  Apr 19 17:16:34.841: INFO: Created: latency-svc-jmh5g
  Apr 19 17:16:34.848: INFO: Got endpoints: latency-svc-jmh5g [207.77628ms]
  Apr 19 17:16:34.850: INFO: Created: latency-svc-mqh8b
  Apr 19 17:16:34.861: INFO: Got endpoints: latency-svc-mqh8b [201.793079ms]
  Apr 19 17:16:34.864: INFO: Created: latency-svc-8gnfz
  Apr 19 17:16:34.877: INFO: Got endpoints: latency-svc-8gnfz [212.55145ms]
  Apr 19 17:16:34.878: INFO: Created: latency-svc-qkqbg
  Apr 19 17:16:34.888: INFO: Got endpoints: latency-svc-qkqbg [204.888956ms]
  Apr 19 17:16:34.892: INFO: Created: latency-svc-vdlw7
  Apr 19 17:16:34.901: INFO: Got endpoints: latency-svc-vdlw7 [198.810189ms]
  Apr 19 17:16:34.903: INFO: Created: latency-svc-hw8hl
  Apr 19 17:16:34.912: INFO: Created: latency-svc-kdxdt
  Apr 19 17:16:34.920: INFO: Got endpoints: latency-svc-hw8hl [214.490142ms]
  Apr 19 17:16:34.925: INFO: Created: latency-svc-rcjb7
  Apr 19 17:16:34.930: INFO: Got endpoints: latency-svc-kdxdt [213.613285ms]
  Apr 19 17:16:34.943: INFO: Got endpoints: latency-svc-rcjb7 [195.895916ms]
  Apr 19 17:16:34.944: INFO: Created: latency-svc-9bv4m
  Apr 19 17:16:34.953: INFO: Got endpoints: latency-svc-9bv4m [198.689113ms]
  Apr 19 17:16:34.960: INFO: Created: latency-svc-ckl8n
  Apr 19 17:16:34.967: INFO: Created: latency-svc-wbg8m
  Apr 19 17:16:34.984: INFO: Created: latency-svc-mbxxc
  Apr 19 17:16:34.985: INFO: Got endpoints: latency-svc-ckl8n [221.018042ms]
  Apr 19 17:16:34.994: INFO: Created: latency-svc-8ftvz
  Apr 19 17:16:34.999: INFO: Created: latency-svc-9czvt
  Apr 19 17:16:35.010: INFO: Created: latency-svc-6vqd2
  Apr 19 17:16:35.016: INFO: Created: latency-svc-sr4vt
  Apr 19 17:16:35.029: INFO: Created: latency-svc-mz5qz
  Apr 19 17:16:35.037: INFO: Got endpoints: latency-svc-wbg8m [259.067418ms]
  Apr 19 17:16:35.045: INFO: Created: latency-svc-7gf4p
  Apr 19 17:16:35.052: INFO: Created: latency-svc-h8j72
  Apr 19 17:16:35.062: INFO: Created: latency-svc-4mlgk
  Apr 19 17:16:35.068: INFO: Created: latency-svc-srfb8
  Apr 19 17:16:35.102: INFO: Got endpoints: latency-svc-mbxxc [301.509165ms]
  Apr 19 17:16:35.102: INFO: Created: latency-svc-kg58k
  Apr 19 17:16:35.118: INFO: Created: latency-svc-dm45q
  Apr 19 17:16:35.126: INFO: Created: latency-svc-b4w4r
  Apr 19 17:16:35.141: INFO: Got endpoints: latency-svc-8ftvz [338.750293ms]
  Apr 19 17:16:35.141: INFO: Created: latency-svc-wf4lz
  E0419 17:16:35.146329      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:16:35.149: INFO: Created: latency-svc-wkwm6
  Apr 19 17:16:35.175: INFO: Created: latency-svc-pclh6
  Apr 19 17:16:35.187: INFO: Got endpoints: latency-svc-9czvt [361.832889ms]
  Apr 19 17:16:35.190: INFO: Created: latency-svc-cfbm9
  Apr 19 17:16:35.205: INFO: Created: latency-svc-nbpdj
  Apr 19 17:16:35.229: INFO: Got endpoints: latency-svc-6vqd2 [393.102685ms]
  Apr 19 17:16:35.243: INFO: Created: latency-svc-r658l
  Apr 19 17:16:35.281: INFO: Got endpoints: latency-svc-sr4vt [432.478394ms]
  Apr 19 17:16:35.298: INFO: Created: latency-svc-bl986
  Apr 19 17:16:35.331: INFO: Got endpoints: latency-svc-mz5qz [470.167628ms]
  Apr 19 17:16:35.350: INFO: Created: latency-svc-s7qh8
  Apr 19 17:16:35.381: INFO: Got endpoints: latency-svc-7gf4p [503.650149ms]
  Apr 19 17:16:35.399: INFO: Created: latency-svc-hr5lx
  Apr 19 17:16:35.432: INFO: Got endpoints: latency-svc-h8j72 [543.92022ms]
  Apr 19 17:16:35.451: INFO: Created: latency-svc-5cwls
  Apr 19 17:16:35.479: INFO: Got endpoints: latency-svc-4mlgk [578.019953ms]
  Apr 19 17:16:35.498: INFO: Created: latency-svc-6wgvt
  Apr 19 17:16:35.533: INFO: Got endpoints: latency-svc-srfb8 [613.20268ms]
  Apr 19 17:16:35.550: INFO: Created: latency-svc-9lxmx
  Apr 19 17:16:35.579: INFO: Got endpoints: latency-svc-kg58k [648.799949ms]
  Apr 19 17:16:35.595: INFO: Created: latency-svc-gqkdt
  Apr 19 17:16:35.633: INFO: Got endpoints: latency-svc-dm45q [689.616515ms]
  Apr 19 17:16:35.653: INFO: Created: latency-svc-8mmkz
  Apr 19 17:16:35.680: INFO: Got endpoints: latency-svc-b4w4r [726.632509ms]
  Apr 19 17:16:35.696: INFO: Created: latency-svc-7cgnm
  Apr 19 17:16:35.730: INFO: Got endpoints: latency-svc-wf4lz [744.717104ms]
  Apr 19 17:16:35.750: INFO: Created: latency-svc-ztxf8
  Apr 19 17:16:35.782: INFO: Got endpoints: latency-svc-wkwm6 [745.717317ms]
  Apr 19 17:16:35.807: INFO: Created: latency-svc-httm7
  Apr 19 17:16:35.831: INFO: Got endpoints: latency-svc-pclh6 [728.847618ms]
  Apr 19 17:16:35.853: INFO: Created: latency-svc-bhgtm
  Apr 19 17:16:35.881: INFO: Got endpoints: latency-svc-cfbm9 [740.327524ms]
  Apr 19 17:16:35.903: INFO: Created: latency-svc-gvrnj
  Apr 19 17:16:35.935: INFO: Got endpoints: latency-svc-nbpdj [747.485369ms]
  Apr 19 17:16:35.961: INFO: Created: latency-svc-2zxpl
  Apr 19 17:16:35.982: INFO: Got endpoints: latency-svc-r658l [753.244905ms]
  Apr 19 17:16:35.998: INFO: Created: latency-svc-zph4n
  Apr 19 17:16:36.046: INFO: Got endpoints: latency-svc-bl986 [764.698475ms]
  Apr 19 17:16:36.065: INFO: Created: latency-svc-gqvhf
  Apr 19 17:16:36.082: INFO: Got endpoints: latency-svc-s7qh8 [750.380552ms]
  Apr 19 17:16:36.101: INFO: Created: latency-svc-c4nrs
  Apr 19 17:16:36.129: INFO: Got endpoints: latency-svc-hr5lx [747.963829ms]
  Apr 19 17:16:36.146: INFO: Created: latency-svc-l9g2t
  E0419 17:16:36.147493      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:16:36.183: INFO: Got endpoints: latency-svc-5cwls [750.42918ms]
  Apr 19 17:16:36.200: INFO: Created: latency-svc-clhdq
  Apr 19 17:16:36.235: INFO: Got endpoints: latency-svc-6wgvt [755.930449ms]
  Apr 19 17:16:36.267: INFO: Created: latency-svc-d62x7
  Apr 19 17:16:36.279: INFO: Got endpoints: latency-svc-9lxmx [745.869815ms]
  Apr 19 17:16:36.295: INFO: Created: latency-svc-hsjkw
  Apr 19 17:16:36.334: INFO: Got endpoints: latency-svc-gqkdt [754.971883ms]
  Apr 19 17:16:36.349: INFO: Created: latency-svc-4qb7q
  Apr 19 17:16:36.381: INFO: Got endpoints: latency-svc-8mmkz [747.123825ms]
  Apr 19 17:16:36.402: INFO: Created: latency-svc-w7s96
  Apr 19 17:16:36.435: INFO: Got endpoints: latency-svc-7cgnm [755.000135ms]
  Apr 19 17:16:36.453: INFO: Created: latency-svc-jj8jj
  Apr 19 17:16:36.483: INFO: Got endpoints: latency-svc-ztxf8 [753.115438ms]
  Apr 19 17:16:36.504: INFO: Created: latency-svc-q6lnv
  Apr 19 17:16:36.530: INFO: Got endpoints: latency-svc-httm7 [747.770687ms]
  Apr 19 17:16:36.552: INFO: Created: latency-svc-cvnmt
  Apr 19 17:16:36.583: INFO: Got endpoints: latency-svc-bhgtm [751.917534ms]
  Apr 19 17:16:36.612: INFO: Created: latency-svc-l2nmr
  Apr 19 17:16:36.629: INFO: Got endpoints: latency-svc-gvrnj [747.352437ms]
  Apr 19 17:16:36.649: INFO: Created: latency-svc-bz26g
  Apr 19 17:16:36.684: INFO: Got endpoints: latency-svc-2zxpl [748.983897ms]
  Apr 19 17:16:36.706: INFO: Created: latency-svc-qlqzc
  Apr 19 17:16:36.731: INFO: Got endpoints: latency-svc-zph4n [748.932154ms]
  Apr 19 17:16:36.748: INFO: Created: latency-svc-rzbcr
  Apr 19 17:16:36.780: INFO: Got endpoints: latency-svc-gqvhf [734.117255ms]
  Apr 19 17:16:36.798: INFO: Created: latency-svc-dsgt6
  Apr 19 17:16:36.832: INFO: Got endpoints: latency-svc-c4nrs [749.871558ms]
  Apr 19 17:16:36.850: INFO: Created: latency-svc-2lv76
  Apr 19 17:16:36.879: INFO: Got endpoints: latency-svc-l9g2t [749.671797ms]
  Apr 19 17:16:36.899: INFO: Created: latency-svc-w4m5s
  Apr 19 17:16:36.933: INFO: Got endpoints: latency-svc-clhdq [750.261425ms]
  Apr 19 17:16:36.952: INFO: Created: latency-svc-m9ggn
  Apr 19 17:16:36.979: INFO: Got endpoints: latency-svc-d62x7 [743.882407ms]
  Apr 19 17:16:37.012: INFO: Created: latency-svc-jtr7j
  Apr 19 17:16:37.029: INFO: Got endpoints: latency-svc-hsjkw [749.413553ms]
  Apr 19 17:16:37.053: INFO: Created: latency-svc-gtz4q
  Apr 19 17:16:37.081: INFO: Got endpoints: latency-svc-4qb7q [747.407798ms]
  Apr 19 17:16:37.095: INFO: Created: latency-svc-66pjp
  Apr 19 17:16:37.132: INFO: Got endpoints: latency-svc-w7s96 [751.694811ms]
  Apr 19 17:16:37.148: INFO: Created: latency-svc-bs5g7
  E0419 17:16:37.148377      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:16:37.183: INFO: Got endpoints: latency-svc-jj8jj [747.865533ms]
  Apr 19 17:16:37.203: INFO: Created: latency-svc-9xhgr
  Apr 19 17:16:37.235: INFO: Got endpoints: latency-svc-q6lnv [751.033298ms]
  Apr 19 17:16:37.270: INFO: Created: latency-svc-jlw45
  Apr 19 17:16:37.286: INFO: Got endpoints: latency-svc-cvnmt [755.567426ms]
  Apr 19 17:16:37.310: INFO: Created: latency-svc-nzdpx
  Apr 19 17:16:37.330: INFO: Got endpoints: latency-svc-l2nmr [746.478427ms]
  Apr 19 17:16:37.344: INFO: Created: latency-svc-ggk4j
  Apr 19 17:16:37.382: INFO: Got endpoints: latency-svc-bz26g [753.055961ms]
  Apr 19 17:16:37.403: INFO: Created: latency-svc-w5bsp
  Apr 19 17:16:37.432: INFO: Got endpoints: latency-svc-qlqzc [747.56406ms]
  Apr 19 17:16:37.451: INFO: Created: latency-svc-c4lqp
  Apr 19 17:16:37.483: INFO: Got endpoints: latency-svc-rzbcr [751.705476ms]
  Apr 19 17:16:37.529: INFO: Created: latency-svc-zt5tg
  Apr 19 17:16:37.535: INFO: Got endpoints: latency-svc-dsgt6 [754.926604ms]
  Apr 19 17:16:37.557: INFO: Created: latency-svc-vbxhd
  Apr 19 17:16:37.608: INFO: Got endpoints: latency-svc-2lv76 [776.021544ms]
  Apr 19 17:16:37.646: INFO: Got endpoints: latency-svc-w4m5s [766.202063ms]
  Apr 19 17:16:37.661: INFO: Created: latency-svc-jmzhx
  Apr 19 17:16:37.669: INFO: Created: latency-svc-zzwf7
  Apr 19 17:16:37.685: INFO: Got endpoints: latency-svc-m9ggn [750.921626ms]
  Apr 19 17:16:37.719: INFO: Created: latency-svc-qt7bm
  Apr 19 17:16:37.739: INFO: Got endpoints: latency-svc-jtr7j [759.779926ms]
  Apr 19 17:16:37.760: INFO: Created: latency-svc-snn5c
  Apr 19 17:16:37.784: INFO: Got endpoints: latency-svc-gtz4q [754.764936ms]
  Apr 19 17:16:37.800: INFO: Created: latency-svc-jp7x9
  Apr 19 17:16:37.833: INFO: Got endpoints: latency-svc-66pjp [751.974295ms]
  Apr 19 17:16:37.852: INFO: Created: latency-svc-k74fk
  Apr 19 17:16:37.879: INFO: Got endpoints: latency-svc-bs5g7 [746.339876ms]
  Apr 19 17:16:37.898: INFO: Created: latency-svc-4mdhd
  Apr 19 17:16:37.930: INFO: Got endpoints: latency-svc-9xhgr [746.523755ms]
  Apr 19 17:16:37.946: INFO: Created: latency-svc-gsgrn
  Apr 19 17:16:37.983: INFO: Got endpoints: latency-svc-jlw45 [746.289249ms]
  Apr 19 17:16:38.029: INFO: Created: latency-svc-lsq4l
  Apr 19 17:16:38.039: INFO: Got endpoints: latency-svc-nzdpx [752.671044ms]
  Apr 19 17:16:38.056: INFO: Created: latency-svc-bzbs9
  Apr 19 17:16:38.081: INFO: Got endpoints: latency-svc-ggk4j [751.086759ms]
  Apr 19 17:16:38.095: INFO: Created: latency-svc-nr7sm
  Apr 19 17:16:38.136: INFO: Got endpoints: latency-svc-w5bsp [753.037231ms]
  E0419 17:16:38.148862      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:16:38.153: INFO: Created: latency-svc-jl4gk
  Apr 19 17:16:38.183: INFO: Got endpoints: latency-svc-c4lqp [751.245246ms]
  Apr 19 17:16:38.202: INFO: Created: latency-svc-q92h8
  Apr 19 17:16:38.241: INFO: Got endpoints: latency-svc-zt5tg [757.92312ms]
  Apr 19 17:16:38.255: INFO: Created: latency-svc-h4bd7
  Apr 19 17:16:38.331: INFO: Got endpoints: latency-svc-vbxhd [795.666562ms]
  Apr 19 17:16:38.346: INFO: Created: latency-svc-gt4m2
  Apr 19 17:16:38.388: INFO: Got endpoints: latency-svc-jmzhx [779.816282ms]
  Apr 19 17:16:38.406: INFO: Created: latency-svc-lwmpv
  Apr 19 17:16:38.437: INFO: Got endpoints: latency-svc-zzwf7 [791.106514ms]
  Apr 19 17:16:38.454: INFO: Created: latency-svc-f4klb
  Apr 19 17:16:38.482: INFO: Got endpoints: latency-svc-qt7bm [796.898206ms]
  Apr 19 17:16:38.495: INFO: Created: latency-svc-8cvrh
  Apr 19 17:16:38.535: INFO: Got endpoints: latency-svc-snn5c [794.934732ms]
  Apr 19 17:16:38.550: INFO: Created: latency-svc-s8wvk
  Apr 19 17:16:38.594: INFO: Got endpoints: latency-svc-jp7x9 [809.535101ms]
  Apr 19 17:16:38.615: INFO: Created: latency-svc-5hhnk
  Apr 19 17:16:38.633: INFO: Got endpoints: latency-svc-k74fk [799.894179ms]
  Apr 19 17:16:38.646: INFO: Created: latency-svc-kxw4s
  Apr 19 17:16:38.680: INFO: Got endpoints: latency-svc-4mdhd [800.411904ms]
  Apr 19 17:16:38.694: INFO: Created: latency-svc-rf4qh
  Apr 19 17:16:38.730: INFO: Got endpoints: latency-svc-gsgrn [799.855266ms]
  Apr 19 17:16:38.746: INFO: Created: latency-svc-2xqzl
  Apr 19 17:16:38.780: INFO: Got endpoints: latency-svc-lsq4l [796.775119ms]
  Apr 19 17:16:38.799: INFO: Created: latency-svc-2bm5s
  Apr 19 17:16:38.828: INFO: Got endpoints: latency-svc-bzbs9 [788.831551ms]
  Apr 19 17:16:38.846: INFO: Created: latency-svc-h5bfm
  Apr 19 17:16:38.879: INFO: Got endpoints: latency-svc-nr7sm [797.932491ms]
  Apr 19 17:16:38.896: INFO: Created: latency-svc-975mp
  Apr 19 17:16:38.931: INFO: Got endpoints: latency-svc-jl4gk [795.566378ms]
  Apr 19 17:16:38.946: INFO: Created: latency-svc-cbs98
  Apr 19 17:16:38.979: INFO: Got endpoints: latency-svc-q92h8 [795.159822ms]
  Apr 19 17:16:38.995: INFO: Created: latency-svc-zm4v8
  Apr 19 17:16:39.043: INFO: Got endpoints: latency-svc-h4bd7 [800.837867ms]
  Apr 19 17:16:39.056: INFO: Created: latency-svc-gqgt9
  Apr 19 17:16:39.079: INFO: Got endpoints: latency-svc-gt4m2 [748.073755ms]
  Apr 19 17:16:39.094: INFO: Created: latency-svc-sqmtr
  Apr 19 17:16:39.137: INFO: Got endpoints: latency-svc-lwmpv [748.845734ms]
  E0419 17:16:39.148989      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:16:39.155: INFO: Created: latency-svc-wsq47
  Apr 19 17:16:39.186: INFO: Got endpoints: latency-svc-f4klb [748.293803ms]
  Apr 19 17:16:39.212: INFO: Created: latency-svc-s2lsk
  Apr 19 17:16:39.235: INFO: Got endpoints: latency-svc-8cvrh [752.606557ms]
  Apr 19 17:16:39.254: INFO: Created: latency-svc-5xrgm
  Apr 19 17:16:39.280: INFO: Got endpoints: latency-svc-s8wvk [744.441679ms]
  Apr 19 17:16:39.297: INFO: Created: latency-svc-9p29g
  Apr 19 17:16:39.335: INFO: Got endpoints: latency-svc-5hhnk [740.785558ms]
  Apr 19 17:16:39.375: INFO: Created: latency-svc-k5ljv
  Apr 19 17:16:39.379: INFO: Got endpoints: latency-svc-kxw4s [745.367069ms]
  Apr 19 17:16:39.411: INFO: Created: latency-svc-xzkgh
  Apr 19 17:16:39.432: INFO: Got endpoints: latency-svc-rf4qh [752.282674ms]
  Apr 19 17:16:39.450: INFO: Created: latency-svc-ntxbb
  Apr 19 17:16:39.478: INFO: Got endpoints: latency-svc-2xqzl [748.073474ms]
  Apr 19 17:16:39.492: INFO: Created: latency-svc-rzdq8
  Apr 19 17:16:39.530: INFO: Got endpoints: latency-svc-2bm5s [749.738105ms]
  Apr 19 17:16:39.546: INFO: Created: latency-svc-r6rvv
  Apr 19 17:16:39.580: INFO: Got endpoints: latency-svc-h5bfm [752.093336ms]
  Apr 19 17:16:39.597: INFO: Created: latency-svc-cwmb7
  Apr 19 17:16:39.654: INFO: Got endpoints: latency-svc-975mp [774.623094ms]
  Apr 19 17:16:39.675: INFO: Created: latency-svc-92gjp
  Apr 19 17:16:39.684: INFO: Got endpoints: latency-svc-cbs98 [752.188311ms]
  Apr 19 17:16:39.738: INFO: Got endpoints: latency-svc-zm4v8 [759.377393ms]
  Apr 19 17:16:39.742: INFO: Created: latency-svc-4vhgc
  Apr 19 17:16:39.770: INFO: Created: latency-svc-xkfdb
  Apr 19 17:16:39.781: INFO: Got endpoints: latency-svc-gqgt9 [737.853303ms]
  Apr 19 17:16:39.796: INFO: Created: latency-svc-v9wdz
  Apr 19 17:16:39.830: INFO: Got endpoints: latency-svc-sqmtr [750.496712ms]
  Apr 19 17:16:39.870: INFO: Created: latency-svc-2wq8m
  Apr 19 17:16:39.882: INFO: Got endpoints: latency-svc-wsq47 [744.546045ms]
  Apr 19 17:16:39.910: INFO: Created: latency-svc-xjddz
  Apr 19 17:16:39.931: INFO: Got endpoints: latency-svc-s2lsk [744.86547ms]
  Apr 19 17:16:39.948: INFO: Created: latency-svc-mqrvk
  Apr 19 17:16:39.978: INFO: Got endpoints: latency-svc-5xrgm [743.066213ms]
  Apr 19 17:16:40.035: INFO: Created: latency-svc-vxfk5
  Apr 19 17:16:40.048: INFO: Got endpoints: latency-svc-9p29g [768.195702ms]
  Apr 19 17:16:40.067: INFO: Created: latency-svc-2zhzs
  Apr 19 17:16:40.080: INFO: Got endpoints: latency-svc-k5ljv [744.329896ms]
  Apr 19 17:16:40.093: INFO: Created: latency-svc-rtrgc
  Apr 19 17:16:40.132: INFO: Got endpoints: latency-svc-xzkgh [752.327834ms]
  Apr 19 17:16:40.147: INFO: Created: latency-svc-hwshb
  E0419 17:16:40.150276      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:16:40.182: INFO: Got endpoints: latency-svc-ntxbb [749.550173ms]
  Apr 19 17:16:40.200: INFO: Created: latency-svc-4g2cq
  Apr 19 17:16:40.234: INFO: Got endpoints: latency-svc-rzdq8 [754.925851ms]
  Apr 19 17:16:40.250: INFO: Created: latency-svc-7knlc
  Apr 19 17:16:40.280: INFO: Got endpoints: latency-svc-r6rvv [749.464817ms]
  Apr 19 17:16:40.295: INFO: Created: latency-svc-2g8mv
  Apr 19 17:16:40.346: INFO: Got endpoints: latency-svc-cwmb7 [766.020032ms]
  Apr 19 17:16:40.370: INFO: Created: latency-svc-fzccg
  Apr 19 17:16:40.384: INFO: Got endpoints: latency-svc-92gjp [729.576001ms]
  Apr 19 17:16:40.416: INFO: Created: latency-svc-587r2
  Apr 19 17:16:40.433: INFO: Got endpoints: latency-svc-4vhgc [749.36635ms]
  Apr 19 17:16:40.451: INFO: Created: latency-svc-wxvzf
  Apr 19 17:16:40.480: INFO: Got endpoints: latency-svc-xkfdb [741.418531ms]
  Apr 19 17:16:40.502: INFO: Created: latency-svc-2gdrx
  Apr 19 17:16:40.549: INFO: Got endpoints: latency-svc-v9wdz [768.065634ms]
  Apr 19 17:16:40.566: INFO: Created: latency-svc-x6n8m
  Apr 19 17:16:40.618: INFO: Got endpoints: latency-svc-2wq8m [787.538788ms]
  Apr 19 17:16:40.658: INFO: Got endpoints: latency-svc-xjddz [775.98848ms]
  Apr 19 17:16:40.666: INFO: Created: latency-svc-twqgz
  Apr 19 17:16:40.687: INFO: Got endpoints: latency-svc-mqrvk [756.21005ms]
  Apr 19 17:16:40.695: INFO: Created: latency-svc-8p8mx
  Apr 19 17:16:40.702: INFO: Created: latency-svc-sxhcn
  Apr 19 17:16:40.730: INFO: Got endpoints: latency-svc-vxfk5 [751.65667ms]
  Apr 19 17:16:40.754: INFO: Created: latency-svc-rmmdj
  Apr 19 17:16:40.783: INFO: Got endpoints: latency-svc-2zhzs [734.602062ms]
  Apr 19 17:16:40.799: INFO: Created: latency-svc-qm86b
  Apr 19 17:16:40.830: INFO: Got endpoints: latency-svc-rtrgc [750.034953ms]
  Apr 19 17:16:40.847: INFO: Created: latency-svc-zwhwj
  Apr 19 17:16:40.881: INFO: Got endpoints: latency-svc-hwshb [749.363966ms]
  Apr 19 17:16:40.909: INFO: Created: latency-svc-sfq9k
  Apr 19 17:16:40.938: INFO: Got endpoints: latency-svc-4g2cq [755.941552ms]
  Apr 19 17:16:40.956: INFO: Created: latency-svc-pb7v6
  Apr 19 17:16:40.984: INFO: Got endpoints: latency-svc-7knlc [749.936858ms]
  Apr 19 17:16:40.998: INFO: Created: latency-svc-wvxv6
  Apr 19 17:16:41.028: INFO: Got endpoints: latency-svc-2g8mv [747.892342ms]
  Apr 19 17:16:41.060: INFO: Created: latency-svc-776rq
  Apr 19 17:16:41.082: INFO: Got endpoints: latency-svc-fzccg [735.257024ms]
  Apr 19 17:16:41.103: INFO: Created: latency-svc-h5dfk
  Apr 19 17:16:41.134: INFO: Got endpoints: latency-svc-587r2 [749.419767ms]
  Apr 19 17:16:41.149: INFO: Created: latency-svc-sxwqw
  E0419 17:16:41.150389      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:16:41.179: INFO: Got endpoints: latency-svc-wxvzf [745.051128ms]
  Apr 19 17:16:41.197: INFO: Created: latency-svc-wfwqp
  Apr 19 17:16:41.232: INFO: Got endpoints: latency-svc-2gdrx [752.036759ms]
  Apr 19 17:16:41.251: INFO: Created: latency-svc-c7rwq
  Apr 19 17:16:41.279: INFO: Got endpoints: latency-svc-x6n8m [729.827674ms]
  Apr 19 17:16:41.292: INFO: Created: latency-svc-fw5v2
  Apr 19 17:16:41.339: INFO: Got endpoints: latency-svc-twqgz [721.230407ms]
  Apr 19 17:16:41.357: INFO: Created: latency-svc-5qjdq
  Apr 19 17:16:41.382: INFO: Got endpoints: latency-svc-8p8mx [723.58934ms]
  Apr 19 17:16:41.420: INFO: Created: latency-svc-2fpvl
  Apr 19 17:16:41.432: INFO: Got endpoints: latency-svc-sxhcn [744.83238ms]
  Apr 19 17:16:41.451: INFO: Created: latency-svc-qs846
  Apr 19 17:16:41.483: INFO: Got endpoints: latency-svc-rmmdj [753.118086ms]
  Apr 19 17:16:41.502: INFO: Created: latency-svc-cnczs
  Apr 19 17:16:41.531: INFO: Got endpoints: latency-svc-qm86b [748.362773ms]
  Apr 19 17:16:41.554: INFO: Created: latency-svc-djhxd
  Apr 19 17:16:41.584: INFO: Got endpoints: latency-svc-zwhwj [754.196532ms]
  Apr 19 17:16:41.613: INFO: Created: latency-svc-zm48d
  Apr 19 17:16:41.636: INFO: Got endpoints: latency-svc-sfq9k [754.51446ms]
  Apr 19 17:16:41.651: INFO: Created: latency-svc-ztlx6
  Apr 19 17:16:41.683: INFO: Got endpoints: latency-svc-pb7v6 [744.885794ms]
  Apr 19 17:16:41.702: INFO: Created: latency-svc-5zsjt
  Apr 19 17:16:41.728: INFO: Got endpoints: latency-svc-wvxv6 [744.318444ms]
  Apr 19 17:16:41.744: INFO: Created: latency-svc-757ft
  Apr 19 17:16:41.782: INFO: Got endpoints: latency-svc-776rq [753.110342ms]
  Apr 19 17:16:41.797: INFO: Created: latency-svc-prwt8
  Apr 19 17:16:41.830: INFO: Got endpoints: latency-svc-h5dfk [748.012589ms]
  Apr 19 17:16:41.846: INFO: Created: latency-svc-xcb5m
  Apr 19 17:16:41.881: INFO: Got endpoints: latency-svc-sxwqw [746.953551ms]
  Apr 19 17:16:41.901: INFO: Created: latency-svc-p79nk
  Apr 19 17:16:41.930: INFO: Got endpoints: latency-svc-wfwqp [751.366543ms]
  Apr 19 17:16:41.949: INFO: Created: latency-svc-8msjh
  Apr 19 17:16:41.981: INFO: Got endpoints: latency-svc-c7rwq [748.704555ms]
  Apr 19 17:16:42.007: INFO: Created: latency-svc-86h2v
  Apr 19 17:16:42.031: INFO: Got endpoints: latency-svc-fw5v2 [752.381632ms]
  Apr 19 17:16:42.050: INFO: Created: latency-svc-szmpx
  Apr 19 17:16:42.082: INFO: Got endpoints: latency-svc-5qjdq [742.160643ms]
  Apr 19 17:16:42.103: INFO: Created: latency-svc-wstln
  Apr 19 17:16:42.135: INFO: Got endpoints: latency-svc-2fpvl [753.136989ms]
  E0419 17:16:42.151730      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:16:42.160: INFO: Created: latency-svc-h8pwb
  Apr 19 17:16:42.186: INFO: Got endpoints: latency-svc-qs846 [753.287582ms]
  Apr 19 17:16:42.198: INFO: Created: latency-svc-zrzb7
  Apr 19 17:16:42.231: INFO: Got endpoints: latency-svc-cnczs [747.847436ms]
  Apr 19 17:16:42.245: INFO: Created: latency-svc-hhgq9
  Apr 19 17:16:42.282: INFO: Got endpoints: latency-svc-djhxd [750.635759ms]
  Apr 19 17:16:42.332: INFO: Got endpoints: latency-svc-zm48d [747.683674ms]
  Apr 19 17:16:42.383: INFO: Got endpoints: latency-svc-ztlx6 [747.730585ms]
  Apr 19 17:16:42.433: INFO: Got endpoints: latency-svc-5zsjt [749.682424ms]
  Apr 19 17:16:42.481: INFO: Got endpoints: latency-svc-757ft [752.610432ms]
  Apr 19 17:16:42.533: INFO: Got endpoints: latency-svc-prwt8 [751.726755ms]
  Apr 19 17:16:42.581: INFO: Got endpoints: latency-svc-xcb5m [751.291204ms]
  Apr 19 17:16:42.634: INFO: Got endpoints: latency-svc-p79nk [752.544874ms]
  Apr 19 17:16:42.687: INFO: Got endpoints: latency-svc-8msjh [756.93782ms]
  Apr 19 17:16:42.735: INFO: Got endpoints: latency-svc-86h2v [754.212172ms]
  Apr 19 17:16:42.783: INFO: Got endpoints: latency-svc-szmpx [751.540036ms]
  Apr 19 17:16:42.831: INFO: Got endpoints: latency-svc-wstln [749.561078ms]
  Apr 19 17:16:42.890: INFO: Got endpoints: latency-svc-h8pwb [754.348966ms]
  Apr 19 17:16:42.934: INFO: Got endpoints: latency-svc-zrzb7 [747.611339ms]
  Apr 19 17:16:42.983: INFO: Got endpoints: latency-svc-hhgq9 [751.550175ms]
  Apr 19 17:16:42.984: INFO: Latencies: [33.634345ms 57.424047ms 65.425761ms 74.686442ms 94.07991ms 101.958454ms 114.962229ms 129.535108ms 147.522172ms 150.316137ms 165.656083ms 184.524158ms 187.743033ms 188.306505ms 189.296516ms 191.415752ms 194.269543ms 194.977219ms 195.608597ms 195.895916ms 196.860713ms 197.592859ms 198.689113ms 198.810189ms 199.474149ms 201.268963ms 201.288526ms 201.793079ms 204.311123ms 204.888956ms 205.143928ms 205.821707ms 206.459275ms 207.069758ms 207.77628ms 212.55145ms 213.613285ms 214.490142ms 219.719568ms 221.018042ms 230.002914ms 259.067418ms 301.509165ms 338.750293ms 361.832889ms 393.102685ms 432.478394ms 470.167628ms 503.650149ms 543.92022ms 578.019953ms 613.20268ms 648.799949ms 689.616515ms 721.230407ms 723.58934ms 726.632509ms 728.847618ms 729.576001ms 729.827674ms 734.117255ms 734.602062ms 735.257024ms 737.853303ms 740.327524ms 740.785558ms 741.418531ms 742.160643ms 743.066213ms 743.882407ms 744.318444ms 744.329896ms 744.441679ms 744.546045ms 744.717104ms 744.83238ms 744.86547ms 744.885794ms 745.051128ms 745.367069ms 745.717317ms 745.869815ms 746.289249ms 746.339876ms 746.478427ms 746.523755ms 746.953551ms 747.123825ms 747.352437ms 747.407798ms 747.485369ms 747.56406ms 747.611339ms 747.683674ms 747.730585ms 747.770687ms 747.847436ms 747.865533ms 747.892342ms 747.963829ms 748.012589ms 748.073474ms 748.073755ms 748.293803ms 748.362773ms 748.704555ms 748.845734ms 748.932154ms 748.983897ms 749.363966ms 749.36635ms 749.413553ms 749.419767ms 749.464817ms 749.550173ms 749.561078ms 749.671797ms 749.682424ms 749.738105ms 749.871558ms 749.936858ms 750.034953ms 750.261425ms 750.380552ms 750.42918ms 750.496712ms 750.635759ms 750.921626ms 751.033298ms 751.086759ms 751.245246ms 751.291204ms 751.366543ms 751.540036ms 751.550175ms 751.65667ms 751.694811ms 751.705476ms 751.726755ms 751.917534ms 751.974295ms 752.036759ms 752.093336ms 752.188311ms 752.282674ms 752.327834ms 752.381632ms 752.544874ms 752.606557ms 752.610432ms 752.671044ms 753.037231ms 753.055961ms 753.110342ms 753.115438ms 753.118086ms 753.136989ms 753.244905ms 753.287582ms 754.196532ms 754.212172ms 754.348966ms 754.51446ms 754.764936ms 754.925851ms 754.926604ms 754.971883ms 755.000135ms 755.567426ms 755.930449ms 755.941552ms 756.21005ms 756.93782ms 757.92312ms 759.377393ms 759.779926ms 764.698475ms 766.020032ms 766.202063ms 768.065634ms 768.195702ms 774.623094ms 775.98848ms 776.021544ms 779.816282ms 787.538788ms 788.831551ms 791.106514ms 794.934732ms 795.159822ms 795.566378ms 795.666562ms 796.775119ms 796.898206ms 797.932491ms 799.855266ms 799.894179ms 800.411904ms 800.837867ms 809.535101ms]
  Apr 19 17:16:42.984: INFO: 50 %ile: 748.012589ms
  Apr 19 17:16:42.985: INFO: 90 %ile: 768.195702ms
  Apr 19 17:16:42.985: INFO: 99 %ile: 800.837867ms
  Apr 19 17:16:42.986: INFO: Total sample count: 200
  Apr 19 17:16:42.987: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-781" for this suite. @ 04/19/24 17:16:43.008
â€¢ [10.906 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 04/19/24 17:16:43.03
  Apr 19 17:16:43.030: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename containers @ 04/19/24 17:16:43.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:16:43.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:16:43.078
  STEP: Creating a pod to test override command @ 04/19/24 17:16:43.085
  E0419 17:16:43.152490      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:44.153208      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:45.154157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:46.154368      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:16:47.135
  Apr 19 17:16:47.144: INFO: Trying to get logs from node eixo7oojiese-3 pod client-containers-3055ae92-50a5-484a-b157-ea98b5289814 container agnhost-container: <nil>
  E0419 17:16:47.154800      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 04/19/24 17:16:47.168
  Apr 19 17:16:47.215: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4496" for this suite. @ 04/19/24 17:16:47.23
â€¢ [4.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 04/19/24 17:16:47.248
  Apr 19 17:16:47.248: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 17:16:47.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:16:47.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:16:47.291
  STEP: Creating configMap with name projected-configmap-test-volume-map-908596b5-21dc-4334-947e-052cec3dbde7 @ 04/19/24 17:16:47.297
  STEP: Creating a pod to test consume configMaps @ 04/19/24 17:16:47.306
  E0419 17:16:48.154454      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:49.154860      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:50.155916      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:51.156231      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:16:51.353
  Apr 19 17:16:51.360: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-projected-configmaps-122a83ac-a679-4003-912e-172097bd5d33 container agnhost-container: <nil>
  STEP: delete the pod @ 04/19/24 17:16:51.374
  Apr 19 17:16:51.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4555" for this suite. @ 04/19/24 17:16:51.409
â€¢ [4.184 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 04/19/24 17:16:51.433
  Apr 19 17:16:51.433: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename emptydir @ 04/19/24 17:16:51.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:16:51.484
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:16:51.491
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 04/19/24 17:16:51.498
  E0419 17:16:52.157606      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:53.157690      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:54.158798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:55.160183      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:16:55.551
  Apr 19 17:16:55.556: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-2c2160d9-7074-47f2-b9d7-391c520e9b6c container test-container: <nil>
  STEP: delete the pod @ 04/19/24 17:16:55.572
  Apr 19 17:16:55.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7263" for this suite. @ 04/19/24 17:16:55.613
â€¢ [4.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 04/19/24 17:16:55.632
  Apr 19 17:16:55.632: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename kubelet-test @ 04/19/24 17:16:55.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:16:55.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:16:55.671
  E0419 17:16:56.160026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:57.160802      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:58.161397      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:16:59.161871      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:16:59.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3619" for this suite. @ 04/19/24 17:16:59.743
â€¢ [4.128 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 04/19/24 17:16:59.761
  Apr 19 17:16:59.761: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename configmap @ 04/19/24 17:16:59.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:16:59.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:16:59.816
  STEP: Creating configMap with name configmap-test-volume-69cc22f7-8af0-410d-abc0-e84490891cd6 @ 04/19/24 17:16:59.826
  STEP: Creating a pod to test consume configMaps @ 04/19/24 17:16:59.838
  E0419 17:17:00.162652      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:01.162299      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:02.163420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:03.164067      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:17:03.89
  Apr 19 17:17:03.898: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-configmaps-317e23e2-cb65-4a80-bedb-fbc3f00339c9 container agnhost-container: <nil>
  STEP: delete the pod @ 04/19/24 17:17:03.912
  Apr 19 17:17:03.945: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8273" for this suite. @ 04/19/24 17:17:03.955
â€¢ [4.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 04/19/24 17:17:03.979
  Apr 19 17:17:03.979: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename disruption @ 04/19/24 17:17:03.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:17:04.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:17:04.018
  STEP: Creating a kubernetes client @ 04/19/24 17:17:04.022
  Apr 19 17:17:04.022: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename disruption-2 @ 04/19/24 17:17:04.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:17:04.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:17:04.084
  STEP: Waiting for the pdb to be processed @ 04/19/24 17:17:04.098
  E0419 17:17:04.164928      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:05.166044      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 04/19/24 17:17:06.135
  E0419 17:17:06.166064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:07.166887      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:08.167332      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 04/19/24 17:17:08.171
  E0419 17:17:09.167636      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:10.168309      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: listing a collection of PDBs across all namespaces @ 04/19/24 17:17:10.194
  STEP: listing a collection of PDBs in namespace disruption-8132 @ 04/19/24 17:17:10.208
  STEP: deleting a collection of PDBs @ 04/19/24 17:17:10.219
  STEP: Waiting for the PDB collection to be deleted @ 04/19/24 17:17:10.257
  Apr 19 17:17:10.268: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 19 17:17:10.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-5196" for this suite. @ 04/19/24 17:17:10.301
  STEP: Destroying namespace "disruption-8132" for this suite. @ 04/19/24 17:17:10.323
â€¢ [6.359 seconds]
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 04/19/24 17:17:10.34
  Apr 19 17:17:10.340: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 17:17:10.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:17:10.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:17:10.395
  STEP: Creating secret with name s-test-opt-del-f3cd61cc-ee7c-4ee1-bd5b-13f072f7f2a4 @ 04/19/24 17:17:10.424
  STEP: Creating secret with name s-test-opt-upd-aa2dda45-3e9a-4cb1-8610-53c8f8bd73f1 @ 04/19/24 17:17:10.435
  STEP: Creating the pod @ 04/19/24 17:17:10.443
  E0419 17:17:11.169421      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:12.169514      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-f3cd61cc-ee7c-4ee1-bd5b-13f072f7f2a4 @ 04/19/24 17:17:12.549
  STEP: Updating secret s-test-opt-upd-aa2dda45-3e9a-4cb1-8610-53c8f8bd73f1 @ 04/19/24 17:17:12.566
  STEP: Creating secret with name s-test-opt-create-ed83d75c-efb9-4a68-9f8c-5dc3a5bb9602 @ 04/19/24 17:17:12.58
  STEP: waiting to observe update in volume @ 04/19/24 17:17:12.594
  E0419 17:17:13.170315      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:14.170274      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:15.170355      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:16.171029      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:17.171682      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:18.172727      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:19.173001      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:20.173548      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:21.174157      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:22.174614      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:23.174846      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:24.175097      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:25.175822      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:26.177235      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:27.177826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:28.178135      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:29.178769      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:30.179040      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:31.179104      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:32.179486      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:33.180934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:34.180967      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:35.181706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:36.182391      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:37.182211      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:38.183087      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:39.183678      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:40.185935      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:41.186658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:42.187132      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:43.187123      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:44.187876      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:45.187631      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:46.188628      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:47.189359      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:48.189488      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:49.190715      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:50.191414      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:51.192243      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:52.192695      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:53.193561      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:54.194044      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:55.194720      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:56.195257      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:57.196162      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:58.196567      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:17:59.197457      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:00.197836      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:01.198593      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:02.199504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:03.199942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:04.199978      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:05.200227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:06.200780      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:07.201088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:08.201287      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:09.201554      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:10.201809      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:11.202117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:12.202566      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:13.203321      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:14.203405      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:15.204518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:16.205089      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:17.205509      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:18:17.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6274" for this suite. @ 04/19/24 17:18:17.488
â€¢ [67.161 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 04/19/24 17:18:17.506
  Apr 19 17:18:17.506: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename endpointslice @ 04/19/24 17:18:17.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:18:17.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:18:17.556
  E0419 17:18:18.206136      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:19.206498      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:20.206792      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:21.207052      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:18:21.685: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8213" for this suite. @ 04/19/24 17:18:21.695
â€¢ [4.202 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 04/19/24 17:18:21.712
  Apr 19 17:18:21.712: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename deployment @ 04/19/24 17:18:21.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:18:21.751
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:18:21.755
  Apr 19 17:18:21.778: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E0419 17:18:22.208129      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:23.208230      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:24.208727      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:25.210036      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:26.212488      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:18:26.791: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 04/19/24 17:18:26.791
  Apr 19 17:18:26.791: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 04/19/24 17:18:26.828
  Apr 19 17:18:26.869: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5261",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "56e91ddb-bd57-4e1e-9315-ecb218190803",
      ResourceVersion: (string) (len=5) "35505",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849143906,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143906,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Apr 19 17:18:26.886: INFO: New ReplicaSet "test-cleanup-deployment-7bc75bbdf6" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5261",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5ce7fed8-796a-4d3c-b1da-440d44e91af1",
      ResourceVersion: (string) (len=5) "35507",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849143906,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "56e91ddb-bd57-4e1e-9315-ecb218190803",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143906,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 36 65 39 31 64  64 62 2d 62 64 35 37 2d  |\"56e91ddb-bd57-|
              00000120  34 65 31 65 2d 39 33 31  35 2d 65 63 62 32 31 38  |4e1e-9315-ecb218|
              00000130  31 39 30 38 30 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |190803\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 19 17:18:26.895: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Apr 19 17:18:26.896: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5261",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1a88ca86-3ea7-49cc-bf07-012abfdfa3f7",
      ResourceVersion: (string) (len=5) "35506",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849143901,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "56e91ddb-bd57-4e1e-9315-ecb218190803",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143906,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 35 36 65 39 31 64 64  |"uid\":\"56e91dd|
              00000040  62 2d 62 64 35 37 2d 34  65 31 65 2d 39 33 31 35  |b-bd57-4e1e-9315|
              00000050  2d 65 63 62 32 31 38 31  39 30 38 30 33 5c 22 7d  |-ecb218190803\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Apr 19 17:18:26.905: INFO: Pod "test-cleanup-controller-sx5js" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-sx5js",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-5261",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8b4cbeb4-22ed-4442-869f-ab12f398221e",
      ResourceVersion: (string) (len=5) "35492",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849143901,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "1a88ca86-3ea7-49cc-bf07-012abfdfa3f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  31 61 38 38 63 61 38 36  |uid\":\"1a88ca86|
              00000080  2d 33 65 61 37 2d 34 39  63 63 2d 62 66 30 37 2d  |-3ea7-49cc-bf07-|
              00000090  30 31 32 61 62 66 64 66  61 33 66 37 5c 22 7d 22  |012abfdfa3f7\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143903,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=520) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 32 33 33 2e 36  36 2e 31 39 35 5c 22 7d  |10.233.66.195\"}|
              000001e0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 70 22  |":{".":{},"f:ip"|
              000001f0  3a 7b 7d 7d 7d 2c 22 66  3a 73 74 61 72 74 54 69  |:{}}},"f:startTi|
              00000200  6d 65 22 3a 7b 7d 7d 7d                           |me":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nh2d7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nh2d7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143902,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143901,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.121.129",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=13) "10.233.66.195",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.66.195"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849143901,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63849143902,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://facc919c4ecda229feaa35699db8590c90df124292660c5484d199e0c7e2af4e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 17:18:26.923: INFO: Pod "test-cleanup-deployment-7bc75bbdf6-lwncv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7bc75bbdf6-lwncv",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7bc75bbdf6-",
      Namespace: (string) (len=15) "deployment-5261",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a779d2a8-bb76-4aea-8d64-e82a621053b3",
      ResourceVersion: (string) (len=5) "35511",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63849143906,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7bc75bbdf6"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7bc75bbdf6",
          UID: (types.UID) (len=36) "5ce7fed8-796a-4d3c-b1da-440d44e91af1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143906,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 63  65 37 66 65 64 38 2d 37  |d\":\"5ce7fed8-7|
              00000090  39 36 61 2d 34 64 33 63  2d 62 31 64 61 2d 34 34  |96a-4d3c-b1da-44|
              000000a0  30 64 34 34 65 39 31 61  66 31 5c 22 7d 22 3a 7b  |0d44e91af1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zrw4d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zrw4d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=14) "eixo7oojiese-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63849143906,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Apr 19 17:18:26.932: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5261" for this suite. @ 04/19/24 17:18:26.944
â€¢ [5.244 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 04/19/24 17:18:26.96
  Apr 19 17:18:26.960: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename dns @ 04/19/24 17:18:26.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:18:26.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:18:26.998
  STEP: Creating a test headless service @ 04/19/24 17:18:27.002
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4551.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4551.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4551.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4551.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4551.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4551.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4551.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4551.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4551.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4551.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 126.6.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.6.126_udp@PTR;check="$$(dig +tcp +noall +answer +search 126.6.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.6.126_tcp@PTR;sleep 1; done
   @ 04/19/24 17:18:27.039
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4551.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4551.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4551.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4551.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4551.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4551.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4551.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4551.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4551.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4551.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 126.6.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.6.126_udp@PTR;check="$$(dig +tcp +noall +answer +search 126.6.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.6.126_tcp@PTR;sleep 1; done
   @ 04/19/24 17:18:27.039
  STEP: creating a pod to probe DNS @ 04/19/24 17:18:27.039
  STEP: submitting the pod to kubernetes @ 04/19/24 17:18:27.04
  E0419 17:18:27.212471      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:28.233885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:29.213456      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:30.215779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/19/24 17:18:31.11
  STEP: looking for the results for each expected name from probers @ 04/19/24 17:18:31.125
  Apr 19 17:18:31.142: INFO: Unable to read wheezy_udp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:31.149: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:31.158: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:31.164: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:31.200: INFO: Unable to read jessie_udp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:31.206: INFO: Unable to read jessie_tcp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:31.213: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  E0419 17:18:31.213988      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:18:31.219: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:31.245: INFO: Lookups using dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f failed for: [wheezy_udp@dns-test-service.dns-4551.svc.cluster.local wheezy_tcp@dns-test-service.dns-4551.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local jessie_udp@dns-test-service.dns-4551.svc.cluster.local jessie_tcp@dns-test-service.dns-4551.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local]

  Apr 19 17:18:31.258: INFO: Pod client logs for webserver: 
  Apr 19 17:18:31.270: INFO: Pod client logs for querier: 
  Apr 19 17:18:31.282: INFO: Pod client logs for jessie-querier: 
  E0419 17:18:32.214886      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:33.216011      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:34.217070      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:35.218706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:36.219911      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:18:36.299: INFO: Unable to read wheezy_udp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:36.312: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:36.324: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:36.335: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:36.386: INFO: Unable to read jessie_udp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:36.397: INFO: Unable to read jessie_tcp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:36.414: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:36.421: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:36.455: INFO: Lookups using dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f failed for: [wheezy_udp@dns-test-service.dns-4551.svc.cluster.local wheezy_tcp@dns-test-service.dns-4551.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local jessie_udp@dns-test-service.dns-4551.svc.cluster.local jessie_tcp@dns-test-service.dns-4551.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local]

  Apr 19 17:18:36.470: INFO: Pod client logs for webserver: 
  Apr 19 17:18:36.484: INFO: Pod client logs for querier: 
  Apr 19 17:18:36.495: INFO: Pod client logs for jessie-querier: 
  E0419 17:18:37.220428      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:38.221306      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:39.221299      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:40.229934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:41.230069      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:18:41.296: INFO: Unable to read wheezy_udp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:41.311: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:41.322: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:41.335: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:41.392: INFO: Unable to read jessie_udp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:41.406: INFO: Unable to read jessie_tcp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:41.419: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:41.431: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:41.477: INFO: Lookups using dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f failed for: [wheezy_udp@dns-test-service.dns-4551.svc.cluster.local wheezy_tcp@dns-test-service.dns-4551.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local jessie_udp@dns-test-service.dns-4551.svc.cluster.local jessie_tcp@dns-test-service.dns-4551.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local]

  Apr 19 17:18:41.493: INFO: Pod client logs for webserver: 
  Apr 19 17:18:41.512: INFO: Pod client logs for querier: 
  Apr 19 17:18:41.530: INFO: Pod client logs for jessie-querier: 
  E0419 17:18:42.230878      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:43.231942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:44.234863      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:45.235097      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:46.236192      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:18:46.296: INFO: Unable to read wheezy_udp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:46.307: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:46.318: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:46.328: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:46.380: INFO: Unable to read jessie_udp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:46.391: INFO: Unable to read jessie_tcp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:46.403: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:46.413: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:46.463: INFO: Lookups using dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f failed for: [wheezy_udp@dns-test-service.dns-4551.svc.cluster.local wheezy_tcp@dns-test-service.dns-4551.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local jessie_udp@dns-test-service.dns-4551.svc.cluster.local jessie_tcp@dns-test-service.dns-4551.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local]

  Apr 19 17:18:46.484: INFO: Pod client logs for webserver: 
  Apr 19 17:18:46.505: INFO: Pod client logs for querier: 
  Apr 19 17:18:46.525: INFO: Pod client logs for jessie-querier: 
  E0419 17:18:47.237344      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:48.237891      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:49.237983      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:50.238558      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:51.238337      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:18:51.294: INFO: Unable to read wheezy_udp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:51.304: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:51.316: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:51.331: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:51.389: INFO: Unable to read jessie_udp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:51.402: INFO: Unable to read jessie_tcp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:51.416: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:51.428: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:51.469: INFO: Lookups using dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f failed for: [wheezy_udp@dns-test-service.dns-4551.svc.cluster.local wheezy_tcp@dns-test-service.dns-4551.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local jessie_udp@dns-test-service.dns-4551.svc.cluster.local jessie_tcp@dns-test-service.dns-4551.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local]

  Apr 19 17:18:51.493: INFO: Pod client logs for webserver: 
  Apr 19 17:18:51.518: INFO: Pod client logs for querier: 
  Apr 19 17:18:51.537: INFO: Pod client logs for jessie-querier: 
  E0419 17:18:52.239721      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:53.239608      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:54.239449      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:55.239517      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:56.242585      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:18:56.297: INFO: Unable to read wheezy_udp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:56.311: INFO: Unable to read wheezy_tcp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:56.324: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:56.335: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:56.394: INFO: Unable to read jessie_udp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:56.404: INFO: Unable to read jessie_tcp@dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:56.416: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:56.428: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local from pod dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f: the server could not find the requested resource (get pods dns-test-9eab2d2b-2727-4f15-9a50-33857386219f)
  Apr 19 17:18:56.476: INFO: Lookups using dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f failed for: [wheezy_udp@dns-test-service.dns-4551.svc.cluster.local wheezy_tcp@dns-test-service.dns-4551.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local jessie_udp@dns-test-service.dns-4551.svc.cluster.local jessie_tcp@dns-test-service.dns-4551.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4551.svc.cluster.local]

  Apr 19 17:18:56.495: INFO: Pod client logs for webserver: 
  Apr 19 17:18:56.510: INFO: Pod client logs for querier: 
  Apr 19 17:18:56.526: INFO: Pod client logs for jessie-querier: 
  E0419 17:18:57.242811      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:58.243193      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:18:59.243904      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:00.244320      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:01.245154      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:19:01.478: INFO: DNS probes using dns-4551/dns-test-9eab2d2b-2727-4f15-9a50-33857386219f succeeded

  Apr 19 17:19:01.480: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/19/24 17:19:01.499
  STEP: deleting the test service @ 04/19/24 17:19:01.555
  STEP: deleting the test headless service @ 04/19/24 17:19:01.615
  STEP: Destroying namespace "dns-4551" for this suite. @ 04/19/24 17:19:01.695
â€¢ [34.778 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 04/19/24 17:19:01.74
  Apr 19 17:19:01.741: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename services @ 04/19/24 17:19:01.749
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:19:01.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:19:01.831
  Apr 19 17:19:01.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6316" for this suite. @ 04/19/24 17:19:01.853
â€¢ [0.124 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 04/19/24 17:19:01.872
  Apr 19 17:19:01.873: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename crd-publish-openapi @ 04/19/24 17:19:01.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:19:01.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:19:01.91
  STEP: set up a multi version CRD @ 04/19/24 17:19:01.915
  Apr 19 17:19:01.916: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  E0419 17:19:02.246072      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:03.246674      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:04.247996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:05.249334      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:06.249923      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 04/19/24 17:19:06.744
  STEP: check the unserved version gets removed @ 04/19/24 17:19:06.813
  E0419 17:19:07.251694      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:08.252541      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 04/19/24 17:19:08.371
  E0419 17:19:09.253051      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:10.253197      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:11.254840      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:19:12.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4538" for this suite. @ 04/19/24 17:19:12.118
â€¢ [10.265 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 04/19/24 17:19:12.148
  Apr 19 17:19:12.149: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename cronjob @ 04/19/24 17:19:12.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:19:12.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:19:12.202
  STEP: Creating a cronjob @ 04/19/24 17:19:12.212
  STEP: creating @ 04/19/24 17:19:12.212
  STEP: getting @ 04/19/24 17:19:12.229
  STEP: listing @ 04/19/24 17:19:12.242
  STEP: watching @ 04/19/24 17:19:12.252
  Apr 19 17:19:12.253: INFO: starting watch
  E0419 17:19:12.254771      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: cluster-wide listing @ 04/19/24 17:19:12.257
  STEP: cluster-wide watching @ 04/19/24 17:19:12.265
  Apr 19 17:19:12.265: INFO: starting watch
  STEP: patching @ 04/19/24 17:19:12.268
  STEP: updating @ 04/19/24 17:19:12.287
  Apr 19 17:19:12.310: INFO: waiting for watch events with expected annotations
  Apr 19 17:19:12.311: INFO: saw patched and updated annotations
  STEP: patching /status @ 04/19/24 17:19:12.312
  STEP: updating /status @ 04/19/24 17:19:12.327
  STEP: get /status @ 04/19/24 17:19:12.345
  STEP: deleting @ 04/19/24 17:19:12.355
  STEP: deleting a collection @ 04/19/24 17:19:12.388
  Apr 19 17:19:12.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4756" for this suite. @ 04/19/24 17:19:12.431
â€¢ [0.298 seconds]
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 04/19/24 17:19:12.447
  Apr 19 17:19:12.448: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename dns @ 04/19/24 17:19:12.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:19:12.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:19:12.497
  STEP: Creating a test externalName service @ 04/19/24 17:19:12.504
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7582.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-7582.svc.cluster.local; sleep 1; done
   @ 04/19/24 17:19:12.516
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7582.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7582.svc.cluster.local; sleep 1; done
   @ 04/19/24 17:19:12.516
  STEP: creating a pod to probe DNS @ 04/19/24 17:19:12.516
  STEP: submitting the pod to kubernetes @ 04/19/24 17:19:12.516
  E0419 17:19:13.257507      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:14.258742      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/19/24 17:19:14.559
  STEP: looking for the results for each expected name from probers @ 04/19/24 17:19:14.568
  Apr 19 17:19:14.597: INFO: DNS probes using dns-test-a6d1783a-7f09-4026-ab1c-be5e3d56effc succeeded

  STEP: changing the externalName to bar.example.com @ 04/19/24 17:19:14.597
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7582.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-7582.svc.cluster.local; sleep 1; done
   @ 04/19/24 17:19:14.622
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7582.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7582.svc.cluster.local; sleep 1; done
   @ 04/19/24 17:19:14.622
  STEP: creating a second pod to probe DNS @ 04/19/24 17:19:14.623
  STEP: submitting the pod to kubernetes @ 04/19/24 17:19:14.623
  E0419 17:19:15.257677      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:16.258563      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/19/24 17:19:16.672
  STEP: looking for the results for each expected name from probers @ 04/19/24 17:19:16.685
  Apr 19 17:19:16.711: INFO: File wheezy_udp@dns-test-service-3.dns-7582.svc.cluster.local from pod  dns-7582/dns-test-05553d28-8bac-46ab-a324-2e4222dfd962 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 19 17:19:16.728: INFO: File jessie_udp@dns-test-service-3.dns-7582.svc.cluster.local from pod  dns-7582/dns-test-05553d28-8bac-46ab-a324-2e4222dfd962 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 19 17:19:16.732: INFO: Lookups using dns-7582/dns-test-05553d28-8bac-46ab-a324-2e4222dfd962 failed for: [wheezy_udp@dns-test-service-3.dns-7582.svc.cluster.local jessie_udp@dns-test-service-3.dns-7582.svc.cluster.local]

  Apr 19 17:19:16.767: INFO: Pod client logs for webserver: 
  Apr 19 17:19:16.792: INFO: Pod client logs for querier: 
  Apr 19 17:19:16.822: INFO: Pod client logs for jessie-querier: 
  E0419 17:19:17.259354      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:18.259696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:19.260250      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:20.260587      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:21.260934      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:19:21.838: INFO: File wheezy_udp@dns-test-service-3.dns-7582.svc.cluster.local from pod  dns-7582/dns-test-05553d28-8bac-46ab-a324-2e4222dfd962 contains '' instead of 'bar.example.com.'
  Apr 19 17:19:21.851: INFO: File jessie_udp@dns-test-service-3.dns-7582.svc.cluster.local from pod  dns-7582/dns-test-05553d28-8bac-46ab-a324-2e4222dfd962 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 19 17:19:21.851: INFO: Lookups using dns-7582/dns-test-05553d28-8bac-46ab-a324-2e4222dfd962 failed for: [wheezy_udp@dns-test-service-3.dns-7582.svc.cluster.local jessie_udp@dns-test-service-3.dns-7582.svc.cluster.local]

  Apr 19 17:19:21.866: INFO: Pod client logs for webserver: 
  Apr 19 17:19:21.881: INFO: Pod client logs for querier: 
  Apr 19 17:19:21.899: INFO: Pod client logs for jessie-querier: 
  E0419 17:19:22.261748      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:23.261668      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:24.263631      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:25.262905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:26.267868      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:19:26.833: INFO: File wheezy_udp@dns-test-service-3.dns-7582.svc.cluster.local from pod  dns-7582/dns-test-05553d28-8bac-46ab-a324-2e4222dfd962 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 19 17:19:26.842: INFO: File jessie_udp@dns-test-service-3.dns-7582.svc.cluster.local from pod  dns-7582/dns-test-05553d28-8bac-46ab-a324-2e4222dfd962 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 19 17:19:26.843: INFO: Lookups using dns-7582/dns-test-05553d28-8bac-46ab-a324-2e4222dfd962 failed for: [wheezy_udp@dns-test-service-3.dns-7582.svc.cluster.local jessie_udp@dns-test-service-3.dns-7582.svc.cluster.local]

  Apr 19 17:19:26.859: INFO: Pod client logs for webserver: 
  Apr 19 17:19:26.878: INFO: Pod client logs for querier: 
  Apr 19 17:19:26.896: INFO: Pod client logs for jessie-querier: 
  E0419 17:19:27.265852      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:28.264618      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:29.265045      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:30.265192      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:31.265766      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:19:31.839: INFO: File wheezy_udp@dns-test-service-3.dns-7582.svc.cluster.local from pod  dns-7582/dns-test-05553d28-8bac-46ab-a324-2e4222dfd962 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 19 17:19:31.851: INFO: File jessie_udp@dns-test-service-3.dns-7582.svc.cluster.local from pod  dns-7582/dns-test-05553d28-8bac-46ab-a324-2e4222dfd962 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 19 17:19:31.852: INFO: Lookups using dns-7582/dns-test-05553d28-8bac-46ab-a324-2e4222dfd962 failed for: [wheezy_udp@dns-test-service-3.dns-7582.svc.cluster.local jessie_udp@dns-test-service-3.dns-7582.svc.cluster.local]

  Apr 19 17:19:31.873: INFO: Pod client logs for webserver: 
  Apr 19 17:19:31.893: INFO: Pod client logs for querier: 
  Apr 19 17:19:31.911: INFO: Pod client logs for jessie-querier: 
  E0419 17:19:32.266764      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:33.267017      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:34.267880      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:35.268754      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:36.269551      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:19:36.839: INFO: File wheezy_udp@dns-test-service-3.dns-7582.svc.cluster.local from pod  dns-7582/dns-test-05553d28-8bac-46ab-a324-2e4222dfd962 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 19 17:19:36.855: INFO: File jessie_udp@dns-test-service-3.dns-7582.svc.cluster.local from pod  dns-7582/dns-test-05553d28-8bac-46ab-a324-2e4222dfd962 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Apr 19 17:19:36.856: INFO: Lookups using dns-7582/dns-test-05553d28-8bac-46ab-a324-2e4222dfd962 failed for: [wheezy_udp@dns-test-service-3.dns-7582.svc.cluster.local jessie_udp@dns-test-service-3.dns-7582.svc.cluster.local]

  Apr 19 17:19:36.883: INFO: Pod client logs for webserver: 
  Apr 19 17:19:36.913: INFO: Pod client logs for querier: 
  Apr 19 17:19:36.931: INFO: Pod client logs for jessie-querier: 
  E0419 17:19:37.269858      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:38.270289      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:39.271227      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:40.271927      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:41.272896      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:19:41.835: INFO: File wheezy_udp@dns-test-service-3.dns-7582.svc.cluster.local from pod  dns-7582/dns-test-05553d28-8bac-46ab-a324-2e4222dfd962 contains '' instead of 'bar.example.com.'
  Apr 19 17:19:41.842: INFO: File jessie_udp@dns-test-service-3.dns-7582.svc.cluster.local from pod  dns-7582/dns-test-05553d28-8bac-46ab-a324-2e4222dfd962 contains '' instead of 'bar.example.com.'
  Apr 19 17:19:41.843: INFO: Lookups using dns-7582/dns-test-05553d28-8bac-46ab-a324-2e4222dfd962 failed for: [wheezy_udp@dns-test-service-3.dns-7582.svc.cluster.local jessie_udp@dns-test-service-3.dns-7582.svc.cluster.local]

  Apr 19 17:19:41.859: INFO: Pod client logs for webserver: 
  Apr 19 17:19:41.872: INFO: Pod client logs for querier: 
  Apr 19 17:19:41.886: INFO: Pod client logs for jessie-querier: 
  E0419 17:19:42.273453      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:43.273726      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:44.274656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:45.274852      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:46.275247      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:19:46.845: INFO: DNS probes using dns-test-05553d28-8bac-46ab-a324-2e4222dfd962 succeeded

  STEP: changing the service to type=ClusterIP @ 04/19/24 17:19:46.846
  W0419 17:19:46.907392      14 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7582.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-7582.svc.cluster.local; sleep 1; done
   @ 04/19/24 17:19:46.907
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7582.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-7582.svc.cluster.local; sleep 1; done
   @ 04/19/24 17:19:46.907
  STEP: creating a third pod to probe DNS @ 04/19/24 17:19:46.907
  STEP: submitting the pod to kubernetes @ 04/19/24 17:19:46.919
  E0419 17:19:47.275143      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:48.275577      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:49.276214      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:50.276654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:51.276834      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:52.277948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:53.278782      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:54.278875      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:55.279938      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:56.281893      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:57.280606      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:58.281154      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:19:59.282171      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:00.282816      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:01.283815      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:02.285909      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:03.285420      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:04.290288      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:05.286006      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:06.286861      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:07.286793      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:08.286958      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 04/19/24 17:20:09.079
  STEP: looking for the results for each expected name from probers @ 04/19/24 17:20:09.09
  Apr 19 17:20:09.113: INFO: DNS probes using dns-test-d6c34d6d-16ff-418e-82a4-f443276db5ef succeeded

  Apr 19 17:20:09.114: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/19/24 17:20:09.127
  STEP: deleting the pod @ 04/19/24 17:20:09.159
  STEP: deleting the pod @ 04/19/24 17:20:09.191
  STEP: deleting the test externalName service @ 04/19/24 17:20:09.225
  STEP: Destroying namespace "dns-7582" for this suite. @ 04/19/24 17:20:09.262
â€¢ [56.832 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  E0419 17:20:09.286813      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a kubernetes client @ 04/19/24 17:20:09.287
  Apr 19 17:20:09.287: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename container-runtime @ 04/19/24 17:20:09.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:20:09.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:20:09.397
  STEP: create the container @ 04/19/24 17:20:09.404
  W0419 17:20:09.420130      14 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 04/19/24 17:20:09.42
  E0419 17:20:10.287380      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:11.287656      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:12.289355      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 04/19/24 17:20:12.464
  STEP: the container should be terminated @ 04/19/24 17:20:12.478
  STEP: the termination message should be set @ 04/19/24 17:20:12.479
  Apr 19 17:20:12.479: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 04/19/24 17:20:12.481
  Apr 19 17:20:12.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4327" for this suite. @ 04/19/24 17:20:12.533
â€¢ [3.266 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 04/19/24 17:20:12.568
  Apr 19 17:20:12.568: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename projected @ 04/19/24 17:20:12.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:20:12.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:20:12.613
  STEP: Creating a pod to test downward API volume plugin @ 04/19/24 17:20:12.619
  E0419 17:20:13.289554      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:14.290051      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:15.290803      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:16.291367      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:20:16.663
  Apr 19 17:20:16.675: INFO: Trying to get logs from node eixo7oojiese-3 pod downwardapi-volume-b4f8f829-780e-429f-bded-dbddab2e0adb container client-container: <nil>
  STEP: delete the pod @ 04/19/24 17:20:16.695
  Apr 19 17:20:16.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9776" for this suite. @ 04/19/24 17:20:16.744
â€¢ [4.194 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 04/19/24 17:20:16.763
  Apr 19 17:20:16.763: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename downward-api @ 04/19/24 17:20:16.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:20:16.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:20:16.811
  STEP: Creating a pod to test downward API volume plugin @ 04/19/24 17:20:16.821
  E0419 17:20:17.291925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:18.292185      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:19.293296      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:20.293381      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:20:20.883
  Apr 19 17:20:20.890: INFO: Trying to get logs from node eixo7oojiese-3 pod downwardapi-volume-fa426772-027c-4b30-90a0-580f7892ce9b container client-container: <nil>
  STEP: delete the pod @ 04/19/24 17:20:20.904
  Apr 19 17:20:20.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5545" for this suite. @ 04/19/24 17:20:20.958
â€¢ [4.207 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 04/19/24 17:20:20.971
  Apr 19 17:20:20.971: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename pods @ 04/19/24 17:20:20.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:20:21.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:20:21.019
  STEP: creating the pod @ 04/19/24 17:20:21.027
  STEP: submitting the pod to kubernetes @ 04/19/24 17:20:21.028
  STEP: verifying QOS class is set on the pod @ 04/19/24 17:20:21.052
  Apr 19 17:20:21.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9051" for this suite. @ 04/19/24 17:20:21.079
â€¢ [0.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 04/19/24 17:20:21.103
  Apr 19 17:20:21.103: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename job @ 04/19/24 17:20:21.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:20:21.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:20:21.143
  STEP: Creating a suspended job @ 04/19/24 17:20:21.154
  STEP: Patching the Job @ 04/19/24 17:20:21.164
  STEP: Watching for Job to be patched @ 04/19/24 17:20:21.197
  Apr 19 17:20:21.202: INFO: Event ADDED observed for Job e2e-mc6vh in namespace job-2192 with labels: map[e2e-job-label:e2e-mc6vh] and annotations: map[]
  Apr 19 17:20:21.203: INFO: Event MODIFIED observed for Job e2e-mc6vh in namespace job-2192 with labels: map[e2e-job-label:e2e-mc6vh] and annotations: map[]
  Apr 19 17:20:21.203: INFO: Event MODIFIED found for Job e2e-mc6vh in namespace job-2192 with labels: map[e2e-job-label:e2e-mc6vh e2e-mc6vh:patched] and annotations: map[]
  STEP: Updating the job @ 04/19/24 17:20:21.204
  STEP: Watching for Job to be updated @ 04/19/24 17:20:21.225
  Apr 19 17:20:21.228: INFO: Event MODIFIED found for Job e2e-mc6vh in namespace job-2192 with labels: map[e2e-job-label:e2e-mc6vh e2e-mc6vh:patched] and annotations: map[updated:true]
  Apr 19 17:20:21.229: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 04/19/24 17:20:21.23
  Apr 19 17:20:21.236: INFO: Job: e2e-mc6vh as labels: map[e2e-job-label:e2e-mc6vh e2e-mc6vh:patched]
  STEP: Waiting for job to complete @ 04/19/24 17:20:21.236
  E0419 17:20:21.293690      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:22.293941      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:23.295079      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:24.295929      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:25.296845      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:26.298813      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:27.298555      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:28.300877      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 04/19/24 17:20:29.254
  STEP: Watching for Job to be deleted @ 04/19/24 17:20:29.275
  Apr 19 17:20:29.280: INFO: Event MODIFIED observed for Job e2e-mc6vh in namespace job-2192 with labels: map[e2e-job-label:e2e-mc6vh e2e-mc6vh:patched] and annotations: map[updated:true]
  Apr 19 17:20:29.280: INFO: Event MODIFIED observed for Job e2e-mc6vh in namespace job-2192 with labels: map[e2e-job-label:e2e-mc6vh e2e-mc6vh:patched] and annotations: map[updated:true]
  Apr 19 17:20:29.282: INFO: Event MODIFIED observed for Job e2e-mc6vh in namespace job-2192 with labels: map[e2e-job-label:e2e-mc6vh e2e-mc6vh:patched] and annotations: map[updated:true]
  Apr 19 17:20:29.282: INFO: Event MODIFIED observed for Job e2e-mc6vh in namespace job-2192 with labels: map[e2e-job-label:e2e-mc6vh e2e-mc6vh:patched] and annotations: map[updated:true]
  Apr 19 17:20:29.283: INFO: Event MODIFIED observed for Job e2e-mc6vh in namespace job-2192 with labels: map[e2e-job-label:e2e-mc6vh e2e-mc6vh:patched] and annotations: map[updated:true]
  Apr 19 17:20:29.284: INFO: Event DELETED found for Job e2e-mc6vh in namespace job-2192 with labels: map[e2e-job-label:e2e-mc6vh e2e-mc6vh:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 04/19/24 17:20:29.285
  Apr 19 17:20:29.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0419 17:20:29.300503      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "job-2192" for this suite. @ 04/19/24 17:20:29.306
â€¢ [8.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 04/19/24 17:20:29.333
  Apr 19 17:20:29.333: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename lease-test @ 04/19/24 17:20:29.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:20:29.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:20:29.396
  Apr 19 17:20:29.512: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-7094" for this suite. @ 04/19/24 17:20:29.522
â€¢ [0.202 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 04/19/24 17:20:29.539
  Apr 19 17:20:29.539: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename dns @ 04/19/24 17:20:29.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:20:29.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:20:29.583
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 04/19/24 17:20:29.592
  Apr 19 17:20:29.615: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-9638  9ed5af9e-4fdb-4c2e-b99b-d1eecc1c6cd7 36155 0 2024-04-19 17:20:29 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-04-19 17:20:29 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-g25qv,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-g25qv,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0419 17:20:30.301070      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:31.301621      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 04/19/24 17:20:31.64
  Apr 19 17:20:31.640: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-9638 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 17:20:31.641: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 17:20:31.646: INFO: ExecWithOptions: Clientset creation
  Apr 19 17:20:31.647: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-9638/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 04/19/24 17:20:31.827
  Apr 19 17:20:31.827: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-9638 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Apr 19 17:20:31.827: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  Apr 19 17:20:31.830: INFO: ExecWithOptions: Clientset creation
  Apr 19 17:20:31.831: INFO: ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-9638/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Apr 19 17:20:31.958: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Apr 19 17:20:31.968: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-9638" for this suite. @ 04/19/24 17:20:32.033
â€¢ [2.528 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 04/19/24 17:20:32.075
  Apr 19 17:20:32.075: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename daemonsets @ 04/19/24 17:20:32.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:20:32.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:20:32.133
  STEP: Creating a simple DaemonSet "daemon-set" @ 04/19/24 17:20:32.183
  STEP: Check that daemon pods launch on every node of the cluster. @ 04/19/24 17:20:32.195
  Apr 19 17:20:32.216: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 17:20:32.216: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  E0419 17:20:32.302475      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:20:33.251: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 17:20:33.251: INFO: Node eixo7oojiese-1 is running 0 daemon pod, expected 1
  E0419 17:20:33.303416      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:20:34.249: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 19 17:20:34.250: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 04/19/24 17:20:34.262
  E0419 17:20:34.303618      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:20:34.330: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 19 17:20:34.331: INFO: Node eixo7oojiese-3 is running 0 daemon pod, expected 1
  E0419 17:20:35.303716      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:20:35.359: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Apr 19 17:20:35.359: INFO: Node eixo7oojiese-3 is running 0 daemon pod, expected 1
  E0419 17:20:36.303974      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:20:36.355: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Apr 19 17:20:36.355: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 04/19/24 17:20:36.355
  STEP: Deleting DaemonSet "daemon-set" @ 04/19/24 17:20:36.372
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7757, will wait for the garbage collector to delete the pods @ 04/19/24 17:20:36.372
  Apr 19 17:20:36.448: INFO: Deleting DaemonSet.extensions daemon-set took: 16.013801ms
  Apr 19 17:20:36.549: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.578546ms
  E0419 17:20:37.304764      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:38.305211      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:20:39.162: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Apr 19 17:20:39.162: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Apr 19 17:20:39.171: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"36300"},"items":null}

  Apr 19 17:20:39.182: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"36300"},"items":null}

  Apr 19 17:20:39.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7757" for this suite. @ 04/19/24 17:20:39.249
â€¢ [7.201 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 04/19/24 17:20:39.276
  Apr 19 17:20:39.276: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename custom-resource-definition @ 04/19/24 17:20:39.283
  E0419 17:20:39.305806      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:20:39.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:20:39.339
  Apr 19 17:20:39.347: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  E0419 17:20:40.306106      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:20:40.408: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7681" for this suite. @ 04/19/24 17:20:40.421
â€¢ [1.167 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 04/19/24 17:20:40.447
  Apr 19 17:20:40.447: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename resourcequota @ 04/19/24 17:20:40.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:20:40.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:20:40.512
  STEP: Counting existing ResourceQuota @ 04/19/24 17:20:40.52
  E0419 17:20:41.306730      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:42.309292      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:43.311220      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:44.309446      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:45.309832      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 04/19/24 17:20:45.531
  STEP: Ensuring resource quota status is calculated @ 04/19/24 17:20:45.549
  E0419 17:20:46.310685      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:47.310926      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 04/19/24 17:20:47.557
  STEP: Ensuring ResourceQuota status captures the pod usage @ 04/19/24 17:20:47.593
  E0419 17:20:48.311213      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:49.313283      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 04/19/24 17:20:49.607
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 04/19/24 17:20:49.617
  STEP: Ensuring a pod cannot update its resource requirements @ 04/19/24 17:20:49.622
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 04/19/24 17:20:49.639
  E0419 17:20:50.312729      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:51.313504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 04/19/24 17:20:51.651
  STEP: Ensuring resource quota status released the pod usage @ 04/19/24 17:20:51.692
  E0419 17:20:52.313692      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:53.314006      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:20:53.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-477" for this suite. @ 04/19/24 17:20:53.71
â€¢ [13.280 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 04/19/24 17:20:53.731
  Apr 19 17:20:53.731: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename configmap @ 04/19/24 17:20:53.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:20:53.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:20:53.787
  STEP: Creating configMap with name configmap-test-volume-38346fb5-d4a4-4a2f-97d7-fdd9bf56e4c3 @ 04/19/24 17:20:53.795
  STEP: Creating a pod to test consume configMaps @ 04/19/24 17:20:53.806
  E0419 17:20:54.314387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:55.315196      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:56.315711      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:57.315908      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:20:57.871
  Apr 19 17:20:57.885: INFO: Trying to get logs from node eixo7oojiese-3 pod pod-configmaps-74853c88-d59b-4d55-8e28-bbc48556586d container agnhost-container: <nil>
  STEP: delete the pod @ 04/19/24 17:20:57.914
  Apr 19 17:20:57.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3756" for this suite. @ 04/19/24 17:20:57.98
â€¢ [4.270 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 04/19/24 17:20:58.011
  Apr 19 17:20:58.011: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename container-probe @ 04/19/24 17:20:58.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:20:58.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:20:58.083
  E0419 17:20:58.316327      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:20:59.317265      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:00.317419      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:01.318117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:02.318602      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:03.319280      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:04.320121      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:05.320436      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:06.321190      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:07.321546      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:08.322751      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:09.323218      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:10.323687      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:11.324368      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:12.325702      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:13.346120      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:14.337824      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:15.338745      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:16.339516      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:17.339685      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:18.341221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:19.341635      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:21:20.274: INFO: Container started at 2024-04-19 17:20:58 +0000 UTC, pod became ready at 2024-04-19 17:21:18 +0000 UTC
  Apr 19 17:21:20.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4202" for this suite. @ 04/19/24 17:21:20.289
â€¢ [22.294 seconds]
------------------------------
SSSSSSSSSSS  E0419 17:21:20.341690      14 retrywatcher.go:129] "Watch failed" err="context canceled"
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 04/19/24 17:21:20.362
  Apr 19 17:21:20.363: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename container-probe @ 04/19/24 17:21:20.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:21:20.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:21:20.426
  STEP: Creating pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541 @ 04/19/24 17:21:20.439
  E0419 17:21:21.342251      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:22.342575      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/19/24 17:21:22.51
  Apr 19 17:21:22.516: INFO: Initial restart count of pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec is 0
  Apr 19 17:21:22.521: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:21:23.342948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:24.344064      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:21:24.534: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:21:25.345163      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:26.344654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:21:26.549: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:21:27.345223      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:28.345888      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:21:28.563: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:21:29.345623      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:30.348766      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:21:30.577: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:21:31.348229      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:32.349305      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:21:32.592: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:21:33.349374      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:34.350349      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:21:34.603: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:21:35.350724      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:36.351136      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:21:36.616: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:21:37.351329      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:38.351654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:21:38.626: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:21:39.352061      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:40.352360      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:21:40.640: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:21:41.352504      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:42.352873      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:21:42.648: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  Apr 19 17:21:42.649: INFO: Restart count of pod container-probe-6541/liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec is now 1 (20.132758437s elapsed)
  E0419 17:21:43.353123      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:44.353387      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:21:44.660: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:21:45.353689      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:46.353943      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:21:46.671: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:21:47.354111      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:48.354680      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:21:48.683: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:21:49.355090      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:50.355259      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:21:50.698: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:21:51.355554      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:52.355908      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:21:52.708: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:21:53.356029      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:54.356424      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:21:54.718: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:21:55.356830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:56.357058      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:21:56.731: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:21:57.357499      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:21:58.358808      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:21:58.743: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:21:59.359011      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:00.359316      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:00.755: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:01.360451      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:02.360901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:02.767: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  Apr 19 17:22:02.768: INFO: Restart count of pod container-probe-6541/liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec is now 2 (40.251992937s elapsed)
  E0419 17:22:03.361161      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:04.361645      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:04.778: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:05.361950      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:06.362885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:06.789: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:07.363182      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:08.363352      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:08.800: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:09.363731      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:10.383284      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:10.816: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:11.366606      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:12.366926      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:12.831: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:13.367146      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:14.367841      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:14.843: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:15.368278      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:16.371239      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:16.854: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:17.369496      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:18.369402      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:18.872: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:19.372352      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:20.376170      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:20.913: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:21.373438      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:22.373186      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:22.925: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  Apr 19 17:22:22.925: INFO: Restart count of pod container-probe-6541/liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec is now 3 (1m0.40857114s elapsed)
  E0419 17:22:23.374093      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:24.374301      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:24.937: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:25.375005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:26.376085      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:26.950: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:27.377326      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:28.377646      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:28.963: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:29.378790      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:30.379038      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:30.979: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:31.379985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:32.380123      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:32.992: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:33.381573      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:34.381989      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:35.002: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:35.382887      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:36.383939      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:37.014: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:37.384749      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:38.384901      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:39.024: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:39.385169      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:40.386117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:41.039: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:41.386992      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:42.387607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:43.055: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  Apr 19 17:22:43.056: INFO: Restart count of pod container-probe-6541/liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec is now 4 (1m20.539827631s elapsed)
  E0419 17:22:43.387560      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:44.388425      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:45.066: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:45.388677      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:46.389630      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:47.076: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:47.390607      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:48.390915      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:49.086: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:49.391139      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:50.392045      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:51.102: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:51.392845      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:52.393453      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:53.112: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:53.394211      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:54.394616      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:55.125: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:55.395094      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:56.396242      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:57.135: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:57.397300      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:22:58.398079      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:22:59.147: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:22:59.398494      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:00.399259      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:01.161: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:01.399506      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:02.399815      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:03.171: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:03.400778      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:04.401788      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:05.179: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:05.401948      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:06.402994      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:07.192: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:07.403490      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:08.406260      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:09.205: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:09.407032      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:10.407779      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:11.226: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:11.408062      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:12.408238      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:13.239: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:13.409028      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:14.409853      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:15.248: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:15.410845      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:16.411881      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:17.259: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:17.412739      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:18.413392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:19.267: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:19.413991      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:20.414778      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:21.279: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:21.415613      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:22.416192      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:23.287: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:23.416373      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:24.417456      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:25.299: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:25.417518      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:26.419053      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:27.307: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:27.419320      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:28.420408      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:29.316: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:29.420903      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:30.421765      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:31.324: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:31.421813      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:32.422110      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:33.334: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:33.422867      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:34.423221      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:35.342: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:35.423749      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:36.424014      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:37.350: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:37.423983      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:38.424363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:39.361: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:39.424692      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:40.425020      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:41.372: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:41.425672      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:42.425996      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:43.381: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:43.426825      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:44.427556      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:45.390: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:45.427694      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:46.427903      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:47.398: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:47.427886      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:48.428392      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:49.408: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:49.428885      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:50.430042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:51.415: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:51.430868      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:52.431218      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:53.427: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  E0419 17:23:53.431909      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:54.432302      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:55.432945      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:55.438: INFO: Get pod liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec in namespace container-probe-6541
  Apr 19 17:23:55.438: INFO: Restart count of pod container-probe-6541/liveness-018248dc-a683-4bbb-9ef5-4e520e6d09ec is now 5 (2m32.921502221s elapsed)
  Apr 19 17:23:55.438: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/19/24 17:23:55.448
  STEP: Destroying namespace "container-probe-6541" for this suite. @ 04/19/24 17:23:55.482
â€¢ [155.140 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 04/19/24 17:23:55.503
  Apr 19 17:23:55.503: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename container-probe @ 04/19/24 17:23:55.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:23:55.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:23:55.549
  STEP: Creating pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564 @ 04/19/24 17:23:55.554
  E0419 17:23:56.433270      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:57.433502      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 04/19/24 17:23:57.609
  Apr 19 17:23:57.618: INFO: Initial restart count of pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 is 0
  Apr 19 17:23:57.629: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:23:58.434513      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:23:59.434736      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:23:59.639: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:00.435088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:01.435344      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:01.646: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:02.435640      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:03.435764      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:03.656: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:04.436161      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:05.437230      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:05.664: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:06.437932      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:07.438160      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:07.672: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:08.438653      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:09.438916      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:09.680: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:10.438894      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:11.439026      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:11.690: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:12.439335      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:13.440385      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:13.700: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:14.441564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:15.441679      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:15.714: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:16.442470      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:17.442831      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:17.723: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:18.443390      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:19.444334      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:19.732: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:20.444645      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:21.444874      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:21.743: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:22.445251      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:23.446248      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:23.751: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:24.447391      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:25.447721      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:25.762: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:26.448654      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:27.449352      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:27.773: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:28.450293      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:29.450670      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:29.786: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:30.450865      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:31.451899      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:31.806: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:32.452256      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:33.453378      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:33.817: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:34.453464      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:35.454244      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:35.825: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:36.455338      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:37.456189      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:37.837: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:38.456380      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:39.456722      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:39.845: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:40.456936      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:41.458017      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:41.856: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:42.458889      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:43.459733      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:43.866: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:44.460007      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:45.460304      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:45.877: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:46.460330      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:47.460385      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:47.889: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:48.460772      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:49.461088      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:49.899: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:50.461976      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:51.462936      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:51.912: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:52.463928      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:53.464289      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:53.923: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:54.464382      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:55.465412      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:55.935: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:56.466508      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:57.466773      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:57.946: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:24:58.467541      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:24:59.468564      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:24:59.955: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:00.468800      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:01.469196      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:01.967: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:02.469191      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:03.469713      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:03.979: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:04.470022      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:05.470351      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:05.991: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:06.471046      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:07.472075      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:08.031: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:08.472108      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:09.472517      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:10.043: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:10.472598      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:11.472962      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:12.055: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:12.473332      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:13.473742      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:14.066: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:14.474330      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:15.474546      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:16.076: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:16.474802      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:17.475489      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:18.088: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:18.475826      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:19.476539      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:20.101: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:20.476830      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:21.477460      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:22.114: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:22.477457      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:23.478200      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:24.128: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:24.478798      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:25.479681      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:26.140: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:26.479408      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:27.479988      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:28.150: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:28.480696      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:29.493409      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:30.165: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:30.486756      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:31.487069      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:32.179: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:32.487336      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:33.496886      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:34.192: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:34.490706      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:35.491508      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:36.204: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:36.492312      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:37.515806      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:38.215: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:38.502756      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:39.503665      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:40.229: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:40.504083      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:41.504316      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:42.241: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:42.504929      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:43.505267      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:44.250: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:44.505463      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:45.505835      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:46.267: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:46.505859      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:47.506295      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:48.279: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:48.507025      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:49.507322      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:50.292: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:50.508271      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:51.509537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:52.306: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:52.510355      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:53.511346      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:54.318: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:54.511710      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:55.512561      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:56.331: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:56.513380      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:57.513689      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:25:58.352: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:25:58.515177      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:25:59.522110      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:00.366: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:00.521789      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:01.522658      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:02.375: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:02.522759      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:03.525164      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:04.391: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:04.524778      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:05.525862      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:06.400: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:06.526537      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:07.527008      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:08.411: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:08.527681      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:09.528150      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:10.418: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:10.528561      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:11.528644      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:12.431: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:12.529435      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:13.531197      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:14.439: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:14.531115      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:15.531375      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:16.452: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:16.532206      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:17.532893      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:18.460: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:18.532955      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:19.533313      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:20.473: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:20.533856      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:21.534260      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:22.481: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:22.535287      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:23.535675      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:24.497: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:24.540971      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:25.540725      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:26.505: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:26.541353      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:27.541572      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:28.519: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:28.542610      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:29.542921      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:30.532: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:30.544535      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:31.544249      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:32.543: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:32.544610      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:33.545732      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:34.546672      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:34.555: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:35.547005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:36.566617      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:36.581: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:37.551315      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:38.552273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:38.593: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:39.552770      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:40.553092      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:40.605: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:41.553993      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:42.554084      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:42.615: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:43.554486      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:44.555418      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:44.625: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:45.561618      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:46.556838      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:46.638: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:47.557883      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:48.558480      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:48.650: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:49.558548      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:50.559381      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:50.660: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:51.560404      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:52.561070      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:52.675: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:53.561117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:54.561897      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:54.690: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:55.562085      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:56.562117      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:56.706: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:57.563246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:26:58.563395      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:26:58.716: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:26:59.563935      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:00.564682      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:00.728: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:01.565107      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:02.565466      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:02.742: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:03.566024      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:04.566121      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:04.752: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:05.567005      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:06.566905      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:06.765: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:07.568273      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:08.569231      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:08.779: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:09.571588      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:10.571397      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:10.799: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:11.573459      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:12.572761      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:12.818: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:13.573662      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:14.573509      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:14.830: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:15.574042      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:16.574831      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:16.842: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:17.575930      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:18.575953      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:18.854: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:19.576712      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:20.577240      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:20.867: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:21.578051      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:22.578017      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:22.879: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:23.578384      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:24.579604      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:24.892: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:25.579246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:26.579599      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:26.902: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:27.579925      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:28.580203      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:28.911: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:29.581363      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:30.582259      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:30.922: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:31.583054      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:32.583473      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:32.933: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:33.583876      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:34.584246      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:34.945: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:35.584612      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:36.584942      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:36.953: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:37.585771      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:38.585985      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:38.963: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:39.586247      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:40.587605      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:40.972: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:41.588394      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:42.588744      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:42.988: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:43.589878      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:44.591451      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:44.996: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:45.591763      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:46.592098      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:47.008: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:47.592670      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:48.592972      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:49.038: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:49.593354      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:50.593534      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:51.049: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:51.594382      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:52.594686      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:53.057: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:53.596356      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:54.595828      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:55.072: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:55.600116      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:56.599065      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:57.080: INFO: Get pod test-grpc-e48447e1-c7a5-4ce9-9625-05299d4717a4 in namespace container-probe-2564
  E0419 17:27:57.599002      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:27:58.599871      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:27:59.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 04/19/24 17:27:59.102
  STEP: Destroying namespace "container-probe-2564" for this suite. @ 04/19/24 17:27:59.153
â€¢ [243.668 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 04/19/24 17:27:59.175
  Apr 19 17:27:59.176: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename subjectreview @ 04/19/24 17:27:59.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:27:59.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:27:59.228
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-5296" @ 04/19/24 17:27:59.232
  Apr 19 17:27:59.242: INFO: saUsername: "system:serviceaccount:subjectreview-5296:e2e"
  Apr 19 17:27:59.242: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-5296"}
  Apr 19 17:27:59.242: INFO: saUID: "9fa241ee-b1d8-4607-be63-80dd2ddcd455"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-5296:e2e" @ 04/19/24 17:27:59.242
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-5296:e2e" @ 04/19/24 17:27:59.243
  Apr 19 17:27:59.247: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-5296:e2e" api 'list' configmaps in "subjectreview-5296" namespace @ 04/19/24 17:27:59.248
  Apr 19 17:27:59.250: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-5296:e2e" @ 04/19/24 17:27:59.251
  Apr 19 17:27:59.255: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Apr 19 17:27:59.255: INFO: LocalSubjectAccessReview has been verified
  Apr 19 17:27:59.255: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-5296" for this suite. @ 04/19/24 17:27:59.266
â€¢ [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 04/19/24 17:27:59.282
  Apr 19 17:27:59.282: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename webhook @ 04/19/24 17:27:59.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:27:59.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:27:59.351
  STEP: Setting up server cert @ 04/19/24 17:27:59.397
  E0419 17:27:59.600859      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:28:00.601354      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 04/19/24 17:28:00.647
  STEP: Deploying the webhook pod @ 04/19/24 17:28:00.665
  STEP: Wait for the deployment to be ready @ 04/19/24 17:28:00.702
  Apr 19 17:28:00.728: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0419 17:28:01.602611      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:28:02.602863      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 04/19/24 17:28:02.765
  STEP: Verifying the service has paired with the endpoint @ 04/19/24 17:28:02.801
  E0419 17:28:03.603886      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:28:03.802: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 04/19/24 17:28:03.932
  STEP: Creating a configMap that should be mutated @ 04/19/24 17:28:03.967
  STEP: Deleting the collection of validation webhooks @ 04/19/24 17:28:04.059
  STEP: Creating a configMap that should not be mutated @ 04/19/24 17:28:04.162
  Apr 19 17:28:04.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4848" for this suite. @ 04/19/24 17:28:04.275
  STEP: Destroying namespace "webhook-markers-3328" for this suite. @ 04/19/24 17:28:04.287
â€¢ [5.017 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 04/19/24 17:28:04.31
  Apr 19 17:28:04.311: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename containers @ 04/19/24 17:28:04.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:28:04.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:28:04.363
  STEP: Creating a pod to test override arguments @ 04/19/24 17:28:04.376
  E0419 17:28:04.604513      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:28:05.604572      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:28:06.605084      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:28:07.605329      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 04/19/24 17:28:08.438
  Apr 19 17:28:08.448: INFO: Trying to get logs from node eixo7oojiese-3 pod client-containers-3434fc56-f452-4996-9e1e-6443a615b560 container agnhost-container: <nil>
  STEP: delete the pod @ 04/19/24 17:28:08.505
  Apr 19 17:28:08.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6066" for this suite. @ 04/19/24 17:28:08.561
â€¢ [4.266 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 04/19/24 17:28:08.578
  Apr 19 17:28:08.578: INFO: >>> kubeConfig: /tmp/kubeconfig-2631651993
  STEP: Building a namespace api object, basename kubectl @ 04/19/24 17:28:08.583
  E0419 17:28:08.605659      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 04/19/24 17:28:08.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 04/19/24 17:28:08.632
  STEP: creating the pod @ 04/19/24 17:28:08.643
  Apr 19 17:28:08.643: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-7553 create -f -'
  Apr 19 17:28:09.228: INFO: stderr: ""
  Apr 19 17:28:09.229: INFO: stdout: "pod/pause created\n"
  E0419 17:28:09.609083      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0419 17:28:10.607179      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 04/19/24 17:28:11.258
  Apr 19 17:28:11.259: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-7553 label pods pause testing-label=testing-label-value'
  Apr 19 17:28:11.491: INFO: stderr: ""
  Apr 19 17:28:11.491: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 04/19/24 17:28:11.492
  Apr 19 17:28:11.492: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-7553 get pod pause -L testing-label'
  E0419 17:28:11.607248      14 retrywatcher.go:129] "Watch failed" err="context canceled"
  Apr 19 17:28:11.651: INFO: stderr: ""
  Apr 19 17:28:11.651: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 04/19/24 17:28:11.651
  Apr 19 17:28:11.651: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-7553 label pods pause testing-label-'
  Apr 19 17:28:11.814: INFO: stderr: ""
  Apr 19 17:28:11.814: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 04/19/24 17:28:11.814
  Apr 19 17:28:11.814: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-7553 get pod pause -L testing-label'
  Apr 19 17:28:11.972: INFO: stderr: ""
  Apr 19 17:28:11.972: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 04/19/24 17:28:11.972
  Apr 19 17:28:11.973: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-7553 delete --grace-period=0 --force -f -'
  Apr 19 17:28:12.127: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Apr 19 17:28:12.127: INFO: stdout: "pod \"pause\" force deleted\n"
  Apr 19 17:28:12.127: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-7553 get rc,svc -l name=pause --no-headers'
  Apr 19 17:28:12.308: INFO: stderr: "No resources found in kubectl-7553 namespace.\n"
  Apr 19 17:28:12.308: INFO: stdout: ""
  Apr 19 17:28:12.309: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2631651993 --namespace=kubectl-7553 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Apr 19 17:28:12.465: INFO: stderr: ""
  Apr 19 17:28:12.465: INFO: stdout: ""
  Apr 19 17:28:12.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7553" for this suite. @ 04/19/24 17:28:12.477
â€¢ [3.919 seconds]
------------------------------
SSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:88
  Apr 19 17:28:12.498: INFO: Running AfterSuite actions on node 1
  Apr 19 17:28:12.498: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:585
  E0419 17:28:12.607745      14 retrywatcher.go:129] "Watch failed" err="context canceled"
[ReportAfterSuite] PASSED [0.124 seconds]
------------------------------

Ran 380 of 7389 Specs in 6515.593 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7009 Skipped
PASS

Ginkgo ran 1 suite in 1h48m36.500569549s
Test Suite Passed
